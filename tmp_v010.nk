set cut_paste_input [stack 0]
version 12.2 v3
BackdropNode {
inputs 0
name Backdrop_Adjust9
tile_color 0x666666ff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 72
selected true
xpos -1312
ypos -18450
bdwidth 2946
bdheight 42395
z_order -124895670
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note Data
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Black
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name template1
tile_color 0x563c5401
gl_color 0x563c5401
label "GBK Thrug erp01 COMP_(Comp30)\n\n CHECK-LIST\n\n- save script as <b>file discription</B>:  \"main\" & <B> sub directory</B>'compositing'\n\n- if you keep crashing work in proxy, render the procedual precomps, delete unused assets, and use the smallest sky/water latlong that is required.\n\n- Migrate script ( GBK->Migrate->Migrate - and untick 'update shot range') \nit will report back if anything fails.\nthen manually replace pl01_dn_ud_ng, cg renders, stmap\n\n- Set the Reformat_OverscanMaster to \"Flat Plate Resolution\" and not  \"Flat Plate Resolution_1\" \n- Set the overscanPercent  (right click 'no animation' removes the expression link to master if some renders have overscan and others dont)\n\n- if all cg or just the flareStack has rendered as a single frame; Import track (from bashPlate) or create a track (cornerpin or transform) and enable switchs in the apprpriate <b> Single frame track </B> backdrops\n\n<B>ZMerge</B> disable the ZMerge nodes that are not required i.e. PM or FX(flareStack) CG\n\n- <b>ZDefocusOptik</B> defocus is on and multipliers set at 0.75 (1.6 is reality)\n\n\nWater\n- if the water is rendered for the shot then use the 'SwitchWater' switch. If water is renderd for a shot then applying the whiteCaps needs precomping to avoid crashes.comp_light\n\n\nRender\n- <b>Asset Name</B>:  \"comp\" & <B> Component Name:</B> \"comp\"\n\n\nftrackPublish\n- write comments to be read out in daillies\n- make sure <b>Assetname</b> is 'comp'\n\n"
note_font "Arial Black"
note_font_size 100
selected true
xpos 958
ypos 28071
bdwidth 7319
bdheight 5711
z_order -41798809
}
BackdropNode {
inputs 0
name Backdrop_Adjust2
tile_color 0x666666ff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 102
selected true
xpos 6075
ypos 1707
bdwidth 5116
bdheight 4200
z_order -21487200
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "CLEANUP (reflection removal) or MONITOR INSERT"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Black
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust71
tile_color 0x666666ff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 102
selected true
xpos 4399
ypos 7427
bdwidth 5462
bdheight 3799
z_order -20750138
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "KEYER & DESPILL"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Black
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name BackdropNode4
tile_color 0x59599cff
label "ENV Grade & Over"
note_font_size 42
selected true
xpos 9220
ypos -14767
bdwidth 4428
bdheight 4592
z_order -20333376
}
BackdropNode {
inputs 0
name BackdropNode34
tile_color 0x323f3eff
note_font_size 42
selected true
xpos 7990
ypos -8801
bdwidth 3086
bdheight 5760
z_order -17775360
}
BackdropNode {
inputs 0
name Backdrop_Adjust72
tile_color 0x444444ff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 72
selected true
xpos 11319
ypos 23323
bdwidth 3067
bdheight 4409
z_order -13522403
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "GRAIN & DiISTORTION"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Aqua
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name BackdropNode36
tile_color 0x2d2d2dff
label ASSETS
note_font_size 62
selected true
xpos -2004
ypos -21175
bdwidth 5896
bdheight 2117
z_order -12481832
}
BackdropNode {
inputs 0
name BackdropNode32
tile_color 0x59599cff
label "ENV PROJECTION"
note_font_size 42
selected true
xpos 9227
ypos -18006
bdwidth 4305
bdheight 2815
z_order -12118575
}
BackdropNode {
inputs 0
name BackdropNode37
tile_color 0x7171c600
label "Water / Sky Merge & Grade"
note_font_size 42
selected true
xpos 10542
ypos -14708
bdwidth 1993
bdheight 2717
z_order -5414981
}
BackdropNode {
inputs 0
name CLEANUP2
tile_color 0x24585dff
gl_color 0x35565d01
label Matte
note_font_size 100
selected true
xpos 5875
ypos 7792
bdwidth 2039
bdheight 2429
z_order -4952731
}
BackdropNode {
inputs 0
name Backdrop_Adjust73
tile_color 0x77597fff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 72
selected true
xpos 6561
ypos 12424
bdwidth 1547
bdheight 2233
z_order -3454451
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "DMP windows"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Aqua
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name BackdropNode42
tile_color 0x7171c600
label "water/sky projection"
note_font_size 42
selected true
xpos 10539
ypos -16744
bdwidth 1860
bdheight 745
z_order -1385700
}
BackdropNode {
inputs 0
name CG_BEAUTY2
tile_color 0x1d3c9dff
gl_color 0x5d5d5d01
label "RIG MODULES"
note_font "Arial Black"
note_font_size 30
selected true
xpos 8120
ypos -9608
bdwidth 1784
bdheight 723
z_order -1289832
}
BackdropNode {
inputs 0
name Backdrop_Adjust4
tile_color 0x3f597fff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 52
selected true
xpos 10865
ypos -14284
bdwidth 634
bdheight 1904
z_order -1207136
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "GRADE\nWATER"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Silver
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust14
tile_color 0x3f597fff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 52
selected true
xpos 11599
ypos -14292
bdwidth 628
bdheight 1874
z_order -1176872
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "GRADE\nSKY"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Silver
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name VERSIONS1
tile_color 0x35565d01
gl_color 0x35565d01
label VERSIONS
note_font_size 80
selected true
xpos 11559
ypos 30209
bdwidth 532
bdheight 1759
z_order -935788
}
BackdropNode {
inputs 0
name Backdrop_Adjust77
tile_color 0x666666ff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 82
selected true
xpos 13282
ypos 30215
bdwidth 1346
bdheight 676
z_order -909896
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note REF
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Black
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name NEUTARL_GRADE1
tile_color 0x35565d01
gl_color 0x35565d01
label "NEUTRAL GRADE\nMake sure set to \"In: Neutral_grade  Out: ACEScg\""
note_font "Arial Black"
note_font_size 55
selected true
xpos 11618
ypos 25356
bdwidth 2374
bdheight 346
z_order -821404
}
BackdropNode {
inputs 0
name Backdrop_Adjust74
tile_color 0x727f3fff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 72
selected true
xpos 4539
ypos 7670
bdwidth 815
bdheight 972
z_order -792180
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note ROTO
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Yellow
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name BackdropNode65
tile_color 0x38343eff
label "On some shots there are artefacts with the grain that you can see as\nhorizontal lines with the QC node in noise mode. Also the scatter function \ncauses issues with these plates.\n\nThe solution is to use this external grain. \n\nIt might not work all plates with i.e. different iso/exposure.\nRequest a clean grain plate from your lead"
note_font_size 42
selected true
xpos 12153
ypos 26414
bdwidth 1911
bdheight 396
z_order -756756
}
BackdropNode {
inputs 0
name Backdrop_Adjust15
tile_color 0x597f68ff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 52
selected true
xpos 8811
ypos -5741
bdwidth 1001
bdheight 747
z_order -747747
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "HEIGHT/DEPTH\nQ - ATMOS"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Silver
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name BackdropNode66
tile_color 0x759375ff
label key
note_font_size 42
selected true
xpos 6096
ypos 8444
bdwidth 1097
bdheight 600
z_order -658200
}
BackdropNode {
inputs 0
name Backdrop_Adjust82
tile_color 0x597f7fff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 52
selected true
xpos 10944
ypos 17742
bdwidth 618
bdheight 1061
z_order -655698
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "Additive key if needed"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Lime
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.02 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name BackdropNode6
tile_color 0xaf6971ff
label "interactive lighting\n*"
note_font_size 30
selected true
xpos 11055
ypos 18899
bdwidth 1003
bdheight 588
z_order -589764
}
BackdropNode {
inputs 0
name BackdropNode1
tile_color 0x7171c600
label masks
note_font_size 42
selected true
xpos 6603
ypos 13211
bdwidth 891
bdheight 610
z_order -543510
}
BackdropNode {
inputs 0
name Backdrop_Adjust7
tile_color 0x3f597fff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 32
selected true
xpos 9725
ypos -16718
bdwidth 676
bdheight 757
z_order -511732
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "GRADE WATER"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Silver
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust75
tile_color 0x666666ff
label "<center><font color=\[value note_color]>lens"
note_font_size 72
selected true
xpos 12407
ypos 23523
bdwidth 690
bdheight 722
z_order -498180
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note -
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Black
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.02 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name BackdropNode5
tile_color 0x388e8e00
label "glow on plate"
note_font_size 42
selected true
xpos 10429
ypos 19699
bdwidth 810
bdheight 521
z_order -422010
}
BackdropNode {
inputs 0
name BackdropNode70
tile_color 0xaaaaaa00
label "PLATE\nDeNoised\nUndestorted\n"
note_font_size 82
selected true
xpos 8371
ypos 516
bdwidth 520
bdheight 656
z_order -341120
}
BackdropNode {
inputs 0
name Backdrop_Adjust67
tile_color 0x7f3f66ff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 62
selected true
xpos 11406
ypos -10847
bdwidth 617
bdheight 536
z_order -330712
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "DI MATTE"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Fuchsia
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust10
tile_color 0x3f597fff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 52
selected true
xpos 8109
ypos -7956
bdwidth 432
bdheight 725
z_order -313200
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "GRADE BRIDGE"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Silver
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust18
tile_color 0x3f597fff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 42
selected true
xpos 10362
ypos -8024
bdwidth 432
bdheight 725
z_order -313200
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "GRADE FX FLARE"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Silver
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust3
tile_color 0x3f597fff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 52
selected true
xpos 9390
ypos -7940
bdwidth 432
bdheight 725
z_order -313200
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "GRADE PM"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Silver
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust36
tile_color 0x3f597fff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 52
selected true
xpos 8707
ypos -7970
bdwidth 432
bdheight 725
z_order -313200
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "GRADE BRIDGE"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Silver
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust76
tile_color 0x870025ff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 82
selected true
xpos 8284
ypos 16922
bdwidth 527
bdheight 587
z_order -309349
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note PRECOMP
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Black
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.02 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name BackdropNode46
tile_color 0x388e8e00
label clouds
note_font_size 42
selected true
xpos 11703
ypos -13167
bdwidth 436
bdheight 699
z_order -304764
}
BackdropNode {
inputs 0
name BackdropNode51
tile_color 0x7171c600
label "water shadows"
note_font_size 42
selected true
xpos 10889
ypos -13489
bdwidth 582
bdheight 497
z_order -289254
}
BackdropNode {
inputs 0
name BackdropNode67
tile_color 0xaaaaaa00
note_font_size 42
selected true
xpos 6670
ypos 12686
bdwidth 644
bdheight 429
z_order -276276
}
BackdropNode {
inputs 0
name Backdrop_Adjust6
tile_color 0x3f597fff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 32
selected true
xpos 10978
ypos -16717
bdwidth 460
bdheight 574
z_order -264040
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "GRADE WATER"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Silver
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name CG_BEAUTY8
tile_color 0x1d3c9dff
gl_color 0x5d5d5d01
label "WATER shot render"
note_font "Arial Black"
note_font_size 30
selected true
xpos 9688
ypos -18692
bdwidth 531
bdheight 497
z_order -263907
}
BackdropNode {
inputs 0
name BackdropNode10
tile_color 0x7171c6ff
label Sunlight
note_font_size 42
selected true
xpos 10941
ypos -14028
bdwidth 528
bdheight 497
z_order -262416
}
BackdropNode {
inputs 0
name BackdropNode68
tile_color 0x71c67100
label <center>_NG_
note_font_size 102
selected true
xpos 8322
ypos 11650
bdwidth 535
bdheight 423
z_order -226305
}
BackdropNode {
inputs 0
name Backdrop_Adjust49
tile_color 0x3f597fff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 42
selected true
xpos 11615
ypos -911
bdwidth 280
bdheight 794
z_order -222320
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note GRADE
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Silver
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name BackdropNode45
tile_color 0x8e388e00
label "Over | Lightwrap"
note_font_size 42
selected true
xpos 11459
ypos -4167
bdwidth 386
bdheight 573
z_order -221178
}
BackdropNode {
inputs 0
name CG_BEAUTY7
tile_color 0x1d3c9dff
gl_color 0x5d5d5d01
label "SKY Pano/LatLong 10k"
note_font "Arial Black"
note_font_size 30
selected true
xpos 11562
ypos -18675
bdwidth 457
bdheight 462
z_order -211134
}
BackdropNode {
inputs 0
name CG_BEAUTY5
tile_color 0x1d3c9dff
gl_color 0x5d5d5d01
label "WATER latlong 10k"
note_font "Arial Black"
note_font_size 30
selected true
xpos 10937
ypos -18669
bdwidth 446
bdheight 456
z_order -203376
}
BackdropNode {
inputs 0
name Backdrop_Adjust78
tile_color 0x3f597fff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 52
selected true
xpos 7469
ypos 13971
bdwidth 444
bdheight 447
z_order -198468
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "GRADE DRT"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Silver
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name BackdropNode50
tile_color 0x388e8e00
label clouds
note_font_size 42
selected true
xpos 11710
ypos -17723
bdwidth 415
bdheight 454
z_order -188410
}
BackdropNode {
inputs 0
name CG_BEAUTY3
tile_color 0x881c9dff
gl_color 0x5d5d5d01
label "FX - FLARE STACK"
note_font "Arial Black"
note_font_size 30
selected true
xpos 10234
ypos -9336
bdwidth 514
bdheight 363
z_order -186582
}
BackdropNode {
inputs 0
name Backdrop_Adjust58
tile_color 0x3f7f7fff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 52
selected true
xpos 11614
ypos 4
bdwidth 280
bdheight 662
z_order -185360
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "LENS\nEFFECT"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Silver
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name BackdropNode47
tile_color 0x8e8e3800
label Defocus
note_font_size 42
selected true
xpos 11430
ypos -1476
bdwidth 586
bdheight 311
z_order -182246
}
BackdropNode {
inputs 0
name BackdropNode11
tile_color 0x7171c600
label "GBK Sup approved"
note_font_size 42
selected true
xpos 13880
ypos 30591
bdwidth 695
bdheight 257
z_order -178615
}
BackdropNode {
inputs 0
name BackdropNode48
tile_color 0x74576dff
note_font_size 42
selected true
xpos 11518
ypos -12355
bdwidth 439
bdheight 406
z_order -178234
}
BackdropNode {
inputs 0
name Backdrop_Adjust79
tile_color 0x666666ff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 102
selected true
xpos 11641
ypos 29255
bdwidth 280
bdheight 636
z_order -178080
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note OUT
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Black
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name BackdropNode49
tile_color 0xbc8e8eff
label "FLAT PLATE RESOLUTION \nmake sure it is correct"
note_font_size 42
selected true
xpos 882
ypos -20170
bdwidth 561
bdheight 315
z_order -176715
}
BackdropNode {
inputs 0
name BackdropNode69
tile_color 0x70736eff
label despill
note_font_size 42
selected true
xpos 8239
ypos 9314
bdwidth 396
bdheight 436
z_order -172656
}
BackdropNode {
inputs 0
name BackdropNode9
tile_color 0x7171c600
label "from client view in raw"
note_font_size 42
selected true
xpos 13877
ypos 30335
bdwidth 698
bdheight 221
z_order -154258
}
BackdropNode {
inputs 0
name BackdropNode12
tile_color 0x388e8e00
label WHITECAPS
note_font_size 42
selected true
xpos 10996
ypos -12788
bdwidth 428
bdheight 355
z_order -151940
}
BackdropNode {
inputs 0
name Backdrop_Adjust59
tile_color 0x777f59ff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 32
selected true
xpos 10089
ypos -6905
bdwidth 496
bdheight 298
z_order -147808
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "Single frame track"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Black
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust60
tile_color 0x777f59ff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 32
selected true
xpos 9116
ypos -4272
bdwidth 496
bdheight 298
z_order -147808
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "Single frame track"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Black
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust61
tile_color 0x3f597fff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 52
selected true
xpos 11602
ypos -11892
bdwidth 324
bdheight 422
z_order -136728
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "GRADE BG"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Silver
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name BackdropNode53
tile_color 0x388e8e00
label "sun "
note_font_size 42
selected true
xpos 11702
ypos -13964
bdwidth 421
bdheight 323
z_order -135983
}
BackdropNode {
inputs 0
name Backdrop_Adjust1
tile_color 0x777f59ff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 62
selected true
xpos -822
ypos -20137
bdwidth 400
bdheight 336
z_order -134400
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note Matte
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Lime
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.02 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust
tile_color 0x7f5959ff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 52
selected true
xpos -1334
ypos -20131
bdwidth 377
bdheight 331
z_order -124787
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note CAMERA
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Aqua
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.02 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust57
tile_color 0x3f597fff
label "<center><font color=\[value note_color]>\[value note]\n<i> heavy"
note_font "Bitstream Vera Sans Bold"
note_font_size 32
selected true
xpos 9731
ypos -17845
bdwidth 445
bdheight 274
z_order -121930
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "WHITE CAPS"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Silver
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust84
tile_color 0x666666ff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 52
selected true
xpos 11624
ypos 21346
bdwidth 339
bdheight 356
z_order -120684
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note OVER
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Black
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust5
tile_color 0x870025ff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 42
selected true
xpos 10957
ypos -15184
bdwidth 260
bdheight 426
z_order -110760
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note PRECOMP
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Black
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.02 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust62
tile_color 0x870025ff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 42
selected true
xpos 11610
ypos -2257
bdwidth 260
bdheight 426
z_order -110760
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note PRECOMP
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Black
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.02 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust63
tile_color 0x870025ff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 42
selected true
xpos 11617
ypos -15183
bdwidth 260
bdheight 426
z_order -110760
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note PRECOMP
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Black
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.02 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust64
tile_color 0x870025ff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 42
selected true
xpos 9822
ypos -17459
bdwidth 260
bdheight 426
z_order -110760
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note PRECOMP
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Black
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.02 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust70
tile_color 0x7f3f66ff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 72
selected true
xpos 11578
ypos -2794
bdwidth 334
bdheight 325
z_order -108550
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "DI MATTE"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Fuchsia
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust8
tile_color 0x666666ff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 72
selected true
xpos 11880
ypos 27852
bdwidth 334
bdheight 325
z_order -108550
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "QC CHECK"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Aqua
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust80
tile_color 0x7f3f66ff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 72
selected true
xpos 8382
ypos 15859
bdwidth 334
bdheight 325
z_order -108550
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "DI MATTE"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Fuchsia
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust81
tile_color 0x7f3f66ff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 72
selected true
xpos 11609
ypos 28376
bdwidth 334
bdheight 325
z_order -108550
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "DI MATTE"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Fuchsia
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name BackdropNode71
tile_color 0xaaaaaa00
label "PLATE pl01"
note_font_size 42
selected true
xpos 181
ypos -20145
bdwidth 287
bdheight 359
z_order -103033
}
BackdropNode {
inputs 0
name BackdropNode7
tile_color 0xaaaaaa00
label "Fare Glow on BG"
note_font_size 42
selected true
xpos 11406
ypos -6382
bdwidth 282
bdheight 361
z_order -101802
}
BackdropNode {
inputs 0
name Backdrop_Adjust28
tile_color 0xaaaaaaff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 62
selected true
xpos -249
ypos -20142
bdwidth 291
bdheight 348
z_order -101268
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "Lens UV"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Black
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name OFFLINE5
tile_color 0x3c3d5d01
gl_color 0x3c3d5d01
label LAYOUT
note_font_size 80
selected true
xpos 12721
ypos 30215
bdwidth 315
bdheight 248
z_order -78120
}
BackdropNode {
inputs 0
name OFFLINE6
tile_color 0x3c3d5d01
gl_color 0x3c3d5d01
label OFFLINE
note_font_size 80
selected true
xpos 12296
ypos 30216
bdwidth 315
bdheight 248
z_order -78120
}
BackdropNode {
inputs 0
name BackdropNode56
tile_color 0x7171c600
label "format & removes"
note_font_size 42
selected true
xpos 9414
ypos -4671
bdwidth 363
bdheight 214
z_order -77682
}
BackdropNode {
inputs 0
name BackdropNode81
tile_color 0x7171c600
label "format & removes"
note_font_size 42
selected true
xpos 8433
ypos 16485
bdwidth 363
bdheight 214
z_order -77682
}
BackdropNode {
inputs 0
name BackdropNode8
tile_color 0xaaaaaa00
label "Fare Glow "
note_font_size 42
selected true
xpos 10368
ypos -7250
bdwidth 447
bdheight 168
z_order -75096
}
BackdropNode {
inputs 0
name BackdropNode72
tile_color 0x7171c600
label garbage
note_font_size 42
selected true
xpos 5961
ypos 9372
bdwidth 314
bdheight 221
z_order -69394
}
BackdropNode {
inputs 0
name BackdropNode54
tile_color 0x388e8e00
label "brighter horiz"
note_font_size 42
selected true
xpos 11702
ypos -13597
bdwidth 415
bdheight 156
z_order -64740
}
BackdropNode {
inputs 0
name BackdropNode55
tile_color 0x388e8e00
label "Darker top half"
note_font_size 42
selected true
xpos 11702
ypos -13405
bdwidth 416
bdheight 154
z_order -64064
}
BackdropNode {
inputs 0
name BackdropNode3
tile_color 0x7171c600
label format
note_font_size 42
selected true
xpos 10976
ypos -15438
bdwidth 278
bdheight 210
z_order -58380
}
BackdropNode {
inputs 0
name BackdropNode57
tile_color 0x7171c600
label format
note_font_size 42
selected true
xpos 11634
ypos -11390
bdwidth 278
bdheight 210
z_order -58380
}
BackdropNode {
inputs 0
name BackdropNode58
tile_color 0x7171c600
label format
note_font_size 42
selected true
xpos 11636
ypos -15424
bdwidth 278
bdheight 210
z_order -58380
}
BackdropNode {
inputs 0
name BackdropNode59
tile_color 0x317c7cff
label "rayliey/mia scattering"
note_font_size 42
selected true
xpos 11715
ypos -13803
bdwidth 390
bdheight 144
z_order -56160
}
BackdropNode {
inputs 0
name BackdropNode74
tile_color 0x7171c600
label Remove
note_font_size 42
selected true
xpos 11687
ypos 28825
bdwidth 212
bdheight 262
z_order -55544
}
BackdropNode {
inputs 0
name BackdropNode75
tile_color 0x388e8e00
label viewers
note_font_size 62
selected true
xpos 5391
ypos 18505
bdwidth 255
bdheight 202
z_order -51510
}
BackdropNode {
inputs 0
name Backdrop_Adjust69
tile_color 0x7f3f66ff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 32
selected true
xpos 9413
ypos -6144
bdwidth 234
bdheight 204
z_order -47736
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "DI MATTE"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Fuchsia
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name BackdropNode29
tile_color 0x8e8e3800
note_font_size 42
selected true
xpos 1651
ypos -20086
bdwidth 227
bdheight 207
z_order -46989
}
BackdropNode {
inputs 0
name BackdropNode2
tile_color 0xaaaaaa00
label "Mocha Track"
note_font_size 42
selected true
xpos 6435
ypos 9629
bdwidth 257
bdheight 171
z_order -43947
}
BackdropNode {
inputs 0
name BackdropNode76
tile_color 0xaaaaaa00
label "Mocha Track"
note_font_size 42
selected true
xpos 7015
ypos 8255
bdwidth 257
bdheight 171
z_order -43947
}
BackdropNode {
inputs 0
name BackdropNode77
tile_color 0xaaaaaa00
label "Mocha Track"
note_font_size 42
selected true
xpos 6131
ypos 9127
bdwidth 257
bdheight 171
z_order -43947
}
BackdropNode {
inputs 0
name Backdrop_Adjust83
tile_color 0x7f3f66ff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 42
selected true
xpos 11641
ypos 17506
bdwidth 260
bdheight 166
z_order -43160
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "DI MATTE"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Fuchsia
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name BackdropNode61
tile_color 0x386343ff
label depthQ
note_font_size 42
selected true
xpos 8867
ypos -5535
bdwidth 185
bdheight 231
z_order -42735
}
BackdropNode {
inputs 0
name BackdropNode62
tile_color 0x386343ff
label heightQ
note_font_size 42
selected true
xpos 9077
ypos -5529
bdwidth 184
bdheight 225
z_order -41400
}
BackdropNode {
inputs 0
name Backdrop_Adjust68
tile_color 0x7f3f66ff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 32
selected true
xpos 9404
ypos -6556
bdwidth 233
bdheight 177
z_order -41241
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "DI MATTE"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Fuchsia
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust65
tile_color 0x374d6eff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 32
selected true
xpos 11658
ypos -361
bdwidth 209
bdheight 163
z_order -34067
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note Blacks
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Silver
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name BackdropNode78
tile_color 0x71c67100
label <center>_NG_
note_font_size 42
selected true
xpos 13809
ypos 25474
bdwidth 137
bdheight 166
z_order -22742
}
BackdropNode {
inputs 0
name BackdropNode79
tile_color 0x71c67100
label <center>_NG_
note_font_size 42
selected true
xpos 11721
ypos 25490
bdwidth 137
bdheight 166
z_order -22742
}
BackdropNode {
inputs 0
name BackdropNode80
tile_color 0xaa4329ff
label adjust
note_font_size 30
selected true
xpos 11971
ypos 24791
bdwidth 144
bdheight 147
z_order -21168
}
BackdropNode {
inputs 0
name Backdrop_Adjust66
tile_color 0x777f59ff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 22
selected true
xpos 10734
ypos -16253
bdwidth 180
bdheight 107
z_order -19260
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "single frame"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Black
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
push $cut_paste_input
CornerPin2D {
to1 {{Tracker6.tracks.4.track_x} {Tracker6.tracks.4.track_y}}
to2 {{Tracker6.tracks.3.track_x} {Tracker6.tracks.3.track_y}}
to3 {{Tracker6.tracks.2.track_x} {Tracker6.tracks.2.track_y}}
to4 {{Tracker6.tracks.1.track_x} {Tracker6.tracks.1.track_y}}
invert false
from1 {{Tracker6.tracks.4.track_x(1001)} {Tracker6.tracks.4.track_y(1001)}}
from2 {{Tracker6.tracks.3.track_x(1001)} {Tracker6.tracks.3.track_y(1001)}}
from3 {{Tracker6.tracks.2.track_x(1001)} {Tracker6.tracks.2.track_y(1001)}}
from4 {{Tracker6.tracks.1.track_x(1001)} {Tracker6.tracks.1.track_y(1001)}}
name CornerPin2D1
selected true
xpos 1779
ypos -20003
}
Dot {
inputs 0
name Dot210
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 1593
ypos -20050
}
Tracker4 {
tracks { { 1 31 4 } 
{ { 5 1 20 enable e 1 } 
{ 3 1 75 name name 1 } 
{ 2 1 58 track_x track_x 1 } 
{ 2 1 58 track_y track_y 1 } 
{ 2 1 63 offset_x offset_x 1 } 
{ 2 1 63 offset_y offset_y 1 } 
{ 4 1 27 T T 1 } 
{ 4 1 27 R R 1 } 
{ 4 1 27 S S 1 } 
{ 2 0 45 error error 1 } 
{ 1 1 0 error_min error_min 1 } 
{ 1 1 0 error_max error_max 1 } 
{ 1 1 0 pattern_x pattern_x 1 } 
{ 1 1 0 pattern_y pattern_y 1 } 
{ 1 1 0 pattern_r pattern_r 1 } 
{ 1 1 0 pattern_t pattern_t 1 } 
{ 1 1 0 search_x search_x 1 } 
{ 1 1 0 search_y search_y 1 } 
{ 1 1 0 search_r search_r 1 } 
{ 1 1 0 search_t search_t 1 } 
{ 2 1 0 key_track key_track 1 } 
{ 2 1 0 key_search_x key_search_x 1 } 
{ 2 1 0 key_search_y key_search_y 1 } 
{ 2 1 0 key_search_r key_search_r 1 } 
{ 2 1 0 key_search_t key_search_t 1 } 
{ 2 1 0 key_track_x key_track_x 1 } 
{ 2 1 0 key_track_y key_track_y 1 } 
{ 2 1 0 key_track_r key_track_r 1 } 
{ 2 1 0 key_track_t key_track_t 1 } 
{ 2 1 0 key_centre_offset_x key_centre_offset_x 1 } 
{ 2 1 0 key_centre_offset_y key_centre_offset_y 1 } 
} 
{ 
 { {curve K x1001 1} "track 1" {curve x1001 432 456.8923035 506.4619141 602.2713013 731.3150024 832.5076294 918.0697021 1019.934631 1153.207275 1300.538818 1364.270508 1393.642578 1427.492188 1464.075439 1506.177002 1529.987305 1547.023193 1553.904053 1583.531006 1614.769775} {curve x1001 2354 2352.699463 2362.374512 2373.200684 2370.267822 2375.293213 2385.31665 2389.564209 2370.891113 2350.760742 2360.039062 2408.978027 2457.423096 2451.660889 2450.247314 2448.682861 2425.664307 2387.437744 2374.808105 2402.324219} {curve K x1001 0} {curve K x1001 0} 1 1 1 {curve x1001 0 5.327603007e-05 0.0003972399548 0.0005143640451 0.000438112708 0.0001523498952 0.0002154180219 0.0006598838255 0.000251782302 5.650834874e-05 0.0007785430967 0.0008126188221 0.0007179017929 0.0005126212281 0.0006466513635 0.0007180210621 0.0007595577773 0.0006766330737 0.000449454096 0.0005468090871} 0 0.0321862 -69 -69 69 69 -175 -137 175 137 {curve} {curve x1001 188} {curve x1001 2148} {curve x1001 675} {curve x1001 2559} {curve x1001 363} {curve x1001 2285} {curve x1001 500} {curve x1001 2422} {curve x1001 68.5} {curve x1001 68.5}  } 
 { {curve K x1020 1} "track 2" {curve x1001 1281.4375 1302.902832 1354.035767 1454.494507 1573.683472 1662.790161 1744.064941 1846.354492 1981.079712 2111.127686 2158.3396 2184.245361 2215.222656 2249.535645 2286.16333 2305.431885 2317.754639 2321.172119 2349.409424 2376} {curve x1001 2366.837646 2366.576172 2382.243652 2395.742188 2390.998047 2393.401123 2402.407227 2403.974121 2379.543701 2357.345703 2366.788086 2418.009521 2467.345703 2461.107666 2458.702637 2457.94751 2437.669678 2402.248779 2390.890137 2422} {curve K x1020 0} {curve K x1020 0} 1 1 1 {curve x1001 0.0007414066941 0.0005587545198 0.000261027694 0.0002014906152 0.000120180025 0.0001211238953 0.0001048335666 9.346619202e-05 0.0004433207449 0.0006152304727 0.0002331172055 0.0001418673781 0.0002339769356 0.0002314360932 0.0002199443408 0.0002103570525 0.0001041138392 0.0001481583916 0.0001611734656 0} 0 0.000741407 -69 -69 69 69 -207 -157 207 157 {curve} {curve x1020 2100} {curve x1020 2196} {curve x1020 2651} {curve x1020 2647} {curve x1020 2307} {curve x1020 2353} {curve x1020 2444} {curve x1020 2490} {curve x1020 68.5} {curve x1020 68.5}  } 
 { {curve K x1020 1} "track 3" {curve x1001 1303.086792 1325.107056 1377.417358 1479.40979 1597.032593 1684.364746 1764.433228 1865.762573 1998.82312 2125.23999 2171.534912 2196.759766 2229.409668 2263.916504 2299.323242 2318.794678 2332.300293 2336.877441 2365.209961 2392} {curve x1001 1886.831665 1889.340576 1907.283325 1926.195068 1924.285156 1928.883545 1940.626343 1945.366211 1923.464111 1904.013062 1913.074829 1960.240845 2017.716064 2014.070312 2013.630127 2014.526489 1993.613647 1962.109985 1954.042358 1982} {curve K x1020 0} {curve K x1020 0} 1 1 1 {curve x1001 6.297344272e-05 0.0008536603935 0.0002784397927 0.0001318461501 6.860849832e-05 0.0001094540784 7.577525457e-05 8.513111522e-05 0.0004447094475 0.0004581183035 0.0001821943767 6.6211287e-05 0.0001665171107 0.0002148000996 0.0002178023322 0.000236472397 0.0001262768275 0.0001780578976 0.0001859464131 0} 0 0.00085366 -69 -69 69 69 -279 -189 279 189 {curve} {curve x1020 2044} {curve x1020 1724} {curve x1020 2739} {curve x1020 2239} {curve x1020 2323} {curve x1020 1913} {curve x1020 2460} {curve x1020 2050} {curve x1020 68.5} {curve x1020 68.5}  } 
 { {curve K x1020 1} "track 4" {curve x1001 437.1470642 462.1663208 513.7897949 614.9124146 742.0731201 839.9624023 924.9650879 1027.844238 1161.106934 1302.43457 1362.523438 1391.532593 1427.299438 1464.389404 1504.621582 1528.356567 1546.365356 1554.408325 1584.795654 1616} {curve x1001 1869.38855 1870.67041 1883.559814 1899.561646 1899.781738 1906.924438 1919.69165 1927.724854 1912.450928 1895.254883 1904.938721 1951.121216 2006.947388 2003.908081 2004.667236 2005.05127 1981.966431 1947.660522 1938.279907 1964} {curve K x1020 0} {curve K x1020 0} 1 1 1 {curve x1001 0.0006222768376 0.0004547650333 0.0007987387735 0.0001433057085 9.844723126e-05 0.0002980063807 0.000168300623 7.31649761e-05 0.0006667424584 0.0005308907123 0.0002448191255 0.0001305767296 0.0001732018074 0.0001388501634 0.0001706197838 0.0002047960205 0.000162670422 0.0001460678271 9.833656979e-05 0} 0 0.000798739 -69 -69 69 69 -287 -175 287 175 {curve} {curve x1020 1260} {curve x1020 1720} {curve x1020 1971} {curve x1020 2207} {curve x1020 1547} {curve x1020 1895} {curve x1020 1684} {curve x1020 2032} {curve x1020 68.5} {curve x1020 68.5}  } 
} 
}

cornerPinOptions "Transform (match-move, baked)"
reference_frame 1001
translate {{curve x1001 0 23.3493042 74.50836182 174.354248 297.6082764 391.4884033 474.4654541 576.5561523 710.1364746 846.4173584 900.7492676 928.1271973 961.4381104 997.0614014 1035.653442 1057.224731 1072.442993 1078.172607 1107.318726 1136.274536} {curve x1001 0 0.5573730469 14.60083008 29.41040039 27.06860352 31.86132812 42.74609375 47.39282227 27.32299805 7.579345703 16.94580078 65.32299805 118.0935059 113.4223633 112.5473633 112.2875977 90.46411133 55.59985352 45.24072266 73.31665039}}
rotate {{curve x1001 0 0.07251951124 0.4012364051 0.6436497252 0.5100154442 0.3190778163 0.2479725717 0.09592403643 -0.2523798805 -0.4993996446 -0.5743443548 -0.5023007546 -0.3715019959 -0.3871622987 -0.4912455059 -0.4493909567 -0.2766070296 -0.07761237135 0.01291582986 0.1819226603}}
scale {{curve x1001 1 0.9958484492 0.9956133691 0.9955761399 0.9854044572 0.9741922581 0.9687101023 0.9664330712 0.9654335279 0.9496578997 0.9362167967 0.9347419715 0.9282201016 0.9247408421 0.9191320844 0.9143472259 0.9104915747 0.9055159176 0.9023806491 0.899680308}}
center {{curve x1001 863.4178467 863.4178467 863.4178467 863.4178467 863.4178467 863.4178467 863.4178467 863.4178467 863.4178467 863.4178467 863.4178467 863.4178467 863.4178467 863.4178467 863.4178467 863.4178467 863.4178467 863.4178467 863.4178467 863.4178467} {curve x1001 2119.264404 2119.264404 2119.264404 2119.264404 2119.264404 2119.264404 2119.264404 2119.264404 2119.264404 2119.264404 2119.264404 2119.264404 2119.264404 2119.264404 2119.264404 2119.264404 2119.264404 2119.264404 2119.264404 2119.264404}}
shutteroffset centred
selected_tracks 0,1,2,3
name Tracker6
label "Ref frame: \[value reference_frame]"
selected true
xpos 1665
ypos -20060
}
StickyNote {
inputs 0
name StickyNote47
label "change the latLong reformat \nsize in the \n'BG_Projection' node\nbelow"
selected true
xpos 11802
ypos -18428
}
StickyNote {
inputs 0
name StickyNote5
label "^^ adjust ^^"
selected true
xpos 9017
ypos -5155
}
StickyNote {
inputs 0
name StickyNote6
label "<<  adjust >>"
selected true
xpos 9016
ypos -5382
}
StickyNote {
inputs 0
name StickyNote11
label "/\\\\/\\\\change noise\noffset per shot"
selected true
xpos 11300
ypos -13190
}
Dot {
inputs 0
name Dot46
tile_color 0xd8b700ff
label "\n From: plate"
note_font_size 12
note_font_color 0xffffffff
selected true
xpos 12142
ypos -16409
hide_input true
}
Group {
name HorizonLine2
help "Perspective tool, to calculate the position of the horizon-line and vanishing point."
tile_color 0x566d6dff
selected true
xpos 12108
ypos -16384
addUserKnob {20 options l Options}
addUserKnob {4 overlay l Overlay t "Choose layer operation." M {add over ""}}
overlay over
addUserKnob {6 invertOver t "If you're using over operation, you can use the lines with the background image's inverted colour values." -STARTLINE}
addUserKnob {3 linesVisible t "Choose the amount of visible lines. (1-8)"}
linesVisible 8
addUserKnob {7 linesThickness R 0 10}
linesThickness 2
addUserKnob {18 lineColour}
lineColour {1 1 1}
addUserKnob {6 lineColour_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 lineColour_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 text01 l "Reset Points" T ""}
addUserKnob {22 pyButton l GO! t "resets lines to the root format of the script" -STARTLINE T "def setPerspectivePointValues():\n    w = int (nuke.thisNode().width())\n    h = int (nuke.thisNode().height())\n    wHalf = int (w/2)\n    hHalf = int (h/2)\n\n    persp = nuke.thisNode()\n    persp\[ 'origin' ].setValue( \[wHalf, hHalf] )\n    persp\[ 'point1' ].setValue( \[0, h] )\n    persp\[ 'point2' ].setValue( \[wHalf+1, h] )\n    persp\[ 'point3' ].setValue( \[w, h] )\n    persp\[ 'point4' ].setValue( \[0, hHalf+1] )\n    persp\[ 'point5' ].setValue( \[w, hHalf+1] )\n    persp\[ 'point6' ].setValue( \[0, 0] )\n    persp\[ 'point7' ].setValue( \[wHalf+1, 0] )\n    persp\[ 'point8' ].setValue( \[w, 0] )\n    persp\[ 'rotate' ].setValue( 0 )\n\nsetPerspectivePointValues()"}
addUserKnob {20 horizonGrp l horizon n 1}
horizonGrp 0
addUserKnob {6 horizon +STARTLINE}
horizon true
addUserKnob {41 rotate T Transform1.rotate}
addUserKnob {18 horizonColour}
horizonColour {1 0 0}
addUserKnob {6 horizonColour_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 horizonColour_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {7 lineOpacity}
lineOpacity 1
addUserKnob {20 endGroup n -1}
addUserKnob {12 origin l Origin}
origin {1024 576}
addUserKnob {12 point1 l Point1}
point1 {0 1152}
addUserKnob {12 point2 l Point2}
point2 {1025 1152}
addUserKnob {12 point3 l Point3}
point3 {2048 1152}
addUserKnob {12 point4 l Point4}
point4 {0 577}
addUserKnob {12 point5 l Point5}
point5 {2048 577}
addUserKnob {12 point6 l Point6}
addUserKnob {12 point7 l Point7}
point7 {1025 0}
addUserKnob {12 point8 l Point8}
point8 {2048 0}
addUserKnob {20 Info}
addUserKnob {26 title l +++ T " OPEN NUKE GITHUB TOOLKIT +++"}
addUserKnob {22 documentation l "  Documentation / Feedback  " T "import webbrowser\nwebbrowser.open(/'http://www.nukepedia.com/gizmos/other/perspective-guide-110/')" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {26 version l version: T 0.3}
addUserKnob {26 created l created: T "1/1/2015 by <a href=\\'http://www.nukepedia.com/gizmos/other/perspective-guide-110'> Peter Farkas - Baseblack (London) Ltd. Original Shake macro written by Adrian Banton and Matt Twyford. Special thanks to Gabor L. Toth and Howard Jones.</a>"}
addUserKnob {26 modified l "modified: " T "1/2/2015 by <a href=\\/'www.movingimagearts.com\\/'> Moving Image Arts</a> "}
addUserKnob {26 source l source: T "v1.0 <a href='http://www.nukepedia.com/gizmos/other/perspective-guide-110'> Nukepedia</a>"}
addUserKnob {26 github l github: T "<a href=\"https://github.com/openNuke/toolkit/blob/master/horizon_line.nk\">github.com/openNuke/toolkit/blob/master/horizon_line.nk</a>"}
addUserKnob {26 status l status: T stable}
addUserKnob {26 licence l licence: T "<a href=\"https://github.com/openNuke/toolkit/blob/master/LICENCE\">READ ME</a>"}
}
RotoPaint {
inputs 0
cliptype none
curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 512}
    {t
   {=parent.origin x44918000}
   {=parent.origin x441f0000}  0 0 0 0 0 0
   {=parent.rotate
    {{0 0 -}}}}
    {a}
    {curvegroup Bezier2 1536 bezier
     {{cc
       {f 8192}
       {p
        {}
        {{=origin.x x4474c000}
      {=origin.y x442c8000}}
        {}
        {}
        {{=0 xbca3d70a}
      {=origin.y+1 x44074000}}
        {}}}
      {cc
       {f 8192}
       {p
        {}
        {}
        {}
        {}
        {}
        {}}}}
     {t x443fe000 x4402e000}
     {a spx 0 spy 0 sb 1 tt x40800000}}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {p
        {}
        {{=origin.x x4474c000}
      {=origin.y x442c8000}}
        {}
        {}
        {{=width xbca3d70a}
      {=origin.y+1 x44074000}}
        {}}}
      {cc
       {f 8192}
       {p
        {}
        {}
        {}
        {}
        {}
        {}}}}
     {t x443fe000 x4402e000}
     {a spx 0 spy 0 sb 1 tt x40800000}}}}}}
toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 tt 5 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 tt 6 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 tt 7 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { addPoints str 1 ssx 1 ssy 1 sf 1 tt 8 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
toolbar_autokey false
toolbar_ripple_range_type "to end"
toolbar_ripple_range_from 1
toolbar_ripple_range_to 1
toolbar_feather_link false
toolbar_brush_hardness 0.200000003
toolbar_source_transform_scale {1 1}
toolbar_source_transform_center {320 240}
colorOverlay {0 0 0 0}
lifetime_type "all frames"
view {}
motionblur_on true
motionblur_shutter_offset_type centred
source_translate_round false
source_black_outside true
name RotoPaint102
xpos -810
ypos -178
disable {{!parent.horizon}}
addUserKnob {20 User}
addUserKnob {7 rotateHorizon R -180 180}
}
set N6cfc5600 [stack 0]
Grade {
channels rgba
whitepoint 0
white_clamp true
name Grade3
xpos -810
ypos -129
}
Dilate {
size {{linesThickness+1}}
name Dilate2
xpos -810
ypos -86
}
set N6cf90100 [stack 0]
Grade {
channels {rgba.red rgba.green rgba.blue -rgba.alpha}
whitepoint 0
multiply {{horizonColour} {horizonColour} {horizonColour} {curve}}
white_clamp true
name horizonGrade
xpos -810
ypos -9
}
Multiply {
value {{lineOpacity}}
name Multiply2
xpos -810
ypos 58
}
RotoPaint {
inputs 0
cliptype none
curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 512}
    {t x44918000 x441f0000}
    {a}
    {curvegroup Bezier1 1600 bezier
     {{cc
       {f 8192}
       {p
        {}
        {{=origin.x x44ceb333}
	 {=origin.y x44921333}}
        {}
        {}
        {{=point1.x x43400000}
	 {=point1.y x4492c000}}
        {}}}
      {cc
       {f 8192}
       {p
        {}
        {}
        {}
        {}
        {}
        {}}}}
     {t
      {=parent.origin x44918000}
      {=parent.origin x441f0000}     0 0 0 0 0 0
   {=parent.rotate
    {{0 0 -}}}}
     {a spx x44800000 spy x44428000 sb 1 tt x40800000}}}}}}
toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 tt 5 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 tt 6 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 tt 7 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { addPoints str 1 ssx 1 ssy 1 sf 1 tt 8 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
toolbar_autokey false
toolbar_ripple_range_type "to end"
toolbar_ripple_range_from 1
toolbar_ripple_range_to 1
toolbar_feather_link false
toolbar_brush_hardness 0.200000003
toolbar_source_transform_scale {1 1}
toolbar_source_transform_center {320 240}
colorOverlay {0 0 0 0}
lifetime_type "all frames"
locked true
motionblur_shutter_offset_type centred
source_translate_round false
source_black_outside true
name RotoPaint1
xpos -590
ypos -561
disable {{"linesVisible < 1"}}
}
RotoPaint {
cliptype none
curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 576}
    {t x44918000 x441f0000}
    {a}
    {curvegroup Bezier2 1536 bezier
     {{cc
       {f 8192}
       {p
        {}
        {{=point2.x x44d50000}
	 {=point2.y x4492d000}}
        {}
        {}
        {{=origin.x x448f8000}
	 {=origin.y x42cc0000}}
        {}}}
      {cc
       {f 8192}
       {p
        {}
        {}
        {}
        {}
        {}
        {}}}}
     {t
      {=parent.origin x44918000}
      {=parent.origin x441f0000}     0 0 0 0 0 0
      {=parent.rotate 0}}
     {a spx 0 spy 0 sb 1 tt x40800000}}}}}}
toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 tt 5 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 tt 6 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 tt 7 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { addPoints str 1 ssx 1 ssy 1 sf 1 tt 8 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
toolbar_autokey false
toolbar_ripple_range_type "to end"
toolbar_ripple_range_from 1
toolbar_ripple_range_to 1
toolbar_feather_link false
toolbar_brush_hardness 0.200000003
toolbar_source_transform_scale {1 1}
toolbar_source_transform_center {320 240}
colorOverlay 0
lifetime_type "all frames"
view {}
motionblur_on true
motionblur_shutter_offset_type centred
source_black_outside true
name RotoPaint2
xpos -590
ypos -513
disable {{"linesVisible < 2" i}}
}
RotoPaint {
cliptype none
curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 512}
    {t x44918000 x441f0000}
    {a}
    {curvegroup Bezier3 1600 bezier
     {{cc
       {f 8192}
       {p
        {}
        {{=origin.x x4496e000}
	 {=origin.y x443e0000}}
        {}
        {}
        {{=point3.x x44da8000}
	 {=point3.y x44994000}}
        {}}}
      {cc
       {f 8192}
       {p
        {}
        {}
        {}
        {}
        {}
        {}}}}
     {t
      {=parent.origin x44918000}
      {=parent.origin x441f0000}     0 0 0 0 0 0
      {=parent.rotate 0}}
     {a spx 0 spy 0 sb 1 tt x40800000}}}}}}
toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 tt 5 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 tt 6 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 tt 7 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { addPoints str 1 ssx 1 ssy 1 sf 1 tt 8 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
toolbar_autokey false
toolbar_ripple_range_type "to end"
toolbar_ripple_range_from 1
toolbar_ripple_range_to 1
toolbar_feather_link false
toolbar_brush_hardness 0.200000003
toolbar_source_transform_scale {1 1}
toolbar_source_transform_center {320 240}
colorOverlay 0
lifetime_type "all frames"
view {}
locked true
motionblur_shutter_offset_type centred
source_translate_round false
source_black_outside true
name RotoPaint3
xpos -590
ypos -465
disable {{"linesVisible < 3" i}}
}
RotoPaint {
cliptype none
curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 512}
    {t x44918000 x441f0000}
    {a}
    {curvegroup Bezier4 1600 bezier
     {{cc
       {f 8192}
       {p
        {}
        {{=origin.x x4474c000}
	 {=origin.y x442c8000}}
        {}
        {}
        {{=point4.x x440b0000}
	 {=point4.y x43b28000}}
        {}}}
      {cc
       {f 8192}
       {p
        {}
        {}
        {}
        {}
        {}
        {}}}}
     {t
      {=parent.origin x44918000}
      {=parent.origin x441f0000}     0 0 0 0 0 0
      {=parent.rotate 0}}
     {a spx 0 spy 0 sb 1 tt x40800000}}}}}}
toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 tt 5 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 tt 6 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 tt 7 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { addPoints str 1 ssx 1 ssy 1 sf 1 tt 8 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
toolbar_autokey false
toolbar_ripple_range_type "to end"
toolbar_ripple_range_from 1
toolbar_ripple_range_to 1
toolbar_feather_link false
toolbar_brush_hardness 0.200000003
toolbar_source_transform_scale {1 1}
toolbar_source_transform_center {320 240}
colorOverlay 0
lifetime_type "all frames"
view {}
locked true
motionblur_shutter_offset_type centred
source_translate_round false
source_black_outside true
name RotoPaint4
xpos -590
ypos -417
disable {{"linesVisible < 4" i}}
}
RotoPaint {
cliptype none
curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 512}
    {t x44918000 x441f0000 0 x40a00000}
    {a}
    {curvegroup Bezier5 1600 bezier
     {{cc
       {f 8192}
       {p
        {}
        {{=origin.x x448e6000}
	 {=origin.y x43ea0000}}
        {}
        {}
        {{=point5.x x44f0a000}
	 {=point5.y x43f30000}}
        {}}}
      {cc
       {f 8192}
       {p
        {}
        {}
        {}
        {}
        {}
        {}}}}
     {t
      {=parent.origin x44918000}
      {=parent.origin x441f0000}     0 0 0 0 0 0
      {=parent.rotate 0}}
     {a spx 0 spy 0 sb 1 tt x40800000}}}}}}
toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 tt 5 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 tt 6 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 tt 7 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { addPoints str 1 ssx 1 ssy 1 sf 1 tt 8 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
toolbar_autokey false
toolbar_ripple_range_type "to end"
toolbar_ripple_range_from 1
toolbar_ripple_range_to 1
toolbar_feather_link false
toolbar_brush_hardness 0.200000003
toolbar_source_transform_scale {1 1}
toolbar_source_transform_center {320 240}
colorOverlay 0
lifetime_type "all frames"
view {}
locked true
motionblur_shutter_offset_type centred
source_translate_round false
source_black_outside true
name RotoPaint5
xpos -590
ypos -369
disable {{"linesVisible < 5" i}}
}
RotoPaint {
cliptype none
curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 576}
    {t x44800000 x44428000}
    {a}
    {curvegroup Bezier6 1536 bezier
     {{cc
       {f 8192}
       {p
        {}
        {{=origin.x x44780000}
	 {=origin.y x441ac000}}
        {}
        {}
        {{=point6.x x43c78000}
	 {=point6.y x43790000}}
        {}}}
      {cc
       {f 8192}
       {p
        {}
        {}
        {}
        {}
        {}
        {}}}}
     {t
      {=parent.origin x44918000}
      {=parent.origin x441f0000}     0 0 0 0 0 0
      {=parent.rotate 0}}
     {a spx 0 spy 0 sb 1 tt x40800000}}}}}}
toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 tt 5 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 tt 6 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 tt 7 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { addPoints str 1 ssx 1 ssy 1 sf 1 tt 8 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
toolbar_autokey false
toolbar_ripple_range_type "to end"
toolbar_ripple_range_from 1
toolbar_ripple_range_to 1
toolbar_feather_link false
toolbar_brush_hardness 0.200000003
toolbar_source_transform_scale {1 1}
toolbar_source_transform_center {320 240}
colorOverlay 0
lifetime_type "all frames"
view {}
motionblur_on true
motionblur_shutter_offset_type centred
source_black_outside true
name RotoPaint6
xpos -590
ypos -321
disable {{"linesVisible < 6" i}}
}
RotoPaint {
cliptype none
curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 576}
    {t x44918000 x441f0000}
    {a}
    {curvegroup Bezier7 512 bezier
     {{cc
       {f 8192}
       {p
        {}
        {{=origin.x x4486c000}
	 {=origin.y x441a0000}}
        {}
        {}
        {{=point7.x x44bd4000}
	 {=point7.y x43a10000}}
        {}}}
      {cc
       {f 8192}
       {p
        {}
        {}
        {}
        {}
        {}
        {}}}}
     {t
      {=parent.origin x44918000}
      {=parent.origin x441f0000}     0 0 0 0 0 0
      {=parent.rotate 0}}
     {a spx 0 spy 0 sb 1 tt x40800000}}}}}}
toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 tt 5 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 tt 6 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 tt 7 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { addPoints str 1 ssx 1 ssy 1 sf 1 tt 8 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
toolbar_autokey false
toolbar_ripple_range_type "to end"
toolbar_ripple_range_from 1
toolbar_ripple_range_to 1
toolbar_feather_link false
toolbar_brush_hardness 0.200000003
toolbar_source_transform_scale {1 1}
toolbar_source_transform_center {320 240}
colorOverlay 0
lifetime_type "all frames"
view {}
motionblur_on true
motionblur_shutter_offset_type centred
source_black_outside true
name RotoPaint7
xpos -590
ypos -273
disable {{"linesVisible < 7" i}}
}
RotoPaint {
cliptype none
curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 512}
    {t x44918000 x441f0000}
    {a}
    {curvegroup Bezier8 1536 bezier
     {{cc
       {f 8192}
       {p
        {}
        {{=origin.x x4489e000}
	 {=origin.y x44284000}}
        {}
        {}
        {{=point8.x x44cd0000}
	 {=point8.y x43aa0000}}
        {}}}
      {cc
       {f 8192}
       {p
        {}
        {}
        {}
        {}
        {}
        {}}}}
     {t
      {=parent.origin x44918000}
      {=parent.origin x441f0000}     0 0 0 0 0 0
      {=parent.rotate 0}}
     {a spx 0 spy 0 sb 1 tt x40800000}}}}}}
toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 tt 5 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 tt 6 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 tt 7 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { addPoints str 1 ssx 1 ssy 1 sf 1 tt 8 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
toolbar_autokey false
toolbar_ripple_range_type "to end"
toolbar_ripple_range_from 1
toolbar_ripple_range_to 1
toolbar_feather_link false
toolbar_brush_hardness 0.200000003
toolbar_source_transform_scale {1 1}
toolbar_source_transform_center {320 240}
colorOverlay {0 0 0 0}
lifetime_type "all frames"
view {}
motionblur_on true
motionblur_shutter_offset_type centred
source_translate_round false
source_black_outside true
name RotoPaint8
xpos -590
ypos -225
disable {{"linesVisible < 8"}}
}
Grade {
channels rgba
whitepoint 0
white_clamp true
name Grade1
xpos -590
ypos -177
}
Dilate {
size {{linesThickness i}}
name Dilate1
xpos -590
ypos -134
}
set N6d8dd600 [stack 0]
Grade {
multiply {{lineColour.r i} {lineColour.g i} {lineColour.b i} {1 i}}
white_clamp true
name Grade2
xpos -590
ypos -81
}
Multiply {
value {{lineOpacity}}
name Multiply1
xpos -590
ypos -38
}
Merge2 {
inputs 2
name Merge4
xpos -700
ypos 63
disable {{"horizon == 0 ? 1:0"}}
}
Clamp {
name Clamp1
xpos -590
ypos 58
}
set N6d8ec100 [stack 0]
Dot {
name Dot3
xpos -556
ypos 114
}
Transform {
center {{parent.origin} {parent.origin}}
name Transform1
xpos -480
ypos 111
disable true
}
push $N6cf90100
push $N6d8dd600
Merge2 {
inputs 2
operation max
also_merge all
name Max
xpos -480
ypos -129
disable {{"horizon == 0 ? 1:0" i}}
}
Input {
inputs 0
name Input1
xpos -370
ypos -609
}
set N6d900800 [stack 0]
Dot {
name Dot2
xpos -226
ypos -606
}
set N6d900100 [stack 0]
Dot {
name Dot1
xpos -6
ypos -606
}
Invert {
name Invert1
xpos -40
ypos -326
}
Blur {
size 3
name Blur1
label "\[value size]"
xpos -40
ypos -260
}
ShuffleCopy {
inputs 2
name ShuffleCopy1
xpos -40
ypos -129
}
Premult {
name Premult1
xpos -40
ypos 63
}
push $N6d900100
Merge2 {
inputs 2
name Merge3
xpos -260
ypos 63
disable {{"invertOver == 0 ? 1:0" i}}
}
Merge2 {
inputs 2
name Merge2
xpos -260
ypos 111
disable {{"invertOver == 1 ? 1:0" i}}
}
Dot {
name Dot4
xpos -226
ypos 186
}
push $N6d8ec100
push $N6d900800
Merge2 {
inputs 2
operation plus
name Merge1
xpos -370
ypos 63
}
Dissolve {
inputs 2
which {{overlay i}}
name Dissolve1
xpos -370
ypos 178
}
Output {
name Output1
xpos -370
ypos 255
}
push $N6cfc5600
Viewer {
show_overscan true
input_process false
name Viewer1
xpos -370
ypos 279
}
end_group
Read {
inputs 0
file_type exr
file /coppi/proj/thrg/ftrack/assets/s01e01/015-0250/img/thrg_s01e01_015-0250_flareStackPyroBTY_v001_beauty_acescg/thrg_s01e01_015-0250_flareStackPyroBTY_beauty_acescg_v001.%04d.exr
localizationPolicy on
format "2272 1582 0 0 2272 1582 1 "
first 1100
last 1161
origfirst 1100
origlast 1161
origset true
name flareStackPyroBTY_beauty_acescg
tile_color 0x14a14aff
selected true
xpos 10459
ypos -9198
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname beauty_acescg
addUserKnob {20 ftrack}
addUserKnob {1 componentId}
componentId 9c0ac46e-3e06-4b6e-9d11-ad90a2eaeef8
addUserKnob {1 componentName}
componentName beauty_acescg
addUserKnob {1 assetVersionId}
assetVersionId 84410580-2a8e-42a2-afe7-c11f96715cc8
addUserKnob {1 assetVersion}
assetVersion 1
addUserKnob {1 assetName}
assetName flareStackPyroBTY
addUserKnob {1 assetType}
assetType img
addUserKnob {4 versionType l "Version Type" M {latest stable pinned}}
}
Dot {
name Dot314
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 10493
ypos -9009
}
Group {
name Reformat_Overscan3
selected true
xpos 10463
ypos -8745
addUserKnob {20 User l Reformat_Overscan}
addUserKnob {41 format l "output format" T ReformatMASTER.format}
addUserKnob {41 filter T ReformatOverscanMASTER.filter}
addUserKnob {41 overscanPercent T ReformatOverscanMASTER.overscanPercent}
addUserKnob {20 info}
addUserKnob {26 version l ver: T "v1 rafal 10/02/2020"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust4
tile_color 0xaaaaaaff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 42
xpos -987
ypos -496
bdwidth 280
bdheight 332
z_order -92960
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "Flat plate res"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Black
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
Input {
inputs 0
name Input1
xpos -884
ypos -382
}
Reformat {
format {{{parent.parent.Reformat_OverscanMASTER.ReformatMASTER.format}}}
pbb true
name ReformatMASTER
xpos -884
ypos -342
}
Reformat {
type scale
scale {{overscanPercent==0?1:1-(1/overscanPercent)}}
resize none
filter impulse
pbb true
name ReformatOverscanMASTER
xpos -884
ypos -288
addUserKnob {20 User l percent}
addUserKnob {7 overscanPercent R 0 80}
overscanPercent {{parent.parent.Reformat_OverscanMASTER.ReformatOverscanMASTER.overscanPercent}}
}
Crop {
box {{-ceil(((input.height*((1-ReformatOverscanMASTER.scale)))*0.5))} {-ceil(((input.width*((1-ReformatOverscanMASTER.scale)))*0.5))} {ceil(input.width+((input.width*(1-ReformatOverscanMASTER.scale))*0.5))} {ceil(input.height+((input.height*(1-ReformatOverscanMASTER.scale))*0.5))}}
name CropOverscanMASTER
xpos -884
ypos -244
addUserKnob {20 User}
}
set N6d6ceb00 [stack 0]
Output {
name Output1
xpos -884
ypos -144
}
push $N6d6ceb00
Viewer {
frame_range 994-1161
fps 25
viewerProcess "sRGB (ACES)"
name Viewer1
xpos -624
ypos -303
}
end_group
add_layer {zDepth zDepth.filtered zDepth.unfiltered zDepth.combo}
Group {
name depthCombo1
selected true
xpos 10463
ypos -8719
addUserKnob {20 User l depthCombo}
addUserKnob {41 math l "input math" T Expression14.math}
addUserKnob {41 from0 l "in depth filtered" T Copyf.from0}
addUserKnob {41 from0_1 l "in depth ufiltered" T Copy.from0}
addUserKnob {41 to0 l output T Copyf1.to0}
addUserKnob {26 txt l output: T "camera =0 (arnold, vray) i.e. real/distance from camera"}
}
Input {
inputs 0
name Input1
xpos 1288
ypos 197
}
set N6d6ccf00 [stack 0]
AddChannels {
channels zDepth
name AddChannels1
xpos 895
ypos 227
}
Dot {
name Dot65
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 929
ypos 315
}
set N6d707900 [stack 0]
Expression {
channel0 alpha
expr0 alpha==1
name Expression13
xpos 1023
ypos 403
}
push $N6d707900
push $N6d707900
Multiply {
channels rgb
value 0
name Multiply1
xpos 826
ypos 358
}
set N6d706b00 [stack 0]
Copy {
inputs 2
from0 zDepth.filtered
to0 rgba.red
name Copy
xpos 901
ypos 426
}
push $N6d707900
Dot {
name Dot1
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 757
ypos 315
}
push $N6d706b00
Copy {
inputs 2
from0 zDepth.unfiltered
to0 rgba.red
name Copyf
xpos 764
ypos 426
}
Keymix {
inputs 3
channels {rgba.red -rgba.green -rgba.blue none}
invertMask true
name Keymix8
xpos 895
ypos 545
}
Expression {
temp_name0 recip
temp_expr0 1/r
expr0 r>0?recip==inf?0:recip:0
channel1 {-rgba.red -rgba.green -rgba.blue none}
channel2 {-rgba.red -rgba.green -rgba.blue none}
name Expression14
xpos 895
ypos 620
disable {{math}}
addUserKnob {20 User}
addUserKnob {4 math l "input math" M {"infinity = 0 (nuke, renderMan)" "camera = 0 (arnold, vray)"}}
math "camera = 0 (arnold, vray)"
}
push $N6d6ccf00
Copy {
inputs 2
from0 rgba.red
to0 zDepth.combo
name Copyf1
xpos 1288
ypos 614
}
Output {
name Output1
xpos 1288
ypos 784
}
end_group
Dot {
name Dot315
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 10497
ypos -7936
}
set N6d876b00 [stack 0]
Dot {
name Dot316
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 10759
ypos -7936
}
Dot {
name Dot131
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 10760
ypos -7844
}
set N6d875d00 [stack 0]
Dot {
name Dot133
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 10760
ypos -7719
}
set N6d875600 [stack 0]
Dot {
name Dot175
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 10761
ypos -7483
}
set N3a110f00 [stack 0]
Dot {
name Dot317
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 10761
ypos -7367
}
set N6d874f00 [stack 0]
add_layer {pWorld pWorld.red pWorld.green pWorld.blue}
Group {
name aPMatte9
help "aPMatte v1.0 by Adrian Pueyo\n\nGenerate a matte of different shapes, based on a Position pass. Includes options to transform the mask and change its falloff. Also has the option to output or overlay a P-based 3D noise.\n\nadrianpueyo.com, 2017"
knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == \"shape\":\n    rampOn = k.value() in \['linear ramp', 'radial ramp'];\n    n\['radius'].setVisible(not rampOn)\n    n.knobs()\[\"black\"].setVisible(rampOn)\n    n.knobs()\[\"picker\"].setLabel( \"white\" if rampOn else \"center\" )\n\n\nif k.name() == \"noise\":\n    noiseOn = k.value() != 'off';\n    n\['noise_rel'].setVisible(noiseOn)\n    n\['noise_persistance'].setVisible(noiseOn)\n    n\['noise_octaves'].setVisible(noiseOn)\n    n\['noise_lacunarity'].setVisible(noiseOn)\n    n\['noise_size'].setVisible(noiseOn)\n    n\['noise_offset'].setVisible(noiseOn)\n    n\['noise_add'].setVisible(noiseOn)\n    n\['noise_gain'].setVisible(noiseOn)\n    n\['noise_gamma'].setVisible(noiseOn)\n    n\['noise_mix'].setVisible(noiseOn)\n\nif not n\[\"autolabel\"].value():\n    n\[\"autolabel\"].setValue(\"'%s\\\\n(%s)'%(nuke.thisNode()\['name'].value(),nuke.thisNode()\['out'].value()) if nuke.thisNode()\['out'].value()!='alpha' else nuke.thisNode()\['name'].value()\")"
autolabel "'%s\\n(%s)'%(nuke.thisNode()\['name'].value(),nuke.thisNode()\['out'].value()) if nuke.thisNode()\['out'].value()!='alpha' else nuke.thisNode()\['name'].value()"
selected true
xpos 10724
ypos -7185
addUserKnob {20 aPMatte}
addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T BlinkScriptPMatte.useGPUIfAvailable}
addUserKnob {41 vectorize l "Vectorize on CPU" -STARTLINE T BlinkScriptPMatte.vectorize}
addUserKnob {26 ""}
addUserKnob {41 p_channels l "P channels" T ShuffleIn.in}
addUserKnob {41 out l " output" -STARTLINE T ShuffleCopyOut.out}
addUserKnob {6 alpha_masking l "alpha masking" t "Multiply the output by the input's alpha." +STARTLINE}
alpha_masking true
addUserKnob {4 shape M {sphere "cusped box" "rounded box" "linear ramp" "radial ramp" ""}}
addUserKnob {6 invert -STARTLINE}
addUserKnob {41 picker l center T BlinkScriptPMatte.picker}
addUserKnob {7 radius R 0 100}
radius 1400
addUserKnob {41 black t "Black point of your ramp." +HIDDEN T BlinkScriptPMatte.black_point}
addUserKnob {26 ""}
addUserKnob {4 falloff t "Fallof type for the matte." M {linear smooth quadratic cubic "inv. cubic" "" ""}}
addUserKnob {7 hardness}
addUserKnob {26 ""}
addUserKnob {4 rotation_order l "rotation order" M {XYZ XZY YXZ YZX ZXY ZYX}}
rotation_order ZXY
addUserKnob {13 translate}
addUserKnob {13 rotate}
addUserKnob {13 scale}
scale {1 1 1}
addUserKnob {26 ""}
addUserKnob {4 noise t "overlay: uses the noise in overlay blend mode over the resulting mask, to make it more organic and less obvious for grading.\nnoise only: ignore the mask, output a 3D noise." M {off overlay "noise only"}}
addUserKnob {6 noise_rel l relative t "On: Pick world transformations and positioning of the shape.\nOff: Pick absolute world transformations.\n\nTip: Check when you want the mask to always be affected by the same noise, uncheck when you want to lock the noise to your scene." -STARTLINE +HIDDEN}
noise_rel true
addUserKnob {7 noise_size l size t "Size of the noise pattern." +HIDDEN R 0 100}
noise_size 10
addUserKnob {7 noise_offset l offset t "Spatial offset of the noise pattern (use to find a sweet spot for your matte)." +HIDDEN R 0 100}
addUserKnob {3 noise_octaves l octaves t "Number of noise iterations." +HIDDEN}
noise_octaves 8
addUserKnob {7 noise_lacunarity l lacunarity t "Each octave gets downscaled by this value." +HIDDEN R 0 10}
noise_lacunarity 1.8
addUserKnob {7 noise_persistance l persistance t "Each octave gets multiplied by this value." +HIDDEN}
noise_persistance 0.5
addUserKnob {7 noise_add l add t "Add a value to the noise." +HIDDEN}
noise_add 0.5
addUserKnob {7 noise_gain l gain t "Multiply the resulting noise by this value." +HIDDEN R 0 4}
noise_gain 1
addUserKnob {7 noise_gamma l gamma t "Gamma the resulting value." +HIDDEN R 0 4}
noise_gamma 1
addUserKnob {7 noise_mix l mix +HIDDEN}
noise_mix 1
addUserKnob {26 copyright l " " T "<br/><font color=#777><b>aPMatte v1.0</b> - adrianpueyo.com, 2017"}
addUserKnob {6 BlinkScriptPMatte_black_point_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
}
Input {
inputs 0
name Inputimg
xpos -528
ypos 483
}
set N6d874100 [stack 0]
Shuffle {
in pWorld
in2 rgba
alpha alpha2
name ShuffleIn
xpos -418
ypos 483
}
BlinkScript {
ProgramGroup 1
KernelDescription "2 \"aPMatteKernel\" iterate pixelWise eba2548d360b6b3d2b97555753832bdfb4c4224623cecc4870a6d5c5e54e4fdb 2 \"p\" Read Point \"dst\" Write Point 23 \"picked\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"pickedB\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"rotation order\" Int 1 BAAAAA== \"translate\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"rotate\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"scale\" Float 3 AACAPwAAgD8AAIA/AAAAAA== \"radius\" Float 1 AACAPw== \"shape\" Int 1 AAAAAA== \"invert_shape\" Int 1 AAAAAA== \"use_alpha\" Int 1 AAAAAA== \"falloff\" Int 1 AQAAAA== \"hardness\" Float 1 AAAAAA== \"use noise\" Int 1 AAAAAA== \"noise_relative\" Int 1 AAAAAA== \"noise octaves\" Int 1 CAAAAA== \"noise persistence\" Float 1 AAAAPw== \"lacunarity\" Float 1 AAAAQA== \"noise scale\" Float 1 CtcjPA== \"noise_offset\" Float 1 AAAAAA== \"noise_add\" Float 1 AAAAAA== \"noise_gain\" Float 1 AAAAAA== \"noise_gamma\" Float 1 AAAAAA== \"noise_mix\" Float 1 AAAAAA== 23 \"picked\" 3 1 \"pickedB\" 3 1 \"rotOrder\" 1 1 \"translate\" 3 1 \"rotate\" 3 1 \"scale\" 3 1 \"radius\" 1 1 \"shape\" 1 1 \"invert_shape\" 1 1 \"use_alpha\" 1 1 \"falloff\" 1 1 \"hardness\" 1 1 \"use_noise\" 1 1 \"noise_relative\" 1 1 \"noise_octaves\" 1 1 \"noise_persistence\" 1 1 \"noise_lacunarity\" 1 1 \"noise_scale\" 1 1 \"noise_offset\" 1 1 \"noise_add\" 1 1 \"noise_gain\" 1 1 \"noise_gamma\" 1 1 \"noise_mix\" 1 1 0"
kernelSource "// ----------------------------------------------------------------\n// aPMatte v1.0 by Adrian Pueyo\n//\n// Generate a matte of different shapes, based on a Position pass.\n// Includes options to transform the mask and change its falloff.\n// Also includes the option to output or overlay a P-based noise.\n//\n// adrianpueyo.com, 2017\n// ----------------------------------------------------------------\n\n\n// Noise algorithm adapted by Adrian Pueyo from Noise4D function by Mads Hagbarth Lund\n// Noise4D function Ported by Mads Hagbarth Lund 2014\n// Based on https://github.com/Draradech/csworldgen/blob/master/simplexnoise.cpp\n\n/* Copyright (c) 2007-2012 Eliot Eshelman\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n\nint fastfloor( const float x ) \{ return x > 0 ? (int) x : (int) x - 1; \}\ninline float raw_noise_4d( const float x, const float y, const float z, const float w ) \n\{\nint simplex\[64]\[4] = \{\n    \{0,1,2,3\},\{0,1,3,2\},\{0,0,0,0\},\{0,2,3,1\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{1,2,3,0\},\n    \{0,2,1,3\},\{0,0,0,0\},\{0,3,1,2\},\{0,3,2,1\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{1,3,2,0\},\n    \{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\n    \{1,2,0,3\},\{0,0,0,0\},\{1,3,0,2\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{2,3,0,1\},\{2,3,1,0\},\n    \{1,0,2,3\},\{1,0,3,2\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{2,0,3,1\},\{0,0,0,0\},\{2,1,3,0\},\n    \{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\n    \{2,0,1,3\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{3,0,1,2\},\{3,0,2,1\},\{0,0,0,0\},\{3,1,2,0\},\n    \{2,1,0,3\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{3,1,0,2\},\{0,0,0,0\},\{3,2,0,1\},\{3,2,1,0\}\n\};\n    int perm\[512] = \{\n        151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,\n        8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,\n        35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,\n        134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,\n        55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208, 89,\n        18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,\n        250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,\n        189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,\n        172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,\n        228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,\n        107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,\n        138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180,\n\n        151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,\n        8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,\n        35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,\n        134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,\n        55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208, 89,\n        18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,\n        250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,\n        189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,\n        172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,\n        228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,\n        107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,\n        138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180\n    \};\n  int grad4\[32]\[4]= \{\n    \{0,1,1,1\},  \{0,1,1,-1\},  \{0,1,-1,1\},  \{0,1,-1,-1\},\n    \{0,-1,1,1\}, \{0,-1,1,-1\}, \{0,-1,-1,1\}, \{0,-1,-1,-1\},\n    \{1,0,1,1\},  \{1,0,1,-1\},  \{1,0,-1,1\},  \{1,0,-1,-1\},\n    \{-1,0,1,1\}, \{-1,0,1,-1\}, \{-1,0,-1,1\}, \{-1,0,-1,-1\},\n    \{1,1,0,1\},  \{1,1,0,-1\},  \{1,-1,0,1\},  \{1,-1,0,-1\},\n    \{-1,1,0,1\}, \{-1,1,0,-1\}, \{-1,-1,0,1\}, \{-1,-1,0,-1\},\n    \{1,1,1,0\},  \{1,1,-1,0\},  \{1,-1,1,0\},  \{1,-1,-1,0\},\n    \{-1,1,1,0\}, \{-1,1,-1,0\}, \{-1,-1,1,0\}, \{-1,-1,-1,0\}\n  \};\n    float F4 = (sqrt(5.0f)-1.0)/4.0;\n    float G4 = (5.0-sqrt(5.0f))/20.0;\n    float n0, n1, n2, n3, n4;\n    float s = (x + y + z + w) * F4;\n    int i = fastfloor(x + s);\n    int j = fastfloor(y + s);\n    int k = fastfloor(z + s);\n    int l = fastfloor(w + s);\n    float t = (i + j + k + l) * G4;\n    float X0 = i - t;\n    float Y0 = j - t;\n    float Z0 = k - t;\n    float W0 = l - t;\n\n    float x0 = x - X0;\n    float y0 = y - Y0;\n    float z0 = z - Z0;\n    float w0 = w - W0;\n    int c1 = (x0 > y0) ? 32 : 0;\n    int c2 = (x0 > z0) ? 16 : 0;\n    int c3 = (y0 > z0) ? 8 : 0;\n    int c4 = (x0 > w0) ? 4 : 0;\n    int c5 = (y0 > w0) ? 2 : 0;\n    int c6 = (z0 > w0) ? 1 : 0;\n    int c = c1 + c2 + c3 + c4 + c5 + c6;\n\n    int i1, j1, k1, l1;\n    int i2, j2, k2, l2;\n    int i3, j3, k3, l3;\n    i1 = simplex\[c]\[0]>=3 ? 1 : 0;\n    j1 = simplex\[c]\[1]>=3 ? 1 : 0;\n    k1 = simplex\[c]\[2]>=3 ? 1 : 0;\n    l1 = simplex\[c]\[3]>=3 ? 1 : 0;\n    i2 = simplex\[c]\[0]>=2 ? 1 : 0;\n    j2 = simplex\[c]\[1]>=2 ? 1 : 0;\n    k2 = simplex\[c]\[2]>=2 ? 1 : 0;\n    l2 = simplex\[c]\[3]>=2 ? 1 : 0;\n    i3 = simplex\[c]\[0]>=1 ? 1 : 0;\n    j3 = simplex\[c]\[1]>=1 ? 1 : 0;\n    k3 = simplex\[c]\[2]>=1 ? 1 : 0;\n    l3 = simplex\[c]\[3]>=1 ? 1 : 0;\n    float x1 = x0 - i1 + G4;\n    float y1 = y0 - j1 + G4;\n    float z1 = z0 - k1 + G4;\n    float w1 = w0 - l1 + G4;\n    float x2 = x0 - i2 + 2.0*G4;\n    float y2 = y0 - j2 + 2.0*G4;\n    float z2 = z0 - k2 + 2.0*G4;\n    float w2 = w0 - l2 + 2.0*G4;\n    float x3 = x0 - i3 + 3.0*G4;\n    float y3 = y0 - j3 + 3.0*G4;\n    float z3 = z0 - k3 + 3.0*G4;\n    float w3 = w0 - l3 + 3.0*G4;\n    float x4 = x0 - 1.0 + 4.0*G4;\n    float y4 = y0 - 1.0 + 4.0*G4;\n    float z4 = z0 - 1.0 + 4.0*G4;\n    float w4 = w0 - 1.0 + 4.0*G4;\n    int ii = i & 255;\n    int jj = j & 255;\n    int kk = k & 255;\n    int ll = l & 255;\n    int gi0 = perm\[ii+perm\[jj+perm\[kk+perm\[ll]]]] % 32;\n    int gi1 = perm\[ii+i1+perm\[jj+j1+perm\[kk+k1+perm\[ll+l1]]]] % 32;\n    int gi2 = perm\[ii+i2+perm\[jj+j2+perm\[kk+k2+perm\[ll+l2]]]] % 32;\n    int gi3 = perm\[ii+i3+perm\[jj+j3+perm\[kk+k3+perm\[ll+l3]]]] % 32;\n    int gi4 = perm\[ii+1+perm\[jj+1+perm\[kk+1+perm\[ll+1]]]] % 32;\n    float t0 = 0.6 - x0*x0 - y0*y0 - z0*z0 - w0*w0;\n    if(t0<0) n0 = 0.0;\n    else \{\n        t0 *= t0;\n        n0 = t0 * t0 * dot(float4(grad4\[gi0]\[0],grad4\[gi0]\[2],grad4\[gi0]\[3],grad4\[gi0]\[3]), float4(x0, y0, z0, w0));\n    \}\n    float t1 = 0.6 - x1*x1 - y1*y1 - z1*z1 - w1*w1;\n    if(t1<0) n1 = 0.0;\n    else \{\n        t1 *= t1;\n        n1 = t1 * t1 * dot(float4(grad4\[gi1]\[0],grad4\[gi1]\[2],grad4\[gi1]\[3],grad4\[gi1]\[3]), float4(x1, y1, z1, w1));\n    \}\n    float t2 = 0.6 - x2*x2 - y2*y2 - z2*z2 - w2*w2;\n    if(t2<0) n2 = 0.0;\n    else \{\n        t2 *= t2;\n        n2 = t2 * t2 * dot(float4(grad4\[gi2]\[0],grad4\[gi2]\[2],grad4\[gi2]\[3],grad4\[gi2]\[3]), float4(x2, y2, z2, w2));\n    \}\n    float t3 = 0.6 - x3*x3 - y3*y3 - z3*z3 - w3*w3;\n    if(t3<0) n3 = 0.0;\n    else \{\n        t3 *= t3;\n        n3 = t3 * t3 * dot(float4(grad4\[gi3]\[0],grad4\[gi3]\[2],grad4\[gi3]\[3],grad4\[gi3]\[3]), float4(x3, y3, z3, w3));\n    \}\n    float t4 = 0.6 - x4*x4 - y4*y4 - z4*z4 - w4*w4;\n    if(t4<0) n4 = 0.0;\n    else \{\n        t4 *= t4;\n        n4 = t4 * t4 * dot(float4(grad4\[gi4]\[0],grad4\[gi4]\[2],grad4\[gi4]\[3],grad4\[gi4]\[3]), float4(x4, y4, z4, w4));\n    \}\n    return 27.0 * (n0 + n1 + n2 + n3 + n4);\n\}\ninline float octave_noise_4d( const float octaves, const float persistence, const float scale, const float x, const float y, const float z, const float w, const float lacunarity=2 ) \n\{\n    float total = 0;\n    float frequency = scale;\n    float amplitude = 1;\n    float maxAmplitude = 0;\n    for( int i=0; i < octaves; i++ ) \{\n        total += (float)raw_noise_4d( x * frequency, y * frequency, z * frequency, w * frequency ) * amplitude;\n\n        frequency *= lacunarity;\n        maxAmplitude += amplitude;\n        amplitude *= persistence;\n    \}\n    return float(total / maxAmplitude);\n\}\n\nkernel aPMatteKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> p;\n  Image<eWrite> dst;\n\n  param:\n    float3 picked; //Center, or white for ramps\n    float3 pickedB; //Black for ramps\n    int rotOrder; //0=XYZ,1=XZY,2=YXZ,3=YZX,4=ZXY,5=ZYX\n    float3 translate;\n    float3 rotate;\n    float3 scale;\n    float radius;\n    int shape; //0=sphere,1=cusped box,2=rounded box,3=ramp, 4=rad.ramp\n    int invert_shape;\n    int use_alpha;\n    int falloff; //0=linear,1=smooth,2=square,3=inv.square\n    float hardness;\n\n    // Noise parameters here\n    int use_noise; //0=off,1=overlay,2=noise only\n    int noise_relative;\n    int noise_octaves;\n    float noise_persistence;\n    float noise_lacunarity;\n    float noise_scale;\n    float noise_offset;\n    float noise_add;\n    float noise_gain;\n    float noise_gamma;\n    float noise_mix;\n\n  void define() \{\n    defineParam(rotOrder, \"rotation order\", 4);\n    defineParam(scale, \"scale\", float3(1.0f,1.0f,1.0f));\n    defineParam(radius, \"radius\", 1.0f);\n    defineParam(falloff, \"falloff\", 1);\n    defineParam(use_noise, \"use noise\", 0);\n    defineParam(noise_octaves, \"noise octaves\", 8);\n    defineParam(noise_persistence, \"noise persistence\",  0.5f);\n    defineParam(noise_lacunarity, \"lacunarity\",  2.0f);\n    defineParam(noise_scale, \"noise scale\", 0.01f);\n  \}\n\n  inline float rad(float deg)\{ \n    return deg*PI/180;\n  \}\n\n  inline float smoothstep(float edge0, float edge1, float x)\{\n    x = clamp((x - edge0)/(edge1 - edge0), 0.0f, 1.0f);\n    return x*x*x*(x*(x*6-15)+10);\n  \}\n\n  inline float cl(float val)\{\n  return clamp(val,0.0f,1.0f); \n  \}\n\n  float3 rotX(float3 vec, float rot)\{\n    if(rot==0.0f)\{\n      return vec;\n    \} else \{\n      float3 vecOut;\n      vecOut.y = vec.y*cos(rad(rot)) - vec.z*sin(rad(rot));\n      vecOut.z = vec.y*sin(rad(rot)) + vec.z*cos(rad(rot));\n      vecOut.x = vec.x;\n      return float3(vecOut.x,vecOut.y,vecOut.z);\n    \}\n  \}\n\n  float3 rotY(float3 vec, float rot)\{\n    if(rot==0.0f)\{\n      return vec;\n    \} else \{\n      float3 vecOut;\n      vecOut.z = vec.z*cos(rad(rot)) - vec.x*sin(rad(rot));\n      vecOut.x = vec.z*sin(rad(rot)) + vec.x*cos(rad(rot));\n      vecOut.y = vec.y;\n      return float3(vecOut.x,vecOut.y,vecOut.z);\n    \}\n  \}\n\n  float3 rotZ(float3 vec, float rot)\{\n    if(rot==0.0f)\{\n      return vec;\n    \} else \{\n      float3 vecOut;\n      vecOut.x = vec.x*cos(rad(rot)) - vec.y*sin(rad(rot));\n      vecOut.y = vec.x*sin(rad(rot)) + vec.y*cos(rad(rot));\n      vecOut.z = vec.z;\n      return float3(vecOut.x,vecOut.y,vecOut.z);\n    \}\n  \}\n\n  void process() \{\n    //1. P WORLD\n    // Center the coordinates\n    float3 color = float3(p(0)-picked.x,p(1)-picked.y,p(2)-picked.z);\n    int black = 0;\n\n    // Translate\n    color -= translate;\n\n    // Rotate\n    if (rotOrder<=0) color = rotZ(rotY(rotX(color,rotate.x),rotate.y),rotate.z);\n    else if (rotOrder==1) color = rotY(rotZ(rotX(color,rotate.x),rotate.z),rotate.y);\n    else if (rotOrder==2) color = rotZ(rotX(rotY(color,rotate.y),rotate.x),rotate.z);\n    else if (rotOrder==3) color = rotX(rotZ(rotY(color,rotate.y),rotate.z),rotate.x);\n    else if (rotOrder==4) color = rotY(rotX(rotZ(color,rotate.z),rotate.x),rotate.y);\n    else if (rotOrder>=5) color = rotX(rotY(rotZ(color,rotate.z),rotate.y),rotate.x);\n\n    // Scale\n    if (scale.x!=0 && scale.y!=0 && scale.z!=0) \{\n      color *= float3(1/scale.x, 1/scale.y, 1/scale.z);\n    \} else \{\n      dst() = 0.0f;\n      return;\n    \}\n\n    //2. SHAPES\n    float dist;\n    float result;\n\n    if(shape==0)\{//Sphere\n      dist = sqrt(pow(color\[0],2) + pow(color\[1],2) + pow(color\[2],2));\n      result = radius==0.0f? 0:cl(1-dist/radius);\n    \} else if(shape==1)\{//Cusped Box\n      result = min( min( cl((radius-fabs(color.x))/radius) , cl((radius-fabs(color.y))/radius)) , cl((radius-fabs(color.z))/radius)) ;\n      result = hardness>=1? float(result>0) : result;\n    \} else if(shape==2)\{//Rounded Box\n      result = radius==0.0f? 0: smoothstep(0,1-hardness, cl(1-fabs(float(color.x)/radius)) ) * smoothstep(0,1-hardness, cl(1-fabs(float(color.y)/radius)) ) * smoothstep(0,1-hardness, cl(1-fabs(float(color.z)/radius)) );\n      result = hardness>=1? float(result>0) : result;\n    \} else if(shape==3)\{//Linear Ramp\n      dist = sqrt(pow(color\[0],2) + pow(color\[1],2) + pow(color\[2],2));\n      float distB = sqrt(pow(color\[0]-(pickedB.x-picked.x),2) + pow(color\[1]-(pickedB.y-picked.y),2) + pow(color\[2]-(pickedB.z-picked.z),2));\n      float distWB = sqrt(pow(pickedB.x-picked.x,2) + pow(pickedB.y-picked.y,2) + pow(pickedB.z-picked.z,2));\n      float angWB = acos( clamp((pow(dist,2)-pow(distB,2)+pow(distWB,2))/(2*dist*distWB),-1.0f,1.0f) );\n      float cosAngWB = dist==0.0f? 0:cos(angWB);\n      result = distWB==0? 0.0f: cl((dist * cosAngWB) / distWB );\n      result = 1-result;\n    \} else if(shape==4)\{//Radial Ramp\n      dist = sqrt(pow(color\[0],2) + pow(color\[1],2) + pow(color\[2],2));\n      float distB = sqrt(pow(color\[0]-(pickedB.x-picked.x),2) + pow(color\[1]-(pickedB.y-picked.y),2) + pow(color\[2]-(pickedB.z-picked.z),2));\n      float distWB = sqrt(pow(pickedB.x-picked.x,2) + pow(pickedB.y-picked.y,2) + pow(pickedB.z-picked.z,2));\n      result = distWB==0? 0.0f: cl((dist) / distWB );\n      result = 1-result;\n    \}\n    result = invert_shape? 1-result:result;\n\n    //3. FALLOFF\n    if(falloff==0)\{//Linear\n      result = hardness>=1? float(result>0) : cl(result/(1-hardness));\n    \}else if(falloff==1)\{//Smooth\n      result = hardness>=1? float(result>0) : smoothstep(0,1-hardness,result);\n    \}else if(falloff==2)\{//Quadratic\n      result = hardness>=1? float(result>0) : cl(pow(float(result/(1-hardness)),2));\n    \}else if(falloff==3)\{//Cubic\n      result = hardness>=1? float(result>0) : cl(pow(float(result/(1-hardness)),3));\n    \}else if(falloff==4)\{//Inv. Cubic\n      result = hardness>=1? float(result>0) : 1-cl(pow(float(cl(1-(result/(1-hardness)))),3));\n    \}\n\n    //4. GENERATE NOISE\n    float noise;\n    if(use_noise!=0)\{//Avoid calculations if possible\n      if(noise_relative!=1)\{\n        noise = (float)octave_noise_4d(float(noise_octaves),noise_persistence,noise_scale==0?10000.0f:1/noise_scale,p(0),p(1),p(2),noise_offset,noise_lacunarity);\n      \}else\{\n        noise = (float)octave_noise_4d(float(noise_octaves),noise_persistence,noise_scale==0?10000.0f:1/noise_scale,color\[0],color\[1],color\[2],noise_offset,noise_lacunarity);\n      \}\n      noise = cl(pow(max((noise+noise_add)*noise_gain,0.0f),noise_gamma==0?1:1/noise_gamma));\n    \}\n\n\n    //5. ALPHA MASK AND APPLY NOISE\n    result = max(result,0.0f); //Clamp negative values\n    if(use_noise==1)\{//Overlay\n      result = result<0.5f? noise_mix*(2*noise*result)+(1-noise_mix)*result : noise_mix*(1-2*(1-result)*(1-noise))+(1-noise_mix)*result;\n    \}else if(use_noise>=2)\{\n      result = noise*noise_mix;\n    \}\n\n    if(use_alpha > 0) result=result*p(3);\n\n    //6. WE'RE DONE\n    dst() = result;\n  \}\n\};"
rebuild ""
aPMatteKernel_picked {{picker.r} {picker.g} {picker.b}}
aPMatteKernel_pickedB {{black_point} {black_point} {black_point}}
"aPMatteKernel_rotation order" {{parent.rotation_order}}
aPMatteKernel_translate {{parent.translate} {parent.translate} {parent.translate}}
aPMatteKernel_rotate {{parent.rotate} {parent.rotate} {parent.rotate}}
aPMatteKernel_scale {{parent.scale} {parent.scale} {parent.scale}}
aPMatteKernel_radius {{parent.radius}}
aPMatteKernel_shape {{parent.shape}}
aPMatteKernel_invert_shape {{parent.invert}}
aPMatteKernel_use_alpha {{parent.alpha_masking}}
aPMatteKernel_falloff {{parent.falloff}}
aPMatteKernel_hardness {{parent.hardness}}
"aPMatteKernel_use noise" {{parent.noise}}
aPMatteKernel_noise_relative {{parent.noise_rel}}
"aPMatteKernel_noise octaves" {{parent.noise_octaves}}
"aPMatteKernel_noise persistence" {{parent.noise_persistance}}
aPMatteKernel_lacunarity {{parent.noise_lacunarity}}
"aPMatteKernel_noise scale" {{parent.noise_size}}
aPMatteKernel_noise_offset {{parent.noise_offset}}
aPMatteKernel_noise_add {{parent.noise_add}}
aPMatteKernel_noise_gain {{parent.noise_gain}}
aPMatteKernel_noise_gamma {{parent.noise_gamma}}
aPMatteKernel_noise_mix {{parent.noise_mix}}
rebuild_finalise ""
name BlinkScriptPMatte
xpos -418
ypos 523
addUserKnob {20 User}
addUserKnob {6 black_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 picker}
picker {-5.255044937 25.629963 44.18531418}
addUserKnob {6 picker_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 picker_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 black_point l black}
black_point {0 0 0}
addUserKnob {6 black_point_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 black_point_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
push $N6d874100
ShuffleCopy {
inputs 2
red red
green green
blue blue
out alpha
name ShuffleCopyOut
xpos -528
ypos 527
}
Output {
name Output
xpos -528
ypos 566
}
end_group
Group {
name key_chew9
help "======== KeyChew beta ========\n=============================\n\nThis is a port of the KeyChew macro for Shake to Nuke.\n\nThere might be tiny differences on the results given in both apps. Some of them are caused by the internal algorithms of each app, and others by the way I faked the JSplineV\nexpression of Shake in Nuke. If you know a better way to solve this, let\nme know!!\n\n=============================\n             2009 Cuco Bures\n============================="
selected true
xpos 10724
ypos -7159
addUserKnob {20 Controls}
addUserKnob {7 chew t "\t\t" R -200 200}
chew 11
addUserKnob {7 soften R 0 200}
soften 91.5
addUserKnob {6 matteMult +STARTLINE}
}
Input {
inputs 0
name Input
xpos -40
ypos -9
}
set N6d888100 [stack 0]
Dot {
name Dot1
xpos 324
ypos -6
}
set N6d93b900 [stack 0]
push $N6d93b900
Invert {
name Invert1
xpos 176
ypos 33
}
push $N6d93b900
Switch {
inputs 2
which {{"\[value chew]>=0?0:1"}}
name Switch1
xpos 180
ypos 87
}
Blur {
size {{"(floor(abs(\[value chew]))/4)+(floor(abs(\[value chew]))/8)"}}
name FgEdgeBlur
xpos 180
ypos 129
}
Grade {
channels alpha
multiply {1 1 1 {max(FgEdgeBlur.size*1.5,1)}}
black_clamp false
name FgEdgeMult
xpos 180
ypos 177
}
Grade {
channels alpha
gamma {1 1 1 {JSplineVFake(floor(abs(chew)))}}
name FgEdgeGamma1
xpos 180
ypos 225
addUserKnob {20 User}
addUserKnob {7 JSplineVFake}
JSplineVFake {{curve l 0.9958 k x5 0.95 0.8 x20 0.5 x40 0.3 x80 0.2 l x200 0.1}}
}
set N6d752400 [stack 0]
Merge2 {
inputs 2
operation minus
name Merge1
xpos 290
ypos 231
}
push $N6d752400
Switch {
inputs 2
which {{"\[value chew]>=0?0:1"}}
name Switch2
xpos 180
ypos 279
}
Clamp {
name Clamp2
xpos 180
ypos 321
}
Blur {
size {{"(floor(abs(\[value soften]))/4)+(floor(abs(\[value soften]))/8)"}}
name BlurResult
xpos 180
ypos 441
}
push $N6d888100
ShuffleCopy {
inputs 2
name ShuffleCopy1
xpos -40
ypos 447
}
Premult {
name Premult1
xpos -40
ypos 495
disable {{"1-\[value matteMult]"}}
}
Output {
name Output1
xpos -40
ypos 567
}
end_group
Dot {
name Dot141
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 10662
ypos -7155
}
push $N6d874f00
push $N3a110f00
push $N6d875600
Group {
name aPMatte8
help "aPMatte v1.0 by Adrian Pueyo\n\nGenerate a matte of different shapes, based on a Position pass. Includes options to transform the mask and change its falloff. Also has the option to output or overlay a P-based 3D noise.\n\nadrianpueyo.com, 2017"
knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == \"shape\":\n    rampOn = k.value() in \['linear ramp', 'radial ramp'];\n    n\['radius'].setVisible(not rampOn)\n    n.knobs()\[\"black\"].setVisible(rampOn)\n    n.knobs()\[\"picker\"].setLabel( \"white\" if rampOn else \"center\" )\n\n\nif k.name() == \"noise\":\n    noiseOn = k.value() != 'off';\n    n\['noise_rel'].setVisible(noiseOn)\n    n\['noise_persistance'].setVisible(noiseOn)\n    n\['noise_octaves'].setVisible(noiseOn)\n    n\['noise_lacunarity'].setVisible(noiseOn)\n    n\['noise_size'].setVisible(noiseOn)\n    n\['noise_offset'].setVisible(noiseOn)\n    n\['noise_add'].setVisible(noiseOn)\n    n\['noise_gain'].setVisible(noiseOn)\n    n\['noise_gamma'].setVisible(noiseOn)\n    n\['noise_mix'].setVisible(noiseOn)\n\nif not n\[\"autolabel\"].value():\n    n\[\"autolabel\"].setValue(\"'%s\\\\n(%s)'%(nuke.thisNode()\['name'].value(),nuke.thisNode()\['out'].value()) if nuke.thisNode()\['out'].value()!='alpha' else nuke.thisNode()\['name'].value()\")"
autolabel "'%s\\n(%s)'%(nuke.thisNode()\['name'].value(),nuke.thisNode()\['out'].value()) if nuke.thisNode()\['out'].value()!='alpha' else nuke.thisNode()\['name'].value()"
selected true
xpos 10626
ypos -7723
addUserKnob {20 aPMatte}
addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T BlinkScriptPMatte.useGPUIfAvailable}
addUserKnob {41 vectorize l "Vectorize on CPU" -STARTLINE T BlinkScriptPMatte.vectorize}
addUserKnob {26 ""}
addUserKnob {41 p_channels l "P channels" T ShuffleIn.in}
addUserKnob {41 out l " output" -STARTLINE T ShuffleCopyOut.out}
addUserKnob {6 alpha_masking l "alpha masking" t "Multiply the output by the input's alpha." +STARTLINE}
addUserKnob {4 shape M {sphere "cusped box" "rounded box" "linear ramp" "radial ramp" ""}}
addUserKnob {6 invert -STARTLINE}
addUserKnob {41 picker l center T BlinkScriptPMatte.picker}
addUserKnob {7 radius R 0 100}
radius 1800
addUserKnob {41 black t "Black point of your ramp." +HIDDEN T BlinkScriptPMatte.black_point}
addUserKnob {26 ""}
addUserKnob {4 falloff t "Fallof type for the matte." M {linear smooth quadratic cubic "inv. cubic" "" ""}}
falloff cubic
addUserKnob {7 hardness}
addUserKnob {26 ""}
addUserKnob {4 rotation_order l "rotation order" M {XYZ XZY YXZ YZX ZXY ZYX}}
rotation_order ZXY
addUserKnob {13 translate}
addUserKnob {13 rotate}
addUserKnob {13 scale}
scale {1 1 1}
addUserKnob {26 ""}
addUserKnob {4 noise t "overlay: uses the noise in overlay blend mode over the resulting mask, to make it more organic and less obvious for grading.\nnoise only: ignore the mask, output a 3D noise." M {off overlay "noise only"}}
addUserKnob {6 noise_rel l relative t "On: Pick world transformations and positioning of the shape.\nOff: Pick absolute world transformations.\n\nTip: Check when you want the mask to always be affected by the same noise, uncheck when you want to lock the noise to your scene." -STARTLINE +HIDDEN}
noise_rel true
addUserKnob {7 noise_size l size t "Size of the noise pattern." +HIDDEN R 0 100}
noise_size 10
addUserKnob {7 noise_offset l offset t "Spatial offset of the noise pattern (use to find a sweet spot for your matte)." +HIDDEN R 0 100}
addUserKnob {3 noise_octaves l octaves t "Number of noise iterations." +HIDDEN}
noise_octaves 8
addUserKnob {7 noise_lacunarity l lacunarity t "Each octave gets downscaled by this value." +HIDDEN R 0 10}
noise_lacunarity 1.8
addUserKnob {7 noise_persistance l persistance t "Each octave gets multiplied by this value." +HIDDEN}
noise_persistance 0.5
addUserKnob {7 noise_add l add t "Add a value to the noise." +HIDDEN}
noise_add 0.5
addUserKnob {7 noise_gain l gain t "Multiply the resulting noise by this value." +HIDDEN R 0 4}
noise_gain 1
addUserKnob {7 noise_gamma l gamma t "Gamma the resulting value." +HIDDEN R 0 4}
noise_gamma 1
addUserKnob {7 noise_mix l mix +HIDDEN}
noise_mix 1
addUserKnob {26 copyright l " " T "<br/><font color=#777><b>aPMatte v1.0</b> - adrianpueyo.com, 2017"}
addUserKnob {6 BlinkScriptPMatte_black_point_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
}
Input {
inputs 0
name Inputimg
xpos -528
ypos 483
}
set N6d610f00 [stack 0]
Shuffle {
in pWorld
in2 rgba
alpha alpha2
name ShuffleIn
xpos -418
ypos 483
}
BlinkScript {
ProgramGroup 1
KernelDescription "2 \"aPMatteKernel\" iterate pixelWise eba2548d360b6b3d2b97555753832bdfb4c4224623cecc4870a6d5c5e54e4fdb 2 \"p\" Read Point \"dst\" Write Point 23 \"picked\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"pickedB\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"rotation order\" Int 1 BAAAAA== \"translate\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"rotate\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"scale\" Float 3 AACAPwAAgD8AAIA/AAAAAA== \"radius\" Float 1 AACAPw== \"shape\" Int 1 AAAAAA== \"invert_shape\" Int 1 AAAAAA== \"use_alpha\" Int 1 AAAAAA== \"falloff\" Int 1 AQAAAA== \"hardness\" Float 1 AAAAAA== \"use noise\" Int 1 AAAAAA== \"noise_relative\" Int 1 AAAAAA== \"noise octaves\" Int 1 CAAAAA== \"noise persistence\" Float 1 AAAAPw== \"lacunarity\" Float 1 AAAAQA== \"noise scale\" Float 1 CtcjPA== \"noise_offset\" Float 1 AAAAAA== \"noise_add\" Float 1 AAAAAA== \"noise_gain\" Float 1 AAAAAA== \"noise_gamma\" Float 1 AAAAAA== \"noise_mix\" Float 1 AAAAAA== 23 \"picked\" 3 1 \"pickedB\" 3 1 \"rotOrder\" 1 1 \"translate\" 3 1 \"rotate\" 3 1 \"scale\" 3 1 \"radius\" 1 1 \"shape\" 1 1 \"invert_shape\" 1 1 \"use_alpha\" 1 1 \"falloff\" 1 1 \"hardness\" 1 1 \"use_noise\" 1 1 \"noise_relative\" 1 1 \"noise_octaves\" 1 1 \"noise_persistence\" 1 1 \"noise_lacunarity\" 1 1 \"noise_scale\" 1 1 \"noise_offset\" 1 1 \"noise_add\" 1 1 \"noise_gain\" 1 1 \"noise_gamma\" 1 1 \"noise_mix\" 1 1 0"
kernelSource "// ----------------------------------------------------------------\n// aPMatte v1.0 by Adrian Pueyo\n//\n// Generate a matte of different shapes, based on a Position pass.\n// Includes options to transform the mask and change its falloff.\n// Also includes the option to output or overlay a P-based noise.\n//\n// adrianpueyo.com, 2017\n// ----------------------------------------------------------------\n\n\n// Noise algorithm adapted by Adrian Pueyo from Noise4D function by Mads Hagbarth Lund\n// Noise4D function Ported by Mads Hagbarth Lund 2014\n// Based on https://github.com/Draradech/csworldgen/blob/master/simplexnoise.cpp\n\n/* Copyright (c) 2007-2012 Eliot Eshelman\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n\nint fastfloor( const float x ) \{ return x > 0 ? (int) x : (int) x - 1; \}\ninline float raw_noise_4d( const float x, const float y, const float z, const float w ) \n\{\nint simplex\[64]\[4] = \{\n    \{0,1,2,3\},\{0,1,3,2\},\{0,0,0,0\},\{0,2,3,1\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{1,2,3,0\},\n    \{0,2,1,3\},\{0,0,0,0\},\{0,3,1,2\},\{0,3,2,1\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{1,3,2,0\},\n    \{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\n    \{1,2,0,3\},\{0,0,0,0\},\{1,3,0,2\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{2,3,0,1\},\{2,3,1,0\},\n    \{1,0,2,3\},\{1,0,3,2\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{2,0,3,1\},\{0,0,0,0\},\{2,1,3,0\},\n    \{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\n    \{2,0,1,3\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{3,0,1,2\},\{3,0,2,1\},\{0,0,0,0\},\{3,1,2,0\},\n    \{2,1,0,3\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{3,1,0,2\},\{0,0,0,0\},\{3,2,0,1\},\{3,2,1,0\}\n\};\n    int perm\[512] = \{\n        151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,\n        8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,\n        35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,\n        134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,\n        55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208, 89,\n        18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,\n        250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,\n        189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,\n        172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,\n        228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,\n        107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,\n        138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180,\n\n        151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,\n        8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,\n        35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,\n        134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,\n        55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208, 89,\n        18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,\n        250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,\n        189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,\n        172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,\n        228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,\n        107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,\n        138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180\n    \};\n  int grad4\[32]\[4]= \{\n    \{0,1,1,1\},  \{0,1,1,-1\},  \{0,1,-1,1\},  \{0,1,-1,-1\},\n    \{0,-1,1,1\}, \{0,-1,1,-1\}, \{0,-1,-1,1\}, \{0,-1,-1,-1\},\n    \{1,0,1,1\},  \{1,0,1,-1\},  \{1,0,-1,1\},  \{1,0,-1,-1\},\n    \{-1,0,1,1\}, \{-1,0,1,-1\}, \{-1,0,-1,1\}, \{-1,0,-1,-1\},\n    \{1,1,0,1\},  \{1,1,0,-1\},  \{1,-1,0,1\},  \{1,-1,0,-1\},\n    \{-1,1,0,1\}, \{-1,1,0,-1\}, \{-1,-1,0,1\}, \{-1,-1,0,-1\},\n    \{1,1,1,0\},  \{1,1,-1,0\},  \{1,-1,1,0\},  \{1,-1,-1,0\},\n    \{-1,1,1,0\}, \{-1,1,-1,0\}, \{-1,-1,1,0\}, \{-1,-1,-1,0\}\n  \};\n    float F4 = (sqrt(5.0f)-1.0)/4.0;\n    float G4 = (5.0-sqrt(5.0f))/20.0;\n    float n0, n1, n2, n3, n4;\n    float s = (x + y + z + w) * F4;\n    int i = fastfloor(x + s);\n    int j = fastfloor(y + s);\n    int k = fastfloor(z + s);\n    int l = fastfloor(w + s);\n    float t = (i + j + k + l) * G4;\n    float X0 = i - t;\n    float Y0 = j - t;\n    float Z0 = k - t;\n    float W0 = l - t;\n\n    float x0 = x - X0;\n    float y0 = y - Y0;\n    float z0 = z - Z0;\n    float w0 = w - W0;\n    int c1 = (x0 > y0) ? 32 : 0;\n    int c2 = (x0 > z0) ? 16 : 0;\n    int c3 = (y0 > z0) ? 8 : 0;\n    int c4 = (x0 > w0) ? 4 : 0;\n    int c5 = (y0 > w0) ? 2 : 0;\n    int c6 = (z0 > w0) ? 1 : 0;\n    int c = c1 + c2 + c3 + c4 + c5 + c6;\n\n    int i1, j1, k1, l1;\n    int i2, j2, k2, l2;\n    int i3, j3, k3, l3;\n    i1 = simplex\[c]\[0]>=3 ? 1 : 0;\n    j1 = simplex\[c]\[1]>=3 ? 1 : 0;\n    k1 = simplex\[c]\[2]>=3 ? 1 : 0;\n    l1 = simplex\[c]\[3]>=3 ? 1 : 0;\n    i2 = simplex\[c]\[0]>=2 ? 1 : 0;\n    j2 = simplex\[c]\[1]>=2 ? 1 : 0;\n    k2 = simplex\[c]\[2]>=2 ? 1 : 0;\n    l2 = simplex\[c]\[3]>=2 ? 1 : 0;\n    i3 = simplex\[c]\[0]>=1 ? 1 : 0;\n    j3 = simplex\[c]\[1]>=1 ? 1 : 0;\n    k3 = simplex\[c]\[2]>=1 ? 1 : 0;\n    l3 = simplex\[c]\[3]>=1 ? 1 : 0;\n    float x1 = x0 - i1 + G4;\n    float y1 = y0 - j1 + G4;\n    float z1 = z0 - k1 + G4;\n    float w1 = w0 - l1 + G4;\n    float x2 = x0 - i2 + 2.0*G4;\n    float y2 = y0 - j2 + 2.0*G4;\n    float z2 = z0 - k2 + 2.0*G4;\n    float w2 = w0 - l2 + 2.0*G4;\n    float x3 = x0 - i3 + 3.0*G4;\n    float y3 = y0 - j3 + 3.0*G4;\n    float z3 = z0 - k3 + 3.0*G4;\n    float w3 = w0 - l3 + 3.0*G4;\n    float x4 = x0 - 1.0 + 4.0*G4;\n    float y4 = y0 - 1.0 + 4.0*G4;\n    float z4 = z0 - 1.0 + 4.0*G4;\n    float w4 = w0 - 1.0 + 4.0*G4;\n    int ii = i & 255;\n    int jj = j & 255;\n    int kk = k & 255;\n    int ll = l & 255;\n    int gi0 = perm\[ii+perm\[jj+perm\[kk+perm\[ll]]]] % 32;\n    int gi1 = perm\[ii+i1+perm\[jj+j1+perm\[kk+k1+perm\[ll+l1]]]] % 32;\n    int gi2 = perm\[ii+i2+perm\[jj+j2+perm\[kk+k2+perm\[ll+l2]]]] % 32;\n    int gi3 = perm\[ii+i3+perm\[jj+j3+perm\[kk+k3+perm\[ll+l3]]]] % 32;\n    int gi4 = perm\[ii+1+perm\[jj+1+perm\[kk+1+perm\[ll+1]]]] % 32;\n    float t0 = 0.6 - x0*x0 - y0*y0 - z0*z0 - w0*w0;\n    if(t0<0) n0 = 0.0;\n    else \{\n        t0 *= t0;\n        n0 = t0 * t0 * dot(float4(grad4\[gi0]\[0],grad4\[gi0]\[2],grad4\[gi0]\[3],grad4\[gi0]\[3]), float4(x0, y0, z0, w0));\n    \}\n    float t1 = 0.6 - x1*x1 - y1*y1 - z1*z1 - w1*w1;\n    if(t1<0) n1 = 0.0;\n    else \{\n        t1 *= t1;\n        n1 = t1 * t1 * dot(float4(grad4\[gi1]\[0],grad4\[gi1]\[2],grad4\[gi1]\[3],grad4\[gi1]\[3]), float4(x1, y1, z1, w1));\n    \}\n    float t2 = 0.6 - x2*x2 - y2*y2 - z2*z2 - w2*w2;\n    if(t2<0) n2 = 0.0;\n    else \{\n        t2 *= t2;\n        n2 = t2 * t2 * dot(float4(grad4\[gi2]\[0],grad4\[gi2]\[2],grad4\[gi2]\[3],grad4\[gi2]\[3]), float4(x2, y2, z2, w2));\n    \}\n    float t3 = 0.6 - x3*x3 - y3*y3 - z3*z3 - w3*w3;\n    if(t3<0) n3 = 0.0;\n    else \{\n        t3 *= t3;\n        n3 = t3 * t3 * dot(float4(grad4\[gi3]\[0],grad4\[gi3]\[2],grad4\[gi3]\[3],grad4\[gi3]\[3]), float4(x3, y3, z3, w3));\n    \}\n    float t4 = 0.6 - x4*x4 - y4*y4 - z4*z4 - w4*w4;\n    if(t4<0) n4 = 0.0;\n    else \{\n        t4 *= t4;\n        n4 = t4 * t4 * dot(float4(grad4\[gi4]\[0],grad4\[gi4]\[2],grad4\[gi4]\[3],grad4\[gi4]\[3]), float4(x4, y4, z4, w4));\n    \}\n    return 27.0 * (n0 + n1 + n2 + n3 + n4);\n\}\ninline float octave_noise_4d( const float octaves, const float persistence, const float scale, const float x, const float y, const float z, const float w, const float lacunarity=2 ) \n\{\n    float total = 0;\n    float frequency = scale;\n    float amplitude = 1;\n    float maxAmplitude = 0;\n    for( int i=0; i < octaves; i++ ) \{\n        total += (float)raw_noise_4d( x * frequency, y * frequency, z * frequency, w * frequency ) * amplitude;\n\n        frequency *= lacunarity;\n        maxAmplitude += amplitude;\n        amplitude *= persistence;\n    \}\n    return float(total / maxAmplitude);\n\}\n\nkernel aPMatteKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> p;\n  Image<eWrite> dst;\n\n  param:\n    float3 picked; //Center, or white for ramps\n    float3 pickedB; //Black for ramps\n    int rotOrder; //0=XYZ,1=XZY,2=YXZ,3=YZX,4=ZXY,5=ZYX\n    float3 translate;\n    float3 rotate;\n    float3 scale;\n    float radius;\n    int shape; //0=sphere,1=cusped box,2=rounded box,3=ramp, 4=rad.ramp\n    int invert_shape;\n    int use_alpha;\n    int falloff; //0=linear,1=smooth,2=square,3=inv.square\n    float hardness;\n\n    // Noise parameters here\n    int use_noise; //0=off,1=overlay,2=noise only\n    int noise_relative;\n    int noise_octaves;\n    float noise_persistence;\n    float noise_lacunarity;\n    float noise_scale;\n    float noise_offset;\n    float noise_add;\n    float noise_gain;\n    float noise_gamma;\n    float noise_mix;\n\n  void define() \{\n    defineParam(rotOrder, \"rotation order\", 4);\n    defineParam(scale, \"scale\", float3(1.0f,1.0f,1.0f));\n    defineParam(radius, \"radius\", 1.0f);\n    defineParam(falloff, \"falloff\", 1);\n    defineParam(use_noise, \"use noise\", 0);\n    defineParam(noise_octaves, \"noise octaves\", 8);\n    defineParam(noise_persistence, \"noise persistence\",  0.5f);\n    defineParam(noise_lacunarity, \"lacunarity\",  2.0f);\n    defineParam(noise_scale, \"noise scale\", 0.01f);\n  \}\n\n  inline float rad(float deg)\{ \n    return deg*PI/180;\n  \}\n\n  inline float smoothstep(float edge0, float edge1, float x)\{\n    x = clamp((x - edge0)/(edge1 - edge0), 0.0f, 1.0f);\n    return x*x*x*(x*(x*6-15)+10);\n  \}\n\n  inline float cl(float val)\{\n  return clamp(val,0.0f,1.0f); \n  \}\n\n  float3 rotX(float3 vec, float rot)\{\n    if(rot==0.0f)\{\n      return vec;\n    \} else \{\n      float3 vecOut;\n      vecOut.y = vec.y*cos(rad(rot)) - vec.z*sin(rad(rot));\n      vecOut.z = vec.y*sin(rad(rot)) + vec.z*cos(rad(rot));\n      vecOut.x = vec.x;\n      return float3(vecOut.x,vecOut.y,vecOut.z);\n    \}\n  \}\n\n  float3 rotY(float3 vec, float rot)\{\n    if(rot==0.0f)\{\n      return vec;\n    \} else \{\n      float3 vecOut;\n      vecOut.z = vec.z*cos(rad(rot)) - vec.x*sin(rad(rot));\n      vecOut.x = vec.z*sin(rad(rot)) + vec.x*cos(rad(rot));\n      vecOut.y = vec.y;\n      return float3(vecOut.x,vecOut.y,vecOut.z);\n    \}\n  \}\n\n  float3 rotZ(float3 vec, float rot)\{\n    if(rot==0.0f)\{\n      return vec;\n    \} else \{\n      float3 vecOut;\n      vecOut.x = vec.x*cos(rad(rot)) - vec.y*sin(rad(rot));\n      vecOut.y = vec.x*sin(rad(rot)) + vec.y*cos(rad(rot));\n      vecOut.z = vec.z;\n      return float3(vecOut.x,vecOut.y,vecOut.z);\n    \}\n  \}\n\n  void process() \{\n    //1. P WORLD\n    // Center the coordinates\n    float3 color = float3(p(0)-picked.x,p(1)-picked.y,p(2)-picked.z);\n    int black = 0;\n\n    // Translate\n    color -= translate;\n\n    // Rotate\n    if (rotOrder<=0) color = rotZ(rotY(rotX(color,rotate.x),rotate.y),rotate.z);\n    else if (rotOrder==1) color = rotY(rotZ(rotX(color,rotate.x),rotate.z),rotate.y);\n    else if (rotOrder==2) color = rotZ(rotX(rotY(color,rotate.y),rotate.x),rotate.z);\n    else if (rotOrder==3) color = rotX(rotZ(rotY(color,rotate.y),rotate.z),rotate.x);\n    else if (rotOrder==4) color = rotY(rotX(rotZ(color,rotate.z),rotate.x),rotate.y);\n    else if (rotOrder>=5) color = rotX(rotY(rotZ(color,rotate.z),rotate.y),rotate.x);\n\n    // Scale\n    if (scale.x!=0 && scale.y!=0 && scale.z!=0) \{\n      color *= float3(1/scale.x, 1/scale.y, 1/scale.z);\n    \} else \{\n      dst() = 0.0f;\n      return;\n    \}\n\n    //2. SHAPES\n    float dist;\n    float result;\n\n    if(shape==0)\{//Sphere\n      dist = sqrt(pow(color\[0],2) + pow(color\[1],2) + pow(color\[2],2));\n      result = radius==0.0f? 0:cl(1-dist/radius);\n    \} else if(shape==1)\{//Cusped Box\n      result = min( min( cl((radius-fabs(color.x))/radius) , cl((radius-fabs(color.y))/radius)) , cl((radius-fabs(color.z))/radius)) ;\n      result = hardness>=1? float(result>0) : result;\n    \} else if(shape==2)\{//Rounded Box\n      result = radius==0.0f? 0: smoothstep(0,1-hardness, cl(1-fabs(float(color.x)/radius)) ) * smoothstep(0,1-hardness, cl(1-fabs(float(color.y)/radius)) ) * smoothstep(0,1-hardness, cl(1-fabs(float(color.z)/radius)) );\n      result = hardness>=1? float(result>0) : result;\n    \} else if(shape==3)\{//Linear Ramp\n      dist = sqrt(pow(color\[0],2) + pow(color\[1],2) + pow(color\[2],2));\n      float distB = sqrt(pow(color\[0]-(pickedB.x-picked.x),2) + pow(color\[1]-(pickedB.y-picked.y),2) + pow(color\[2]-(pickedB.z-picked.z),2));\n      float distWB = sqrt(pow(pickedB.x-picked.x,2) + pow(pickedB.y-picked.y,2) + pow(pickedB.z-picked.z,2));\n      float angWB = acos( clamp((pow(dist,2)-pow(distB,2)+pow(distWB,2))/(2*dist*distWB),-1.0f,1.0f) );\n      float cosAngWB = dist==0.0f? 0:cos(angWB);\n      result = distWB==0? 0.0f: cl((dist * cosAngWB) / distWB );\n      result = 1-result;\n    \} else if(shape==4)\{//Radial Ramp\n      dist = sqrt(pow(color\[0],2) + pow(color\[1],2) + pow(color\[2],2));\n      float distB = sqrt(pow(color\[0]-(pickedB.x-picked.x),2) + pow(color\[1]-(pickedB.y-picked.y),2) + pow(color\[2]-(pickedB.z-picked.z),2));\n      float distWB = sqrt(pow(pickedB.x-picked.x,2) + pow(pickedB.y-picked.y,2) + pow(pickedB.z-picked.z,2));\n      result = distWB==0? 0.0f: cl((dist) / distWB );\n      result = 1-result;\n    \}\n    result = invert_shape? 1-result:result;\n\n    //3. FALLOFF\n    if(falloff==0)\{//Linear\n      result = hardness>=1? float(result>0) : cl(result/(1-hardness));\n    \}else if(falloff==1)\{//Smooth\n      result = hardness>=1? float(result>0) : smoothstep(0,1-hardness,result);\n    \}else if(falloff==2)\{//Quadratic\n      result = hardness>=1? float(result>0) : cl(pow(float(result/(1-hardness)),2));\n    \}else if(falloff==3)\{//Cubic\n      result = hardness>=1? float(result>0) : cl(pow(float(result/(1-hardness)),3));\n    \}else if(falloff==4)\{//Inv. Cubic\n      result = hardness>=1? float(result>0) : 1-cl(pow(float(cl(1-(result/(1-hardness)))),3));\n    \}\n\n    //4. GENERATE NOISE\n    float noise;\n    if(use_noise!=0)\{//Avoid calculations if possible\n      if(noise_relative!=1)\{\n        noise = (float)octave_noise_4d(float(noise_octaves),noise_persistence,noise_scale==0?10000.0f:1/noise_scale,p(0),p(1),p(2),noise_offset,noise_lacunarity);\n      \}else\{\n        noise = (float)octave_noise_4d(float(noise_octaves),noise_persistence,noise_scale==0?10000.0f:1/noise_scale,color\[0],color\[1],color\[2],noise_offset,noise_lacunarity);\n      \}\n      noise = cl(pow(max((noise+noise_add)*noise_gain,0.0f),noise_gamma==0?1:1/noise_gamma));\n    \}\n\n\n    //5. ALPHA MASK AND APPLY NOISE\n    result = max(result,0.0f); //Clamp negative values\n    if(use_noise==1)\{//Overlay\n      result = result<0.5f? noise_mix*(2*noise*result)+(1-noise_mix)*result : noise_mix*(1-2*(1-result)*(1-noise))+(1-noise_mix)*result;\n    \}else if(use_noise>=2)\{\n      result = noise*noise_mix;\n    \}\n\n    if(use_alpha > 0) result=result*p(3);\n\n    //6. WE'RE DONE\n    dst() = result;\n  \}\n\};"
rebuild ""
aPMatteKernel_picked {{picker.r} {picker.g} {picker.b}}
aPMatteKernel_pickedB {{black_point} {black_point} {black_point}}
"aPMatteKernel_rotation order" {{parent.rotation_order}}
aPMatteKernel_translate {{parent.translate} {parent.translate} {parent.translate}}
aPMatteKernel_rotate {{parent.rotate} {parent.rotate} {parent.rotate}}
aPMatteKernel_scale {{parent.scale} {parent.scale} {parent.scale}}
aPMatteKernel_radius {{parent.radius}}
aPMatteKernel_shape {{parent.shape}}
aPMatteKernel_invert_shape {{parent.invert}}
aPMatteKernel_use_alpha {{parent.alpha_masking}}
aPMatteKernel_falloff {{parent.falloff}}
aPMatteKernel_hardness {{parent.hardness}}
"aPMatteKernel_use noise" {{parent.noise}}
aPMatteKernel_noise_relative {{parent.noise_rel}}
"aPMatteKernel_noise octaves" {{parent.noise_octaves}}
"aPMatteKernel_noise persistence" {{parent.noise_persistance}}
aPMatteKernel_lacunarity {{parent.noise_lacunarity}}
"aPMatteKernel_noise scale" {{parent.noise_size}}
aPMatteKernel_noise_offset {{parent.noise_offset}}
aPMatteKernel_noise_add {{parent.noise_add}}
aPMatteKernel_noise_gain {{parent.noise_gain}}
aPMatteKernel_noise_gamma {{parent.noise_gamma}}
aPMatteKernel_noise_mix {{parent.noise_mix}}
rebuild_finalise ""
name BlinkScriptPMatte
xpos -418
ypos 523
addUserKnob {20 User}
addUserKnob {6 black_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 picker}
picker {-5.255044937 25.629963 44.18531418}
addUserKnob {6 picker_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 picker_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 black_point l black}
black_point {0 0 0}
addUserKnob {6 black_point_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 black_point_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
push $N6d610f00
ShuffleCopy {
inputs 2
red red
green green
blue blue
out alpha
name ShuffleCopyOut
xpos -528
ypos 527
}
Output {
name Output
xpos -528
ypos 566
}
end_group
Group {
name key_chew7
help "======== KeyChew beta ========\n=============================\n\nThis is a port of the KeyChew macro for Shake to Nuke.\n\nThere might be tiny differences on the results given in both apps. Some of them are caused by the internal algorithms of each app, and others by the way I faked the JSplineV\nexpression of Shake in Nuke. If you know a better way to solve this, let\nme know!!\n\n=============================\n             2009 Cuco Bures\n============================="
selected true
xpos 10626
ypos -7697
addUserKnob {20 Controls}
addUserKnob {7 chew t "\t\t" R -200 200}
chew 45
addUserKnob {7 soften R 0 200}
addUserKnob {6 matteMult +STARTLINE}
}
Input {
inputs 0
name Input
xpos -40
ypos -9
}
set N6d5e8f00 [stack 0]
Dot {
name Dot1
xpos 324
ypos -6
}
set N6d5e8800 [stack 0]
push $N6d5e8800
Invert {
name Invert1
xpos 176
ypos 33
}
push $N6d5e8800
Switch {
inputs 2
which {{"\[value chew]>=0?0:1"}}
name Switch1
xpos 180
ypos 87
}
Blur {
size {{"(floor(abs(\[value chew]))/4)+(floor(abs(\[value chew]))/8)"}}
name FgEdgeBlur
xpos 180
ypos 129
}
Grade {
channels alpha
multiply {1 1 1 {max(FgEdgeBlur.size*1.5,1)}}
black_clamp false
name FgEdgeMult
xpos 180
ypos 177
}
Grade {
channels alpha
gamma {1 1 1 {JSplineVFake(floor(abs(chew)))}}
name FgEdgeGamma1
xpos 180
ypos 225
addUserKnob {20 User}
addUserKnob {7 JSplineVFake}
JSplineVFake {{curve l 0.9958 k x5 0.95 0.8 x20 0.5 x40 0.3 x80 0.2 l x200 0.1}}
}
set N6d76f200 [stack 0]
Merge2 {
inputs 2
operation minus
name Merge1
xpos 290
ypos 231
}
push $N6d76f200
Switch {
inputs 2
which {{"\[value chew]>=0?0:1"}}
name Switch2
xpos 180
ypos 279
}
Clamp {
name Clamp2
xpos 180
ypos 321
}
Blur {
size {{"(floor(abs(\[value soften]))/4)+(floor(abs(\[value soften]))/8)"}}
name BlurResult
xpos 180
ypos 441
}
push $N6d5e8f00
ShuffleCopy {
inputs 2
name ShuffleCopy1
xpos -40
ypos 447
}
Premult {
name Premult1
xpos -40
ypos 495
disable {{"1-\[value matteMult]"}}
}
Output {
name Output1
xpos -40
ypos 567
}
end_group
Group {
name key_chew8
help "======== KeyChew beta ========\n=============================\n\nThis is a port of the KeyChew macro for Shake to Nuke.\n\nThere might be tiny differences on the results given in both apps. Some of them are caused by the internal algorithms of each app, and others by the way I faked the JSplineV\nexpression of Shake in Nuke. If you know a better way to solve this, let\nme know!!\n\n=============================\n             2009 Cuco Bures\n============================="
selected true
xpos 10626
ypos -7671
addUserKnob {20 Controls}
addUserKnob {7 chew t "\t\t" R -200 200}
chew -136
addUserKnob {7 soften R 0 200}
soften 200
addUserKnob {6 matteMult +STARTLINE}
}
Input {
inputs 0
name Input
xpos -40
ypos -9
}
set N6d292400 [stack 0]
Dot {
name Dot1
xpos 324
ypos -6
}
set N6d291d00 [stack 0]
push $N6d291d00
Invert {
name Invert1
xpos 176
ypos 33
}
push $N6d291d00
Switch {
inputs 2
which {{"\[value chew]>=0?0:1"}}
name Switch1
xpos 180
ypos 87
}
Blur {
size {{"(floor(abs(\[value chew]))/4)+(floor(abs(\[value chew]))/8)"}}
name FgEdgeBlur
xpos 180
ypos 129
}
Grade {
channels alpha
multiply {1 1 1 {max(FgEdgeBlur.size*1.5,1)}}
black_clamp false
name FgEdgeMult
xpos 180
ypos 177
}
Grade {
channels alpha
gamma {1 1 1 {JSplineVFake(floor(abs(chew)))}}
name FgEdgeGamma1
xpos 180
ypos 225
addUserKnob {20 User}
addUserKnob {7 JSplineVFake}
JSplineVFake {{curve l 0.9958 k x5 0.95 0.8 x20 0.5 x40 0.3 x80 0.2 l x200 0.1}}
}
set N6d25c800 [stack 0]
Merge2 {
inputs 2
operation minus
name Merge1
xpos 290
ypos 231
}
push $N6d25c800
Switch {
inputs 2
which {{"\[value chew]>=0?0:1"}}
name Switch2
xpos 180
ypos 279
}
Clamp {
name Clamp2
xpos 180
ypos 321
}
Blur {
size {{"(floor(abs(\[value soften]))/4)+(floor(abs(\[value soften]))/8)"}}
name BlurResult
xpos 180
ypos 441
}
push $N6d292400
ShuffleCopy {
inputs 2
name ShuffleCopy1
xpos -40
ypos 447
}
Premult {
name Premult1
xpos -40
ypos 495
disable {{"1-\[value matteMult]"}}
}
Output {
name Output1
xpos -40
ypos 567
}
end_group
set N6d292b00 [stack 0]
Dot {
name Dot135
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 10660
ypos -7590
}
push $N6d292b00
push $N6d875d00
Group {
name aPMatte7
help "aPMatte v1.0 by Adrian Pueyo\n\nGenerate a matte of different shapes, based on a Position pass. Includes options to transform the mask and change its falloff. Also has the option to output or overlay a P-based 3D noise.\n\nadrianpueyo.com, 2017"
knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == \"shape\":\n    rampOn = k.value() in \['linear ramp', 'radial ramp'];\n    n\['radius'].setVisible(not rampOn)\n    n.knobs()\[\"black\"].setVisible(rampOn)\n    n.knobs()\[\"picker\"].setLabel( \"white\" if rampOn else \"center\" )\n\n\nif k.name() == \"noise\":\n    noiseOn = k.value() != 'off';\n    n\['noise_rel'].setVisible(noiseOn)\n    n\['noise_persistance'].setVisible(noiseOn)\n    n\['noise_octaves'].setVisible(noiseOn)\n    n\['noise_lacunarity'].setVisible(noiseOn)\n    n\['noise_size'].setVisible(noiseOn)\n    n\['noise_offset'].setVisible(noiseOn)\n    n\['noise_add'].setVisible(noiseOn)\n    n\['noise_gain'].setVisible(noiseOn)\n    n\['noise_gamma'].setVisible(noiseOn)\n    n\['noise_mix'].setVisible(noiseOn)\n\nif not n\[\"autolabel\"].value():\n    n\[\"autolabel\"].setValue(\"'%s\\\\n(%s)'%(nuke.thisNode()\['name'].value(),nuke.thisNode()\['out'].value()) if nuke.thisNode()\['out'].value()!='alpha' else nuke.thisNode()\['name'].value()\")"
autolabel "'%s\\n(%s)'%(nuke.thisNode()\['name'].value(),nuke.thisNode()\['out'].value()) if nuke.thisNode()\['out'].value()!='alpha' else nuke.thisNode()\['name'].value()"
selected true
xpos 10626
ypos -7848
addUserKnob {20 aPMatte}
addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T BlinkScriptPMatte.useGPUIfAvailable}
addUserKnob {41 vectorize l "Vectorize on CPU" -STARTLINE T BlinkScriptPMatte.vectorize}
addUserKnob {26 ""}
addUserKnob {41 p_channels l "P channels" T ShuffleIn.in}
addUserKnob {41 out l " output" -STARTLINE T ShuffleCopyOut.out}
addUserKnob {6 alpha_masking l "alpha masking" t "Multiply the output by the input's alpha." +STARTLINE}
alpha_masking true
addUserKnob {4 shape M {sphere "cusped box" "rounded box" "linear ramp" "radial ramp" ""}}
addUserKnob {6 invert -STARTLINE}
addUserKnob {41 picker l center T BlinkScriptPMatte.picker}
addUserKnob {7 radius R 0 100}
radius 1400
addUserKnob {41 black t "Black point of your ramp." +HIDDEN T BlinkScriptPMatte.black_point}
addUserKnob {26 ""}
addUserKnob {4 falloff t "Fallof type for the matte." M {linear smooth quadratic cubic "inv. cubic" "" ""}}
addUserKnob {7 hardness}
addUserKnob {26 ""}
addUserKnob {4 rotation_order l "rotation order" M {XYZ XZY YXZ YZX ZXY ZYX}}
rotation_order ZXY
addUserKnob {13 translate}
addUserKnob {13 rotate}
addUserKnob {13 scale}
scale {1 1 1}
addUserKnob {26 ""}
addUserKnob {4 noise t "overlay: uses the noise in overlay blend mode over the resulting mask, to make it more organic and less obvious for grading.\nnoise only: ignore the mask, output a 3D noise." M {off overlay "noise only"}}
addUserKnob {6 noise_rel l relative t "On: Pick world transformations and positioning of the shape.\nOff: Pick absolute world transformations.\n\nTip: Check when you want the mask to always be affected by the same noise, uncheck when you want to lock the noise to your scene." -STARTLINE +HIDDEN}
noise_rel true
addUserKnob {7 noise_size l size t "Size of the noise pattern." +HIDDEN R 0 100}
noise_size 10
addUserKnob {7 noise_offset l offset t "Spatial offset of the noise pattern (use to find a sweet spot for your matte)." +HIDDEN R 0 100}
addUserKnob {3 noise_octaves l octaves t "Number of noise iterations." +HIDDEN}
noise_octaves 8
addUserKnob {7 noise_lacunarity l lacunarity t "Each octave gets downscaled by this value." +HIDDEN R 0 10}
noise_lacunarity 1.8
addUserKnob {7 noise_persistance l persistance t "Each octave gets multiplied by this value." +HIDDEN}
noise_persistance 0.5
addUserKnob {7 noise_add l add t "Add a value to the noise." +HIDDEN}
noise_add 0.5
addUserKnob {7 noise_gain l gain t "Multiply the resulting noise by this value." +HIDDEN R 0 4}
noise_gain 1
addUserKnob {7 noise_gamma l gamma t "Gamma the resulting value." +HIDDEN R 0 4}
noise_gamma 1
addUserKnob {7 noise_mix l mix +HIDDEN}
noise_mix 1
addUserKnob {26 copyright l " " T "<br/><font color=#777><b>aPMatte v1.0</b> - adrianpueyo.com, 2017"}
addUserKnob {6 BlinkScriptPMatte_black_point_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
}
Input {
inputs 0
name Inputimg
xpos -528
ypos 483
}
set N6d21f200 [stack 0]
Shuffle {
in pWorld
in2 rgba
alpha alpha2
name ShuffleIn
xpos -418
ypos 483
}
BlinkScript {
ProgramGroup 1
KernelDescription "2 \"aPMatteKernel\" iterate pixelWise eba2548d360b6b3d2b97555753832bdfb4c4224623cecc4870a6d5c5e54e4fdb 2 \"p\" Read Point \"dst\" Write Point 23 \"picked\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"pickedB\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"rotation order\" Int 1 BAAAAA== \"translate\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"rotate\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"scale\" Float 3 AACAPwAAgD8AAIA/AAAAAA== \"radius\" Float 1 AACAPw== \"shape\" Int 1 AAAAAA== \"invert_shape\" Int 1 AAAAAA== \"use_alpha\" Int 1 AAAAAA== \"falloff\" Int 1 AQAAAA== \"hardness\" Float 1 AAAAAA== \"use noise\" Int 1 AAAAAA== \"noise_relative\" Int 1 AAAAAA== \"noise octaves\" Int 1 CAAAAA== \"noise persistence\" Float 1 AAAAPw== \"lacunarity\" Float 1 AAAAQA== \"noise scale\" Float 1 CtcjPA== \"noise_offset\" Float 1 AAAAAA== \"noise_add\" Float 1 AAAAAA== \"noise_gain\" Float 1 AAAAAA== \"noise_gamma\" Float 1 AAAAAA== \"noise_mix\" Float 1 AAAAAA== 23 \"picked\" 3 1 \"pickedB\" 3 1 \"rotOrder\" 1 1 \"translate\" 3 1 \"rotate\" 3 1 \"scale\" 3 1 \"radius\" 1 1 \"shape\" 1 1 \"invert_shape\" 1 1 \"use_alpha\" 1 1 \"falloff\" 1 1 \"hardness\" 1 1 \"use_noise\" 1 1 \"noise_relative\" 1 1 \"noise_octaves\" 1 1 \"noise_persistence\" 1 1 \"noise_lacunarity\" 1 1 \"noise_scale\" 1 1 \"noise_offset\" 1 1 \"noise_add\" 1 1 \"noise_gain\" 1 1 \"noise_gamma\" 1 1 \"noise_mix\" 1 1 0"
kernelSource "// ----------------------------------------------------------------\n// aPMatte v1.0 by Adrian Pueyo\n//\n// Generate a matte of different shapes, based on a Position pass.\n// Includes options to transform the mask and change its falloff.\n// Also includes the option to output or overlay a P-based noise.\n//\n// adrianpueyo.com, 2017\n// ----------------------------------------------------------------\n\n\n// Noise algorithm adapted by Adrian Pueyo from Noise4D function by Mads Hagbarth Lund\n// Noise4D function Ported by Mads Hagbarth Lund 2014\n// Based on https://github.com/Draradech/csworldgen/blob/master/simplexnoise.cpp\n\n/* Copyright (c) 2007-2012 Eliot Eshelman\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n\nint fastfloor( const float x ) \{ return x > 0 ? (int) x : (int) x - 1; \}\ninline float raw_noise_4d( const float x, const float y, const float z, const float w ) \n\{\nint simplex\[64]\[4] = \{\n    \{0,1,2,3\},\{0,1,3,2\},\{0,0,0,0\},\{0,2,3,1\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{1,2,3,0\},\n    \{0,2,1,3\},\{0,0,0,0\},\{0,3,1,2\},\{0,3,2,1\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{1,3,2,0\},\n    \{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\n    \{1,2,0,3\},\{0,0,0,0\},\{1,3,0,2\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{2,3,0,1\},\{2,3,1,0\},\n    \{1,0,2,3\},\{1,0,3,2\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{2,0,3,1\},\{0,0,0,0\},\{2,1,3,0\},\n    \{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\n    \{2,0,1,3\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{3,0,1,2\},\{3,0,2,1\},\{0,0,0,0\},\{3,1,2,0\},\n    \{2,1,0,3\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{3,1,0,2\},\{0,0,0,0\},\{3,2,0,1\},\{3,2,1,0\}\n\};\n    int perm\[512] = \{\n        151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,\n        8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,\n        35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,\n        134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,\n        55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208, 89,\n        18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,\n        250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,\n        189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,\n        172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,\n        228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,\n        107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,\n        138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180,\n\n        151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,\n        8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,\n        35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,\n        134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,\n        55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208, 89,\n        18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,\n        250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,\n        189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,\n        172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,\n        228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,\n        107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,\n        138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180\n    \};\n  int grad4\[32]\[4]= \{\n    \{0,1,1,1\},  \{0,1,1,-1\},  \{0,1,-1,1\},  \{0,1,-1,-1\},\n    \{0,-1,1,1\}, \{0,-1,1,-1\}, \{0,-1,-1,1\}, \{0,-1,-1,-1\},\n    \{1,0,1,1\},  \{1,0,1,-1\},  \{1,0,-1,1\},  \{1,0,-1,-1\},\n    \{-1,0,1,1\}, \{-1,0,1,-1\}, \{-1,0,-1,1\}, \{-1,0,-1,-1\},\n    \{1,1,0,1\},  \{1,1,0,-1\},  \{1,-1,0,1\},  \{1,-1,0,-1\},\n    \{-1,1,0,1\}, \{-1,1,0,-1\}, \{-1,-1,0,1\}, \{-1,-1,0,-1\},\n    \{1,1,1,0\},  \{1,1,-1,0\},  \{1,-1,1,0\},  \{1,-1,-1,0\},\n    \{-1,1,1,0\}, \{-1,1,-1,0\}, \{-1,-1,1,0\}, \{-1,-1,-1,0\}\n  \};\n    float F4 = (sqrt(5.0f)-1.0)/4.0;\n    float G4 = (5.0-sqrt(5.0f))/20.0;\n    float n0, n1, n2, n3, n4;\n    float s = (x + y + z + w) * F4;\n    int i = fastfloor(x + s);\n    int j = fastfloor(y + s);\n    int k = fastfloor(z + s);\n    int l = fastfloor(w + s);\n    float t = (i + j + k + l) * G4;\n    float X0 = i - t;\n    float Y0 = j - t;\n    float Z0 = k - t;\n    float W0 = l - t;\n\n    float x0 = x - X0;\n    float y0 = y - Y0;\n    float z0 = z - Z0;\n    float w0 = w - W0;\n    int c1 = (x0 > y0) ? 32 : 0;\n    int c2 = (x0 > z0) ? 16 : 0;\n    int c3 = (y0 > z0) ? 8 : 0;\n    int c4 = (x0 > w0) ? 4 : 0;\n    int c5 = (y0 > w0) ? 2 : 0;\n    int c6 = (z0 > w0) ? 1 : 0;\n    int c = c1 + c2 + c3 + c4 + c5 + c6;\n\n    int i1, j1, k1, l1;\n    int i2, j2, k2, l2;\n    int i3, j3, k3, l3;\n    i1 = simplex\[c]\[0]>=3 ? 1 : 0;\n    j1 = simplex\[c]\[1]>=3 ? 1 : 0;\n    k1 = simplex\[c]\[2]>=3 ? 1 : 0;\n    l1 = simplex\[c]\[3]>=3 ? 1 : 0;\n    i2 = simplex\[c]\[0]>=2 ? 1 : 0;\n    j2 = simplex\[c]\[1]>=2 ? 1 : 0;\n    k2 = simplex\[c]\[2]>=2 ? 1 : 0;\n    l2 = simplex\[c]\[3]>=2 ? 1 : 0;\n    i3 = simplex\[c]\[0]>=1 ? 1 : 0;\n    j3 = simplex\[c]\[1]>=1 ? 1 : 0;\n    k3 = simplex\[c]\[2]>=1 ? 1 : 0;\n    l3 = simplex\[c]\[3]>=1 ? 1 : 0;\n    float x1 = x0 - i1 + G4;\n    float y1 = y0 - j1 + G4;\n    float z1 = z0 - k1 + G4;\n    float w1 = w0 - l1 + G4;\n    float x2 = x0 - i2 + 2.0*G4;\n    float y2 = y0 - j2 + 2.0*G4;\n    float z2 = z0 - k2 + 2.0*G4;\n    float w2 = w0 - l2 + 2.0*G4;\n    float x3 = x0 - i3 + 3.0*G4;\n    float y3 = y0 - j3 + 3.0*G4;\n    float z3 = z0 - k3 + 3.0*G4;\n    float w3 = w0 - l3 + 3.0*G4;\n    float x4 = x0 - 1.0 + 4.0*G4;\n    float y4 = y0 - 1.0 + 4.0*G4;\n    float z4 = z0 - 1.0 + 4.0*G4;\n    float w4 = w0 - 1.0 + 4.0*G4;\n    int ii = i & 255;\n    int jj = j & 255;\n    int kk = k & 255;\n    int ll = l & 255;\n    int gi0 = perm\[ii+perm\[jj+perm\[kk+perm\[ll]]]] % 32;\n    int gi1 = perm\[ii+i1+perm\[jj+j1+perm\[kk+k1+perm\[ll+l1]]]] % 32;\n    int gi2 = perm\[ii+i2+perm\[jj+j2+perm\[kk+k2+perm\[ll+l2]]]] % 32;\n    int gi3 = perm\[ii+i3+perm\[jj+j3+perm\[kk+k3+perm\[ll+l3]]]] % 32;\n    int gi4 = perm\[ii+1+perm\[jj+1+perm\[kk+1+perm\[ll+1]]]] % 32;\n    float t0 = 0.6 - x0*x0 - y0*y0 - z0*z0 - w0*w0;\n    if(t0<0) n0 = 0.0;\n    else \{\n        t0 *= t0;\n        n0 = t0 * t0 * dot(float4(grad4\[gi0]\[0],grad4\[gi0]\[2],grad4\[gi0]\[3],grad4\[gi0]\[3]), float4(x0, y0, z0, w0));\n    \}\n    float t1 = 0.6 - x1*x1 - y1*y1 - z1*z1 - w1*w1;\n    if(t1<0) n1 = 0.0;\n    else \{\n        t1 *= t1;\n        n1 = t1 * t1 * dot(float4(grad4\[gi1]\[0],grad4\[gi1]\[2],grad4\[gi1]\[3],grad4\[gi1]\[3]), float4(x1, y1, z1, w1));\n    \}\n    float t2 = 0.6 - x2*x2 - y2*y2 - z2*z2 - w2*w2;\n    if(t2<0) n2 = 0.0;\n    else \{\n        t2 *= t2;\n        n2 = t2 * t2 * dot(float4(grad4\[gi2]\[0],grad4\[gi2]\[2],grad4\[gi2]\[3],grad4\[gi2]\[3]), float4(x2, y2, z2, w2));\n    \}\n    float t3 = 0.6 - x3*x3 - y3*y3 - z3*z3 - w3*w3;\n    if(t3<0) n3 = 0.0;\n    else \{\n        t3 *= t3;\n        n3 = t3 * t3 * dot(float4(grad4\[gi3]\[0],grad4\[gi3]\[2],grad4\[gi3]\[3],grad4\[gi3]\[3]), float4(x3, y3, z3, w3));\n    \}\n    float t4 = 0.6 - x4*x4 - y4*y4 - z4*z4 - w4*w4;\n    if(t4<0) n4 = 0.0;\n    else \{\n        t4 *= t4;\n        n4 = t4 * t4 * dot(float4(grad4\[gi4]\[0],grad4\[gi4]\[2],grad4\[gi4]\[3],grad4\[gi4]\[3]), float4(x4, y4, z4, w4));\n    \}\n    return 27.0 * (n0 + n1 + n2 + n3 + n4);\n\}\ninline float octave_noise_4d( const float octaves, const float persistence, const float scale, const float x, const float y, const float z, const float w, const float lacunarity=2 ) \n\{\n    float total = 0;\n    float frequency = scale;\n    float amplitude = 1;\n    float maxAmplitude = 0;\n    for( int i=0; i < octaves; i++ ) \{\n        total += (float)raw_noise_4d( x * frequency, y * frequency, z * frequency, w * frequency ) * amplitude;\n\n        frequency *= lacunarity;\n        maxAmplitude += amplitude;\n        amplitude *= persistence;\n    \}\n    return float(total / maxAmplitude);\n\}\n\nkernel aPMatteKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> p;\n  Image<eWrite> dst;\n\n  param:\n    float3 picked; //Center, or white for ramps\n    float3 pickedB; //Black for ramps\n    int rotOrder; //0=XYZ,1=XZY,2=YXZ,3=YZX,4=ZXY,5=ZYX\n    float3 translate;\n    float3 rotate;\n    float3 scale;\n    float radius;\n    int shape; //0=sphere,1=cusped box,2=rounded box,3=ramp, 4=rad.ramp\n    int invert_shape;\n    int use_alpha;\n    int falloff; //0=linear,1=smooth,2=square,3=inv.square\n    float hardness;\n\n    // Noise parameters here\n    int use_noise; //0=off,1=overlay,2=noise only\n    int noise_relative;\n    int noise_octaves;\n    float noise_persistence;\n    float noise_lacunarity;\n    float noise_scale;\n    float noise_offset;\n    float noise_add;\n    float noise_gain;\n    float noise_gamma;\n    float noise_mix;\n\n  void define() \{\n    defineParam(rotOrder, \"rotation order\", 4);\n    defineParam(scale, \"scale\", float3(1.0f,1.0f,1.0f));\n    defineParam(radius, \"radius\", 1.0f);\n    defineParam(falloff, \"falloff\", 1);\n    defineParam(use_noise, \"use noise\", 0);\n    defineParam(noise_octaves, \"noise octaves\", 8);\n    defineParam(noise_persistence, \"noise persistence\",  0.5f);\n    defineParam(noise_lacunarity, \"lacunarity\",  2.0f);\n    defineParam(noise_scale, \"noise scale\", 0.01f);\n  \}\n\n  inline float rad(float deg)\{ \n    return deg*PI/180;\n  \}\n\n  inline float smoothstep(float edge0, float edge1, float x)\{\n    x = clamp((x - edge0)/(edge1 - edge0), 0.0f, 1.0f);\n    return x*x*x*(x*(x*6-15)+10);\n  \}\n\n  inline float cl(float val)\{\n  return clamp(val,0.0f,1.0f); \n  \}\n\n  float3 rotX(float3 vec, float rot)\{\n    if(rot==0.0f)\{\n      return vec;\n    \} else \{\n      float3 vecOut;\n      vecOut.y = vec.y*cos(rad(rot)) - vec.z*sin(rad(rot));\n      vecOut.z = vec.y*sin(rad(rot)) + vec.z*cos(rad(rot));\n      vecOut.x = vec.x;\n      return float3(vecOut.x,vecOut.y,vecOut.z);\n    \}\n  \}\n\n  float3 rotY(float3 vec, float rot)\{\n    if(rot==0.0f)\{\n      return vec;\n    \} else \{\n      float3 vecOut;\n      vecOut.z = vec.z*cos(rad(rot)) - vec.x*sin(rad(rot));\n      vecOut.x = vec.z*sin(rad(rot)) + vec.x*cos(rad(rot));\n      vecOut.y = vec.y;\n      return float3(vecOut.x,vecOut.y,vecOut.z);\n    \}\n  \}\n\n  float3 rotZ(float3 vec, float rot)\{\n    if(rot==0.0f)\{\n      return vec;\n    \} else \{\n      float3 vecOut;\n      vecOut.x = vec.x*cos(rad(rot)) - vec.y*sin(rad(rot));\n      vecOut.y = vec.x*sin(rad(rot)) + vec.y*cos(rad(rot));\n      vecOut.z = vec.z;\n      return float3(vecOut.x,vecOut.y,vecOut.z);\n    \}\n  \}\n\n  void process() \{\n    //1. P WORLD\n    // Center the coordinates\n    float3 color = float3(p(0)-picked.x,p(1)-picked.y,p(2)-picked.z);\n    int black = 0;\n\n    // Translate\n    color -= translate;\n\n    // Rotate\n    if (rotOrder<=0) color = rotZ(rotY(rotX(color,rotate.x),rotate.y),rotate.z);\n    else if (rotOrder==1) color = rotY(rotZ(rotX(color,rotate.x),rotate.z),rotate.y);\n    else if (rotOrder==2) color = rotZ(rotX(rotY(color,rotate.y),rotate.x),rotate.z);\n    else if (rotOrder==3) color = rotX(rotZ(rotY(color,rotate.y),rotate.z),rotate.x);\n    else if (rotOrder==4) color = rotY(rotX(rotZ(color,rotate.z),rotate.x),rotate.y);\n    else if (rotOrder>=5) color = rotX(rotY(rotZ(color,rotate.z),rotate.y),rotate.x);\n\n    // Scale\n    if (scale.x!=0 && scale.y!=0 && scale.z!=0) \{\n      color *= float3(1/scale.x, 1/scale.y, 1/scale.z);\n    \} else \{\n      dst() = 0.0f;\n      return;\n    \}\n\n    //2. SHAPES\n    float dist;\n    float result;\n\n    if(shape==0)\{//Sphere\n      dist = sqrt(pow(color\[0],2) + pow(color\[1],2) + pow(color\[2],2));\n      result = radius==0.0f? 0:cl(1-dist/radius);\n    \} else if(shape==1)\{//Cusped Box\n      result = min( min( cl((radius-fabs(color.x))/radius) , cl((radius-fabs(color.y))/radius)) , cl((radius-fabs(color.z))/radius)) ;\n      result = hardness>=1? float(result>0) : result;\n    \} else if(shape==2)\{//Rounded Box\n      result = radius==0.0f? 0: smoothstep(0,1-hardness, cl(1-fabs(float(color.x)/radius)) ) * smoothstep(0,1-hardness, cl(1-fabs(float(color.y)/radius)) ) * smoothstep(0,1-hardness, cl(1-fabs(float(color.z)/radius)) );\n      result = hardness>=1? float(result>0) : result;\n    \} else if(shape==3)\{//Linear Ramp\n      dist = sqrt(pow(color\[0],2) + pow(color\[1],2) + pow(color\[2],2));\n      float distB = sqrt(pow(color\[0]-(pickedB.x-picked.x),2) + pow(color\[1]-(pickedB.y-picked.y),2) + pow(color\[2]-(pickedB.z-picked.z),2));\n      float distWB = sqrt(pow(pickedB.x-picked.x,2) + pow(pickedB.y-picked.y,2) + pow(pickedB.z-picked.z,2));\n      float angWB = acos( clamp((pow(dist,2)-pow(distB,2)+pow(distWB,2))/(2*dist*distWB),-1.0f,1.0f) );\n      float cosAngWB = dist==0.0f? 0:cos(angWB);\n      result = distWB==0? 0.0f: cl((dist * cosAngWB) / distWB );\n      result = 1-result;\n    \} else if(shape==4)\{//Radial Ramp\n      dist = sqrt(pow(color\[0],2) + pow(color\[1],2) + pow(color\[2],2));\n      float distB = sqrt(pow(color\[0]-(pickedB.x-picked.x),2) + pow(color\[1]-(pickedB.y-picked.y),2) + pow(color\[2]-(pickedB.z-picked.z),2));\n      float distWB = sqrt(pow(pickedB.x-picked.x,2) + pow(pickedB.y-picked.y,2) + pow(pickedB.z-picked.z,2));\n      result = distWB==0? 0.0f: cl((dist) / distWB );\n      result = 1-result;\n    \}\n    result = invert_shape? 1-result:result;\n\n    //3. FALLOFF\n    if(falloff==0)\{//Linear\n      result = hardness>=1? float(result>0) : cl(result/(1-hardness));\n    \}else if(falloff==1)\{//Smooth\n      result = hardness>=1? float(result>0) : smoothstep(0,1-hardness,result);\n    \}else if(falloff==2)\{//Quadratic\n      result = hardness>=1? float(result>0) : cl(pow(float(result/(1-hardness)),2));\n    \}else if(falloff==3)\{//Cubic\n      result = hardness>=1? float(result>0) : cl(pow(float(result/(1-hardness)),3));\n    \}else if(falloff==4)\{//Inv. Cubic\n      result = hardness>=1? float(result>0) : 1-cl(pow(float(cl(1-(result/(1-hardness)))),3));\n    \}\n\n    //4. GENERATE NOISE\n    float noise;\n    if(use_noise!=0)\{//Avoid calculations if possible\n      if(noise_relative!=1)\{\n        noise = (float)octave_noise_4d(float(noise_octaves),noise_persistence,noise_scale==0?10000.0f:1/noise_scale,p(0),p(1),p(2),noise_offset,noise_lacunarity);\n      \}else\{\n        noise = (float)octave_noise_4d(float(noise_octaves),noise_persistence,noise_scale==0?10000.0f:1/noise_scale,color\[0],color\[1],color\[2],noise_offset,noise_lacunarity);\n      \}\n      noise = cl(pow(max((noise+noise_add)*noise_gain,0.0f),noise_gamma==0?1:1/noise_gamma));\n    \}\n\n\n    //5. ALPHA MASK AND APPLY NOISE\n    result = max(result,0.0f); //Clamp negative values\n    if(use_noise==1)\{//Overlay\n      result = result<0.5f? noise_mix*(2*noise*result)+(1-noise_mix)*result : noise_mix*(1-2*(1-result)*(1-noise))+(1-noise_mix)*result;\n    \}else if(use_noise>=2)\{\n      result = noise*noise_mix;\n    \}\n\n    if(use_alpha > 0) result=result*p(3);\n\n    //6. WE'RE DONE\n    dst() = result;\n  \}\n\};"
rebuild ""
aPMatteKernel_picked {{picker.r} {picker.g} {picker.b}}
aPMatteKernel_pickedB {{black_point} {black_point} {black_point}}
"aPMatteKernel_rotation order" {{parent.rotation_order}}
aPMatteKernel_translate {{parent.translate} {parent.translate} {parent.translate}}
aPMatteKernel_rotate {{parent.rotate} {parent.rotate} {parent.rotate}}
aPMatteKernel_scale {{parent.scale} {parent.scale} {parent.scale}}
aPMatteKernel_radius {{parent.radius}}
aPMatteKernel_shape {{parent.shape}}
aPMatteKernel_invert_shape {{parent.invert}}
aPMatteKernel_use_alpha {{parent.alpha_masking}}
aPMatteKernel_falloff {{parent.falloff}}
aPMatteKernel_hardness {{parent.hardness}}
"aPMatteKernel_use noise" {{parent.noise}}
aPMatteKernel_noise_relative {{parent.noise_rel}}
"aPMatteKernel_noise octaves" {{parent.noise_octaves}}
"aPMatteKernel_noise persistence" {{parent.noise_persistance}}
aPMatteKernel_lacunarity {{parent.noise_lacunarity}}
"aPMatteKernel_noise scale" {{parent.noise_size}}
aPMatteKernel_noise_offset {{parent.noise_offset}}
aPMatteKernel_noise_add {{parent.noise_add}}
aPMatteKernel_noise_gain {{parent.noise_gain}}
aPMatteKernel_noise_gamma {{parent.noise_gamma}}
aPMatteKernel_noise_mix {{parent.noise_mix}}
rebuild_finalise ""
name BlinkScriptPMatte
xpos -418
ypos 523
addUserKnob {20 User}
addUserKnob {6 black_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 picker}
picker {-5.255044937 25.629963 44.18531418}
addUserKnob {6 picker_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 picker_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 black_point l black}
black_point {0 0 0}
addUserKnob {6 black_point_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 black_point_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
push $N6d21f200
ShuffleCopy {
inputs 2
red red
green green
blue blue
out alpha
name ShuffleCopyOut
xpos -528
ypos 527
}
Output {
name Output
xpos -528
ypos 566
}
end_group
Group {
name key_chew6
help "======== KeyChew beta ========\n=============================\n\nThis is a port of the KeyChew macro for Shake to Nuke.\n\nThere might be tiny differences on the results given in both apps. Some of them are caused by the internal algorithms of each app, and others by the way I faked the JSplineV\nexpression of Shake in Nuke. If you know a better way to solve this, let\nme know!!\n\n=============================\n             2009 Cuco Bures\n============================="
selected true
xpos 10626
ypos -7822
addUserKnob {20 Controls}
addUserKnob {7 chew t "\t\t" R -200 200}
chew 11
addUserKnob {7 soften R 0 200}
soften 91.5
addUserKnob {6 matteMult +STARTLINE}
}
Input {
inputs 0
name Input
xpos -40
ypos -9
}
set N6d203200 [stack 0]
Dot {
name Dot1
xpos 324
ypos -6
}
set N6d202b00 [stack 0]
push $N6d202b00
Invert {
name Invert1
xpos 176
ypos 33
}
push $N6d202b00
Switch {
inputs 2
which {{"\[value chew]>=0?0:1"}}
name Switch1
xpos 180
ypos 87
}
Blur {
size {{"(floor(abs(\[value chew]))/4)+(floor(abs(\[value chew]))/8)"}}
name FgEdgeBlur
xpos 180
ypos 129
}
Grade {
channels alpha
multiply {1 1 1 {max(FgEdgeBlur.size*1.5,1)}}
black_clamp false
name FgEdgeMult
xpos 180
ypos 177
}
Grade {
channels alpha
gamma {1 1 1 {JSplineVFake(floor(abs(chew)))}}
name FgEdgeGamma1
xpos 180
ypos 225
addUserKnob {20 User}
addUserKnob {7 JSplineVFake}
JSplineVFake {{curve l 0.9958 k x5 0.95 0.8 x20 0.5 x40 0.3 x80 0.2 l x200 0.1}}
}
set N96fa9600 [stack 0]
Merge2 {
inputs 2
operation minus
name Merge1
xpos 290
ypos 231
}
push $N96fa9600
Switch {
inputs 2
which {{"\[value chew]>=0?0:1"}}
name Switch2
xpos 180
ypos 279
}
Clamp {
name Clamp2
xpos 180
ypos 321
}
Blur {
size {{"(floor(abs(\[value soften]))/4)+(floor(abs(\[value soften]))/8)"}}
name BlurResult
xpos 180
ypos 441
}
push $N6d203200
ShuffleCopy {
inputs 2
name ShuffleCopy1
xpos -40
ypos 447
}
Premult {
name Premult1
xpos -40
ypos 495
disable {{"1-\[value matteMult]"}}
}
Output {
name Output1
xpos -40
ypos 567
}
end_group
Dot {
name Dot132
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 10660
ypos -7759
}
push $N6d876b00
Unpremult {
channels all
name Unpremult4
selected true
xpos 10464
ypos -7912
}
Group {
inputs 2
name GradeAOV
help "Colour correct the CG beauty using the secondary(aov) passes.with a subtractive process.\nto be used when:\n * the CG is good and only a few passes need adjusting\n * the secondaries don't add up to the beauty\n * rgb saturation (luminance mix on)\n * rgb contrast (with pivot)\n * matting with external mask input or main channel input or both with an operation.\n The order of correction is: Grade Node>Contrast Node>Saturation."
tile_color 0x8aa7dbff
label " \[value in]\nCore"
selected true
xpos 10464
ypos -7775
disable true
addUserKnob {20 User l GradeAOV}
addUserKnob {41 in l "Channel to use" T Shuffle5345.in}
addUserKnob {41 AlsoGradeChannel l "Also Grade Channel" t "as well as grading the beauty bake the grade into the selected channel" -STARTLINE T ShuffleCopy1544235.AlsoGradeChannel}
addUserKnob {41 solo T Switch3.solo}
addUserKnob {41 mute -STARTLINE T Switch3.mute}
addUserKnob {41 contact -STARTLINE T Switch3.contact}
addUserKnob {26 spacetxt l "                                                                                         " -STARTLINE T " "}
addUserKnob {22 NodeExpCopy l "Node Exp Copy" -STARTLINE T "knobsList = \[\"blackpoint\", \"whitepoint\", \"black\", \"white\", \"multiply\", \"add\", \"gamma\", \"reverse\", \"black_clamp\", \"white_clamp\", \"enable_mix_luminance\", \"mix_luminance\", \"value\", \"grey\", \"saturation\",\n \"enable_mix_luminance_1\", \"mix_luminance_1\", \"alpha\", \"mixBlend\"]\nnukescripts.clear_selection_recursive()\nn = nuke.thisNode()\nn\['selected'].setValue(True)\nwith nuke.root():\n nuke.nodeCopy(\"%clipboard%\")\n nuke.nodePaste(\"%clipboard%\")\n new_node = nuke.selectedNode()\n\n for j in new_node.knobs():\n\n  if j in  knobsList:\n   if isinstance(new_node.knob(j), nuke.Array_Knob):\n     new_node\[j].setSingleValue(False)\n   new_node\[j].setExpression( n.name() + '.' + j )\n\n\n"}
addUserKnob {26 ""}
addUserKnob {41 blackpoint T Grade273535.blackpoint}
addUserKnob {41 whitepoint T Grade273535.whitepoint}
addUserKnob {41 black l lift T Grade273535.black}
addUserKnob {41 white l gain T Grade273535.white}
addUserKnob {41 multiply T Grade273535.multiply}
addUserKnob {41 add l offset T Grade273535.add}
addUserKnob {41 gamma T Grade273535.gamma}
addUserKnob {41 reverse T Grade273535.reverse}
addUserKnob {41 black_clamp l "black clamp" -STARTLINE T Grade273535.black_clamp}
addUserKnob {41 white_clamp l "white clamp" -STARTLINE T Grade273535.white_clamp}
addUserKnob {26 text2 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance l "" -STARTLINE T Grade273535.enable_mix_luminance}
addUserKnob {41 mix_luminance l "" -STARTLINE T Grade273535.mix_luminance}
addUserKnob {26 "" l "  "}
addUserKnob {41 value l Contrast t " " T contrast.value}
addUserKnob {41 grey T contrast.grey}
addUserKnob {41 saturation T ColorCorrect6.saturation}
addUserKnob {26 text3 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance_1 l "" -STARTLINE T ColorCorrect6.enable_mix_luminance}
addUserKnob {41 mix_luminance_1 l "" -STARTLINE T ColorCorrect6.mix_luminance}
addUserKnob {26 ""}
addUserKnob {41 maskChannel l "mask channel" t "if the mask input is unplugged then the input channel can be used" T Keymix3.maskChannel}
addUserKnob {41 invertMask l invert -STARTLINE T Keymix3.invertMask}
addUserKnob {26 ""}
addUserKnob {41 alpha l "(un)premult by" T Unpremult13535.alpha}
addUserKnob {41 mixBlend l mix T Blend1.mixBlend}
addUserKnob {20 Info}
addUserKnob {22 documentation l " Documentation / Feedback " T "import webbrowser\nwebbrowser.open(\"http://opennuke.github.io/gradeAov_nkV/\")" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {26 version l version: T v1.2}
addUserKnob {26 created l created: T "1/1/2015 by <a href=\\'http://movingimagearts.com'> Rafal Kaniewski</a>"}
addUserKnob {26 modified l "modified: " T "01/10/2016 :update to fix back clamp by Rafal_Kan\n2017/12/19 :v1: forked, renamed, premult per channel, colourspaceShift\n2018/01/01: added copyExpNode and solo/mute"}
addUserKnob {26 source l source: T "<a href='https://github.com/vfxwiki/gradeAOV/'> Github.com</a>"}
addUserKnob {26 licence l licence: T "<a href=\"https://github.com/openNuke/toolset/blob/master/LICENCE\">READ ME</a>"}
}
Input {
inputs 0
name Input
xpos -220
ypos -721
}
set N96f63900 [stack 0]
Dot {
name Dot8
xpos -995
ypos -718
}
Dot {
name Dot5
xpos -995
ypos 105
}
set N96f62b00 [stack 0]
Dot {
name Dot9
xpos -995
ypos 217
}
LayerContactSheet {
width {{width*6}}
height {{height*6}}
showLayerNames true
name LayerContactSheet1
xpos -632
ypos 213
}
push $N96f63900
Dot {
name Dot1
xpos -186
ypos -633
}
set N96f61600 [stack 0]
Dot {
name Dot27
xpos -457
ypos -567
}
set N96f60f00 [stack 0]
Dot {
name Dot26
xpos -646
ypos -567
}
Shuffle {
in rgb
in2 alpha
alpha red2
name Shuffle5345
xpos -680
ypos -533
}
Premult {
name Premult1
xpos -680
ypos -507
}
set N96f3f900 [stack 0]
push $N96f60f00
Merge2 {
inputs 2
operation from
Achannels rgb
Bchannels rgb
output rgb
name From
xpos -491
ypos -507
}
Dot {
name Dot15
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -457
ypos -422
}
set N96f3eb00 [stack 0]
Dot {
name Dot12
xpos -922
ypos -422
}
Dot {
name Dot14
xpos -922
ypos 172
}
push $N96f3f900
Unpremult {
alpha -rgba.alpha
name Unpremult13535
xpos -680
ypos -469
disable {{!alpha}}
addUserKnob {20 User}
}
Grade {
channels all
multiply 1.1
black_clamp false
name Grade273535
xpos -680
ypos -380
addUserKnob {20 User}
addUserKnob {18 exposure R -1 1}
exposure {{multiply==0|white==0|multiply==0?0:log10(multiply)/log10(2)+log10(white)/log10(2)}}
addUserKnob {6 exposure_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
Expression {
expr0 "pow(r/grey, value+1)*grey"
expr1 "pow(g/grey, value+1)*grey"
expr2 "pow(b/grey, value+1)*grey"
name contrast
xpos -680
ypos -322
addUserKnob {20 User}
addUserKnob {7 grey}
grey 0.47
addUserKnob {18 value R -1 1}
value 0.35
addUserKnob {6 value_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
ColorCorrect {
channels all
saturation 0.85
enable_mix_luminance false
name ColorCorrect6
xpos -680
ypos -273
}
set N96f28100 [stack 0]
Dot {
name Dot4
xpos -833
ypos -263
}
Dot {
name Dot7
xpos -833
ypos 157
}
Dot {
name Dot10
xpos -403
ypos 186
}
Input {
inputs 0
name mask
label mask
xpos 65
ypos -760
number 1
}
Dot {
name Dot13
xpos 99
ypos 105
}
push $N96f62b00
Dot {
name Dot11
xpos -435
ypos 105
}
set N96efc800 [stack 0]
Switch {
inputs 2
which {{"\[exists parent.input1]"}}
name Switch1
xpos -177
ypos 101
disable {{"!\[exists parent.input1]"}}
}
Invert {
name Invert1
xpos -177
ypos 127
}
push $N96efc800
push $N96f28100
Dot {
name Dot6
xpos -646
ypos 39
}
push $N96f61600
Dot {
name Dot2
xpos -186
ypos -321
}
Dot {
name Dot3
xpos -284
ypos -321
}
push $N96f28100
push $N96f3eb00
Clamp {
channels rgb
minimum_enable {{parent.Grade273535.black_clamp}}
maximum 1e+14
maximum_enable {{parent.Grade273535.white_clamp}}
name Clamp135345
xpos -491
ypos -374
}
Merge2 {
inputs 2
operation plus
Achannels rgb
Bchannels rgb
output rgb
name Merge34
xpos -491
ypos -267
}
Premult {
alpha {{{Unpremult1.alpha}}}
name Premult435345345
xpos -487
ypos -142
disable {{Unpremult13535.disable}}
}
Blend {
inputs 2
channels rgb
weight0 {{mixBlend}}
weight1 {{1-weight0}}
name Blend1
xpos -318
ypos -142
addUserKnob {20 User}
addUserKnob {7 mixBlend}
mixBlend 1
}
ShuffleCopy {
inputs 2
in {{{Shuffle.in}}}
alpha alpha2
black red
white green
red2 blue
out2 {{{Shuffle.in}}}
name ShuffleCopy1544235
xpos -318
ypos 35
disable {{!AlsoGradeChannel}}
addUserKnob {20 User}
addUserKnob {6 AlsoGradeChannel l "Also Grade Channel" +STARTLINE}
AlsoGradeChannel true
}
Keymix {
inputs 3
channels rgb
name Keymix3
xpos -318
ypos 161
disable {{!maskChannel}}
}
Switch {
inputs 4
which {{contact?3:mute?2:solo?1:0}}
name Switch3
xpos -318
ypos 196
addUserKnob {20 User}
addUserKnob {4 output M {"rgb graded by channel" "preview channel (solo)" "preview without (mute)" "channel contact sheet" "" "" "" "" ""}}
output "preview channel (solo)"
addUserKnob {6 solo +STARTLINE}
addUserKnob {6 mute -STARTLINE}
addUserKnob {6 contact -STARTLINE}
}
Output {
name Output1
xpos -318
ypos 385
}
end_group
Grade {
inputs 1+1
blackpoint 0.1
multiply 0.5
gamma 1.2
invert_mask true
name Grade13
label smoke
selected true
xpos 10463
ypos -7677
}
Grade {
inputs 1+1
channels alpha
gamma 1.3
white_clamp true
invert_mask true
name Grade14
label "smoke thickness"
selected true
xpos 10463
ypos -7606
}
Group {
name GradeAOV15
help "Colour correct the CG beauty using the secondary(aov) passes.with a subtractive process.\nto be used when:\n * the CG is good and only a few passes need adjusting\n * the secondaries don't add up to the beauty\n * rgb saturation (luminance mix on)\n * rgb contrast (with pivot)\n * matting with external mask input or main channel input or both with an operation.\n The order of correction is: Grade Node>Contrast Node>Saturation."
tile_color 0x8aa7dbff
label " \[value in]"
selected true
xpos 10463
ypos -7541
addUserKnob {20 User l GradeAOV}
addUserKnob {41 in l "Channel to use" T Shuffle5345.in}
addUserKnob {41 AlsoGradeChannel l "Also Grade Channel" t "as well as grading the beauty bake the grade into the selected channel" -STARTLINE T ShuffleCopy1544235.AlsoGradeChannel}
addUserKnob {41 solo T Switch3.solo}
addUserKnob {41 mute -STARTLINE T Switch3.mute}
addUserKnob {41 contact -STARTLINE T Switch3.contact}
addUserKnob {26 spacetxt l "                                                                                         " -STARTLINE T " "}
addUserKnob {22 NodeExpCopy l "Node Exp Copy" -STARTLINE T "knobsList = \[\"blackpoint\", \"whitepoint\", \"black\", \"white\", \"multiply\", \"add\", \"gamma\", \"reverse\", \"black_clamp\", \"white_clamp\", \"enable_mix_luminance\", \"mix_luminance\", \"value\", \"grey\", \"saturation\",\n \"enable_mix_luminance_1\", \"mix_luminance_1\", \"alpha\", \"mixBlend\"]\nnukescripts.clear_selection_recursive()\nn = nuke.thisNode()\nn\['selected'].setValue(True)\nwith nuke.root():\n nuke.nodeCopy(\"%clipboard%\")\n nuke.nodePaste(\"%clipboard%\")\n new_node = nuke.selectedNode()\n\n for j in new_node.knobs():\n\n  if j in  knobsList:\n   if isinstance(new_node.knob(j), nuke.Array_Knob):\n     new_node\[j].setSingleValue(False)\n   new_node\[j].setExpression( n.name() + '.' + j )\n\n\n"}
addUserKnob {26 ""}
addUserKnob {41 blackpoint T Grade273535.blackpoint}
addUserKnob {41 whitepoint T Grade273535.whitepoint}
addUserKnob {41 black l lift T Grade273535.black}
addUserKnob {41 white l gain T Grade273535.white}
addUserKnob {41 multiply T Grade273535.multiply}
addUserKnob {41 add l offset T Grade273535.add}
addUserKnob {41 gamma T Grade273535.gamma}
addUserKnob {41 reverse T Grade273535.reverse}
addUserKnob {41 black_clamp l "black clamp" -STARTLINE T Grade273535.black_clamp}
addUserKnob {41 white_clamp l "white clamp" -STARTLINE T Grade273535.white_clamp}
addUserKnob {26 text2 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance l "" -STARTLINE T Grade273535.enable_mix_luminance}
addUserKnob {41 mix_luminance l "" -STARTLINE T Grade273535.mix_luminance}
addUserKnob {26 "" l "  "}
addUserKnob {41 value l Contrast t " " T contrast.value}
addUserKnob {41 grey T contrast.grey}
addUserKnob {41 saturation T ColorCorrect6.saturation}
addUserKnob {26 text3 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance_1 l "" -STARTLINE T ColorCorrect6.enable_mix_luminance}
addUserKnob {41 mix_luminance_1 l "" -STARTLINE T ColorCorrect6.mix_luminance}
addUserKnob {26 ""}
addUserKnob {41 maskChannel l "mask channel" t "if the mask input is unplugged then the input channel can be used" T Keymix3.maskChannel}
addUserKnob {41 invertMask l invert -STARTLINE T Keymix3.invertMask}
addUserKnob {26 ""}
addUserKnob {41 alpha l "(un)premult by" T Unpremult13535.alpha}
addUserKnob {41 mixBlend l mix T Blend1.mixBlend}
addUserKnob {20 Info}
addUserKnob {22 documentation l " Documentation / Feedback " T "import webbrowser\nwebbrowser.open(\"http://opennuke.github.io/gradeAov_nkV/\")" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {26 version l version: T v1.2}
addUserKnob {26 created l created: T "1/1/2015 by <a href=\\'http://movingimagearts.com'> Rafal Kaniewski</a>"}
addUserKnob {26 modified l "modified: " T "01/10/2016 :update to fix back clamp by Rafal_Kan\n2017/12/19 :v1: forked, renamed, premult per channel, colourspaceShift\n2018/01/01: added copyExpNode and solo/mute"}
addUserKnob {26 source l source: T "<a href='https://github.com/vfxwiki/gradeAOV/'> Github.com</a>"}
addUserKnob {26 licence l licence: T "<a href=\"https://github.com/openNuke/toolset/blob/master/LICENCE\">READ ME</a>"}
}
Input {
inputs 0
name Input
xpos -220
ypos -721
}
set Nad5b4f00 [stack 0]
Dot {
name Dot8
xpos -995
ypos -718
}
Dot {
name Dot5
xpos -995
ypos 105
}
set Nad5b4100 [stack 0]
Dot {
name Dot9
xpos -995
ypos 217
}
LayerContactSheet {
width {{width*6}}
height {{height*6}}
showLayerNames true
name LayerContactSheet1
xpos -632
ypos 213
}
push $Nad5b4f00
Dot {
name Dot1
xpos -186
ypos -633
}
set Nad59eb00 [stack 0]
Dot {
name Dot27
xpos -457
ypos -567
}
set Nad59e400 [stack 0]
Dot {
name Dot26
xpos -646
ypos -567
}
Shuffle {
in rgb
in2 alpha
alpha red2
name Shuffle5345
xpos -680
ypos -533
}
Premult {
name Premult1
xpos -680
ypos -507
}
set Nad59cf00 [stack 0]
push $Nad59e400
Merge2 {
inputs 2
operation from
Achannels rgb
Bchannels rgb
output rgb
name From
xpos -491
ypos -507
}
Dot {
name Dot15
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -457
ypos -422
}
set Nad59c100 [stack 0]
Dot {
name Dot12
xpos -922
ypos -422
}
Dot {
name Dot14
xpos -922
ypos 172
}
push $Nad59cf00
Unpremult {
alpha -rgba.alpha
name Unpremult13535
xpos -680
ypos -469
disable {{!alpha}}
addUserKnob {20 User}
}
Grade {
channels all
multiply 15
black_clamp false
name Grade273535
xpos -680
ypos -380
addUserKnob {20 User}
addUserKnob {18 exposure R -1 1}
exposure {{multiply==0|white==0|multiply==0?0:log10(multiply)/log10(2)+log10(white)/log10(2)}}
addUserKnob {6 exposure_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
Expression {
expr0 "pow(r/grey, value+1)*grey"
expr1 "pow(g/grey, value+1)*grey"
expr2 "pow(b/grey, value+1)*grey"
name contrast
xpos -680
ypos -322
addUserKnob {20 User}
addUserKnob {7 grey}
grey 0.055
addUserKnob {18 value R -1 1}
value {0 0 0}
addUserKnob {6 value_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
ColorCorrect {
channels all
enable_mix_luminance false
name ColorCorrect6
xpos -680
ypos -273
}
set Nad565600 [stack 0]
Dot {
name Dot4
xpos -833
ypos -263
}
Dot {
name Dot7
xpos -833
ypos 157
}
Dot {
name Dot10
xpos -403
ypos 186
}
Input {
inputs 0
name mask
label mask
xpos 65
ypos -760
number 1
}
Dot {
name Dot13
xpos 99
ypos 105
}
push $Nad5b4100
Dot {
name Dot11
xpos -435
ypos 105
}
set Nad539d00 [stack 0]
Switch {
inputs 2
which {{"\[exists parent.input1]"}}
name Switch1
xpos -177
ypos 101
disable {{"!\[exists parent.input1]"}}
}
Invert {
name Invert1
xpos -177
ypos 127
}
push $Nad539d00
push $Nad565600
Dot {
name Dot6
xpos -646
ypos 39
}
push $Nad59eb00
Dot {
name Dot2
xpos -186
ypos -321
}
Dot {
name Dot3
xpos -284
ypos -321
}
push $Nad565600
push $Nad59c100
Clamp {
channels rgb
minimum_enable {{parent.Grade273535.black_clamp}}
maximum 1e+14
maximum_enable {{parent.Grade273535.white_clamp}}
name Clamp135345
xpos -491
ypos -374
}
Merge2 {
inputs 2
operation plus
Achannels rgb
Bchannels rgb
output rgb
name Merge34
xpos -491
ypos -267
}
Premult {
alpha {{{Unpremult1.alpha}}}
name Premult435345345
xpos -487
ypos -142
disable {{Unpremult13535.disable}}
}
Blend {
inputs 2
channels rgb
weight0 {{mixBlend}}
weight1 {{1-weight0}}
name Blend1
xpos -318
ypos -142
addUserKnob {20 User}
addUserKnob {7 mixBlend}
mixBlend 1
}
ShuffleCopy {
inputs 2
in {{{Shuffle.in}}}
alpha alpha2
black red
white green
red2 blue
out2 {{{Shuffle.in}}}
name ShuffleCopy1544235
xpos -318
ypos 35
disable {{!AlsoGradeChannel}}
addUserKnob {20 User}
addUserKnob {6 AlsoGradeChannel l "Also Grade Channel" +STARTLINE}
AlsoGradeChannel true
}
Keymix {
inputs 3
channels rgb
maskChannel -rgba.alpha
name Keymix3
xpos -318
ypos 161
disable {{!maskChannel}}
}
Switch {
inputs 4
which {{contact?3:mute?2:solo?1:0}}
name Switch3
xpos -318
ypos 196
addUserKnob {20 User}
addUserKnob {4 output M {"rgb graded by channel" "preview channel (solo)" "preview without (mute)" "channel contact sheet" "" "" "" "" ""}}
output "preview channel (solo)"
addUserKnob {6 solo +STARTLINE}
addUserKnob {6 mute -STARTLINE}
addUserKnob {6 contact -STARTLINE}
}
Output {
name Output1
xpos -318
ypos 385
}
end_group
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy14
selected true
xpos 10468
ypos -7493
}
Premult {
channels all
name Premult9
selected true
xpos 10468
ypos -7439
}
Copy {
inputs 2
from0 rgba.alpha
to0 -rgba.alpha
channels zDepth
name Copy15
selected true
xpos 10468
ypos -7383
}
Group {
inputs 2
name TrueExponentialBlur1
tile_color 0xcc804eff
selected true
xpos 10464
ypos -7159
disable true
addUserKnob {20 BlankKernel}
addUserKnob {41 "Local GPU: " T BlinkScript2.gpuName}
addUserKnob {41 "Use GPU if Available" T BlinkScript2.useGPUIfAvailable}
addUserKnob {26 ""}
addUserKnob {41 method T Switch1.method}
addUserKnob {41 cropToFormat l "crop to format" -STARTLINE T CopyBBox1.cropToFormat}
addUserKnob {41 enableBlackOutside l "black outside" -STARTLINE T BlackOutside1.enableBlackOutside}
addUserKnob {41 size_1 l radius T NoOp1.size}
addUserKnob {26 _1 l "'True' tweaks"}
addUserKnob {41 trueFalloffEdgeSoften l "radial mask" T BlinkScript2.trueFalloffEdgeSoften}
addUserKnob {41 edgeSoftenLimitGamma l "radial gamma" T BlinkScript2.edgeSoftenLimitGamma}
addUserKnob {26 _2 l "'Exponent' tweaks"}
addUserKnob {41 exponentLinear l exponent T BlinkScript2.exponentLinear}
addUserKnob {41 TrueExponentialBlurKernel_exponent l "exponent effect on curve" -STARTLINE T BlinkScript2.TrueExponentialBlurKernel_exponent}
addUserKnob {41 quality -STARTLINE T BlinkScript2.quality}
addUserKnob {26 ""}
addUserKnob {41 maskChannelInput l mask T Merge1.maskChannelInput}
addUserKnob {41 inject -STARTLINE T Merge1.inject}
addUserKnob {41 invert_mask l invert -STARTLINE T Merge1.invert_mask}
addUserKnob {41 fringe -STARTLINE T Merge1.fringe}
addUserKnob {41 mix T Merge1.mix}
addUserKnob {26 ""}
addUserKnob {26 credit l "" +STARTLINE T "Chris Fryer | 2021\n"}
}
Input {
inputs 0
name mask
xpos 229
ypos 108
number 1
}
Dot {
name Dot4
xpos 272
ypos 695
}
Input {
inputs 0
name img
xpos 93
ypos 110
}
Dot {
name Dot2
xpos 127
ypos 315
}
set N6d54b200 [stack 0]
BlackOutside {
name BlackOutside1
xpos 12
ypos 312
disable {{1-enableBlackOutside}}
addUserKnob {20 User}
addUserKnob {6 enableBlackOutside l "black outside" +STARTLINE}
}
Dot {
name Dot3
xpos -22
ypos 315
}
set N6d54a400 [stack 0]
Dot {
name Dot6
xpos -153
ypos 315
}
set N6d549d00 [stack 0]
Dot {
name Dot5
xpos -153
ypos 664
}
Crop {
inputs 0
box {0 0 {abs(parent.BlinkScript2.size.w)} {abs(parent.BlinkScript2.size.h)}}
reformat true
crop false
name Crop1
xpos -480
ypos 283
}
AdjBBox {
numpixels {{parent.Crop1.box.r/2} {parent.Crop1.box.t/2}}
name AdjBBox2
xpos -480
ypos 307
}
Expression {
temp_name0 radius
temp_expr0 BlinkScript2.size.w
temp_name1 sizeW
temp_expr1 BlinkScript2.size.w
temp_name2 sizeH
temp_expr2 BlinkScript2.size.h
temp_name3 exponent
temp_expr3 BlinkScript2.TrueExponentialBlurKernel_exponent
expr0 "1/(pow(pow( (centre.x - x)**2 + (((centre.y - y)**2)*(sizeW/sizeH)**2), 0.5),2))"
expr1 "max((radius - pow( (centre.x - x)**2 + (((centre.y - y)**2)*(sizeW/sizeH)**2), 0.5))/radius,0)"
expr3 "pow(max((radius - pow( (centre.x - x)**2 + (((centre.y - y)**2)*(sizeW/sizeH)**2), 0.5))/radius,0),exponent)"
name Expression2
xpos -480
ypos 375
addUserKnob {20 User}
addUserKnob {12 centre}
centre {{width/2} {height/2}}
}
Expression {
expr0 "isinf(r) ? 1 : r*pow((1+(g-1)*BlinkScript2.trueFalloffEdgeSoften),1/BlinkScript2.edgeSoftenLimitGamma)"
name Expression1
xpos -480
ypos 435
}
Shuffle {
alpha red
name Shuffle1
xpos -480
ypos 459
disable {{"Switch1.method < 2"}}
}
Dot {
name Dot7
xpos -446
ypos 511
}
push $N6d549d00
Dot {
name Dot8
xpos -288
ypos 315
}
Convolve2 {
inputs 2
channels rgba
useGPUIfAvailable {{parent.BlinkScript2.useGPUIfAvailable}}
name Convolve1
xpos -322
ypos 508
disable {{"1-(BlinkScript2.size.w >= 1 || BlinkScript2.size.h >= 1 || BlinkScript2.size.w <= -1 || BlinkScript2.size.h <= -1)"}}
}
Dot {
name Dot9
xpos -288
ypos 621
}
push $N6d54a400
AdjBBox {
numpixels {{abs(parent.BlinkScript2.size)} {abs(parent.BlinkScript2.size)}}
name AdjBBox1
xpos -56
ypos 379
}
set N6d51cf00 [stack 0]
Reformat {
type scale
scale {{"abs(BlinkScript2.size.w) > BlinkScript2.quality.w ? BlinkScript2.quality.w/abs(BlinkScript2.size.w) : 1"} {"abs(BlinkScript2.size.h) > BlinkScript2.quality.h ? BlinkScript2.quality.h/abs(BlinkScript2.size.h) : 1"}}
resize distort
filter Lanczos6
pbb true
name Reformat1
xpos -56
ypos 424
disable {{"abs(BlinkScript2.size.w) > BlinkScript2.quality.w || abs(BlinkScript2.size.h) > BlinkScript2.quality.h ? 0 : 1"}}
}
BlinkScript {
recompileCount 195
ProgramGroup 1
KernelDescription "2 \"TrueExponentialBlurKernel\" iterate pixelWise 0a90b2dbaa8d28a55bcb8418c6bb411880d3effaa99d3c07e88e7065f3f94fe1 2 \"src\" Read Ranged2D \"dst\" Write Point 2 \"size\" Float 2 AAAAAAAAAAA= \"exponent\" Float 1 AAAAQA== 2 \"size\" 2 1 \"exponent\" 1 1 2 \"srcrangeMin\" Int 2 1 AAAAAAAAAAA= \"srcrangeMax\" Int 2 1 AAAAAAAAAAA="
kernelSource "\nkernel TrueExponentialBlurKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRanged2D, eEdgeClamped> src; // the input image\n  Image<eWrite> dst; // the output image\n\n  param:\n    // This parameter is made available to the user.\n    float2 size;\n    float exponent;\n\n  local:\n    // This local variable is not exposed to the user.\n    \n    \n  // In define(), parameters can be given labels and default values.\n  void define() \{\n    defineParam(exponent, \"exponent\", 2.0f);\n  \}\n\n  // The init() function is run before any calls to process().\n  // Local variables can be initialized here.\n  void init() \{\n    src.setRange(-ceil(size.x), -ceil(size.y), ceil(size.x), ceil(size.y));\n    //dst.setRange(-ceil(size.x), -ceil(size.y), ceil(size.x), ceil(size.y));\n  \}\n\n  void process() \{\n\n    float4 output = 0.0f;    \n    float4 convolver = 0.0f;\n    float4 normaliser = 0.0f;\n      \n    for(int X = -ceil(size.x); X <= ceil(size.x); X++)\{\n      for(int Y = -ceil(size.y); Y <= ceil(size.y); Y++)\{        \n        \n        normaliser +=    pow(max((size.x - pow((pow(X,2)+pow((Y*(size.x/size.y)),2)),0.5f)),0.0f),exponent);      \n\n      \}\n    \}\n    \n\n    for(int X = -ceil(size.x); X <= ceil(size.x); X++)\{\n      for(int Y = -ceil(size.y); Y <= ceil(size.y); Y++)\{        \n\n        \n        convolver = pow(max((size.x - pow((pow(X,2)+pow((Y*(size.x/size.y)),2)),0.5f)),0.0f),exponent);       \n        \n        output += src(X,Y)*(convolver/normaliser);\n        \n      \}\n    \}\n    \n    dst() = output;\n  \}\n\};\n"
rebuild ""
TrueExponentialBlurKernel_size {{"abs(size.w) > quality.w ? quality.w : abs(size.w)+1"} {"abs(size.h) > quality.h ? quality.h :abs(size.h)+1"}}
TrueExponentialBlurKernel_exponent {{exponentLinear**2}}
rebuild_finalise ""
name BlinkScript2
xpos -56
ypos 470
addUserKnob {20 User}
addUserKnob {7 edgeSoftenLimitGamma R 0 3}
edgeSoftenLimitGamma 0.2
addUserKnob {7 trueFalloffEdgeSoften}
trueFalloffEdgeSoften 1
addUserKnob {7 exponentLinear R 0 8}
exponentLinear 3
addUserKnob {14 quality R 0 100}
quality 15
addUserKnob {14 size R 0 100}
size {{parent.NoOp1.size} {parent.NoOp1.size}}
}
Reformat {
type "to box"
box_width {{AdjBBox1.width}}
box_height {{AdjBBox1.height}}
box_fixed true
resize distort
filter notch
pbb true
name Reformat2
xpos -56
ypos 522
disable {{parent.Reformat1.disable}}
}
Switch {
inputs 2
which {{method}}
name Switch1
label "\[value method]"
xpos -56
ypos 612
addUserKnob {20 User}
addUserKnob {4 method M {"Exponent (Blinkscript \[experimental])" "Exponent (Convolve)" True "" "" ""}}
method True
}
CopyBBox {
inputs 2
name CopyBBox1
xpos -56
ypos 661
disable {{1-cropToFormat}}
addUserKnob {20 User}
addUserKnob {6 cropToFormat l "crop to format" +STARTLINE}
cropToFormat true
}
Dot {
name Dot1
xpos -22
ypos 695
}
push $N6d54b200
Merge2 {
inputs 2+1
operation copy
name Merge1
xpos 93
ypos 692
}
Output {
name Output1
xpos 93
ypos 764
}
push $N6d51cf00
Dot {
name Dot10
xpos 75
ypos 382
}
NoOp {
name NoOp1
xpos 41
ypos 426
addUserKnob {20 User}
addUserKnob {14 size R 0 100}
size 30
}
end_group
Dot {
name Dot318
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 10498
ypos -6835
}
set N6d4cb900 [stack 0]
Dot {
name Dot319
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 10335
ypos -6835
}
set N6d4cb200 [stack 0]
Dot {
name Dot320
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 10198
ypos -6835
}
Transform {
translate {{"\[value \[value matchmove_nodeName].translate.x]*reduceTx"} {"\[value \[value matchmove_nodeName].translate.y]*reduceTy"}}
rotate {{"\[value \[value matchmove_nodeName].rotate]*reduceRot"}}
scale {{"((\[value \[value matchmove_nodeName].scale.w]-1)*reduceSw)+1"} {"((\[value \[value matchmove_nodeName].scale.h]-1)*reduceSh)+1"}}
skewX {{"\[value \[value matchmove_nodeName].skewX]*reduceSkwx"}}
skewY {{"\[value \[value matchmove_nodeName].skewY]*reduceSkwx"}}
center {{"\[value \[value matchmove_nodeName].center.x]"} {"\[value \[value matchmove_nodeName].center.y]"}}
shutteroffset centred
name ReduceMM_Transform4
knobChanged "\n\n"
selected true
xpos 10164
ypos -6673
addUserKnob {20 settings l "Offset MatchMove"}
addUserKnob {1 matchmove_nodeName l "<font color=#e1f2a2>Match-Move Node name:</font>"}
matchmove_nodeName Transform_MatchMove6
addUserKnob {22 add_selectedNode l "<font color=#1ced09>Add selected Node name</font>" t "- Add the selected node name." -STARTLINE T "node_name = nuke.selectedNode().name()\nnuke.thisNode()\['matchmove_nodeName'].setValue(node_name)"}
addUserKnob {26 ""}
addUserKnob {26 data_info l "" +STARTLINE T "<br>\n<font color=#e1f2a2>Reduce values (multiplier):</font> \{1 = original data; 0 = no data\}\n<br>\n"}
addUserKnob {7 reduceTx l "Translate X:"}
reduceTx 0.42
addUserKnob {7 reduceTy l "Translate Y:" -STARTLINE}
reduceTy 0.62
addUserKnob {6 gangT l gang -STARTLINE +INVISIBLE}
addUserKnob {7 reduceRot l Rotation:}
addUserKnob {7 reduceSw l "Scale W:"}
reduceSw 0.78
addUserKnob {7 reduceSh l "Scale H:" -STARTLINE}
reduceSh 0.78
addUserKnob {6 gangS l gang -STARTLINE +INVISIBLE}
addUserKnob {7 reduceSkwx l "Skew X:"}
addUserKnob {7 reduceSkwy l "Skew Y:"}
addUserKnob {20 info_tab l Info}
addUserKnob {26 info l "" +STARTLINE T "<font color=#e1f2a2>ReduceMM_Transform v.1.1.0</font>\n<br>\nauthor: Guillermo Algora"}
}
push $N6d4cb200
CornerPin2D {
to1 {{"((\[value \[value matchmove_nodeName].to1.x] - \[value \[value matchmove_nodeName].from1.x]) * reduceValues) + \[value \[value matchmove_nodeName].from1.x]"} {"((\[value \[value matchmove_nodeName].to1.y] - \[value \[value matchmove_nodeName].from1.y]) * reduceValues) + \[value \[value matchmove_nodeName].from1.y]"}}
to2 {{"((\[value \[value matchmove_nodeName].to2.x] - \[value \[value matchmove_nodeName].from2.x]) * reduceValues) + \[value \[value matchmove_nodeName].from2.x]"} {"((\[value \[value matchmove_nodeName].to2.y] - \[value \[value matchmove_nodeName].from2.y]) * reduceValues) + \[value \[value matchmove_nodeName].from2.y]"}}
to3 {{"((\[value \[value matchmove_nodeName].to3.x] - \[value \[value matchmove_nodeName].from3.x]) * reduceValues) + \[value \[value matchmove_nodeName].from3.x]"} {"((\[value \[value matchmove_nodeName].to3.y] - \[value \[value matchmove_nodeName].from3.y]) * reduceValues) + \[value \[value matchmove_nodeName].from3.y]"}}
to4 {{"((\[value \[value matchmove_nodeName].to4.x] - \[value \[value matchmove_nodeName].from4.x]) * reduceValues) + \[value \[value matchmove_nodeName].from4.x]"} {"((\[value \[value matchmove_nodeName].to4.y] - \[value \[value matchmove_nodeName].from4.y]) * reduceValues) + \[value \[value matchmove_nodeName].from4.y]"}}
invert false
shutteroffset centred
from1 {{"\[value \[value matchmove_nodeName].from1.x]"} {"\[value \[value matchmove_nodeName].from1.y]"}}
from2 {{"\[value \[value matchmove_nodeName].from2.x]"} {"\[value \[value matchmove_nodeName].from2.y]"}}
from3 {{"\[value \[value matchmove_nodeName].from3.x]"} {"\[value \[value matchmove_nodeName].from3.y]"}}
from4 {{"\[value \[value matchmove_nodeName].from4.x]"} {"\[value \[value matchmove_nodeName].from4.y]"}}
name ReduceMM_CornerPin2D4
selected true
xpos 10301
ypos -6765
disable true
addUserKnob {20 settings l "Offset MatchMove"}
addUserKnob {1 matchmove_nodeName l "<font color=#e1f2a2>MatchMove Node name:</font>"}
matchmove_nodeName CornerPin2D1
addUserKnob {22 add_selectedNode l "<font color=#1ced09>Add selected Node name</font>" -STARTLINE T "node_name = nuke.selectedNode().name()\nnuke.thisNode()\['matchmove_nodeName'].setValue(node_name)"}
addUserKnob {7 reduceValues l "<font color=#e1f2a2>Reduce values (multiplier):</font>"}
reduceValues 1
addUserKnob {26 data_info l "" -STARTLINE T "<font color=#e1f2a2>(1 = original data; 0 = no data)</font>"}
addUserKnob {20 info_tab l Info}
addUserKnob {26 info l "" +STARTLINE T "<font color=#e1f2a2>ReduceMM_CornerPin2D v.1.1.0</font>\n<br>\nauthor: Guillermo Algora"}
}
Switch {
inputs 2
name Switch8
selected true
xpos 10301
ypos -6673
disable true
}
push $N6d4cb900
Switch {
inputs 2
name Switch9
selected true
xpos 10464
ypos -6673
disable true
}
Dot {
name Dot321
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 10498
ypos -6628
}
Dot {
name Dot178
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 10498
ypos -6477
}
set N33d82400 [stack 0]
Dot {
name Dot322
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 10498
ypos -6303
}
set N6d49f900 [stack 0]
Dot {
name Dot136
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11416
ypos -6298
}
set N6d49f200 [stack 0]
Dot {
name Dot137
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11416
ypos -6252
}
push $N6d49f200
Blur {
channels rgb
size 50
filter box
name Blur12
selected true
xpos 11551
ypos -6302
}
Merge2 {
inputs 2
operation from
name Merge3
selected true
xpos 11551
ypos -6256
}
Multiply {
channels rgb
value 0.75
name Multiply5
selected true
xpos 11551
ypos -6230
}
Clamp {
maximum 5
name Clamp1
selected true
xpos 11551
ypos -6191
}
Blur {
size 2
name Blur11
selected true
xpos 11551
ypos -6145
}
Dot {
name Dot140
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11585
ypos -6057
}
Camera2 {
inputs 0
read_from_file true
translate {{curve x1000 -1125.078662 -1123.229476 -1121.380289 -1119.504944 -1117.598025 -1115.672445 -1113.744156 -1111.836962 -1109.969878 -1108.162285 -1106.421331 -1104.744338 -1103.148997 -1101.634178 -1100.209233 -1098.872954 -1097.620006 -1096.477329 -1095.436279 -1094.503538 -1093.673729 -1092.940276 -1092.325901 -1091.816622 -1091.406439 -1091.071566 -1090.786225 -1090.548221 -1090.346679 -1090.187143 -1090.068306 -1089.984395 -1089.93594 -1089.91546 -1089.925636 -1089.966264 -1090.031628 -1090.123356 -1090.240507 -1090.392352 -1090.581899 -1090.80381 -1091.053066 -1091.315158 -1091.58427 -1091.85876 -1092.138215 -1092.420005 -1092.698681 -1092.967568 -1093.220495 -1093.456864 -1093.675742 -1093.879845 -1094.068057 -1094.243637 -1094.414287 -1094.582732 -1094.749973 -1094.909772 -1095.057094 -1095.190626 -1095.310715 -1095.422318 -1095.523058 -1095.604736 -1095.660997 -1095.68757 -1095.688947 -1095.664629 -1095.615809 -1095.548856 -1095.466298 -1095.374955 -1095.273075 -1095.159074 -1095.0318 -1094.888501 -1094.733573 -1094.570039 -1094.402077 -1094.232951 -1094.063731 -1093.892264 -1093.717308 -1093.541138 -1093.366467 -1093.194239 -1093.022909 -1092.853915 -1092.689326 -1092.529246 -1092.37225 -1092.218234 -1092.067059 -1091.917694 -1091.768531 -1091.617514 -1091.464491 -1091.310898 -1091.158335 -1091.00621 -1090.854125 -1090.701601 -1090.54935 -1090.397276 -1090.247255 -1090.106159 -1089.977008 -1089.858567 -1089.746381 -1089.638661 -1089.537698 -1089.444141 -1089.357484 -1089.275852 -1089.195988 -1089.114159 -1089.028183 -1088.939456 -1088.851614 -1088.766148 -1088.681089 -1088.593577 -1088.505567 -1088.421359 -1088.342946 -1088.271026 -1088.204123 -1088.143226 -1088.09018 -1088.046807 -1088.016052 -1087.997433 -1087.988262 -1087.983385 -1087.980313 -1087.981563 -1087.985962 -1087.988221 -1087.984619 -1087.976773 -1087.968472 -1087.960773 -1087.955321 -1087.955416 -1087.964344 -1087.983826 -1088.012964 -1088.052095 -1088.100847 -1088.156851 -1088.216641 -1088.275274 -1088.331379 -1088.385861 -1088.43962 -1088.49363 -1088.548925 -1088.607416 -1088.668714 -1088.731119 -1088.793523} {curve x1000 5203.612903 5203.583299 5203.553696 5203.522423 5203.490004 5203.457707 5203.430809 5203.419892 5203.427831 5203.448255 5203.470812 5203.487446 5203.494706 5203.491564 5203.485301 5203.488361 5203.509839 5203.548726 5203.594997 5203.637887 5203.672411 5203.697794 5203.711221 5203.711531 5203.7018 5203.688845 5203.677435 5203.667329 5203.658808 5203.653645 5203.656291 5203.667124 5203.675904 5203.669275 5203.641848 5203.598953 5203.549205 5203.500179 5203.457886 5203.425239 5203.402223 5203.387626 5203.381114 5203.382172 5203.384411 5203.376992 5203.355866 5203.32654 5203.295045 5203.261539 5203.222512 5203.177788 5203.135024 5203.104559 5203.091889 5203.09347 5203.100022 5203.105696 5203.109923 5203.114311 5203.117546 5203.115997 5203.108842 5203.099454 5203.094222 5203.096403 5203.104501 5203.115372 5203.127023 5203.139283 5203.152653 5203.168617 5203.187946 5203.208649 5203.226928 5203.240899 5203.250963 5203.258644 5203.266905 5203.279585 5203.296817 5203.314086 5203.329054 5203.342804 5203.357904 5203.376552 5203.403047 5203.44248 5203.493832 5203.550807 5203.605982 5203.654332 5203.69244 5203.720245 5203.742363 5203.765582 5203.793064 5203.82128 5203.845393 5203.86126 5203.86873 5203.870652 5203.869997 5203.870517 5203.876571 5203.891003 5203.911765 5203.934275 5203.955134 5203.976485 5204.002033 5204.032252 5204.065463 5204.099122 5204.131997 5204.163679 5204.196072 5204.230274 5204.262914 5204.288507 5204.306353 5204.322251 5204.342357 5204.368564 5204.395588 5204.417659 5204.434185 5204.448252 5204.463004 5204.479327 5204.497528 5204.517435 5204.536593 5204.550642 5204.558647 5204.563454 5204.568125 5204.57411 5204.582161 5204.593057 5204.607471 5204.626092 5204.648264 5204.672302 5204.693516 5204.706783 5204.709375 5204.701599 5204.686555 5204.665946 5204.641178 5204.61547 5204.594338 5204.582202 5204.579517 5204.583144 5204.58854 5204.592233 5204.592604 5204.591595 5204.591655 5204.593255 5204.594855} {curve x1000 513.3460509 512.8754599 512.4048688 511.9410932 511.469638 510.9609542 510.4012648 509.797836 509.1731074 508.5402084 507.9097455 507.292508 506.6935041 506.1074471 505.5305731 504.9748681 504.4545412 503.9821561 503.5485113 503.1582502 502.8229159 502.5497791 502.3460206 502.1861583 502.0640652 501.9859816 501.9624199 502.0011062 502.0812701 502.1819439 502.2844438 502.3805695 502.4615548 502.5193793 502.5528971 502.5702511 502.5782188 502.57091 502.551302 502.5180037 502.4673092 502.393884 502.2924841 502.1662406 502.0217214 501.8713804 501.7286997 501.6044783 501.4983122 501.4106008 501.3466794 501.3111638 501.3046985 501.3164338 501.3353875 501.3537973 501.3690083 501.3803574 501.3846824 501.383369 501.3800931 501.3786093 501.3847999 501.4053163 501.4426483 501.4886167 501.5343804 501.582858 501.6405993 501.7087918 501.7846239 501.8662298 501.9473429 502.0169067 502.0700671 502.1119329 502.1492 502.183295 502.2154773 502.2443572 502.2676939 502.2854456 502.2962048 502.2982977 502.2899972 502.277303 502.2694187 502.264944 502.2552913 502.2353788 502.2088864 502.1795617 502.1473476 502.1133631 502.0815809 502.0567285 502.0369971 502.016106 501.9908797 501.969123 501.960011 501.9638606 501.9795851 502.007473 502.0558325 502.1266897 502.2154837 502.3234032 502.4500154 502.5957749 502.7542301 502.9168928 503.0799534 503.2405877 503.3977883 503.5498196 503.6958295 503.8341472 503.9644295 504.0888199 504.2144395 504.3465514 504.4803801 504.608737 504.7246832 504.8265415 504.9174831 505.0016744 505.084672 505.1681901 505.2505062 505.3259248 505.3872821 505.4370324 505.4812352 505.5207509 505.5531863 505.5802201 505.6091144 505.6407358 505.6699351 505.6939496 505.7146998 505.7324864 505.7441022 505.7511901 505.7603676 505.7765515 505.7994486 505.827472 505.8591642 505.8961943 505.9426351 505.9957978 506.0480286 506.0961791 506.1411367 506.1796876 506.2107106 506.2435473 506.2875568 506.3410917 506.3946266}}
rotate {{curve x1000 -4.456312328 -4.459339238 -4.462366148 -4.512495177 -4.504240143 -4.380894616 -4.275520071 -4.20546813 -4.150754069 -4.117678498 -4.132208513 -4.212125027 -4.311401694 -4.367583648 -4.43899571 -4.546184234 -4.634185052 -4.649134377 -4.598371911 -4.512329344 -4.47890875 -4.476454637 -4.430842128 -4.343987015 -4.262493098 -4.280274459 -4.348769077 -4.442340803 -4.510467777 -4.495054976 -4.445596759 -4.409328855 -4.387317016 -4.358331278 -4.344525043 -4.366951477 -4.420969166 -4.490298018 -4.553736449 -4.569894054 -4.523471904 -4.422758408 -4.279269529 -4.161232344 -4.03449577 -3.895107035 -3.816594911 -3.765057745 -3.716307458 -3.710396446 -3.735893502 -3.748198072 -3.794614417 -3.847632729 -3.880641616 -3.895676194 -3.880665975 -3.853122472 -3.847836716 -3.869171878 -3.911693949 -3.930726196 -3.932910428 -3.95344084 -3.978849207 -3.980921824 -3.97291123 -3.983933838 -4.016320056 -4.038915712 -4.064447402 -4.096002901 -4.090714948 -4.051543838 -4.011400828 -4.0059554 -4.026335303 -4.059035718 -4.12390806 -4.190887872 -4.245969013 -4.285426895 -4.314975892 -4.356378156 -4.39319588 -4.455874555 -4.537880082 -4.605338396 -4.63434863 -4.64928975 -4.654539551 -4.645172255 -4.631081388 -4.600576016 -4.592816777 -4.596635886 -4.564078557 -4.4890299 -4.407478134 -4.344491474 -4.285067065 -4.222995686 -4.149859928 -4.104118613 -4.080675801 -4.034293945 -3.991228071 -3.948436245 -3.930524343 -3.942244878 -3.955950139 -3.955830186 -3.938622239 -3.931830962 -3.921229467 -3.905570936 -3.909506448 -3.920163765 -3.926018168 -3.934196914 -3.971739248 -4.025507766 -4.082849575 -4.134591031 -4.139607388 -4.120955639 -4.108355688 -4.096751985 -4.120832054 -4.147007833 -4.169614273 -4.166135265 -4.133445147 -4.116212542 -4.123968683 -4.114367404 -4.10156354 -4.099288503 -4.111890289 -4.127132362 -4.128093594 -4.129789205 -4.136184595 -4.127973596 -4.098318768 -4.082127386 -4.067607874 -4.068181984 -4.092182443 -4.114853522 -4.142057979 -4.18309635 -4.249002961 -4.288856562 -4.292661718 -4.298124992 -4.3009167 -4.263349874 -4.222531988 -4.212762125 -4.195136535 -4.159422523 -4.123708511} {curve x1000 -155.4424942 -155.3998911 -155.3572881 -155.3022002 -155.274916 -155.3680192 -155.4731057 -155.5624187 -155.6636248 -155.8187924 -156.0040095 -156.2152932 -156.4308537 -156.65515 -156.8733977 -157.0345489 -157.1167041 -157.1133208 -157.0827051 -157.0417993 -156.9701501 -156.8287547 -156.6478537 -156.4545531 -156.2825611 -156.0728488 -155.8503365 -155.6085165 -155.3205657 -155.0118122 -154.6656512 -154.3297163 -154.0697425 -153.8650212 -153.6806131 -153.5545388 -153.5035446 -153.52823 -153.5352058 -153.5466899 -153.6157968 -153.6995702 -153.8072827 -153.9715395 -154.1543502 -154.3510374 -154.562828 -154.8173486 -155.1163888 -155.4228908 -155.675087 -155.9245072 -156.1915911 -156.5047965 -156.8704111 -157.1867553 -157.4417776 -157.7009402 -157.9610186 -158.2426237 -158.5017282 -158.7023524 -158.8280015 -158.8822102 -158.9077297 -158.9608773 -158.9844528 -158.9190608 -158.8259867 -158.7395525 -158.6280803 -158.4543707 -158.2783486 -158.1123781 -157.9622253 -157.8255772 -157.7423778 -157.6980438 -157.6492218 -157.6357082 -157.6204573 -157.5704052 -157.5566448 -157.5796251 -157.6291715 -157.6414301 -157.6508792 -157.7008995 -157.7800701 -157.8335596 -157.8961633 -158.0041296 -158.1338434 -158.2787621 -158.4462766 -158.6314129 -158.8618549 -159.1340085 -159.4008933 -159.6243541 -159.8316194 -160.0512377 -160.2739542 -160.4550786 -160.5985542 -160.7729115 -160.9039083 -160.9931412 -161.0601147 -161.1492031 -161.2611125 -161.3514274 -161.4099052 -161.4561969 -161.5058295 -161.5547149 -161.6426299 -161.747969 -161.871273 -161.972048 -162.0546365 -162.1669671 -162.3355279 -162.5168318 -162.6906028 -162.8387539 -162.9895645 -163.1287986 -163.2705018 -163.4135088 -163.5517042 -163.7016289 -163.8584459 -163.9869428 -164.104542 -164.2633724 -164.3919617 -164.4582103 -164.5250309 -164.6199621 -164.7327111 -164.8168406 -164.8889561 -164.9678551 -165.0491397 -165.0843995 -165.0953717 -165.1342582 -165.1642279 -165.1950397 -165.2318826 -165.2687073 -165.30286 -165.3435771 -165.399541 -165.4140569 -165.4279417 -165.475622 -165.4961178 -165.4878937 -165.5185848 -165.5910057 -165.6634266} {curve x1000 -0.4603169321 -0.5958196434 -0.7313223546 -0.7903137135 -0.7442905063 -0.7305721128 -0.8010611563 -1.036492155 -1.305007211 -1.479230229 -1.598414664 -1.759976297 -2.079874907 -2.462340612 -2.813128876 -3.101969466 -3.256177993 -3.260786036 -3.16144078 -2.972473112 -2.734506148 -2.541557973 -2.405355054 -2.251753179 -2.137893073 -2.039898918 -1.986465183 -1.979183551 -2.024882097 -2.056453887 -2.012760667 -1.999392107 -2.108491289 -2.236907481 -2.337541807 -2.408703744 -2.377710278 -2.319271535 -2.321468527 -2.365645144 -2.434169636 -2.535132707 -2.622585628 -2.625325666 -2.640909638 -2.629743737 -2.546441961 -2.473587165 -2.440292825 -2.406539276 -2.372559177 -2.370658411 -2.352483358 -2.278236175 -2.214167115 -2.199169617 -2.186206397 -2.143793051 -2.10121132 -2.080262195 -2.055698764 -2.049226383 -2.132290344 -2.250507639 -2.338722395 -2.382706907 -2.394827438 -2.380898216 -2.349431285 -2.324888177 -2.304021904 -2.292175943 -2.281483628 -2.247765291 -2.201659973 -2.118267251 -2.020458234 -1.935301899 -1.853154715 -1.81507426 -1.823602539 -1.813114882 -1.783930817 -1.728289618 -1.694711536 -1.669456277 -1.651368973 -1.617986465 -1.587594942 -1.561947843 -1.548066349 -1.540315829 -1.525461528 -1.512414724 -1.495869891 -1.474259906 -1.417276587 -1.338690467 -1.267205863 -1.229565872 -1.234556408 -1.252474427 -1.33645431 -1.408981257 -1.388452115 -1.354773483 -1.347547664 -1.408551697 -1.464678144 -1.459315902 -1.425380721 -1.404373378 -1.438925629 -1.485413696 -1.550025652 -1.587540966 -1.559737415 -1.508185381 -1.446476322 -1.400802784 -1.358244917 -1.298755417 -1.262649991 -1.237048076 -1.229546359 -1.215895707 -1.219382521 -1.239028661 -1.245201686 -1.241300497 -1.204514427 -1.171864373 -1.219107433 -1.286959553 -1.296034274 -1.284228113 -1.292555521 -1.344298032 -1.393955927 -1.383690437 -1.34362407 -1.283730495 -1.24131064 -1.212943075 -1.190363659 -1.170358932 -1.157337525 -1.146673435 -1.140926472 -1.162206383 -1.207572374 -1.252201866 -1.270193862 -1.251291934 -1.240701826 -1.218400616 -1.140320106 -1.087867417 -1.057218926 -1.002217977 -0.9343048982 -0.8750575069 -0.8158101156}}
scaling {{curve x1000 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1} {curve x1000 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1} {curve x1000 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1}}
uniform_scale {{curve x1000 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1}}
skew {{curve x1000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0} {curve x1000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0} {curve x1000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0}}
pivot {{curve x1000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0} {curve x1000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0} {curve x1000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0}}
focal {{curve x1000 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225 52.27659225}}
haperture {{curve x1000 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595 37.4764595}}
vaperture {{curve x1000 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518 26.09405518}}
near {{curve x1000 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1}}
far {{curve x}}
win_translate {{curve x1000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0} {curve x1000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0}}
win_scale {{curve x1000 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1} {curve x1000 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1}}
focal_point {{curve x1000 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5}}
fstop {{curve x1000 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905 5.599999905}}
file /coppi/proj/thrg/ftrack/assets/s01e01/015-0250/cam/thrg_s01e01_015-0250_renderCamera_v003_alembic/renderCamera_cam_alembic.abc
version 10
frame_rate 25
name renderCamera_alembic
tile_color 0xffff00ff
label "\[lrange \[split \[value file] _] 2 2]\n\[lrange \[split \[value file] _] 4 4]"
selected true
xpos -1163
ypos -19954
addUserKnob {20 ftrack}
addUserKnob {1 componentId}
componentId a9df3139-5a15-4e4c-8438-8aa84326177b
addUserKnob {1 componentName}
componentName alembic
addUserKnob {1 assetVersionId}
assetVersionId d7e32eae-3043-41e0-91fe-08690c4eb2a9
addUserKnob {1 assetVersion}
assetVersion 3
addUserKnob {1 assetName}
assetName renderCamera
addUserKnob {1 assetType}
assetType cam
addUserKnob {4 versionType l "Version Type" M {latest stable pinned}}
versionType stable
}
Dot {
name Dot25
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos -1139
ypos -19828
}
Dot {
name Dot97
tile_color 0x949494ff
label camera
note_font_size 42
note_font_color 0xffffffff
selected true
xpos -1156
ypos -18264
}
Dot {
name Dot398
tile_color 0x949494ff
label camera
note_font_size 42
note_font_color 0xffffffff
selected true
xpos -1156
ypos -16240
}
set N6da5b900 [stack 0]
Dot {
name Dot31
tile_color 0x949494ff
label camera
note_font_size 42
note_font_color 0xffffffff
selected true
xpos -1156
ypos -14669
}
Dot {
name Dot40
tile_color 0x949494ff
label camera
note_font_size 42
note_font_color 0xffffffff
selected true
xpos -1139
ypos -13938
}
set N6da5ab00 [stack 0]
Dot {
name Dot156
tile_color 0xd8b700ff
label "\n From: camera"
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11115
ypos -13894
hide_input true
}
set N6da5a400 [stack 0]
Dot {
name Dot147
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11115
ypos -13736
}
push $N6da5a400
Dot {
name Dot161
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11225
ypos -13894
}
FrameHold {
first_frame 1111
name FrameHold8
selected true
xpos 11191
ypos -13857
}
Axis2 {
inputs 0
rotate {1 -50 0}
name Axis_sky_position1
label "Control Room"
selected true
xpos 12012
ypos -16635
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
}
Dot {
name Dot54
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 12036
ypos -16413
}
Dot {
name Dot55
tile_color 0x949494ff
label axis
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11861
ypos -16413
}
push $N6da5b900
Dot {
name dot3
tile_color 0xd8b700ff
label "\n From: Camera"
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 10586
ypos -16661
hide_input true
}
Dot {
name Dot138
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 10806
ypos -16298
}
FrameHold {
first_frame 1001
name FrameHold2
selected true
xpos 10772
ypos -16202
disable true
}
Dot {
name Dot139
tile_color 0x949494ff
label cam
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11516
ypos -16118
}
Read {
inputs 0
file_type exr
file /coppi/proj/thrg/ftrack/assets/s01e01/img/thrg_s01e01_Ep1_Water_HDRI_flat_v003_temp_8k_lin_ap0/thrg_s01e01_Ep1_Water_HDRI_flat_temp_8k_lin_ap0_v003.%04d.exr
localizationPolicy on
format "8192 4096 0 0 8192 4096 1 8K_LatLong"
first 1001
last 1200
origfirst 1001
origlast 1200
origset true
name Ep1_Water_HDRI_flat_temp_8k_lin_ap0
tile_color 0xe36316ff
selected true
xpos 11166
ypos -18537
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname temp_8k_lin_ap0
addUserKnob {20 ftrack}
addUserKnob {1 componentId}
componentId 4a2c1eb8-18d3-4a8c-b42a-a8a6d849f974
addUserKnob {1 componentName}
componentName temp_8k_lin_ap0
addUserKnob {1 assetVersionId}
assetVersionId 779b9074-a0e5-4d75-85e7-8d98dc9b4fab
addUserKnob {1 assetVersion}
assetVersion 2
addUserKnob {1 assetName}
assetName Ep1_Water_HDRI_flat
addUserKnob {1 assetType}
assetType img
addUserKnob {4 versionType l "Version Type" M {latest stable pinned}}
}
Dot {
name Dot144
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11200
ypos -18252
}
Dot {
name Dot145
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11200
ypos -17392
}
Dot {
name Dot102
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11200
ypos -16657
}
Unpremult {
name Unpremult6
selected true
xpos 11166
ypos -16615
}
set N6da0f200 [stack 0]
push $N6da0f200
add_layer {LS_sun_LGT_all LS_sun_LGT_all.red LS_sun_LGT_all.green LS_sun_LGT_all.blue}
Group {
inputs 2
name GradeAOV13
help "Colour correct the CG beauty using the secondary(aov) passes.with a subtractive process.\nto be used when:\n * the CG is good and only a few passes need adjusting\n * the secondaries don't add up to the beauty\n * rgb saturation (luminance mix on)\n * rgb contrast (with pivot)\n * matting with external mask input or main channel input or both with an operation.\n The order of correction is: Grade Node>Contrast Node>Saturation."
tile_color 0x8aa7dbff
label " \[value in]"
selected true
xpos 11166
ypos -16570
addUserKnob {20 User l GradeAOV}
addUserKnob {41 in l "Channel to use" T Shuffle5345.in}
addUserKnob {41 AlsoGradeChannel l "Also Grade Channel" t "as well as grading the beauty bake the grade into the selected channel" -STARTLINE T ShuffleCopy1544235.AlsoGradeChannel}
addUserKnob {41 solo T Switch3.solo}
addUserKnob {41 mute -STARTLINE T Switch3.mute}
addUserKnob {41 contact -STARTLINE T Switch3.contact}
addUserKnob {26 spacetxt l "                                                                                         " -STARTLINE T " "}
addUserKnob {22 NodeExpCopy l "Node Exp Copy" -STARTLINE T "knobsList = \[\"blackpoint\", \"whitepoint\", \"black\", \"white\", \"multiply\", \"add\", \"gamma\", \"reverse\", \"black_clamp\", \"white_clamp\", \"enable_mix_luminance\", \"mix_luminance\", \"value\", \"grey\", \"saturation\",\n \"enable_mix_luminance_1\", \"mix_luminance_1\", \"alpha\", \"mixBlend\"]\nnukescripts.clear_selection_recursive()\nn = nuke.thisNode()\nn\['selected'].setValue(True)\nwith nuke.root():\n nuke.nodeCopy(\"%clipboard%\")\n nuke.nodePaste(\"%clipboard%\")\n new_node = nuke.selectedNode()\n\n for j in new_node.knobs():\n\n  if j in  knobsList:\n   if isinstance(new_node.knob(j), nuke.Array_Knob):\n     new_node\[j].setSingleValue(False)\n   new_node\[j].setExpression( n.name() + '.' + j )\n\n\n"}
addUserKnob {26 ""}
addUserKnob {41 blackpoint T Grade273535.blackpoint}
addUserKnob {41 whitepoint T Grade273535.whitepoint}
addUserKnob {41 black l lift T Grade273535.black}
addUserKnob {41 white l gain T Grade273535.white}
addUserKnob {41 multiply T Grade273535.multiply}
addUserKnob {41 add l offset T Grade273535.add}
addUserKnob {41 gamma T Grade273535.gamma}
addUserKnob {41 reverse T Grade273535.reverse}
addUserKnob {41 black_clamp l "black clamp" -STARTLINE T Grade273535.black_clamp}
addUserKnob {41 white_clamp l "white clamp" -STARTLINE T Grade273535.white_clamp}
addUserKnob {26 text2 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance l "" -STARTLINE T Grade273535.enable_mix_luminance}
addUserKnob {41 mix_luminance l "" -STARTLINE T Grade273535.mix_luminance}
addUserKnob {26 "" l "  "}
addUserKnob {41 value l Contrast t " " T contrast.value}
addUserKnob {41 grey T contrast.grey}
addUserKnob {41 saturation T ColorCorrect6.saturation}
addUserKnob {26 text3 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance_1 l "" -STARTLINE T ColorCorrect6.enable_mix_luminance}
addUserKnob {41 mix_luminance_1 l "" -STARTLINE T ColorCorrect6.mix_luminance}
addUserKnob {26 ""}
addUserKnob {41 maskChannel l "mask channel" t "if the mask input is unplugged then the input channel can be used" T Keymix3.maskChannel}
addUserKnob {41 invertMask l invert -STARTLINE T Keymix3.invertMask}
addUserKnob {26 ""}
addUserKnob {41 alpha l "(un)premult by" T Unpremult13535.alpha}
addUserKnob {41 mixBlend l mix T Blend1.mixBlend}
addUserKnob {20 Info}
addUserKnob {22 documentation l " Documentation / Feedback " T "import webbrowser\nwebbrowser.open(\"http://opennuke.github.io/gradeAov_nkV/\")" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {26 version l version: T v1.2}
addUserKnob {26 created l created: T "1/1/2015 by <a href=\\'http://movingimagearts.com'> Rafal Kaniewski</a>"}
addUserKnob {26 modified l "modified: " T "01/10/2016 :update to fix back clamp by Rafal_Kan\n2017/12/19 :v1: forked, renamed, premult per channel, colourspaceShift\n2018/01/01: added copyExpNode and solo/mute"}
addUserKnob {26 source l source: T "<a href='https://github.com/vfxwiki/gradeAOV/'> Github.com</a>"}
addUserKnob {26 licence l licence: T "<a href=\"https://github.com/openNuke/toolset/blob/master/LICENCE\">READ ME</a>"}
}
Input {
inputs 0
name Input
xpos -220
ypos -721
}
set N6da0e400 [stack 0]
Dot {
name Dot8
xpos -995
ypos -718
}
Dot {
name Dot5
xpos -995
ypos 105
}
set N6da0d600 [stack 0]
Dot {
name Dot9
xpos -995
ypos 217
}
LayerContactSheet {
width {{width*6}}
height {{height*6}}
showLayerNames true
name LayerContactSheet1
xpos -632
ypos 213
}
push $N6da0e400
Dot {
name Dot1
xpos -186
ypos -633
}
set N6da0c100 [stack 0]
Dot {
name Dot27
xpos -457
ypos -567
}
set N6d9ef900 [stack 0]
Dot {
name Dot26
xpos -646
ypos -567
}
Shuffle {
in LS_sun_LGT_all
in2 alpha
alpha red2
name Shuffle5345
xpos -680
ypos -533
}
Premult {
name Premult1
xpos -680
ypos -507
}
set N6d9ee400 [stack 0]
push $N6d9ef900
Merge2 {
inputs 2
operation from
Achannels rgb
Bchannels rgb
output rgb
name From
xpos -491
ypos -507
}
Dot {
name Dot15
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -457
ypos -422
}
set N6d9ed600 [stack 0]
Dot {
name Dot12
xpos -922
ypos -422
}
Dot {
name Dot14
xpos -922
ypos 172
}
push $N6d9ee400
Unpremult {
alpha -rgba.alpha
name Unpremult13535
xpos -680
ypos -469
disable {{!alpha}}
addUserKnob {20 User}
}
Grade {
channels all
white {0.925 0.930751 1.075 1}
white_panelDropped true
multiply 0.25
black_clamp false
name Grade273535
xpos -680
ypos -380
addUserKnob {20 User}
addUserKnob {18 exposure R -1 1}
exposure {{multiply==0|white==0|multiply==0?0:log10(multiply)/log10(2)+log10(white)/log10(2)}}
addUserKnob {6 exposure_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
Expression {
expr0 "pow(r/grey, value+1)*grey"
expr1 "pow(g/grey, value+1)*grey"
expr2 "pow(b/grey, value+1)*grey"
name contrast
xpos -680
ypos -322
addUserKnob {20 User}
addUserKnob {7 grey}
grey 0.18
addUserKnob {18 value R -1 1}
value {0 0 0}
addUserKnob {6 value_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
ColorCorrect {
channels all
enable_mix_luminance false
name ColorCorrect6
xpos -680
ypos -273
}
set N6d9b6b00 [stack 0]
Dot {
name Dot4
xpos -833
ypos -263
}
Dot {
name Dot7
xpos -833
ypos 157
}
Dot {
name Dot10
xpos -403
ypos 186
}
Input {
inputs 0
name mask
label mask
xpos 65
ypos -760
number 1
}
Dot {
name Dot13
xpos 99
ypos 105
}
push $N6da0d600
Dot {
name Dot11
xpos -435
ypos 105
}
set N6d98f200 [stack 0]
Switch {
inputs 2
which {{"\[exists parent.input1]"}}
name Switch1
xpos -177
ypos 101
disable {{"!\[exists parent.input1]"}}
}
Invert {
name Invert1
xpos -177
ypos 127
}
push $N6d98f200
push $N6d9b6b00
Dot {
name Dot6
xpos -646
ypos 39
}
push $N6da0c100
Dot {
name Dot2
xpos -186
ypos -321
}
Dot {
name Dot3
xpos -284
ypos -321
}
push $N6d9b6b00
push $N6d9ed600
Clamp {
channels rgb
minimum_enable {{parent.Grade273535.black_clamp}}
maximum 1e+14
maximum_enable {{parent.Grade273535.white_clamp}}
name Clamp135345
xpos -491
ypos -374
}
Merge2 {
inputs 2
operation plus
Achannels rgb
Bchannels rgb
output rgb
name Merge34
xpos -491
ypos -267
}
Premult {
alpha {{{Unpremult1.alpha}}}
name Premult435345345
xpos -487
ypos -142
disable {{Unpremult13535.disable}}
}
Blend {
inputs 2
channels rgb
weight0 {{mixBlend}}
weight1 {{1-weight0}}
name Blend1
xpos -318
ypos -142
addUserKnob {20 User}
addUserKnob {7 mixBlend}
mixBlend 1
}
ShuffleCopy {
inputs 2
in {{{Shuffle.in}}}
alpha alpha2
black red
white green
red2 blue
out2 {{{Shuffle.in}}}
name ShuffleCopy1544235
xpos -318
ypos 35
disable {{!AlsoGradeChannel}}
addUserKnob {20 User}
addUserKnob {6 AlsoGradeChannel l "Also Grade Channel" +STARTLINE}
AlsoGradeChannel true
}
Keymix {
inputs 3
channels rgb
maskChannel -rgba.alpha
name Keymix3
xpos -318
ypos 161
disable {{!maskChannel}}
}
Switch {
inputs 4
which {{contact?3:mute?2:solo?1:0}}
name Switch3
xpos -318
ypos 196
addUserKnob {20 User}
addUserKnob {4 output M {"rgb graded by channel" "preview channel (solo)" "preview without (mute)" "channel contact sheet" "" "" "" "" ""}}
output "preview channel (solo)"
addUserKnob {6 solo +STARTLINE}
addUserKnob {6 mute -STARTLINE}
addUserKnob {6 contact -STARTLINE}
}
Output {
name Output1
xpos -318
ypos 385
}
end_group
add_layer {LS_env_LGT_all LS_env_LGT_all.red LS_env_LGT_all.green LS_env_LGT_all.blue}
Group {
name GradeAOV22
help "Colour correct the CG beauty using the secondary(aov) passes.with a subtractive process.\nto be used when:\n * the CG is good and only a few passes need adjusting\n * the secondaries don't add up to the beauty\n * rgb saturation (luminance mix on)\n * rgb contrast (with pivot)\n * matting with external mask input or main channel input or both with an operation.\n The order of correction is: Grade Node>Contrast Node>Saturation."
tile_color 0x8aa7dbff
label " \[value in]"
selected true
xpos 11166
ypos -16344
addUserKnob {20 User l GradeAOV}
addUserKnob {41 in l "Channel to use" T Shuffle5345.in}
addUserKnob {41 AlsoGradeChannel l "Also Grade Channel" t "as well as grading the beauty bake the grade into the selected channel" -STARTLINE T ShuffleCopy1544235.AlsoGradeChannel}
addUserKnob {41 solo T Switch3.solo}
addUserKnob {41 mute -STARTLINE T Switch3.mute}
addUserKnob {41 contact -STARTLINE T Switch3.contact}
addUserKnob {26 spacetxt l "                                                                                         " -STARTLINE T " "}
addUserKnob {22 NodeExpCopy l "Node Exp Copy" -STARTLINE T "knobsList = \[\"blackpoint\", \"whitepoint\", \"black\", \"white\", \"multiply\", \"add\", \"gamma\", \"reverse\", \"black_clamp\", \"white_clamp\", \"enable_mix_luminance\", \"mix_luminance\", \"value\", \"grey\", \"saturation\",\n \"enable_mix_luminance_1\", \"mix_luminance_1\", \"alpha\", \"mixBlend\"]\nnukescripts.clear_selection_recursive()\nn = nuke.thisNode()\nn\['selected'].setValue(True)\nwith nuke.root():\n nuke.nodeCopy(\"%clipboard%\")\n nuke.nodePaste(\"%clipboard%\")\n new_node = nuke.selectedNode()\n\n for j in new_node.knobs():\n\n  if j in  knobsList:\n   if isinstance(new_node.knob(j), nuke.Array_Knob):\n     new_node\[j].setSingleValue(False)\n   new_node\[j].setExpression( n.name() + '.' + j )\n\n\n"}
addUserKnob {26 ""}
addUserKnob {41 blackpoint T Grade273535.blackpoint}
addUserKnob {41 whitepoint T Grade273535.whitepoint}
addUserKnob {41 black l lift T Grade273535.black}
addUserKnob {41 white l gain T Grade273535.white}
addUserKnob {41 multiply T Grade273535.multiply}
addUserKnob {41 add l offset T Grade273535.add}
addUserKnob {41 gamma T Grade273535.gamma}
addUserKnob {41 reverse T Grade273535.reverse}
addUserKnob {41 black_clamp l "black clamp" -STARTLINE T Grade273535.black_clamp}
addUserKnob {41 white_clamp l "white clamp" -STARTLINE T Grade273535.white_clamp}
addUserKnob {26 text2 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance l "" -STARTLINE T Grade273535.enable_mix_luminance}
addUserKnob {41 mix_luminance l "" -STARTLINE T Grade273535.mix_luminance}
addUserKnob {26 "" l "  "}
addUserKnob {41 value l Contrast t " " T contrast.value}
addUserKnob {41 grey T contrast.grey}
addUserKnob {41 saturation T ColorCorrect6.saturation}
addUserKnob {26 text3 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance_1 l "" -STARTLINE T ColorCorrect6.enable_mix_luminance}
addUserKnob {41 mix_luminance_1 l "" -STARTLINE T ColorCorrect6.mix_luminance}
addUserKnob {26 ""}
addUserKnob {41 maskChannel l "mask channel" t "if the mask input is unplugged then the input channel can be used" T Keymix3.maskChannel}
addUserKnob {41 invertMask l invert -STARTLINE T Keymix3.invertMask}
addUserKnob {26 ""}
addUserKnob {41 alpha l "(un)premult by" T Unpremult13535.alpha}
addUserKnob {41 mixBlend l mix T Blend1.mixBlend}
addUserKnob {20 Info}
addUserKnob {22 documentation l " Documentation / Feedback " T "import webbrowser\nwebbrowser.open(\"http://opennuke.github.io/gradeAov_nkV/\")" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {26 version l version: T v1.2}
addUserKnob {26 created l created: T "1/1/2015 by <a href=\\'http://movingimagearts.com'> Rafal Kaniewski</a>"}
addUserKnob {26 modified l "modified: " T "01/10/2016 :update to fix back clamp by Rafal_Kan\n2017/12/19 :v1: forked, renamed, premult per channel, colourspaceShift\n2018/01/01: added copyExpNode and solo/mute"}
addUserKnob {26 source l source: T "<a href='https://github.com/vfxwiki/gradeAOV/'> Github.com</a>"}
addUserKnob {26 licence l licence: T "<a href=\"https://github.com/openNuke/toolset/blob/master/LICENCE\">READ ME</a>"}
}
Input {
inputs 0
name Input
xpos -220
ypos -721
}
set N94176b00 [stack 0]
Dot {
name Dot8
xpos -995
ypos -718
}
Dot {
name Dot5
xpos -995
ypos 105
}
set N94175d00 [stack 0]
Dot {
name Dot9
xpos -995
ypos 217
}
LayerContactSheet {
width {{width*6}}
height {{height*6}}
showLayerNames true
name LayerContactSheet1
xpos -632
ypos 213
}
push $N94176b00
Dot {
name Dot1
xpos -186
ypos -633
}
set N94174800 [stack 0]
Dot {
name Dot27
xpos -457
ypos -567
}
set N94174100 [stack 0]
Dot {
name Dot26
xpos -646
ypos -567
}
Shuffle {
in LS_env_LGT_all
in2 alpha
alpha red2
name Shuffle5345
xpos -680
ypos -533
}
Premult {
name Premult1
xpos -680
ypos -507
}
set N94142b00 [stack 0]
push $N94174100
Merge2 {
inputs 2
operation from
Achannels rgb
Bchannels rgb
output rgb
name From
xpos -491
ypos -507
}
Dot {
name Dot15
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -457
ypos -422
}
set N94141d00 [stack 0]
Dot {
name Dot12
xpos -922
ypos -422
}
Dot {
name Dot14
xpos -922
ypos 172
}
push $N94142b00
Unpremult {
alpha -rgba.alpha
name Unpremult13535
xpos -680
ypos -469
disable {{!alpha}}
addUserKnob {20 User}
}
Grade {
channels all
white_panelDropped true
multiply 2
gamma 1.05
black_clamp false
name Grade273535
xpos -680
ypos -380
addUserKnob {20 User}
addUserKnob {18 exposure R -1 1}
exposure {{multiply==0|white==0|multiply==0?0:log10(multiply)/log10(2)+log10(white)/log10(2)}}
addUserKnob {6 exposure_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
Expression {
expr0 "pow(r/grey, value+1)*grey"
expr1 "pow(g/grey, value+1)*grey"
expr2 "pow(b/grey, value+1)*grey"
name contrast
xpos -680
ypos -322
addUserKnob {20 User}
addUserKnob {7 grey}
grey 0.18
addUserKnob {18 value R -1 1}
value {0 0 0}
addUserKnob {6 value_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
ColorCorrect {
channels all
enable_mix_luminance false
name ColorCorrect6
xpos -680
ypos -273
}
set N94113200 [stack 0]
Dot {
name Dot4
xpos -833
ypos -263
}
Dot {
name Dot7
xpos -833
ypos 157
}
Dot {
name Dot10
xpos -403
ypos 186
}
Input {
inputs 0
name mask
label mask
xpos 65
ypos -760
number 1
}
Dot {
name Dot13
xpos 99
ypos 105
}
push $N94175d00
Dot {
name Dot11
xpos -435
ypos 105
}
set N940eb900 [stack 0]
Switch {
inputs 2
which {{"\[exists parent.input1]"}}
name Switch1
xpos -177
ypos 101
disable {{"!\[exists parent.input1]"}}
}
Invert {
name Invert1
xpos -177
ypos 127
}
push $N940eb900
push $N94113200
Dot {
name Dot6
xpos -646
ypos 39
}
push $N94174800
Dot {
name Dot2
xpos -186
ypos -321
}
Dot {
name Dot3
xpos -284
ypos -321
}
push $N94113200
push $N94141d00
Clamp {
channels rgb
minimum_enable {{parent.Grade273535.black_clamp}}
maximum 1e+14
maximum_enable {{parent.Grade273535.white_clamp}}
name Clamp135345
xpos -491
ypos -374
}
Merge2 {
inputs 2
operation plus
Achannels rgb
Bchannels rgb
output rgb
name Merge34
xpos -491
ypos -267
}
Premult {
alpha {{{Unpremult1.alpha}}}
name Premult435345345
xpos -487
ypos -142
disable {{Unpremult13535.disable}}
}
Blend {
inputs 2
channels rgb
weight0 {{mixBlend}}
weight1 {{1-weight0}}
name Blend1
xpos -318
ypos -142
addUserKnob {20 User}
addUserKnob {7 mixBlend}
mixBlend 1
}
ShuffleCopy {
inputs 2
in {{{Shuffle.in}}}
alpha alpha2
black red
white green
red2 blue
out2 {{{Shuffle.in}}}
name ShuffleCopy1544235
xpos -318
ypos 35
disable {{!AlsoGradeChannel}}
addUserKnob {20 User}
addUserKnob {6 AlsoGradeChannel l "Also Grade Channel" +STARTLINE}
AlsoGradeChannel true
}
Keymix {
inputs 3
channels rgb
maskChannel -rgba.alpha
name Keymix3
xpos -318
ypos 161
disable {{!maskChannel}}
}
Switch {
inputs 4
which {{contact?3:mute?2:solo?1:0}}
name Switch3
xpos -318
ypos 196
addUserKnob {20 User}
addUserKnob {4 output M {"rgb graded by channel" "preview channel (solo)" "preview without (mute)" "channel contact sheet" "" "" "" "" ""}}
output "preview channel (solo)"
addUserKnob {6 solo +STARTLINE}
addUserKnob {6 mute -STARTLINE}
addUserKnob {6 contact -STARTLINE}
}
Output {
name Output1
xpos -318
ypos 385
}
end_group
Grade {
white {0.7236911058 1.005196333 1.099998951 1}
multiply 0.2
name GradeWaterENV2
note_font_size 31
selected true
xpos 11166
ypos -16306
}
Premult {
name Premult3
selected true
xpos 11166
ypos -16233
}
Dot {
name Dot103
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11200
ypos -16207
}
Dot {
name Dot146
tile_color 0x949494ff
label water
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11510
ypos -16207
}
Read {
inputs 0
file_type exr
file /coppi/proj/thrg/ftrack/assets/s01e01/img/thrg_s01e01_Ep1_Sky_HDRI_flat_v011_ep01_flat_10k_lin_ap0/thrg_s01e01_Ep1_Sky_HDRI_flat_ep01_flat_10k_lin_ap0_v011.%04d.exr
localizationPolicy on
format "10000 5000 0 0 10000 5000 1 10k LatLong"
first 1001
last 1001
origfirst 1001
origlast 1001
origset true
name Ep1_Sky_HDRI_flat_ep01_flat_10k_lin_ap00
tile_color 0xe3634bff
selected true
xpos 11720
ypos -18547
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname ep01_flat_10k_lin_ap0
addUserKnob {20 ftrack}
addUserKnob {1 componentId}
componentId 818b1be2-25cc-4629-8633-c00ff65efbd2
addUserKnob {1 componentName}
componentName ep01_flat_10k_lin_ap0
addUserKnob {1 assetVersionId}
assetVersionId cbbb5881-08a9-460f-ae42-30c209a4eedc
addUserKnob {1 assetVersion}
assetVersion 7
addUserKnob {1 assetName}
assetName Ep1_Sky_HDRI_flat
addUserKnob {1 assetType}
assetType img
addUserKnob {4 versionType l "Version Type" M {latest stable pinned}}
versionType stable
}
Dot {
name Dot183
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11754
ypos -18246
}
Dot {
name Dot149
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11754
ypos -17536
}
set N94095600 [stack 0]
Dot {
name Dot157
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 12068
ypos -17536
}
Dot {
name Dot158
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 12068
ypos -17462
}
Grade {
channels alpha
gamma 1.5
white_clamp true
name Grade7
selected true
xpos 11894
ypos -17472
}
push $N94095600
Grade {
inputs 1+1
white {1 0.8936762214 0.69599998 1}
multiply 1.25
name cloudTemperature1
selected true
xpos 11720
ypos -17466
}
Grade {
white {0.6078650355 0.742880404 0.9965000153 1}
multiply 1.2
name GradeSky1
note_font_size 31
selected true
xpos 11722
ypos -17343
}
Grid {
number 2
size 0.5
color {7 0.038 0 1}
color_panelDropped true
name GridHorizon
label "switch ON to see \nwhere horizon is"
selected true
xpos 11716
ypos -16566
disable true
}
Dot {
name Dot170
tile_color 0x949494ff
label latlong
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11750
ypos -16413
}
Group {
inputs 4
name _BG_Projection
selected true
xpos 11716
ypos -16122
addUserKnob {20 User l Rig_BG_Projection}
addUserKnob {41 format l "LatLong Format" T __ReformatLatLongMASTER__.format}
addUserKnob {41 format_2 l "Flat Plate format" T ReformatSky1.format}
addUserKnob {20 WaterSettings l "Water Settings" n 1}
addUserKnob {41 useWaterRender T __Shuffle12__.useWaterRender}
addUserKnob {41 time_offset l "time offset (frames)" T _TimeOffset_.time_offset}
addUserKnob {26 txt l ( -STARTLINE T "change per shot randomly )"}
addUserKnob {41 panTiltRollInput l "Pan Tilt Roll" T __SphericalTransform1__.panTiltRollInput}
addUserKnob {20 endGroup n -1}
addUserKnob {20 sphereGroup l "Sphere Settings" n 1}
sphereGroup 0
addUserKnob {41 rotate T LatLong_Projector2.rotate}
addUserKnob {41 rows l rows/columns T LatLong_Projector2.rows}
addUserKnob {41 columns l "" -STARTLINE T LatLong_Projector2.columns}
addUserKnob {41 u_extent l "u extent" T LatLong_Projector2.u_extent}
addUserKnob {41 v_extent l "v extent" T LatLong_Projector2.v_extent}
addUserKnob {26 _2 l "" +STARTLINE}
addUserKnob {20 end_sphereGroup n -1}
addUserKnob {20 renderGroup l "Render Settings" n 1}
addUserKnob {26 menu1 l <b>ScanlineRender:</b>}
addUserKnob {41 filter T LatLong_Projector2.filter}
addUserKnob {41 overscan T LatLong_Projector2.overscan}
addUserKnob {26 menu2 l <b>MotionBlur:</b>}
addUserKnob {41 samples T LatLong_Projector2.samples}
addUserKnob {41 shutter T LatLong_Projector2.shutter}
addUserKnob {41 shutteroffset l "shutter offset" T LatLong_Projector2.shutteroffset}
addUserKnob {26 _1 l "" +STARTLINE}
addUserKnob {26 menu3 l "<b>Ouput AOVs:</b>"}
addUserKnob {41 motion_vectors_type l "motion vectors" T LatLong_Projector2.motion_vectors_type}
addUserKnob {41 MB_channel l "motion vector channels" T LatLong_Projector2.MB_channel}
addUserKnob {20 end_renderGroup n -1}
addUserKnob {26 unnamed_2 l "" +STARTLINE}
addUserKnob {20 info}
addUserKnob {26 info_1 l info T "v1 Guillermo 10/01/2022\nx2 Rafal 10/02/2022\nv3 Rafal 14/02/2022 -fixed water depth axis"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust11
tile_color 0xbbbbbbff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 72
xpos -1041
ypos 855
bdwidth 1295
bdheight 987
z_order -1278165
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "BG -Sky - ep01 "
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Black
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust17
tile_color 0xbbbbbbff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 72
xpos -3209
ypos 816
bdwidth 766
bdheight 991
z_order -759106
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "BG - Water - ep01 -  zDepth"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Black
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
StickyNote {
inputs 0
name StickyNote6
label "^^ matchSkyLatLongFormatToExr >>"
note_font_size 21
xpos -2445
ypos -1074
}
Input {
inputs 0
name Cam
xpos -3560
ypos 1203
number 2
}
Dot {
name Dot30
tile_color 0x949494ff
label camera
note_font_size 22
note_font_color 0xffffffff
xpos -3189
ypos 1207
}
set N6d429600 [stack 0]
Dot {
name Dot54
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -3189
ypos 1347
}
Input {
inputs 0
name axis
xpos -574
ypos 1280
number 3
}
Dot {
name dot4
tile_color 0x949494ff
label axis
note_font_size 22
note_font_color 0xffffffff
xpos -540
ypos 1328
}
set N6d428100 [stack 0]
Dot {
name dot1
tile_color 0x949494ff
label axis
note_font_size 22
note_font_color 0xffffffff
xpos -2508
ypos 1328
}
Constant {
inputs 0
color {0 0 0 1}
format "256 256 0 0 256 256 1 square_256"
name Constant3
xpos -2698
ypos 1252
postage_stamp false
}
Card2 {
cast_shadow false
receive_shadow false
image_aspect false
rows 2
columns 2
rotate {90 0 0}
uniform_scale {{parent.LatLong_Projector2.depth_unit_pos*2.1 x1118 420000}}
control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
name Card2
xpos -2698
ypos 1295
}
TransformGeo {
translate {{-DummyCam_Extended2.translate(LatLong_Projector2.cam_ref_frame.main)} {DummyCam_Extended2.translate(LatLong_Projector2.cam_ref_frame.main)} {DummyCam_Extended2.translate(LatLong_Projector2.cam_ref_frame.main)}}
name TransformGeo2
xpos -2698
ypos 1341
}
TransformGeo {
inputs 2
name TransformGeo1
xpos -2698
ypos 1396
}
Reformat {
inputs 0
format {{{parent.__reformat_master__.format}}}
name Reformat1
xpos -2830
ypos 1270
}
Shuffle2 {
fromInput1 {{0} B}
fromInput2 {{0} B}
name Shuffle1
label "\[value in1]"
xpos -2830
ypos 1296
}
add_layer {pWater pWater.red pWater.green pWater.blue}
ScanlineRender {
inputs 3
conservative_shader_sampling false
max_tessellation 1
overscan {{parent.LatLong_Projector2.ScanlineRender.overscan}}
shutteroffset centred
motion_vectors_type off
MB_channel none
output_shader_vectors true
P_channel pWater
name ScanlineRender2
xpos -2830
ypos 1444
}
AddChannels {
channels pWater
name AddChannels4
xpos -2830
ypos 1470
}
Clamp {
channels depth
minimum {{LatLong_Projector2.depth_unit_pos==0?0:1/LatLong_Projector2.depth_unit_pos}}
name Clamp1
xpos -2830
ypos 1531
disable true
}
Multiply {
channels depth
value 10
name Multiply3
xpos -2830
ypos 1569
}
Multiply {
channels pWater
value 0.1
name Multiply4
xpos -2830
ypos 1607
}
Dot {
name Dot77
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -2796
ypos 1694
}
Dot {
name Dot216
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -974
ypos 1726
}
set N6d3a1600 [stack 0]
Dot {
name Dot224
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -974
ypos 1756
}
set N6d3a0f00 [stack 0]
Dot {
name Dot225
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -722
ypos 1756
}
Dot {
name Dot226
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -722
ypos 1812
}
push $N6d3a0f00
Dot {
name Dot217
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -974
ypos 1812
}
push $N6d3a1600
push $N6d428100
Reformat {
inputs 0
format {{{parent.parent.Reformat_OverscanMASTER.ReformatMASTER.format}}}
name ReformatSky1
note_font "Bitstream Vera Sans Bold"
note_font_size 21
xpos -288
ypos 704
hide_input true
}
Dot {
name Dot33
tile_color 0x949494ff
label "bg format"
note_font_size 22
note_font_color 0xffffffff
xpos -254
ypos 1392
}
Sphere {
inputs 0
cast_shadow false
receive_shadow false
uniform_scale {{parent.LatLong_Projector2.depth_unit_pos}}
name Sphere
xpos -1467
ypos 969
}
Input {
inputs 0
name water
xpos -2302
ypos -1439
number 1
}
Dot {
name Dot139
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -2268
ypos -1317
}
TimeOffset {
time ""
name _TimeOffset_
xpos -2302
ypos -1299
}
SphericalTransform2 {
panTiltRollInput {-55 0 0}
name __SphericalTransform1__
xpos -2302
ypos -1166
}
Reformat {
format {{{parent.__ReformatLatLongMASTER__.format}}}
name ReformatLatLongCHILD
xpos -2302
ypos -1119
}
Dot {
name Dot201
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -2268
ypos -1034
}
Dot {
name Dot55
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -2268
ypos 154
}
add_layer {water water.red water.green water.blue water.alpha}
AddChannels {
channels water
name AddChannels1
xpos -1115
ypos 154
}
set N6ce3e400 [stack 0]
AddChannels {
channels pWater
name AddChannels2
xpos -1115
ypos 192
}
set N6ce3d600 [stack 0]
AddChannels {
channels zDepth
name AddChannels3
xpos -1115
ypos 238
}
set N6ce3c800 [stack 0]
Dot {
name Dot2
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -1081
ypos 297
}
set N6ce17900 [stack 0]
Dot {
name Dot4
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -1081
ypos 356
}
set N6ce17200 [stack 0]
Dot {
name Dot5
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -1081
ypos 426
}
set N6ce16b00 [stack 0]
Dot {
name Dot6
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -1081
ypos 493
}
set N6ce16400 [stack 0]
Dot {
name Dot7
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -1080
ypos 571
}
push $N6ce16400
push $N6ce16b00
push $N6ce17200
push $N6ce17900
push $N6ce3c800
push $N6ce3d600
push $N6ce3e400
Constant {
inputs 0
channels zDepth
color 1e-06
name Constant1
xpos -1013
ypos -1328
}
Dot {
name Dot34
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -979
ypos -1232
}
Input {
inputs 0
name latLong
xpos -874
ypos -1480
}
Dot {
name Dot138
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -840
ypos -1290
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels zDepth
name Copy4
xpos -874
ypos -1248
disable true
}
Reformat {
format "10000 5000 0 0 10000 5000 1 10k LatLong"
name __ReformatLatLongMASTER__
note_font_size 21
xpos -874
ypos -1143
}
Dot {
name Dot191
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -840
ypos -1065
}
Dot {
name Dot189
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -840
ypos -709
}
Shuffle2 {
inputs 2
fromInput1 {{1} B A}
out1 water
fromInput2 {{0} B A}
mappings "4 rgba.red 0 0 water.red 0 0 rgba.green 0 1 water.green 0 1 rgba.blue 0 2 water.blue 0 2 rgba.alpha 0 3 water.alpha 0 3"
name __Shuffle12__
label "\[value out1]"
xpos -870
ypos 154
disable {{!useWaterRender}}
addUserKnob {20 User}
addUserKnob {6 useWaterRender +STARTLINE}
useWaterRender true
}
Shuffle2 {
inputs 2
fromInput1 {{1} B A}
in1 pWorld
out1 pWater
fromInput2 {{0} B A}
mappings "3 pWorld.red 0 0 pWater.red 0 0 pWorld.green 0 1 pWater.green 0 1 pWorld.blue 0 2 pWater.blue 0 2"
name __Shuffle12__1
label "\[value out1]"
xpos -870
ypos 192
disable {{!useWaterRender}}
addUserKnob {20 User}
addUserKnob {6 useWaterRender +STARTLINE}
useWaterRender true
}
add_layer {zDepth_Water zDepth_Water.filtered zDepth_Water.unfiltered zDepth_Water.combo}
Shuffle2 {
inputs 2
fromInput1 {{1} B A}
in1 zDepth
out1 zDepth_Water
fromInput2 {{0} B A}
mappings "3 zDepth.combo 0 2 zDepth_Water.combo 0 2 zDepth.filtered 0 0 zDepth_Water.filtered 0 0 zDepth.unfiltered 0 1 zDepth_Water.unfiltered 0 1"
name __Shuffle12__2
label "\[value out1]"
xpos -870
ypos 238
disable {{!useWaterRender}}
addUserKnob {20 User}
addUserKnob {6 useWaterRender +STARTLINE}
useWaterRender true
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels LS_env_LGT_all
name Copy2
xpos -870
ypos 281
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels LS_sun_LGT_all
name Copy3
xpos -870
ypos 340
}
add_layer {S_direct_diffuse S_direct_diffuse.red S_direct_diffuse.green S_direct_diffuse.blue}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels S_direct_diffuse
name Copy5
xpos -870
ypos 410
}
add_layer {S_direct_reflect S_direct_reflect.red S_direct_reflect.green S_direct_reflect.blue}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels S_direct_reflect
name Copy6
xpos -870
ypos 477
}
add_layer {S_indirect_reflect S_indirect_reflect.red S_indirect_reflect.green S_indirect_reflect.blue}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels S_indirect_reflect
name Copy7
xpos -869
ypos 555
}
Dot {
name Dot90
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -836
ypos 713
}
Dot {
name dot7
tile_color 0x949494ff
label latLong
note_font_size 22
note_font_color 0xffffffff
xpos -836
ypos 945
}
set N6cdd9600 [stack 0]
Shuffle2 {
fromInput1 {{0} B}
fromInput2 {{0} B}
mappings "4 white -1 -1 rgba.red 0 0 white -1 -1 rgba.green 0 1 white -1 -1 rgba.blue 0 2 white -1 -1 rgba.alpha 0 3"
name Shuffle4
label "\[value in1]"
xpos -1294
ypos 956
}
Remove {
name Remove1
xpos -1294
ypos 994
}
add_layer {pSky pSky.red pSky.green pSky.blue pSky.alpha}
ScanlineRender {
inputs 2
conservative_shader_sampling false
projection_mode spherical
shutteroffset centred
motion_vectors_type distance
output_shader_vectors true
P_channel pSky
name ScanlineRender1
xpos -1479
ypos 1073
}
Dot {
name Dot1
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -1445
ypos 1099
}
push $N6cdd9600
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels pSky
name Copy1
xpos -870
ypos 1089
}
Transform {
scale {-1 1}
center {{width*0.5} {height*0.5}}
shutteroffset centred
name Transform2
xpos -870
ypos 1151
}
Reformat {
format {{{parent.__ReformatLatLongMASTER__.format}}}
name ReformatLatLongCHILD1
xpos -870
ypos 1210
}
add_layer {clouds clouds.alpha}
Shuffle2 {
fromInput1 {{0} B}
out1 clouds
fromInput2 {{0} B}
out2 rgba
mappings "5 white -1 -1 rgba.alpha 1 3 rgba.red 0 0 rgba.red 1 0 rgba.green 0 1 rgba.green 1 1 rgba.blue 0 2 rgba.blue 1 2 rgba.alpha 0 3 clouds.alpha 0 0"
name Shuffle2
label "\[value in1]"
xpos -870
ypos 1275
}
push $N6d429600
Dot {
name dot8
tile_color 0x949494ff
label camera
note_font_size 22
note_font_color 0xffffffff
xpos -968
ypos 1239
}
Dot {
name Dot88
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -968
ypos 1356
}
Group {
inputs 4
name LatLong_Projector2
onCreate "\n\nnode = nuke.thisNode()\nfor knob_name in node.knobs():\n    if 'slice' in knob_name and 'pos' in knob_name and 'hidden' not in knob_name:\n        node\[knob_name].clearFlag(0x00000002)\n\n"
knobChanged "\n\nnode = nuke.thisNode()\nknob = nuke.thisKnob()\n\nif knob.name() == 'unit':\n\n    # Change Farthest Plane:\n\n    new_unit_index = int(node\['unit'].getValue())\n    previous_unit_index = int(node\['previous_unit_index'].value())\n    previous_unit_value = node\['depth_unit_pos'].value()\n\n\n    if previous_unit_index < new_unit_index:\n        for index in xrange(previous_unit_index, new_unit_index):\n            unit_mult = 0.1\n            if index +1 == 4:\n                unit_mult = 39.3701 #meters to inches\n\n            elif index +1 == 5:\n                unit_mult = 0.0833333 #inches to feet\n\n            previous_unit_value *= unit_mult\n\n\n    elif previous_unit_index > new_unit_index:\n        for index in xrange(previous_unit_index, new_unit_index, -1): #-1 is the 3rd xrange argument aka step (loop backwards)\n            unit_mult = 10\n            if index == 5:\n                unit_mult = 12 #feet to inches\n\n            elif index == 4:\n                unit_mult = 0.0254 #inches to meters\n\n            previous_unit_value *= unit_mult\n\n    new_unit_value = round(previous_unit_value, 2)\n    node\['depth_unit_pos'].setValue(new_unit_value) #round to 2 decimals\n    node\['depth_unit_pos'].setRange(0, new_unit_value*3)\n\n    node\['previous_unit_index'].setValue(new_unit_index)\n    node\['unit_info'].setValue(node\['unit'].value())\n\n    # Change Slices:\n\n    for knob_name in node.knobs():\n        if 'slice' in knob_name and 'pos' in knob_name and 'hidden' not in knob_name:\n            node\[knob_name].setValue(node\['\{\}'.format(knob_name + '_hidden')].value())\n\nif knob.name() == 'depth_unit_pos':\n\n    # Change Slices:\n\n    for knob_name in node.knobs():\n        if 'slice' in knob_name and 'pos' in knob_name and 'hidden' not in knob_name:\n            node\[knob_name].setValue(node\['\{\}'.format(knob_name + '_hidden')].value())\n\ntry:\n    if 'slice' in knob.name() and 'pos' not in knob.name() and 'hidden' not in knob.name():\n\n        # Change Slices:\n        node\[knob.name() + '_pos'].setValue(node\['\{\}'.format(knob.name() + '_pos_hidden')].value())\n\n    if 'slice' in knob.name() and 'pos' in knob.name() and 'hidden' not in knob.name():\n\n        # Change Slices Percent:\n        knob_name =  knob.name().replace('_pos', '')\n        node\[knob_name].setValue( round(node\[knob_name + '_pos'].value() / node\['depth_unit_pos'].value(), 3) )\nexcept:\n    pass\n\n"
tile_color 0xb20000ff
xpos -869
ypos 1423
addUserKnob {20 main_tab l LatLong_Projector}
addUserKnob {20 infoGroup l "Build Info" n 1}
infoGroup 0
addUserKnob {26 build_info l "" +STARTLINE T "v.1.0.0: @Guillermo Algora\n- Build\n\nv.1.1.0: @Rafał Kaniewski\n- Exposed Sphere Settings.\n- Added an 'Axis' input.\n\nv.1.1.1: @Guillermo Algora\n- Fixed a line in the code to make it compatible with the new 'Axis' input.\n- Removed a multiplication by 2 of the UI position to sphere scale (in 'pos_to_scale' knob).\n- Added additional info to 'cm' unit to state that is a 1:1 from UI position to sphere scale.\n- Exposed additional render settings.\n"}
addUserKnob {20 end_infoGroup n -1}
addUserKnob {20 instructionsGroup l Instructions n 1}
instructionsGroup 0
addUserKnob {26 instructions l "" +STARTLINE T "\n1. Select the unit of length measurement for the positioning of the layers.\nThis can be changed at any time.\n\n2. Enter a different reference frame if necessary.\n\n3. Set the position of the farthest projection layer (node's main input).\n\n4. Add or remove additional layers using 'Add Slice' / 'Remove Slice'.\n\n5. Set the position of the additional layers using the percentage slider\nor in the numeric field according to the selected unit of length measurement.\n\n6. Configure the render settings (e.g. overscan, motion blur, etc) \nwithin the 'Render Settings' tab.\n\n"}
addUserKnob {20 end_instructionsGroup n -1}
addUserKnob {20 sphereGroup l "Sphere Settings" n 1}
addUserKnob {41 rotate T Sphere.rotate}
addUserKnob {41 rows l rows/columns T Sphere.rows}
addUserKnob {41 columns l "" -STARTLINE T Sphere.columns}
addUserKnob {41 u_extent l "u extent" T Sphere.u_extent}
addUserKnob {41 v_extent l "v extent" T Sphere.v_extent}
addUserKnob {26 _2 l "" +STARTLINE T " "}
addUserKnob {20 end_sphereGroup n -1}
addUserKnob {20 renderGroup l "Render Settings" n 1}
addUserKnob {26 menu1 l <b>ScanlineRender:</b> T " "}
addUserKnob {41 filter T ScanlineRender.filter}
addUserKnob {41 overscan T ScanlineRender.overscan}
addUserKnob {26 menu2 l <b>MotionBlur:</b> T ""}
addUserKnob {41 samples T ScanlineRender.samples}
addUserKnob {41 shutter T ScanlineRender.shutter}
addUserKnob {41 shutteroffset l "shutter offset" T ScanlineRender.shutteroffset}
addUserKnob {26 _1 l "" +STARTLINE T " "}
addUserKnob {26 menu3 l "<b>Ouput AOVs:</b>" T "\n"}
addUserKnob {41 motion_vectors_type l "motion vectors" T ScanlineRender.motion_vectors_type}
addUserKnob {41 MB_channel l "motion vector channels" T ScanlineRender.MB_channel}
addUserKnob {26 _5 l "" +STARTLINE T " "}
addUserKnob {41 output_shader_vectors l "output vectors" T ScanlineRender.output_shader_vectors}
addUserKnob {41 P_channel l "surface point" T ScanlineRender.P_channel}
addUserKnob {41 N_channel l "surface normal" T ScanlineRender.N_channel}
addUserKnob {26 _4 l "" +STARTLINE T " "}
addUserKnob {20 end_renderGroup n -1}
addUserKnob {26 unnamed_2 l "" +STARTLINE}
addUserKnob {26 unnamed_3 l "" +STARTLINE T " "}
addUserKnob {26 _3 l "" +STARTLINE T " "}
addUserKnob {4 unit l Unit: t "Unit of length measurement in which the distance is displayed.\n\nNuke's 3D space is in centimeters. Value in 'cm' unit is 1:1 to the Sphere's scale." -STARTLINE +INVISIBLE M {mm cm dm m inch ft "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" ""}}
unit cm
addUserKnob {26 cm_info l "" -STARTLINE +INVISIBLE T "    (value in 'cm' is 1:1 to Sphere's scale).\n"}
addUserKnob {7 unit_choice -STARTLINE +INVISIBLE}
unit_choice {{"\[if \{\[value this.unit]==\"mm\"\} \{return 10\} elseif \{\[value this.unit]==\"dm\"\} \{return 0.1\} elseif \{\[value this.unit]==\"m\"\} \{return 0.01\} elseif \{\[value this.unit]==\"inch\"\} \{return 0.393701\} elseif \{\[value this.unit]==\"ft\"\} \{return 0.0328084\} else \{return 1\}]"}}
addUserKnob {7 unit_choice_inv -STARTLINE +INVISIBLE}
unit_choice_inv {{"\[if \{\[value this.unit]==\"mm\"\} \{return .1\} elseif \{\[value this.unit]==\"dm\"\} \{return 10\} elseif \{\[value this.unit]==\"m\"\} \{return 100\} elseif \{\[value this.unit]==\"inch\"\} \{return 2.539998628400741\} elseif \{\[value this.unit]==\"ft\"\} \{return 30.47999902464003\} else \{return 1\}]"}}
addUserKnob {3 previous_unit_index -STARTLINE +INVISIBLE}
previous_unit_index 1
addUserKnob {3 cam_ref_frame l "                  Reference Frame:" t "Reference frame of the projection.\n\nFrame in which the input equals the output. " -STARTLINE R 0 1001}
cam_ref_frame 1001
addUserKnob {6 activate_farthest_plane l "" t "Activate/deactivate this layer. " +STARTLINE +STARTLINE}
activate_farthest_plane true
addUserKnob {7 depth_unit_pos l " <font color=#8FA8F8> Farthest Plane</font> position: " t "Position of the farthest projection layer (node's input) according to the selected unit of length measurement." -STARTLINE R 0 2.1e+06}
depth_unit_pos 20000
addUserKnob {26 unit_info l "" -STARTLINE +INVISIBLE T cm}
addUserKnob {7 pos_to_scale -STARTLINE +INVISIBLE}
pos_to_scale {{"(depth_unit_pos * unit_choice_inv)"}}
addUserKnob {26 unnamed l "" +STARTLINE T " "}
addUserKnob {22 addSlice l "Add Slice" t "Adds an additional projection layer." -STARTLINE T "def add_geo(this_node, master_scene, master_geo):\n    last_sceneInput = int(master_scene.inputs()) -1\n    slice_name = 'slice' + '\{\}'.format(last_sceneInput +1)\n\n    new_geo = nuke.createNode('TransformGeo', inpanel=False)\n    apply_material = nuke.createNode('ApplyMaterial', inpanel=False)\n    uv_project = nuke.createNode('UVProject', inpanel=False)\n    switch_node = nuke.createNode('Switch', inpanel=False)\n    new_groupInput = nuke.createNode('Input', inpanel=False)\n\n    for node in new_geo, apply_material, uv_project, switch_node, new_groupInput, :\n    \tnode.addKnob(nuke.Text_Knob('id', '', slice_name))\n    \n    new_geo.addKnob(nuke.Double_Knob('geo_pos', ''))\n    new_geo\['geo_pos'].setExpression('\{\}'.format(master_geo.name()+'.uniform_scale/2*' + this_node.name() + '.' + new_geo.name() + '.uniform_scale.main'))\n    new_geo\['uniform_scale'].setExpression(this_node.name() + '.' + slice_name + '.main')\n\n    uv_project\['project_on'].setValue('front')\n\n    switch_node\['which'].setExpression('\[if \{\[exists parent.input' + '\{\}'.format(last_sceneInput +3) + ']\} \{return !\[value activate_' + '\{\}'.format(slice_name) + ']\} \{return 1\}]') #1st slice is the Group's 3rd input\n\n    new_geo.setInput(0, master_geo)\n    apply_material.setInput(1, new_groupInput)\n    uv_project.setInput(1, nuke.toNode('cam'))    \n    master_scene.setInput(last_sceneInput +1, switch_node)\n    new_geo.setXYpos(master_scene.input(last_sceneInput).xpos() +200, master_scene.input(last_sceneInput).ypos() +0)\n    new_groupInput.setXYpos(new_geo.xpos() +200, master_geo.input(0).ypos() +0)\n    new_groupInput\['name'].setValue(slice_name)    \n    return slice_name, new_geo\n\ndef add_knob(this_node, slice_name, new_geo):\n    slice_number = slice_name.split('slice')\[-1]\n    if float(slice_number) < 10:\n        slice_value = 1 - float('0.' + slice_number)\n    else:\n        slice_value = 0.1\n\n    knob = nuke.Boolean_Knob('activate_\{\}'.format(slice_name), '')\n    this_node.addKnob(knob)\n    knob_name = knob.name()\n    this_node\[knob_name].setValue(1)    \n    this_node\[knob_name].setFlag(nuke.STARTLINE)\n    this_node\[knob_name].setTooltip('Activate/deactivate this layer.')\n\n    knob = nuke.Double_Knob(slice_name, '  ' + slice_name + ' ')\n    this_node.addKnob(knob)\n    knob_name = knob.name()\n    this_node\[knob_name].clearFlag(nuke.STARTLINE)\n    this_node\[knob_name].setValue(slice_value)    \n    this_node\[knob_name].setTooltip('Percentual position of this layer in relation to where it lies between the Camera and the furthest projection layer.')\n\n\n    knob = nuke.Int_Knob(slice_name + '_pos_hidden', slice_name + '_pos_hidden')\n    this_node.addKnob(knob)\n    knob = this_node.knobs().get(slice_name + '_pos_hidden', None)\n    knob.clearFlag(nuke.STARTLINE)\n    knob.setFlag(nuke.INVISIBLE)    \n    knob.setExpression(this_node.name() + '.' + new_geo.name() + '.geo_pos.main * unit_choice')\n\n    knob = nuke.Double_Knob(slice_name + '_pos', 'Position')\n    this_node.addKnob(knob)\n    knob = this_node.knobs().get(slice_name + '_pos', None)\n    knob.clearFlag(nuke.STARTLINE)\n    knob.clearFlag(0x00000002)\n    knob.setValue(this_node\['\{\}'.format(slice_name + '_pos_hidden')].value())\n    knob.setTooltip('Position of this layer according to the selected unit of length measurement.')\n\n\nundo = nuke.Undo()\nundo.disable()\n\ntry:\n    this_node = nuke.thisNode()\n\n    group = this_node\n    group.begin()\n\n    nukescripts.clear_selection_recursive()\n\n    master_scene = nuke.toNode(\"Scene\")\n    master_geo = master_scene.input(0)\n\n    slice_name, new_geo = add_geo(this_node, master_scene, master_geo)\n    add_knob(this_node, slice_name, new_geo)\n\n    nukescripts.clear_selection_recursive()    \n\n    group.end()\n\nfinally:\n    undo.enable()"}
addUserKnob {22 removeSlice l "Remove Slice" t "Removes the last additional projection layer." -STARTLINE T "#REMOVE SLICE\n\ndef remove_geo(master_scene):\n    last_sceneInput = int(master_scene.inputs()) -1\n\n    if last_sceneInput > 0:\n        slice_name = 'slice' + '\{\}'.format(last_sceneInput)\n        master_scene.setInput(last_sceneInput, None)\n\n        for node in nuke.allNodes():\n            try:\n                if node\['id'].value() == slice_name:\n                    nuke.delete(node)\n            except:\n                pass\n\n        return slice_name\n\ndef remove_knob(this_node, slice_name):\n    if slice_name:\n        this_node.removeKnob(this_node.knobs()\[slice_name])\n        this_node.removeKnob(this_node.knobs()\[slice_name + '_pos'])\n        this_node.removeKnob(this_node.knobs()\[slice_name + '_pos_hidden'])\n        this_node.removeKnob(this_node.knobs()\['activate_' + slice_name])\n\n\nundo = nuke.Undo()\nundo.disable()\n\ntry:\n    this_node = nuke.thisNode()\n\n    group = this_node\n    group.begin()\n\n    nukescripts.clear_selection_recursive()\n\n    master_scene = nuke.toNode(\"Scene\")\n\n    slice_name = remove_geo(master_scene)\n    remove_knob(this_node, slice_name)\n\n    nukescripts.clear_selection_recursive()    \n\n    group.end()\n\nfinally:\n    undo.enable()"}
addUserKnob {26 info2 l "" -STARTLINE T "<br>\n\{ <font color=#e1f2a2>0 = next to camera</font> ; <font color=#d5f2ea>1 = farthest possible pos.</font>\}\n<br>\n"}
}
Input {
inputs 0
name cam
xpos -814
ypos 162
}
Dot {
name Dot5
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -780
ypos 603
}
set N6cd7b200 [stack 0]
Dot {
name Dot1
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -778
ypos 730
}
Input {
inputs 0
name axis
xpos -629
ypos 411
number 3
}
Input {
inputs 0
name input
xpos -461
ypos -21
number 1
}
Switch {
which {{"\[if \{\[exists parent.input1]\} \{return !\[value activate_farthest_plane]\} \{return 1\}]"}}
name Switch
xpos -461
ypos 81
}
Sphere {
cast_shadow false
receive_shadow false
uniform_scale {{pos_to_scale}}
name Sphere
xpos -461
ypos 164
}
Scene {
name Scene
xpos -451
ypos 408
}
TransformGeo {
inputs 2
name TransformGeo8
xpos -461
ypos 513
}
TransformGeo {
translate {{-DummyCam_Extended.translate(LatLong_Projector2.cam_ref_frame.main)} {DummyCam_Extended.translate(LatLong_Projector2.cam_ref_frame.main)} {DummyCam_Extended.translate(LatLong_Projector2.cam_ref_frame.main)}}
name TransformGeo1
xpos -461
ypos 598
}
Dot {
name Dot2
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -427
ypos 642
}
Input {
inputs 0
name bg
xpos -204
ypos 726
number 2
}
ScanlineRender {
inputs 3
conservative_shader_sampling false
overscan {{parent.parent.parent.Reformat_OverscanMASTER.ReformatOverscanMASTER.overscanPercent}}
shutteroffset centred
motion_vectors_type off
MB_channel none
P_channel pSky
name ScanlineRender
xpos -461
ypos 726
}
set N6cf36400 [stack 0]
Output {
name Output1
xpos -461
ypos 861
}
push $N6cd7b200
Camera {
translate {{"\[expression \[value the_cam]translate.x(\[value the_frame])]"} {"\[expression \[value the_cam]translate.y(\[value the_frame])]"} {"\[expression \[value the_cam]translate.z(\[value the_frame])]"}}
rotate {{"\[expression \[value the_cam]rotate.x(\[value the_frame])]"} {"\[expression \[value the_cam]rotate.y(\[value the_frame])]"} {"\[expression \[value the_cam]rotate.z(\[value the_frame])]"}}
scaling {{"\[expression \[value the_cam]scaling.x(\[value the_frame])]"} {"\[expression \[value the_cam]scaling.y(\[value the_frame])]"} {"\[expression \[value the_cam]scaling.z(\[value the_frame])]"}}
uniform_scale {{"\[expression \[value the_cam]uniform_scale(\[value the_frame])]"}}
skew {{"\[expression \[value the_cam]skew.x(\[value the_frame])]"} {"\[expression \[value the_cam]skew.y(\[value the_frame])]"} {"\[expression \[value the_cam]skew.z(\[value the_frame])]"}}
pivot {{"\[expression \[value the_cam]pivot.x(\[value the_frame])]"} {"\[expression \[value the_cam]pivot.y(\[value the_frame])]"} {"\[expression \[value the_cam]pivot.z(\[value the_frame])]"}}
useMatrix true
projection_mode {{"\[expression \[value the_cam]projection_mode(\[value the_frame])]"}}
focal {{"\[expression \[value the_cam]focal(\[value the_frame])]"}}
haperture {{"\[expression \[value the_cam]haperture(\[value the_frame])]"}}
vaperture {{"\[expression \[value the_cam]vaperture(\[value the_frame])]"}}
near -1
far 10000000
win_translate {{"\[expression \[value the_cam]win_translate.u(\[value the_frame])]"} {"\[expression \[value the_cam]win_translate.v(\[value the_frame])]"}}
win_scale {{"\[expression \[value the_cam]win_scale.u(\[value the_frame])]"} {"\[expression \[value the_cam]win_scale.v(\[value the_frame])]"}}
winroll {{"\[expression \[value the_cam]winroll(\[value the_frame])]"}}
focal_point {{"\[expression \[value the_cam]focal_point(\[value the_frame])]"}}
fstop {{"\[expression \[value the_cam]fstop(\[value the_frame])]"}}
name DummyCam_Extended
help "DummyCam by Adrian Pueyo\n\nCamera that apart from the matrices also grabs all the \"Projection\" values from the upstream camera that it's connected to. Turns into a default Camera if no Camera connected. Can also be used inside of groups and gizmos, as many levels deep as you want :D All using live and super fast TCL.\n\nUpdated v1.1: Now grabs the correct frame too (thanks Erwan Leroy for the idea).\n\nUpdated v1.3: Now accepts Nuke13's Camera3\n\nadrianpueyo.com, 2019-2021"
onCreate "n = nuke.thisNode()\nfor k in \[\"projection_mode\",\"focal\",\"haperture\",\"vaperture\",\"near\",\"far\",\"win_translate\",\"win_scale\",\"winroll\",\"focal_point\",\"fstop\"]:\n    n\[k].setFlag(0x0000000010000000)"
label "(specify matrix needs to be set on)"
xpos -684
ypos 579
addUserKnob {20 DummyCam l Defaults}
addUserKnob {43 the_cam +INVISIBLE}
the_cam "\[\n#DummyCam v1.3 - Updated 5 May 2021.\nset starting_point \"this.input0\"\nset default \"this.d_\"\n\n# If cam has no inputs, return the default.\nif \{\[exists \$starting_point]\} \{\n    set x \[node \$starting_point]\n\} \{ \n    return \$default\n\}\n\nset finished 0\nwhile \{\$finished != 1\} \{\n\n    # First look for a Cam or Input or topnode.\n    while \{\[class \$x] != \"Camera3\" && \[class \$x] != \"Camera2\" && \[class \$x] != \"Camera\" && \[class \$x] != \"Input\" && \$x != \[topnode \$x]\} \{\n        set x \[node \$x.input0]\n    \}\n\n    # Then, check if node is a cam (and return), and otherwise, if it's an input, see if the parent exists and move to it.\n    if \{\[class \$x]==\"Camera3\"||\[class \$x]==\"Camera2\"||\[class \$x]==\"Camera\"\} \{\n        set x \[append x \".\"]\n        return \$x\n    \} \{ \n        if \{ \[class \$x]==\"Input\" \} \{ \n            set inp \"\$x.parent.input\"\n            set inputNum \[value \$x.number]\n            set inp \[append inp \$inputNum]\n            if \{ \[exists \$inp] \} \{\n                set x \[node \$inp]\n            \} \{ \n                set finished 1\n            \}\n        \} \{ \n            set finished 1\n        \}\n    \}\n\}\nreturn \$default\n]"
addUserKnob {43 the_frame +INVISIBLE}
the_frame "\[\nset the_camera \[string trimright \[value the_cam] .]\nif \{\[exists \$the_camera]\} \{\n    return \[value \$the_camera.frame]\n\} \{ \n    return \[frame]\n\}\n]"
addUserKnob {4 d_projection_mode l projection M {perspective orthographic uv spherical ""}}
addUserKnob {7 d_focal l "focal length" R 0 100}
d_focal 50
addUserKnob {7 d_haperture l "horiz aperture" R 0 50}
d_haperture 24.576
addUserKnob {7 d_vaperture l "vert aperture" R 0 50}
d_vaperture 18.672
addUserKnob {7 d_near l near R 0 10}
d_near 0.1
addUserKnob {7 d_far l far R 0 10000}
d_far 10000
addUserKnob {30 d_win_translate l "window translate"}
addUserKnob {30 d_win_scale l "window scale"}
d_win_scale {1 1}
addUserKnob {7 d_winroll l "window roll" R 0 45}
addUserKnob {7 d_focal_point l "focal distance" R 0 10}
d_focal_point 2
addUserKnob {7 d_fstop l fstop R 0 30}
d_fstop 16
addUserKnob {26 version l " " t "Updated 5 May 2021" T "<span style=\"color:#666\"><br/><b>DummyCam v1.3</b> - <a href=\"http://www.adrianpueyo.com\" style=\"color:#666;text-decoration: none;\">adrianpueyo.com</a>, 2019-2021</span>"}
}
push $N6cf36400
Grade {
channels {pSky.red pSky.green pSky.blue none}
multiply 0.01
black_clamp false
name Grade2
xpos -531
ypos 788
}
push $N6cf36400
Grade {
channels depth
multiply 10
black_clamp false
name Grade1
xpos -638
ypos 757
}
Expression {
temp_name0 recip
temp_expr0 (1/depth.Z)
channel0 zDepth
expr0 (depth.Z>0?recip==inf?0:recip:0)
channel1 {-rgba.red -rgba.green -rgba.blue none}
channel2 {-rgba.red -rgba.green -rgba.blue none}
name NukeDepthToCG2
label alpha
xpos -638
ypos 795
addUserKnob {20 User}
addUserKnob {4 math l "input math" M {"infinity = 0 (nuke, renderMan)" "camera = 0 (arnold, vray)"}}
math "camera = 0 (arnold, vray)"
}
end_group
AddChannels {
channels {pSky.red pSky.green pSky.blue none}
name AddChannels5
xpos -869
ypos 1449
}
Multiply {
channels depth
value 10
name Multiply1
xpos -869
ypos 1504
}
Multiply {
channels {pSky.red pSky.green pSky.blue -pSky.alpha}
value 0.1
name Multiply2
xpos -869
ypos 1542
}
Dot {
name Dot3
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -835
ypos 1657
}
ChannelMerge {
inputs 2
A depth.Z
operation max
B depth.Z
output depth.Z
name ChannelMerge1
xpos -869
ypos 1710
}
Copy {
inputs 2+1
from0 -rgba.alpha
to0 -rgba.alpha
channels pWater
name Copy15
xpos -869
ypos 1796
}
Dot {
name Dot202
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -835
ypos 1955
}
Output {
name Output1
xpos -869
ypos 2054
}
StickyNote {
inputs 0
name StickyNote2
label "in cm like camera"
xpos -762
ypos 1449
}
StickyNote {
inputs 0
name StickyNote1
label "in  meters as cm creates downstream\ncashe bug"
xpos -3052
ypos 1466
}
push $N6d429600
Camera {
translate {{"\[expression \[value the_cam]translate.x(\[value the_frame])]"} {"\[expression \[value the_cam]translate.y(\[value the_frame])]"} {"\[expression \[value the_cam]translate.z(\[value the_frame])]"}}
rotate {{"\[expression \[value the_cam]rotate.x(\[value the_frame])]"} {"\[expression \[value the_cam]rotate.y(\[value the_frame])]"} {"\[expression \[value the_cam]rotate.z(\[value the_frame])]"}}
scaling {{"\[expression \[value the_cam]scaling.x(\[value the_frame])]"} {"\[expression \[value the_cam]scaling.y(\[value the_frame])]"} {"\[expression \[value the_cam]scaling.z(\[value the_frame])]"}}
uniform_scale {{"\[expression \[value the_cam]uniform_scale(\[value the_frame])]"}}
skew {{"\[expression \[value the_cam]skew.x(\[value the_frame])]"} {"\[expression \[value the_cam]skew.y(\[value the_frame])]"} {"\[expression \[value the_cam]skew.z(\[value the_frame])]"}}
pivot {{"\[expression \[value the_cam]pivot.x(\[value the_frame])]"} {"\[expression \[value the_cam]pivot.y(\[value the_frame])]"} {"\[expression \[value the_cam]pivot.z(\[value the_frame])]"}}
useMatrix true
projection_mode {{"\[expression \[value the_cam]projection_mode(\[value the_frame])]"}}
focal {{"\[expression \[value the_cam]focal(\[value the_frame])]"}}
haperture {{"\[expression \[value the_cam]haperture(\[value the_frame])]"}}
vaperture {{"\[expression \[value the_cam]vaperture(\[value the_frame])]"}}
near -1
far 10000000
win_translate {{"\[expression \[value the_cam]win_translate.u(\[value the_frame])]"} {"\[expression \[value the_cam]win_translate.v(\[value the_frame])]"}}
win_scale {{"\[expression \[value the_cam]win_scale.u(\[value the_frame])]"} {"\[expression \[value the_cam]win_scale.v(\[value the_frame])]"}}
winroll {{"\[expression \[value the_cam]winroll(\[value the_frame])]"}}
focal_point {{"\[expression \[value the_cam]focal_point(\[value the_frame])]"}}
fstop {{"\[expression \[value the_cam]fstop(\[value the_frame])]"}}
name DummyCam_Extended2
help "DummyCam by Adrian Pueyo\n\nCamera that apart from the matrices also grabs all the \"Projection\" values from the upstream camera that it's connected to. Turns into a default Camera if no Camera connected. Can also be used inside of groups and gizmos, as many levels deep as you want :D All using live and super fast TCL.\n\nUpdated v1.1: Now grabs the correct frame too (thanks Erwan Leroy for the idea).\n\nUpdated v1.3: Now accepts Nuke13's Camera3\n\nadrianpueyo.com, 2019-2021"
onCreate "n = nuke.thisNode()\nfor k in \[\"projection_mode\",\"focal\",\"haperture\",\"vaperture\",\"near\",\"far\",\"win_translate\",\"win_scale\",\"winroll\",\"focal_point\",\"fstop\"]:\n    n\[k].setFlag(0x0000000010000000)"
label "(specify matrix needs to be set on)"
xpos -2935
ypos 1304
addUserKnob {20 DummyCam l Defaults}
addUserKnob {43 the_cam +INVISIBLE}
the_cam "\[\n#DummyCam v1.3 - Updated 5 May 2021.\nset starting_point \"this.input0\"\nset default \"this.d_\"\n\n# If cam has no inputs, return the default.\nif \{\[exists \$starting_point]\} \{\n    set x \[node \$starting_point]\n\} \{ \n    return \$default\n\}\n\nset finished 0\nwhile \{\$finished != 1\} \{\n\n    # First look for a Cam or Input or topnode.\n    while \{\[class \$x] != \"Camera3\" && \[class \$x] != \"Camera2\" && \[class \$x] != \"Camera\" && \[class \$x] != \"Input\" && \$x != \[topnode \$x]\} \{\n        set x \[node \$x.input0]\n    \}\n\n    # Then, check if node is a cam (and return), and otherwise, if it's an input, see if the parent exists and move to it.\n    if \{\[class \$x]==\"Camera3\"||\[class \$x]==\"Camera2\"||\[class \$x]==\"Camera\"\} \{\n        set x \[append x \".\"]\n        return \$x\n    \} \{ \n        if \{ \[class \$x]==\"Input\" \} \{ \n            set inp \"\$x.parent.input\"\n            set inputNum \[value \$x.number]\n            set inp \[append inp \$inputNum]\n            if \{ \[exists \$inp] \} \{\n                set x \[node \$inp]\n            \} \{ \n                set finished 1\n            \}\n        \} \{ \n            set finished 1\n        \}\n    \}\n\}\nreturn \$default\n]"
addUserKnob {43 the_frame +INVISIBLE}
the_frame "\[\nset the_camera \[string trimright \[value the_cam] .]\nif \{\[exists \$the_camera]\} \{\n    return \[value \$the_camera.frame]\n\} \{ \n    return \[frame]\n\}\n]"
addUserKnob {4 d_projection_mode l projection M {perspective orthographic uv spherical ""}}
addUserKnob {7 d_focal l "focal length" R 0 100}
d_focal 50
addUserKnob {7 d_haperture l "horiz aperture" R 0 50}
d_haperture 24.576
addUserKnob {7 d_vaperture l "vert aperture" R 0 50}
d_vaperture 18.672
addUserKnob {7 d_near l near R 0 10}
d_near 0.1
addUserKnob {7 d_far l far R 0 10000}
d_far 10000
addUserKnob {30 d_win_translate l "window translate"}
addUserKnob {30 d_win_scale l "window scale"}
d_win_scale {1 1}
addUserKnob {7 d_winroll l "window roll" R 0 45}
addUserKnob {7 d_focal_point l "focal distance" R 0 10}
d_focal_point 2
addUserKnob {7 d_fstop l fstop R 0 30}
d_fstop 16
addUserKnob {26 version l " " t "Updated 5 May 2021" T "<span style=\"color:#666\"><br/><b>DummyCam v1.3</b> - <a href=\"http://www.adrianpueyo.com\" style=\"color:#666;text-decoration: none;\">adrianpueyo.com</a>, 2019-2021</span>"}
}
push $N6ce16b00
add_layer {S_indirect_refract S_indirect_refract.red S_indirect_refract.green S_indirect_refract.blue}
Viewer {
frame_range 1001-1161
fps 25
channels S_indirect_refract
viewerProcess "sRGB (ACES)"
name Viewer1
xpos -2192
ypos -1081
}
end_group
Expression {
temp_name0 recip
temp_expr0 (1/depth.Z)
channel0 zDepth
expr0 (depth.Z>0?recip==inf?0:recip:0)
channel1 none
channel2 none
name NukeDepthToCG2
label alpha
selected true
xpos 11716
ypos -16072
addUserKnob {20 User}
addUserKnob {4 math l "input math" M {"infinity = 0 (nuke, renderMan)" "camera = 0 (arnold, vray)"}}
math "camera = 0 (arnold, vray)"
}
Dot {
name Dot101
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11750
ypos -15876
}
set N6cec5d00 [stack 0]
Dot {
name Dot95
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11750
ypos -15541
}
set N6cec5600 [stack 0]
Dot {
name Dot96
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11750
ypos -15479
}
set N6cec4f00 [stack 0]
push $N6cec5600
Read {
inputs 0
file_type exr
file /coppi/proj/thrg/ftrack/assets/s01e01/015-0250/img/thrg_s01e01_015-0250_oceanBTY_v003_beauty_acescg/thrg_s01e01_015-0250_oceanBTY_beauty_acescg_v003.%04d.exr
format "2272 1582 0 0 2272 1582 1 "
first 1001
last 1161
origfirst 1001
origlast 1161
origset true
name oceanBTY_beauty_acescg1
tile_color 0x14a14aff
selected true
xpos 9917
ypos -18512
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname beauty_acescg
addUserKnob {20 ftrack}
addUserKnob {1 componentId}
componentId c55beb20-7093-4395-ba92-95835f328b79
addUserKnob {1 componentName}
componentName beauty_acescg
addUserKnob {1 assetVersionId}
assetVersionId 8531726a-c7ea-4d76-98e0-75fe1dfdafc8
addUserKnob {1 assetVersion}
assetVersion 3
addUserKnob {1 assetName}
assetName oceanBTY
addUserKnob {1 assetType}
assetType img
addUserKnob {4 versionType l "Version Type" M {latest stable pinned}}
}
Dot {
name Dot47
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9951
ypos -18252
}
Group {
name Reformat_Overscan7
selected true
xpos 9917
ypos -17903
addUserKnob {20 User l Reformat_Overscan}
addUserKnob {41 format l "output format" T ReformatMASTER.format}
addUserKnob {41 filter T ReformatOverscanMASTER.filter}
addUserKnob {41 overscanPercent T ReformatOverscanMASTER.overscanPercent}
addUserKnob {20 info}
addUserKnob {26 version l ver: T "v1 rafal 10/02/2020"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust4
tile_color 0xaaaaaaff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 42
xpos -987
ypos -496
bdwidth 280
bdheight 332
z_order -92960
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "Flat plate res"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Black
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
Input {
inputs 0
name Input1
xpos -884
ypos -382
}
Reformat {
format {{{parent.parent.Reformat_OverscanMASTER.ReformatMASTER.format}}}
pbb true
name ReformatMASTER
xpos -884
ypos -342
}
Reformat {
type scale
scale {{overscanPercent==0?1:1-(1/overscanPercent)}}
resize none
filter impulse
pbb true
name ReformatOverscanMASTER
xpos -884
ypos -288
addUserKnob {20 User l percent}
addUserKnob {7 overscanPercent R 0 80}
overscanPercent {{parent.parent.Reformat_OverscanMASTER.ReformatOverscanMASTER.overscanPercent}}
}
Crop {
box {{-ceil(((input.height*((1-ReformatOverscanMASTER.scale)))*0.5))} {-ceil(((input.width*((1-ReformatOverscanMASTER.scale)))*0.5))} {ceil(input.width+((input.width*(1-ReformatOverscanMASTER.scale))*0.5))} {ceil(input.height+((input.height*(1-ReformatOverscanMASTER.scale))*0.5))}}
name CropOverscanMASTER
xpos -884
ypos -244
addUserKnob {20 User}
}
set N6ce90f00 [stack 0]
Output {
name Output1
xpos -884
ypos -144
}
push $N6ce90f00
Viewer {
frame_range 994-1161
fps 25
viewerProcess "sRGB (ACES)"
name Viewer1
xpos -624
ypos -303
}
end_group
Group {
name WhiteHorses1
label "I have precomps inside me"
selected true
xpos 9917
ypos -17714
disable true
addUserKnob {20 tab l info}
addUserKnob {26 txt l ver: T "0.1 1/03/22 Guillermo\n0.2 8/03/22 Guillermo"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust49
tile_color 0x870025ff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 82
xpos 4105
ypos 6890
bdwidth 527
bdheight 587
z_order -309349
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note PRECOMP
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Black
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.02 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust61
tile_color 0x870025ff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 82
xpos 4639
ypos 2171
bdwidth 527
bdheight 587
z_order -309349
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note PRECOMP
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Black
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.02 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
Input {
inputs 0
name Input1
xpos 896
ypos -364
}
Dot {
name DotIN
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 930
ypos -324
}
Reformat {
format "1153 811 0 0 1153 811 1 "
name Reformat44
xpos 5365
ypos 300
}
Dot {
name Dot398
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 5399
ypos 488
}
Dot {
name Dot399
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 5399
ypos 1191
}
set N6d13c800 [stack 0]
Dot {
name Dot400
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2215
ypos 1191
}
Dot {
name Dot401
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2215
ypos 1338
}
set N6d11b900 [stack 0]
Dot {
name Dot402
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2215
ypos 1923
}
set N6d11b200 [stack 0]
Dot {
name Dot403
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2215
ypos 2139
}
set N6d11ab00 [stack 0]
Dot {
name Dot404
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2210
ypos 2478
}
set N6d11a400 [stack 0]
Dot {
name Dot405
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2210
ypos 3207
}
set N6d119d00 [stack 0]
Dot {
name Dot451
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2210
ypos 4005
}
set N6d119600 [stack 0]
Dot {
name Dot452
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2210
ypos 4287
}
set N6d118f00 [stack 0]
Dot {
name Dot406
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2210
ypos 4492
}
set N6d118800 [stack 0]
Dot {
name Dot407
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2210
ypos 5372
}
set N6d118100 [stack 0]
Dot {
name Dot453
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2210
ypos 5960
}
set N6d103900 [stack 0]
Dot {
name Dot408
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2210
ypos 6145
}
set N6d103200 [stack 0]
Dot {
name Dot449
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2209
ypos 6585
}
set N6d102b00 [stack 0]
Dot {
name Dot411
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2210
ypos 9981
}
set N6d102400 [stack 0]
Dot {
name Dot412
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2210
ypos 10786
}
set N6d101d00 [stack 0]
Dot {
name Dot413
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2210
ypos 11752
}
set N6d101600 [stack 0]
Dot {
name Dot414
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2210
ypos 12563
}
set N6d100f00 [stack 0]
Dot {
name Dot415
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2210
ypos 13265
}
set N6d100800 [stack 0]
add_layer {pRef pRef.red pRef.green pRef.blue pRef.x pRef.y pRef.z}
Group {
name pRefTexture11
knobChanged "import nuke\n\ngroup = nuke.thisGroup()\n\ngroup.begin()\n\nnodeSample = nuke.toNode(\"sample\")\nnodeExpr = nuke.toNode(\"expression\")\n\nposU = nodeSample\[\"sampledC\"].getValue(0)\nposV = nodeSample\[\"sampledC\"].getValue(1)\n\nnodeExpr\[\"temp_expr1\"].setValue(str(posU))\nnodeExpr\[\"temp_expr2\"].setValue(str(posV))\n\ngroup.end()\n\n\n"
tile_color 0xff5555ff
label v03
xpos 4688
ypos 13255
addUserKnob {20 user l User}
addUserKnob {41 in l "position data" T ShuffleInputChannels.in}
addUserKnob {41 center T expression.center}
addUserKnob {6 preview l "preview texture" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {7 size R 0 50}
size 7
addUserKnob {7 rotation R 0 360}
rotation 65
addUserKnob {14 scaleUV l "scale UV" R 0 100}
scaleUV 1
addUserKnob {41 size_1 l "Blur data" T Blur.size}
addUserKnob {6 tileable l Tileable +STARTLINE}
}
Axis2 {
inputs 0
rotate {0 {parent.rotation} 0}
name Axis1
xpos -645
ypos 209
}
Input {
inputs 0
name img
xpos -1204
ypos -334
}
Shuffle {
in pRef
in2 alpha
alpha red2
name ShuffleInputChannels
label "\[value in]"
xpos -1204
ypos -132
}
set N6d0deb00 [stack 0]
Dot {
name Dot2
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -879
ypos -128
}
Expression {
temp_name0 size
temp_expr0 parent.size
temp_name1 posU
temp_expr1 center.r
temp_name2 posV
temp_expr2 center.b
expr0 "(posU - r)*(1/size)"
expr1 0
expr2 "(b - posV)*(1/size)"
expr3 a
name expression
xpos -907
ypos 125
addUserKnob {20 User}
addUserKnob {18 center}
center {167.1572571 -2.504800234e-21 67.68370056}
addUserKnob {6 center_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
}
ColorMatrix {
matrix {
    {{Axis1.world_matrix.0} {Axis1.world_matrix.1} {Axis1.world_matrix.2}}
    {{Axis1.world_matrix.4} {Axis1.world_matrix.5} {Axis1.world_matrix.6}}
    {{Axis1.world_matrix.8} {Axis1.world_matrix.9} {Axis1.world_matrix.10}}
  }
name ColorMatrix1
xpos -907
ypos 220
}
Shuffle2 {
fromInput1 {{0} B}
fromInput2 {{0} B}
mappings "4 rgba.red 0 0 rgba.red 0 0 black -1 -1 rgba.alpha 0 3 rgba.blue 0 2 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2"
name Shuffle2
label "\[value in]"
xpos -907
ypos 261
}
Expression {
temp_name0 valu
temp_expr0 parent.scaleUV.w
temp_name1 valv
temp_expr1 parent.scaleUV.h
expr0 r/valu
expr1 g/valv
name Expression_scaleUV
xpos -907
ypos 327
}
Expression {
temp_name0 size
temp_name1 posU
temp_name2 posV
expr0 r+0.5
expr1 g+0.5
expr2 0
name expression2
xpos -907
ypos 430
}
set N6d0bb900 [stack 0]
Expression {
expr0 abs(r)%1
expr1 abs(g)%1
name tileable
xpos -822
ypos 497
}
push $N6d0bb900
Switch {
inputs 2
which {{parent.tileable}}
name Switch1
xpos -907
ypos 563
}
Blur {
channels rgba
name Blur
xpos -907
ypos 631
}
Remove {
operation keep
channels rgba
name Remove1
xpos -907
ypos 884
}
Dot {
name Dot3
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -879
ypos 959
}
push $N6d0deb00
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels all
name Copy1
xpos -1204
ypos 949
}
Dot {
name Dot1
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -1176
ypos 1164
}
set N6d0b8800 [stack 0]
CheckerBoard2 {
inputs 0
format "1024 1024 0 0 1024 1024 1 square_1K"
name CheckerBoard1
xpos -1880
ypos 782
}
set N6d0b8100 [stack 0]
Remove {
name Remove2
xpos -1542
ypos 799
}
set N6d080f00 [stack 0]
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
output {-rgba.red rgba.green -rgba.blue -rgba.alpha}
message "\n-->"
old_message {{10 45 45 62}
  }
box {{curve} {curve} {input.width} {input.height}}
xjustify center
yjustify center
transforms {{0 2}
  }
cursor_position 1
global_font_scale 3
center {1920 1080}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{0 1024}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 1920 1080 0 0 1 1 0 0 0 0}
  }
name Text3
xpos -1673
ypos 991
}
set N6d080800 [stack 0]
Transform {
rotate 90
center {{input.width/2} {input.height/2}}
shutteroffset centred
name Transform1
xpos -1644
ypos 1079
}
push $N6d080800
Transform {
rotate 90
center {{input.width/2} {input.height/2}}
shutteroffset centred
name Transform2
xpos -1759
ypos 1026
}
Mirror2 {
flop true
name Mirror2_1
xpos -1759
ypos 1052
}
push $N6d080f00
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
output {-rgba.red rgba.green -rgba.blue -rgba.alpha}
message Y
old_message {{89}
  }
box {{curve} {curve} {input.width} {input.height}}
xjustify center
yjustify center
transforms {{0 2}
  }
cursor_position 1
global_font_scale 3
center {1920 1080}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{0 1024}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 1920 1080 0 0 1 1 0 0 0 0}
  }
name Text2
xpos -1739
ypos 948
}
push 0
push $N6d080f00
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
output {rgba.red -rgba.green -rgba.blue -rgba.alpha}
message "-->\nX\n-->"
old_message {{45 45 62 10 88 10 45 45 62}
  }
box {{curve} {curve} {input.width} {input.height}}
xjustify center
yjustify center
transforms {{0 2}
  }
cursor_position 3
global_font_scale 3
center {1920 1080}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{0 1024}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 1920 1080 0 0 1 1 0 0 0 0}
  }
name Text1
xpos -1768
ypos 902
}
push $N6d0b8100
Merge2 {
inputs 5+1
operation plus
name Plus
xpos -1882
ypos 1079
}
push $N6d080f00
Expression {
expr0 (x+0.5)/width
expr1 (y+0.5)/height
name UVMap
xpos -1534
ypos 1032
}
Grade {
gamma 0.48
name Grade1
xpos -1534
ypos 1125
}
Merge2 {
inputs 2
operation multiply
name Multiply
xpos -1882
ypos 1125
}
BlackOutside {
name BlackOutside1
xpos -1880
ypos 1207
}
STMap {
inputs 2
channels rgba
uv rgb
name STMap1
xpos -1880
ypos 1242
}
push $N6d0b8800
Switch {
inputs 2
which {{parent.preview}}
name Switch_Preview
tile_color 0xe54c4cff
label "\[if \{\[value this.which]==\"1\"\} \{return \"\[knob this.tile_color 3853012223]\"\} elseif \{\[value this.which]==\"2\"\} \{return \"\[knob this.tile_color 3336916223]\"\} elseif \{\[value this.which]==\"3\"\} \{return \"\[knob this.tile_color 1810189567]\"\} elseif \{\[value this.which]==\"4\"\} \{return \"\[knob this.tile_color 1290111487]\"\} elseif \{\[value this.which]==\"5\"\} \{return \"\[knob this.tile_color 1290135039]\"\} elseif \{\[value this.which]==\"6\"\} \{return \"\[knob this.tile_color 1284105727]\"\} elseif \{\[value this.which]==\"7\"\} \{return \"\[knob this.tile_color 1917642239]\"\} elseif \{\[value this.which]==\"8\"\} \{return \"\[knob this.tile_color 3326928383]\"\} elseif \{\[value this.which]==\"9\"\} \{return \"\[knob this.tile_color 3847006463]\"\} else \{return \"\[knob this.tile_color 3846982911]\"\}]\[value which]\n"
xpos -1204
ypos 1291
}
Output {
name Output1
xpos -1204
ypos 1377
}
Read {
inputs 0
file_type jpeg
file "/coppi/global/flibrary/2D/textures/UV Checkers/UVMaster_c1.jpg"
format "1024 1024 0 0 1024 1024 1 square_1K"
origset true
in_colorspace scene_linear
out_colorspace scene_linear
name Read3
xpos -1582
ypos 679
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
}
end_group
Read {
inputs 0
file_type mov
file /coppi/proj/thrg/shottree/s01e01/015-0300/ref/1052981687-preview.mp4
format "596 336 0 0 596 336 1 "
last 812
frame_mode "start at"
frame 1001
origlast 812
origset true
colorspace matte_paint
name Read56
xpos 4840
ypos 12726
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
}
Mirror2 {
flip true
name Mirror2_10
xpos 4840
ypos 12891
}
Crop {
box {0 0 {width} {height}}
softness 100
name CropToInput35
xpos 4840
ypos 12929
}
Saturation {
saturation 0
mode Maximum
name Saturation10
xpos 4840
ypos 13011
}
Keyer {
operation "luminance key"
range {0.1616120805 0.2091108812 3.58902553 4}
name Keyer8
xpos 4840
ypos 13054
}
Premult {
name Premult21
xpos 4840
ypos 13133
}
STMap {
inputs 2
uv rgb
name STMap14
xpos 4840
ypos 13255
}
set N3ff2dd00 [stack 0]
Blur {
size 11
name Blur4
xpos 4967
ypos 13279
}
push $N3ff2dd00
push $N6d100f00
Group {
name pRefTexture12
knobChanged "import nuke\n\ngroup = nuke.thisGroup()\n\ngroup.begin()\n\nnodeSample = nuke.toNode(\"sample\")\nnodeExpr = nuke.toNode(\"expression\")\n\nposU = nodeSample\[\"sampledC\"].getValue(0)\nposV = nodeSample\[\"sampledC\"].getValue(1)\n\nnodeExpr\[\"temp_expr1\"].setValue(str(posU))\nnodeExpr\[\"temp_expr2\"].setValue(str(posV))\n\ngroup.end()\n\n\n"
tile_color 0xff5555ff
label v03
xpos 4688
ypos 12552
addUserKnob {20 user l User}
addUserKnob {41 in l "position data" T ShuffleInputChannels.in}
addUserKnob {41 center T expression.center}
addUserKnob {6 preview l "preview texture" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {7 size R 0 50}
size 20
addUserKnob {7 rotation R 0 360}
rotation 65
addUserKnob {14 scaleUV l "scale UV" R 0 100}
scaleUV 1
addUserKnob {41 size_1 l "Blur data" T Blur.size}
addUserKnob {6 tileable l Tileable +STARTLINE}
}
Axis2 {
inputs 0
rotate {0 {parent.rotation} 0}
name Axis1
xpos -645
ypos 209
}
Input {
inputs 0
name img
xpos -1204
ypos -334
}
Shuffle {
in pRef
in2 alpha
alpha red2
name ShuffleInputChannels
label "\[value in]"
xpos -1204
ypos -132
}
set N3ff03900 [stack 0]
Dot {
name Dot2
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -879
ypos -128
}
Expression {
temp_name0 size
temp_expr0 parent.size
temp_name1 posU
temp_expr1 center.r
temp_name2 posV
temp_expr2 center.b
expr0 "(posU - r)*(1/size)"
expr1 0
expr2 "(b - posV)*(1/size)"
expr3 a
name expression
xpos -907
ypos 125
addUserKnob {20 User}
addUserKnob {18 center}
center {103.0780411 -2.369968179e-21 64.04032135}
addUserKnob {6 center_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
}
ColorMatrix {
matrix {
    {{Axis1.world_matrix.0} {Axis1.world_matrix.1} {Axis1.world_matrix.2}}
    {{Axis1.world_matrix.4} {Axis1.world_matrix.5} {Axis1.world_matrix.6}}
    {{Axis1.world_matrix.8} {Axis1.world_matrix.9} {Axis1.world_matrix.10}}
  }
name ColorMatrix1
xpos -907
ypos 220
}
Shuffle2 {
fromInput1 {{0} B}
fromInput2 {{0} B}
mappings "4 rgba.red 0 0 rgba.red 0 0 black -1 -1 rgba.alpha 0 3 rgba.blue 0 2 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2"
name Shuffle2
label "\[value in]"
xpos -907
ypos 261
}
Expression {
temp_name0 valu
temp_expr0 parent.scaleUV.w
temp_name1 valv
temp_expr1 parent.scaleUV.h
expr0 r/valu
expr1 g/valv
name Expression_scaleUV
xpos -907
ypos 327
}
Expression {
temp_name0 size
temp_name1 posU
temp_name2 posV
expr0 r+0.5
expr1 g+0.5
expr2 0
name expression2
xpos -907
ypos 430
}
set N3ff00800 [stack 0]
Expression {
expr0 abs(r)%1
expr1 abs(g)%1
name tileable
xpos -822
ypos 497
}
push $N3ff00800
Switch {
inputs 2
which {{parent.tileable}}
name Switch1
xpos -907
ypos 563
}
Blur {
channels rgba
name Blur
xpos -907
ypos 631
}
Remove {
operation keep
channels rgba
name Remove1
xpos -907
ypos 884
}
Dot {
name Dot3
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -879
ypos 959
}
push $N3ff03900
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels all
name Copy1
xpos -1204
ypos 949
}
Dot {
name Dot1
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -1176
ypos 1164
}
set N3fed1600 [stack 0]
CheckerBoard2 {
inputs 0
format "1024 1024 0 0 1024 1024 1 square_1K"
name CheckerBoard1
xpos -1880
ypos 782
}
set N3fed0f00 [stack 0]
Remove {
name Remove2
xpos -1542
ypos 799
}
set N3fc9dd00 [stack 0]
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
output {-rgba.red rgba.green -rgba.blue -rgba.alpha}
message "\n-->"
old_message {{10 45 45 62}
  }
box {{curve} {curve} {input.width} {input.height}}
xjustify center
yjustify center
transforms {{0 2}
  }
cursor_position 1
global_font_scale 3
center {1920 1080}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{0 1024}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 1920 1080 0 0 1 1 0 0 0 0}
  }
name Text3
xpos -1673
ypos 991
}
set N3fc9d600 [stack 0]
Transform {
rotate 90
center {{input.width/2} {input.height/2}}
shutteroffset centred
name Transform1
xpos -1644
ypos 1079
}
push $N3fc9d600
Transform {
rotate 90
center {{input.width/2} {input.height/2}}
shutteroffset centred
name Transform2
xpos -1759
ypos 1026
}
Mirror2 {
flop true
name Mirror2_1
xpos -1759
ypos 1052
}
push $N3fc9dd00
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
output {-rgba.red rgba.green -rgba.blue -rgba.alpha}
message Y
old_message {{89}
  }
box {{curve} {curve} {input.width} {input.height}}
xjustify center
yjustify center
transforms {{0 2}
  }
cursor_position 1
global_font_scale 3
center {1920 1080}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{0 1024}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 1920 1080 0 0 1 1 0 0 0 0}
  }
name Text2
xpos -1739
ypos 948
}
push 0
push $N3fc9dd00
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
output {rgba.red -rgba.green -rgba.blue -rgba.alpha}
message "-->\nX\n-->"
old_message {{45 45 62 10 88 10 45 45 62}
  }
box {{curve} {curve} {input.width} {input.height}}
xjustify center
yjustify center
transforms {{0 2}
  }
cursor_position 3
global_font_scale 3
center {1920 1080}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{0 1024}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 1920 1080 0 0 1 1 0 0 0 0}
  }
name Text1
xpos -1768
ypos 902
}
push $N3fed0f00
Merge2 {
inputs 5+1
operation plus
name Plus
xpos -1882
ypos 1079
}
push $N3fc9dd00
Expression {
expr0 (x+0.5)/width
expr1 (y+0.5)/height
name UVMap
xpos -1534
ypos 1032
}
Grade {
gamma 0.48
name Grade1
xpos -1534
ypos 1125
}
Merge2 {
inputs 2
operation multiply
name Multiply
xpos -1882
ypos 1125
}
BlackOutside {
name BlackOutside1
xpos -1880
ypos 1207
}
STMap {
inputs 2
channels rgba
uv rgb
name STMap1
xpos -1880
ypos 1242
}
push $N3fed1600
Switch {
inputs 2
which {{parent.preview}}
name Switch_Preview
tile_color 0xe54c4cff
label "\[if \{\[value this.which]==\"1\"\} \{return \"\[knob this.tile_color 3853012223]\"\} elseif \{\[value this.which]==\"2\"\} \{return \"\[knob this.tile_color 3336916223]\"\} elseif \{\[value this.which]==\"3\"\} \{return \"\[knob this.tile_color 1810189567]\"\} elseif \{\[value this.which]==\"4\"\} \{return \"\[knob this.tile_color 1290111487]\"\} elseif \{\[value this.which]==\"5\"\} \{return \"\[knob this.tile_color 1290135039]\"\} elseif \{\[value this.which]==\"6\"\} \{return \"\[knob this.tile_color 1284105727]\"\} elseif \{\[value this.which]==\"7\"\} \{return \"\[knob this.tile_color 1917642239]\"\} elseif \{\[value this.which]==\"8\"\} \{return \"\[knob this.tile_color 3326928383]\"\} elseif \{\[value this.which]==\"9\"\} \{return \"\[knob this.tile_color 3847006463]\"\} else \{return \"\[knob this.tile_color 3846982911]\"\}]\[value which]\n"
xpos -1204
ypos 1291
}
Output {
name Output1
xpos -1204
ypos 1377
}
Read {
inputs 0
file_type jpeg
file "/coppi/global/flibrary/2D/textures/UV Checkers/UVMaster_c1.jpg"
format "1024 1024 0 0 1024 1024 1 square_1K"
origset true
in_colorspace scene_linear
out_colorspace scene_linear
name Read3
xpos -1582
ypos 679
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
}
end_group
Read {
inputs 0
file_type mov
file /coppi/proj/thrg/shottree/s01e01/015-0300/ref/1034290106-preview.mp4
format "596 336 0 0 596 336 1 "
last 749
frame_mode "start at"
frame 1001
origlast 749
origset true
colorspace matte_paint
name Read57
xpos 4840
ypos 12008
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
}
Mirror2 {
flip true
name Mirror2_11
xpos 4840
ypos 12188
}
Crop {
box {0 0 {width} {height}}
softness 100
name CropToInput36
xpos 4840
ypos 12226
}
Saturation {
saturation 0
mode Maximum
name Saturation12
xpos 4840
ypos 12308
}
Keyer {
operation "luminance key"
range {0.1616120805 0.2091108812 3.58902553 4}
name Keyer9
xpos 4840
ypos 12351
}
Premult {
name Premult22
xpos 4840
ypos 12430
}
Retime {
input.last 749
output.last 1498
speed 0.5
time ""
name Retime2
xpos 4840
ypos 12456
}
STMap {
inputs 2
uv rgb
name STMap15
xpos 4840
ypos 12552
}
set N3fbea400 [stack 0]
push $N3fbea400
push $N6d101600
Group {
name pRefTexture13
knobChanged "import nuke\n\ngroup = nuke.thisGroup()\n\ngroup.begin()\n\nnodeSample = nuke.toNode(\"sample\")\nnodeExpr = nuke.toNode(\"expression\")\n\nposU = nodeSample\[\"sampledC\"].getValue(0)\nposV = nodeSample\[\"sampledC\"].getValue(1)\n\nnodeExpr\[\"temp_expr1\"].setValue(str(posU))\nnodeExpr\[\"temp_expr2\"].setValue(str(posV))\n\ngroup.end()\n\n\n"
tile_color 0xff5555ff
label v03
xpos 4688
ypos 11742
addUserKnob {20 user l User}
addUserKnob {41 in l "position data" T ShuffleInputChannels.in}
addUserKnob {41 center T expression.center}
addUserKnob {6 preview l "preview texture" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {7 size R 0 50}
size 30
addUserKnob {7 rotation R 0 360}
rotation 65
addUserKnob {14 scaleUV l "scale UV" R 0 100}
scaleUV 1
addUserKnob {41 size_1 l "Blur data" T Blur.size}
addUserKnob {6 tileable l Tileable +STARTLINE}
}
Axis2 {
inputs 0
rotate {0 {parent.rotation} 0}
name Axis1
xpos -645
ypos 209
}
Input {
inputs 0
name img
xpos -1204
ypos -334
}
Shuffle {
in pRef
in2 alpha
alpha red2
name ShuffleInputChannels
label "\[value in]"
xpos -1204
ypos -132
}
set N3fbe8800 [stack 0]
Dot {
name Dot2
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -879
ypos -128
}
Expression {
temp_name0 size
temp_expr0 parent.size
temp_name1 posU
temp_expr1 center.r
temp_name2 posV
temp_expr2 center.b
expr0 "(posU - r)*(1/size)"
expr1 0
expr2 "(b - posV)*(1/size)"
expr3 a
name expression
xpos -907
ypos 125
addUserKnob {20 User}
addUserKnob {18 center}
center {161.7874451 -2.470055417e-21 66.74484253}
addUserKnob {6 center_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
}
ColorMatrix {
matrix {
    {{Axis1.world_matrix.0} {Axis1.world_matrix.1} {Axis1.world_matrix.2}}
    {{Axis1.world_matrix.4} {Axis1.world_matrix.5} {Axis1.world_matrix.6}}
    {{Axis1.world_matrix.8} {Axis1.world_matrix.9} {Axis1.world_matrix.10}}
  }
name ColorMatrix1
xpos -907
ypos 220
}
Shuffle2 {
fromInput1 {{0} B}
fromInput2 {{0} B}
mappings "4 rgba.red 0 0 rgba.red 0 0 black -1 -1 rgba.alpha 0 3 rgba.blue 0 2 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2"
name Shuffle2
label "\[value in]"
xpos -907
ypos 261
}
Expression {
temp_name0 valu
temp_expr0 parent.scaleUV.w
temp_name1 valv
temp_expr1 parent.scaleUV.h
expr0 r/valu
expr1 g/valv
name Expression_scaleUV
xpos -907
ypos 327
}
Expression {
temp_name0 size
temp_name1 posU
temp_name2 posV
expr0 r+0.5
expr1 g+0.5
expr2 0
name expression2
xpos -907
ypos 430
}
set N3fdb1600 [stack 0]
Expression {
expr0 abs(r)%1
expr1 abs(g)%1
name tileable
xpos -822
ypos 497
}
push $N3fdb1600
Switch {
inputs 2
which {{parent.tileable}}
name Switch1
xpos -907
ypos 563
}
Blur {
channels rgba
name Blur
xpos -907
ypos 631
}
Remove {
operation keep
channels rgba
name Remove1
xpos -907
ypos 884
}
Dot {
name Dot3
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -879
ypos 959
}
push $N3fbe8800
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels all
name Copy1
xpos -1204
ypos 949
}
Dot {
name Dot1
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -1176
ypos 1164
}
set N3fd82400 [stack 0]
CheckerBoard2 {
inputs 0
format "1024 1024 0 0 1024 1024 1 square_1K"
name CheckerBoard1
xpos -1880
ypos 782
}
set N3fd81d00 [stack 0]
Remove {
name Remove2
xpos -1542
ypos 799
}
set N3fd66b00 [stack 0]
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
output {-rgba.red rgba.green -rgba.blue -rgba.alpha}
message "\n-->"
old_message {{10 45 45 62}
  }
box {{curve} {curve} {input.width} {input.height}}
xjustify center
yjustify center
transforms {{0 2}
  }
cursor_position 1
global_font_scale 3
center {1920 1080}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{0 1024}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 1920 1080 0 0 1 1 0 0 0 0}
  }
name Text3
xpos -1673
ypos 991
}
set N3fd66400 [stack 0]
Transform {
rotate 90
center {{input.width/2} {input.height/2}}
shutteroffset centred
name Transform1
xpos -1644
ypos 1079
}
push $N3fd66400
Transform {
rotate 90
center {{input.width/2} {input.height/2}}
shutteroffset centred
name Transform2
xpos -1759
ypos 1026
}
Mirror2 {
flop true
name Mirror2_1
xpos -1759
ypos 1052
}
push $N3fd66b00
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
output {-rgba.red rgba.green -rgba.blue -rgba.alpha}
message Y
old_message {{89}
  }
box {{curve} {curve} {input.width} {input.height}}
xjustify center
yjustify center
transforms {{0 2}
  }
cursor_position 1
global_font_scale 3
center {1920 1080}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{0 1024}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 1920 1080 0 0 1 1 0 0 0 0}
  }
name Text2
xpos -1739
ypos 948
}
push 0
push $N3fd66b00
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
output {rgba.red -rgba.green -rgba.blue -rgba.alpha}
message "-->\nX\n-->"
old_message {{45 45 62 10 88 10 45 45 62}
  }
box {{curve} {curve} {input.width} {input.height}}
xjustify center
yjustify center
transforms {{0 2}
  }
cursor_position 3
global_font_scale 3
center {1920 1080}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{0 1024}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 1920 1080 0 0 1 1 0 0 0 0}
  }
name Text1
xpos -1768
ypos 902
}
push $N3fd81d00
Merge2 {
inputs 5+1
operation plus
name Plus
xpos -1882
ypos 1079
}
push $N3fd66b00
Expression {
expr0 (x+0.5)/width
expr1 (y+0.5)/height
name UVMap
xpos -1534
ypos 1032
}
Grade {
gamma 0.48
name Grade1
xpos -1534
ypos 1125
}
Merge2 {
inputs 2
operation multiply
name Multiply
xpos -1882
ypos 1125
}
BlackOutside {
name BlackOutside1
xpos -1880
ypos 1207
}
STMap {
inputs 2
channels rgba
uv rgb
name STMap1
xpos -1880
ypos 1242
}
push $N3fd82400
Switch {
inputs 2
which {{parent.preview}}
name Switch_Preview
tile_color 0xe54c4cff
label "\[if \{\[value this.which]==\"1\"\} \{return \"\[knob this.tile_color 3853012223]\"\} elseif \{\[value this.which]==\"2\"\} \{return \"\[knob this.tile_color 3336916223]\"\} elseif \{\[value this.which]==\"3\"\} \{return \"\[knob this.tile_color 1810189567]\"\} elseif \{\[value this.which]==\"4\"\} \{return \"\[knob this.tile_color 1290111487]\"\} elseif \{\[value this.which]==\"5\"\} \{return \"\[knob this.tile_color 1290135039]\"\} elseif \{\[value this.which]==\"6\"\} \{return \"\[knob this.tile_color 1284105727]\"\} elseif \{\[value this.which]==\"7\"\} \{return \"\[knob this.tile_color 1917642239]\"\} elseif \{\[value this.which]==\"8\"\} \{return \"\[knob this.tile_color 3326928383]\"\} elseif \{\[value this.which]==\"9\"\} \{return \"\[knob this.tile_color 3847006463]\"\} else \{return \"\[knob this.tile_color 3846982911]\"\}]\[value which]\n"
xpos -1204
ypos 1291
}
Output {
name Output1
xpos -1204
ypos 1377
}
Read {
inputs 0
file_type jpeg
file "/coppi/global/flibrary/2D/textures/UV Checkers/UVMaster_c1.jpg"
format "1024 1024 0 0 1024 1024 1 square_1K"
origset true
in_colorspace scene_linear
out_colorspace scene_linear
name Read3
xpos -1582
ypos 679
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
}
end_group
Read {
inputs 0
file_type mov
file /coppi/proj/thrg/shottree/s01e01/015-0300/ref/1023786100-preview.mp4
format "600 316 0 0 600 316 1 "
last 822
frame_mode "start at"
frame 1001
origlast 822
origset true
colorspace matte_paint
name Read58
xpos 4840
ypos 11225
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
}
Mirror2 {
flip true
name Mirror2_12
xpos 4840
ypos 11383
}
Crop {
box {0 0 {width} {height}}
softness 100
name CropToInput37
xpos 4840
ypos 11421
}
Saturation {
saturation 0
mode Maximum
name Saturation13
xpos 4840
ypos 11495
}
Keyer {
operation "luminance key"
range {1 2.833893084 3.58902553 4}
name Keyer10
xpos 4840
ypos 11538
}
Premult {
name Premult23
xpos 4840
ypos 11639
}
STMap {
inputs 2
uv rgb
name STMap16
xpos 4840
ypos 11742
}
set N3feab900 [stack 0]
push $N6d101d00
Group {
name pRefTexture14
knobChanged "import nuke\n\ngroup = nuke.thisGroup()\n\ngroup.begin()\n\nnodeSample = nuke.toNode(\"sample\")\nnodeExpr = nuke.toNode(\"expression\")\n\nposU = nodeSample\[\"sampledC\"].getValue(0)\nposV = nodeSample\[\"sampledC\"].getValue(1)\n\nnodeExpr\[\"temp_expr1\"].setValue(str(posU))\nnodeExpr\[\"temp_expr2\"].setValue(str(posV))\n\ngroup.end()\n\n\n"
tile_color 0xff5555ff
label v03
xpos 4688
ypos 10776
addUserKnob {20 user l User}
addUserKnob {41 in l "position data" T ShuffleInputChannels.in}
addUserKnob {41 center T expression.center}
addUserKnob {6 preview l "preview texture" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {7 size R 0 50}
size 10
addUserKnob {7 rotation R 0 360}
rotation 97
addUserKnob {14 scaleUV l "scale UV" R 0 100}
scaleUV 1
addUserKnob {41 size_1 l "Blur data" T Blur.size}
addUserKnob {6 tileable l Tileable +STARTLINE}
}
Axis2 {
inputs 0
rotate {0 {parent.rotation} 0}
name Axis1
xpos -645
ypos 209
}
Input {
inputs 0
name img
xpos -1204
ypos -334
}
Shuffle {
in pRef
in2 alpha
alpha red2
name ShuffleInputChannels
label "\[value in]"
xpos -1204
ypos -132
}
set N3fea9d00 [stack 0]
Dot {
name Dot2
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -879
ypos -128
}
Expression {
temp_name0 size
temp_expr0 parent.size
temp_name1 posU
temp_expr1 center.r
temp_name2 posV
temp_expr2 center.b
expr0 "(posU - r)*(1/size)"
expr1 0
expr2 "(b - posV)*(1/size)"
expr3 a
name expression
xpos -907
ypos 125
addUserKnob {20 User}
addUserKnob {18 center}
center {151.3723755 -2.488856005e-21 67.25286102}
addUserKnob {6 center_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
}
ColorMatrix {
matrix {
    {{Axis1.world_matrix.0} {Axis1.world_matrix.1} {Axis1.world_matrix.2}}
    {{Axis1.world_matrix.4} {Axis1.world_matrix.5} {Axis1.world_matrix.6}}
    {{Axis1.world_matrix.8} {Axis1.world_matrix.9} {Axis1.world_matrix.10}}
  }
name ColorMatrix1
xpos -907
ypos 220
}
Shuffle2 {
fromInput1 {{0} B}
fromInput2 {{0} B}
mappings "4 rgba.red 0 0 rgba.red 0 0 black -1 -1 rgba.alpha 0 3 rgba.blue 0 2 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2"
name Shuffle2
label "\[value in]"
xpos -907
ypos 261
}
Expression {
temp_name0 valu
temp_expr0 parent.scaleUV.w
temp_name1 valv
temp_expr1 parent.scaleUV.h
expr0 r/valu
expr1 g/valv
name Expression_scaleUV
xpos -907
ypos 327
}
Expression {
temp_name0 size
temp_name1 posU
temp_name2 posV
expr0 r+0.5
expr1 g+0.5
expr2 0
name expression2
xpos -907
ypos 430
}
set N3fe6eb00 [stack 0]
Expression {
expr0 abs(r)%1
expr1 abs(g)%1
name tileable
xpos -822
ypos 497
}
push $N3fe6eb00
Switch {
inputs 2
which {{parent.tileable}}
name Switch1
xpos -907
ypos 563
}
Blur {
channels rgba
name Blur
xpos -907
ypos 631
}
Remove {
operation keep
channels rgba
name Remove1
xpos -907
ypos 884
}
Dot {
name Dot3
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -879
ypos 959
}
push $N3fea9d00
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels all
name Copy1
xpos -1204
ypos 949
}
Dot {
name Dot1
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -1176
ypos 1164
}
set N3fe37900 [stack 0]
CheckerBoard2 {
inputs 0
format "1024 1024 0 0 1024 1024 1 square_1K"
name CheckerBoard1
xpos -1880
ypos 782
}
set N3fe37200 [stack 0]
Remove {
name Remove2
xpos -1542
ypos 799
}
set N3fe34100 [stack 0]
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
output {-rgba.red rgba.green -rgba.blue -rgba.alpha}
message "\n-->"
old_message {{10 45 45 62}
  }
box {{curve} {curve} {input.width} {input.height}}
xjustify center
yjustify center
transforms {{0 2}
  }
cursor_position 1
global_font_scale 3
center {1920 1080}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{0 1024}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 1920 1080 0 0 1 1 0 0 0 0}
  }
name Text3
xpos -1673
ypos 991
}
set N3fe2b900 [stack 0]
Transform {
rotate 90
center {{input.width/2} {input.height/2}}
shutteroffset centred
name Transform1
xpos -1644
ypos 1079
}
push $N3fe2b900
Transform {
rotate 90
center {{input.width/2} {input.height/2}}
shutteroffset centred
name Transform2
xpos -1759
ypos 1026
}
Mirror2 {
flop true
name Mirror2_1
xpos -1759
ypos 1052
}
push $N3fe34100
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
output {-rgba.red rgba.green -rgba.blue -rgba.alpha}
message Y
old_message {{89}
  }
box {{curve} {curve} {input.width} {input.height}}
xjustify center
yjustify center
transforms {{0 2}
  }
cursor_position 1
global_font_scale 3
center {1920 1080}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{0 1024}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 1920 1080 0 0 1 1 0 0 0 0}
  }
name Text2
xpos -1739
ypos 948
}
push 0
push $N3fe34100
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
output {rgba.red -rgba.green -rgba.blue -rgba.alpha}
message "-->\nX\n-->"
old_message {{45 45 62 10 88 10 45 45 62}
  }
box {{curve} {curve} {input.width} {input.height}}
xjustify center
yjustify center
transforms {{0 2}
  }
cursor_position 3
global_font_scale 3
center {1920 1080}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{0 1024}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 1920 1080 0 0 1 1 0 0 0 0}
  }
name Text1
xpos -1768
ypos 902
}
push $N3fe37200
Merge2 {
inputs 5+1
operation plus
name Plus
xpos -1882
ypos 1079
}
push $N3fe34100
Expression {
expr0 (x+0.5)/width
expr1 (y+0.5)/height
name UVMap
xpos -1534
ypos 1032
}
Grade {
gamma 0.48
name Grade1
xpos -1534
ypos 1125
}
Merge2 {
inputs 2
operation multiply
name Multiply
xpos -1882
ypos 1125
}
BlackOutside {
name BlackOutside1
xpos -1880
ypos 1207
}
STMap {
inputs 2
channels rgba
uv rgb
name STMap1
xpos -1880
ypos 1242
}
push $N3fe37900
Switch {
inputs 2
which {{parent.preview}}
name Switch_Preview
tile_color 0xe54c4cff
label "\[if \{\[value this.which]==\"1\"\} \{return \"\[knob this.tile_color 3853012223]\"\} elseif \{\[value this.which]==\"2\"\} \{return \"\[knob this.tile_color 3336916223]\"\} elseif \{\[value this.which]==\"3\"\} \{return \"\[knob this.tile_color 1810189567]\"\} elseif \{\[value this.which]==\"4\"\} \{return \"\[knob this.tile_color 1290111487]\"\} elseif \{\[value this.which]==\"5\"\} \{return \"\[knob this.tile_color 1290135039]\"\} elseif \{\[value this.which]==\"6\"\} \{return \"\[knob this.tile_color 1284105727]\"\} elseif \{\[value this.which]==\"7\"\} \{return \"\[knob this.tile_color 1917642239]\"\} elseif \{\[value this.which]==\"8\"\} \{return \"\[knob this.tile_color 3326928383]\"\} elseif \{\[value this.which]==\"9\"\} \{return \"\[knob this.tile_color 3847006463]\"\} else \{return \"\[knob this.tile_color 3846982911]\"\}]\[value which]\n"
xpos -1204
ypos 1291
}
Output {
name Output1
xpos -1204
ypos 1377
}
Read {
inputs 0
file_type jpeg
file "/coppi/global/flibrary/2D/textures/UV Checkers/UVMaster_c1.jpg"
format "1024 1024 0 0 1024 1024 1 square_1K"
origset true
in_colorspace scene_linear
out_colorspace scene_linear
name Read3
xpos -1582
ypos 679
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
}
end_group
Read {
inputs 0
file_type mov
file /coppi/proj/thrg/shottree/s01e01/015-0300/ref/1009010210-preview.mp4
format "600 316 0 0 600 316 1 "
last 480
frame_mode "start at"
frame 1001
origlast 480
origset true
colorspace matte_paint
name Read59
xpos 4840
ypos 10177
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
}
Mirror2 {
flip true
name Mirror2_13
xpos 4840
ypos 10331
}
Crop {
box {0 0 {width} {height}}
softness 100
name CropToInput38
xpos 4840
ypos 10369
}
Saturation {
saturation 0
mode Maximum
name Saturation14
xpos 4840
ypos 10473
}
Keyer {
operation "luminance key"
range {1 2.833893084 3.58902553 4}
name Keyer11
xpos 4840
ypos 10516
}
Premult {
name Premult24
xpos 4840
ypos 10614
}
Transform {
translate {{curve} {(frame-1001)/2}}
scale {2 1}
center {300 158}
shutteroffset centred
name Transform11
xpos 4840
ypos 10680
}
STMap {
inputs 2
uv rgb
name STMap17
xpos 4840
ypos 10776
}
set N3d5f4800 [stack 0]
push $N3d5f4800
push $N6d102400
Dot {
name Dot416
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 5151
ypos 9981
}
set N3d5f4100 [stack 0]
push $N3d5f4100
push $N3d5f4100
push $N3d5f4100
push $N3d5f4100
push $N6d103200
Shuffle {
in zDepth
name Shuffle13
label zDepth
xpos 2766
ypos 6112
postage_stamp true
}
Shuffle2 {
fromInput1 {{0} B}
fromInput2 {{0} B}
mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.red 0 0 rgba.alpha 0 3"
name Shuffle14
label "\[value in1]"
xpos 2766
ypos 6221
}
set N3d5cb200 [stack 0]
Dot {
name Dot463
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2800
ypos 7595
}
set N3d5cab00 [stack 0]
Dot {
name Dot459
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2800
ypos 9098
}
Grade {
channels alpha
multiply 0.0006
white_clamp true
name Grade91
xpos 3380
ypos 9088
}
set N3d5c9d00 [stack 0]
push 0
push $N3d5c9d00
push $N3d5cab00
Grade {
channels alpha
multiply 0.0007
white_clamp true
name Grade116
xpos 3360
ypos 8138
}
push $N3d5cab00
Grade {
channels alpha
multiply 0.0007
white_clamp true
name Grade115
xpos 3687
ypos 7585
}
push $N3d5cb200
Grade {
channels alpha
multiply 0.0015
white_clamp true
name Grade117
xpos 3555
ypos 6465
}
Invert {
name Invert13
xpos 3555
ypos 6503
}
push $N6d102b00
P_Noise3D {
name P_Noise3D11
xpos 3400
ypos 6575
in pWorld
output alpha
size {5 -5 5}
offset {{frame*.1} 0 0}
}
Grade {
channels alpha
blackpoint {{whitepoint}}
whitepoint 0.25
white_clamp true
name Grade114
xpos 3400
ypos 6613
}
Invert {
name Invert12
xpos 3400
ypos 6689
}
EdgeBlur {
inputs 1+1
edge_mult 1
name EdgeBlur9
label ***
xpos 3555
ypos 6683
}
push $N3d5cb200
Grade {
channels alpha
multiply 0.002
white_clamp true
name Grade25
xpos 2912
ypos 6221
}
set N3d548f00 [stack 0]
push $N6d103900
P_Noise3D {
name P_Noise3D7
xpos 3798
ypos 5950
in pWorld
output alpha
size {5 -5 5}
offset {{frame*.1} 0 0}
}
Grade {
channels alpha
blackpoint {{whitepoint}}
whitepoint 0.1
white_clamp true
name Grade57
xpos 3798
ypos 5988
}
EdgeBlur {
size 2
edge_mult 1
mix 0.5
name EdgeBlur7
xpos 3798
ypos 6059
}
push $N6d118100
P_Noise3D {
name P_Noise3D8
xpos 2671
ypos 5362
in pWorld
output alpha
size {10 -5 10}
offset {{frame*.1} 0 0}
}
Grade {
channels alpha
blackpoint 0.4
white_clamp true
name Grade79
xpos 2823
ypos 5362
}
Grade {
channels alpha
whitepoint 0.01
white_clamp true
name Grade80
xpos 2991
ypos 5362
}
FilterErode {
size -11.5
filter triangle
name FilterErode13
xpos 3221
ypos 5362
}
FrameBlend {
numframes 10
name FrameBlend1
xpos 3372
ypos 5362
disable true
}
Group {
name VectorFrameBlend5
help "FrameBlend the input with awareness of the motion"
knobChanged "\n\nn = nuke.thisNode()\n\nif nuke.thisKnob().name() == \"vectors\":\n    n.knobs()\['vectorDetail'].setEnabled(False)\n    n.knobs()\['strength'].setEnabled(False)\n    n.knobs()\['mvpass'].setEnabled(False)\n    n.knobs()\['mvmultiplicator'].setEnabled(False)\n    \n    if n\['vectors'].getValue() == 0: #generate\n        n.knobs()\['vectorDetail'].setEnabled(True)\n        n.knobs()\['strength'].setEnabled(True)\n    elif n\['vectors'].getValue() == 1: #MV pass\n        n.knobs()\['mvpass'].setEnabled(True)\n        n.knobs()\['mvmultiplicator'].setEnabled(True)\n"
tile_color 0xffffffff
label "\[value vectors] (\[value this.radius])\nwas on"
xpos 3575
ypos 5356
disable true
addUserKnob {20 User}
addUserKnob {41 "Local GPU: " T BlinkScript_Median.gpuName}
addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T BlinkScript_Median.useGPUIfAvailable}
addUserKnob {41 vectorize l "Vectorize on CPU" -STARTLINE T BlinkScript_Median.vectorize}
addUserKnob {26 ""}
addUserKnob {4 radius l "Temporal Radius" t "Example: Radius 2 will average 5 frames (+2 and -2)" M {1 2 ""}}
radius 2
addUserKnob {26 divider1 l "" -STARTLINE T "    "}
addUserKnob {4 operation l Operation -STARTLINE M {average median ""}}
addUserKnob {26 ""}
addUserKnob {4 vectors l Vectors t "Generate: \nCreate vectors using the VectorGenerator node\n\nMotion Vector Pass: \nuses a CG motion pass (must be like default Nuke Scanline Render MV pass with pivot at 0)\n\nExternal: \nPlug another VectorFrameBlend into the vec input and use its already existing vectors" M {Generate "Motion Vector Pass" External "" "" "" ""}}
addUserKnob {26 ""}
addUserKnob {7 vectorDetail l "Vector Detail" t "Use this to adjust the density of the calculated motion vector field. Higher details capture finer movements, but take will longer to calculate." R 0.01 1}
vectorDetail 1
addUserKnob {7 strength l Strength t "Match Strength : Stonger values will match larger differences between the two plates." R 0 1.5}
strength 1
addUserKnob {26 ""}
addUserKnob {41 mvpass l "MotionVector Pass" -STARTLINE +DISABLED T Shuffle_MVPass.in}
addUserKnob {7 mvmultiplicator l "Motion Vector Multiplicator" +DISABLED R -10 10}
mvmultiplicator 1
}
Input {
inputs 0
name mask
xpos 54
ypos -822
number 2
}
Shuffle {
red black
green black
blue black
alpha white
name Shuffle5
xpos 54
ypos 2854
disable {{"\[exists input2]"}}
}
Input {
inputs 0
name vec
xpos 767
ypos -820
number 1
}
add_layer {vec1 vec1.red vec1.green vec1.blue vec1.alpha}
add_layer {vec2 vec2.red vec2.green vec2.blue vec2.alpha}
Shuffle {
red black
green black
blue black
alpha black
out vec1
out2 vec2
name Shuffle_SetVec
xpos 767
ypos -761
disable {{"\[exists input1]"}}
}
Dot {
name Dot38
xpos 801
ypos -674
}
Dot {
name Dot39
xpos 1660
ypos -674
}
set N3d257200 [stack 0]
Dot {
name Dot41
xpos 2669
ypos -674
}
set N3d256b00 [stack 0]
Dot {
name Dot43
xpos 3646
ypos -674
}
set N3d256400 [stack 0]
Dot {
name Dot45
xpos 4627
ypos -674
}
Dot {
name Dot50
xpos 4627
ypos 882
}
Shuffle {
in vec2
out backward
name Shuffle_Vec4
xpos 4437
ypos 878
}
Input {
inputs 0
name Input
xpos 540
ypos -823
}
Dot {
name Dot2
xpos 574
ypos -462
}
set N3d254100 [stack 0]
Dot {
name Dot26
xpos 784
ypos -462
}
set N3d23f900 [stack 0]
Dot {
name Dot3
xpos 1337
ypos -462
}
set N3d23f200 [stack 0]
Dot {
name Dot4
xpos 2334
ypos -462
}
set N3d23eb00 [stack 0]
Dot {
name Dot5
xpos 3311
ypos -462
}
set N3d23e400 [stack 0]
Dot {
name Dot6
xpos 4290
ypos -462
}
TimeOffset {
time_offset -2
time ""
name TimeOffset6
label -2
xpos 4256
ypos -300
}
set N3d23d600 [stack 0]
Dot {
name Dot33
xpos 4485
ypos -290
}
Shuffle {
in none
out backward
name Shuffle_MVPass
xpos 4451
ypos -212
}
set C3d23c800 [stack 0]
Multiply {
channels backward
value {{2*mvmultiplicator}}
name Multiply4
xpos 4451
ypos 611
}
Dot {
name Dot51
xpos 4485
ypos 776
}
push $N3d23f900
NoTimeBlur {
rounding floor
single false
name NoTimeBlur1
xpos 750
ypos -247
}
Retime {
input.first 1001
input.first_lock true
input.last 1218
output.first 1001
output.last 1436
speed 0.5
before continue
after continue
filter none
time ""
name Retime1
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 750
ypos -201
}
set N3d416400 [stack 0]
push $N3d23d600
NoTimeBlur {
rounding floor
single false
name NoTimeBlur5
xpos 4256
ypos -213
}
Retime {
input.first 1001
input.first_lock true
output.first 1001
output.last 1002
speed 0.5
before continue
after continue
filter none
time ""
name Retime6
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 4256
ypos -172
}
Switch {
inputs 2
which {{(frame-1001)%2}}
name Switch1
xpos 4256
ypos 58
}
set C3d414f00 [stack 0]
VectorGenerator {
useGPUIfAvailable {{VectorFrameBlend5.BlinkScript_Median.useGPUIfAvailable}}
motionEstimation Regularized
vectorDetailReg {{parent.vectorDetail}}
strengthReg {{parent.strength}}
name VectorGenerator1
xpos 4256
ypos 336
}
set C3d414800 [stack 0]
Dot {
name Dot10
tile_color 0xcccccc00
xpos 4290
ypos 476
}
set N3d414100 [stack 0]
Shuffle {
in backward
blue black
alpha black
name Shuffle4
label "in \[value in]-->out \[value out]"
xpos 4092
ypos 466
}
TimeOffset {
time_offset -1
time ""
name TimeOffset8
label "\[value time_offset]"
xpos 4092
ypos 552
}
push $N3d414100
Copy {
inputs 2
from0 backward.u
to0 backward.u
from1 backward.v
to1 backward.v
bbox B
name Copy4
xpos 4256
ypos 545
}
Retime {
input.first 1001
input.first_lock true
input.last 1436
output.first 1001
output.last 1218
speed 2
before continue
after continue
filter none
time ""
name Retime9
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 4256
ypos 648
}
Switch {
inputs 3
which {{vectors}}
name Switch_UseExternal
xpos 4258
ypos 878
}
set C3d3e5d00 [stack 0]
Dot {
name Dot52
xpos 4292
ypos 1009
}
push $N3d23d600
Dot {
name Dot53
xpos 4053
ypos -290
}
Copy {
inputs 2
channels backward
name Copy11
xpos 4019
ypos 992
}
IDistort {
uv backward
name IDistort4
xpos 4019
ypos 1194
}
Dot {
name Dot24
xpos 4053
ypos 2003
}
set N3d3b7900 [stack 0]
Dot {
name Dot35
xpos 4053
ypos 2510
}
push $N3d256400
Dot {
name Dot42
xpos 3646
ypos 932
}
Shuffle {
in vec2
red blue
green alpha
out backward
name Shuffle_Vec3
xpos 3456
ypos 928
}
push $N3d23e400
TimeOffset {
time_offset 2
time ""
name TimeOffset5
label +2
xpos 3277
ypos -300
}
set N3d3b5d00 [stack 0]
Dot {
name Dot31
xpos 3493
ypos -290
}
clone $C3d23c800 {
xpos 3459
ypos -212
selected false
}
Multiply {
channels backward
value {{-2*mvmultiplicator}}
name Multiply3
xpos 3459
ypos 591
}
Dot {
name Dot44
xpos 3493
ypos 814
}
push $N3d416400
push $N3d3b5d00
NoTimeBlur {
rounding floor
single false
name NoTimeBlur4
xpos 3277
ypos -213
}
Retime {
input.first 1001
input.first_lock true
output.first 1001
output.last 1002
speed 0.5
before continue
after continue
filter none
time ""
name Retime5
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 3277
ypos -172
}
clone $C3d414f00 {
inputs 2
xpos 3277
ypos 58
selected false
}
clone $C3d414800 {
xpos 3277
ypos 329
selected false
}
Dot {
name Dot8
tile_color 0xcccccc00
xpos 3311
ypos 465
}
set N3d38d600 [stack 0]
Shuffle {
in backward
blue black
alpha black
name Shuffle3
label "in \[value in]-->out \[value out]"
xpos 3113
ypos 455
}
TimeOffset {
time_offset -1
time ""
name TimeOffset7
label "\[value time_offset]"
xpos 3113
ypos 541
}
push $N3d38d600
Copy {
inputs 2
from0 backward.u
to0 backward.u
from1 backward.v
to1 backward.v
bbox B
name Copy3
xpos 3277
ypos 534
}
Retime {
input.first 1001
input.first_lock true
input.last 1436
output.first 1001
output.last 1218
speed 2
before continue
after continue
filter none
time ""
name Retime8
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 3277
ypos 637
}
clone $C3d3e5d00 {
inputs 3
xpos 3277
ypos 928
selected false
}
Dot {
name Dot48
xpos 3311
ypos 1028
}
push $N3d3b5d00
Dot {
name Dot49
xpos 3072
ypos -290
}
Copy {
inputs 2
channels backward
name Copy10
xpos 3038
ypos 1011
}
IDistort {
uv backward
name IDistort3
xpos 3038
ypos 1177
}
Dot {
name Dot22
xpos 3072
ypos 1770
}
set N3d364f00 [stack 0]
ShuffleCopy {
inputs 2
in backward
in2 backward
red red
green green
blue red2
alpha green2
out vec2
name ShuffleCopy1
xpos 3038
ypos 2506
}
push $N3d256b00
Dot {
name Dot30
xpos 2669
ypos 892
}
Shuffle {
in vec1
out backward
name Shuffle_Vec2
xpos 2479
ypos 888
}
push $N3d23eb00
TimeOffset {
time_offset -1
time ""
name TimeOffset4
label -1
xpos 2300
ypos -313
}
set N3d33f200 [stack 0]
Dot {
name Dot29
xpos 2537
ypos -303
}
clone $C3d23c800 {
xpos 2503
ypos -225
selected false
}
Multiply {
channels backward
value {{mvmultiplicator}}
name Multiply2
xpos 2503
ypos 584
}
Dot {
name Dot32
xpos 2537
ypos 760
}
push $N3d416400
push $N3d33f200
NoTimeBlur {
rounding floor
single false
name NoTimeBlur3
xpos 2300
ypos -227
}
Retime {
input.first 1001
input.first_lock true
output.first 1001
output.last 1002
speed 0.5
before continue
after continue
filter none
time ""
name Retime4
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 2300
ypos -186
}
clone $C3d414f00 {
inputs 2
xpos 2300
ypos 44
selected false
}
clone $C3d414800 {
xpos 2300
ypos 333
selected false
}
Dot {
name Dot7
tile_color 0xcccccc00
xpos 2334
ypos 449
}
set N3d512b00 [stack 0]
Shuffle {
in backward
blue black
alpha black
name Shuffle6
label "in \[value in]-->out \[value out]"
xpos 2136
ypos 439
}
TimeOffset {
time_offset -1
time ""
name TimeOffset1
label "\[value time_offset]"
xpos 2136
ypos 525
}
push $N3d512b00
Copy {
inputs 2
from0 backward.u
to0 backward.u
from1 backward.v
to1 backward.v
bbox B
name Copy1
xpos 2300
ypos 518
}
Retime {
input.first 1001
input.first_lock true
input.last 1436
output.first 1001
output.last 1218
speed 2
before continue
after continue
filter none
time ""
name Retime7
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 2300
ypos 621
}
clone $C3d3e5d00 {
inputs 3
xpos 2300
ypos 888
selected false
}
Dot {
name Dot34
xpos 2334
ypos 1042
}
push $N3d33f200
Dot {
name Dot40
xpos 2095
ypos -303
}
Copy {
inputs 2
channels backward
name Copy9
xpos 2061
ypos 1025
}
IDistort {
uv backward
name IDistort2
xpos 2061
ypos 1177
}
Dot {
name Dot12
xpos 2095
ypos 1498
}
set N3d4e2400 [stack 0]
Dot {
name Dot36
xpos 2095
ypos 2403
}
push $N3d257200
Dot {
name Dot37
xpos 1660
ypos 900
}
Shuffle {
in vec1
red blue
green alpha
out backward
name Shuffle_Vec1
xpos 1487
ypos 896
}
push $N3d23f200
TimeOffset {
time_offset 1
time ""
name TimeOffset3
label +1
xpos 1303
ypos -322
}
set N3d4e0800 [stack 0]
Dot {
name Dot28
xpos 1512
ypos -312
}
clone $C3d23c800 {
xpos 1478
ypos -224
selected false
}
Multiply {
channels backward
value {{-mvmultiplicator}}
name Multiply1
xpos 1478
ypos 587
}
Dot {
name Dot27
xpos 1512
ypos 749
}
push $N3d416400
push $N3d4e0800
NoTimeBlur {
rounding floor
single false
name NoTimeBlur2
xpos 1303
ypos -232
}
Retime {
input.first 1001
input.first_lock true
output.first 1001
output.last 1002
speed 0.5
before continue
after continue
filter none
time ""
name Retime2
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 1303
ypos -192
}
clone $C3d414f00 {
inputs 2
xpos 1303
ypos 44
selected false
}
Dot {
name Dot9
tile_color 0xcccccc00
xpos 1337
ypos 133
}
clone $C3d414800 {
xpos 1303
ypos 330
selected false
}
Dot {
name Dot1
tile_color 0xcccccc00
xpos 1337
ypos 416
}
set N3d487900 [stack 0]
Shuffle {
in backward
blue black
alpha black
name Shuffle8
label "in \[value in]-->out \[value out]"
xpos 1139
ypos 406
}
TimeOffset {
time_offset -1
time ""
name TimeOffset2
label "\[value time_offset]"
xpos 1139
ypos 492
}
push $N3d487900
Copy {
inputs 2
from0 backward.u
to0 backward.u
from1 backward.v
to1 backward.v
bbox B
name Copy2
xpos 1303
ypos 485
}
Retime {
input.first 1001
input.first_lock true
input.last 1436
output.first 1001
output.last 1218
speed 2
before continue
after continue
filter none
time ""
name Retime3
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 1303
ypos 588
}
clone $C3d3e5d00 {
inputs 3
xpos 1303
ypos 896
selected false
}
Dot {
name Dot47
xpos 1337
ypos 1000
}
push $N3d4e0800
Dot {
name Dot46
xpos 1098
ypos -312
}
Copy {
inputs 2
channels backward
name Copy8
xpos 1064
ypos 983
}
IDistort {
uv backward
name IDistort1
xpos 1064
ypos 1160
}
Dot {
name Dot11
tile_color 0xcccccc00
xpos 1098
ypos 1240
}
set N3d457200 [stack 0]
ShuffleCopy {
inputs 2
in backward
in2 backward
red red
green green
blue red2
alpha green2
out vec1
name ShuffleCopy3
xpos 1064
ypos 2399
}
set N3d456b00 [stack 0]
push $N3d254100
Dot {
name Dot14
xpos 574
ypos 975
}
set N3d456400 [stack 0]
Dot {
name Dot16
xpos 684
ypos 975
}
set N3d455d00 [stack 0]
push $N3d457200
Dot {
name Dot13
xpos 850
ypos 1240
}
set N3d455600 [stack 0]
push $N3d4e2400
Dot {
name Dot20
xpos 848
ypos 1498
}
set N3d454f00 [stack 0]
push $N3d364f00
Dot {
name Dot23
xpos 859
ypos 1770
}
set N3d454800 [stack 0]
push $N3d3b7900
Dot {
name Dot25
xpos 848
ypos 2003
}
set N3d454100 [stack 0]
BlinkScript {
inputs 5
recompileCount 6
ProgramGroup 1
KernelDescription "2 \"MedianKernel\" iterate componentWise 1e7304f930362212e256e53742e266e22e4ba28492c0bc903660683d595e3c9a 6 \"f1\" Read Point \"f2\" Read Point \"f3\" Read Point \"f4\" Read Point \"f5\" Read Point \"dst\" Write Point 0 0 0"
kernelSource "kernel MedianKernel : ImageComputationKernel<eComponentWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> f1;\n  Image<eRead, eAccessPoint, eEdgeClamped> f2;\n  Image<eRead, eAccessPoint, eEdgeClamped> f3;\n  Image<eRead, eAccessPoint, eEdgeClamped> f4;\n  Image<eRead, eAccessPoint, eEdgeClamped> f5;\n  Image<eWrite> dst;\n\n  void process() \{\n    float values\[] = \{f1(),f2(),f3(),f4(),f5()\};\n    dst() = median(values, 5);\n  \}\n\};\n"
useGPUIfAvailable {{parent.BlinkScript_Median.useGPUIfAvailable}}
vectorize {{parent.BlinkScript_Median.vectorize}}
rebuild ""
rebuild_finalise ""
name BlinkScript_Median1
xpos 561
ypos 1993
}
push $N3d454100
push $N3d454800
push $N3d454f00
push 0
push $N3d455600
push $N3d455d00
Merge2 {
inputs 5+1
operation average
name Merge1
xpos 650
ypos 2080
}
set C3d43ab00 [stack 0]
Switch {
inputs 2
which {{operation}}
name Switch8
xpos 650
ypos 2169
}
set C3d43a400 [stack 0]
Copy {
inputs 2
channels vec1
name Copy6
xpos 650
ypos 2386
}
Copy {
inputs 2
channels vec2
name Copy7
xpos 650
ypos 2493
}
Dot {
name Dot17
xpos 684
ypos 2653
}
push $N3d456b00
push $N3d456400
Dot {
name Dot15
xpos 472
ypos 975
}
set N3d438800 [stack 0]
push $N3d455600
Dot {
name Dot19
xpos 583
ypos 1240
}
set N3d438100 [stack 0]
push $N3d454f00
Dot {
name Dot21
xpos 611
ypos 1498
}
set N3a107900 [stack 0]
BlinkScript {
inputs 3
recompileCount 5
ProgramGroup 1
KernelDescription "2 \"MedianKernel\" iterate componentWise 722c32f2d1251222314c5b7dcb61e29044fb0774b72a0fee19adf671edcc2cba 4 \"f1\" Read Point \"f2\" Read Point \"f3\" Read Point \"dst\" Write Point 0 0 0"
kernelSource "kernel MedianKernel : ImageComputationKernel<eComponentWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> f1;\n  Image<eRead, eAccessPoint, eEdgeClamped> f2;\n  Image<eRead, eAccessPoint, eEdgeClamped> f3;\n  Image<eWrite> dst;\n\n  void process() \{\n    float values\[] = \{f1(),f2(),f3()\};\n    dst() = median(values, 3);\n  \}\n\};\n"
rebuild ""
rebuild_finalise ""
name BlinkScript_Median
xpos 309
ypos 1997
}
push $N3a107900
push 0
push $N3d438100
push $N3d438800
clone $C3d43ab00 {
inputs 3+1
xpos 438
ypos 2079
selected false
}
clone $C3d43a400 {
inputs 2
xpos 438
ypos 2170
selected false
}
Copy {
inputs 2
channels vec1
name Copy5
xpos 438
ypos 2386
}
Dot {
name Dot18
xpos 472
ypos 2645
}
Switch {
inputs 2
which {{radius}}
name Switch_Radius
xpos 539
ypos 2749
}
push $N3d254100
Dot {
name Dot55
xpos 284
ypos -462
}
Dot {
name Dot54
xpos 284
ypos 2780
}
Dissolve {
inputs 2+1
which 1
name Dissolve1
xpos 539
ypos 2848
}
Output {
name Output1
xpos 539
ypos 3106
}
end_group
push $N6d118800
Dot {
name Dot417
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2425
ypos 4492
}
set N3a0de400 [stack 0]
push $N3a0de400
TimeOffset {
time_offset -4
time ""
name TimeOffset7
xpos 2391
ypos 4688
}
Merge2 {
inputs 2
operation minus
name Merge13
xpos 2571
ypos 4688
}
Saturation {
saturation 0
name Saturation15
xpos 2571
ypos 4784
}
Shuffle2 {
fromInput1 {{0} B}
fromInput2 {{0} B}
mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.red 0 0 rgba.alpha 0 3"
name Shuffle15
label "\[value in1]"
xpos 2571
ypos 4831
}
Grade {
channels alpha
blackpoint 0.52
whitepoint 0.54
white_clamp true
name Grade81
xpos 2571
ypos 4869
}
FilterErode {
size -4.4
name FilterErode14
xpos 2571
ypos 4907
}
Dot {
name Dot418
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2605
ypos 4983
}
push $N6d118f00
add_layer {oceanWhitecapRamp other.oceanWhitecapRamp}
Shuffle {
in oceanWhitecapRamp
name Shuffle61
label oceanWhitecapRamp
xpos 2989
ypos 4254
postage_stamp true
}
Grade {
channels alpha
whitepoint 0
white_clamp true
name Grade82
xpos 2989
ypos 4404
}
FilterErode {
name FilterErode15
xpos 2989
ypos 4442
}
push $N6d119600
add_layer {pObject pObject.red pObject.green pObject.blue}
Shuffle {
in pObject
name Shuffle62
label pObject
xpos 2949
ypos 3972
postage_stamp true
}
Shuffle2 {
fromInput1 {{0} B}
fromInput2 {{0} B}
mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.green 0 1 rgba.alpha 0 3"
name Shuffle63
label "\[value in1]"
xpos 2949
ypos 4077
}
Grade {
channels alpha
whitepoint 0
white_clamp true
name Grade83
xpos 3107
ypos 4077
}
push $N6d11b200
P_Noise3D {
name P_Noise3D9
xpos 2325
ypos 1913
in pWorld
output alpha
size {10 -5 50}
}
Remove {
operation keep
channels rgba
name Remove14
xpos 2605
ypos 1919
}
set C3a058800 [stack 0]
Grade {
channels alpha
blackpoint 0.4
white_clamp true
name Grade84
xpos 3887
ypos 1913
}
Dot {
name Dot419
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3921
ypos 2025
}
set N3a028800 [stack 0]
Dot {
name Dot420
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3921
ypos 2798
}
set N3a028100 [stack 0]
Dot {
name Dot421
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3921
ypos 3612
}
Group {
name Group4
xpos 4067
ypos 3608
disable true
}
Input {
inputs 0
name Input1
xpos 828
ypos -293
}
Dot {
name Dot78
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 862
ypos -253
}
set N39e12400 [stack 0]
TimeOffset {
time_offset -1
time ""
name TimeOffset6
xpos 638
ypos -65
}
set N39e11d00 [stack 0]
TimeOffset {
time_offset -1
time ""
name TimeOffset7
xpos 638
ypos 17
}
set N39e11600 [stack 0]
TimeOffset {
time_offset -1
time ""
name TimeOffset8
xpos 638
ypos 120
}
set N39e10f00 [stack 0]
TimeOffset {
time_offset -1
time ""
name TimeOffset9
xpos 638
ypos 231
}
set N39e10800 [stack 0]
TimeOffset {
time_offset -1
time ""
name TimeOffset10
xpos 638
ypos 343
}
push $N39e10800
push $N39e10f00
push $N39e11600
push $N39e11d00
push $N39e12400
ChannelMerge {
inputs 2
name ChannelMerge14
xpos 828
ypos -77
}
ChannelMerge {
inputs 2
mix 0.5
name ChannelMerge15
xpos 828
ypos 5
}
ChannelMerge {
inputs 2
mix 0.25
name ChannelMerge16
xpos 828
ypos 108
}
ChannelMerge {
inputs 2
mix 0.125
name ChannelMerge17
xpos 828
ypos 219
}
ChannelMerge {
inputs 2
mix 0.0625
name ChannelMerge18
xpos 828
ypos 331
}
Output {
name Output1
xpos 828
ypos 431
}
end_group
push $N6d119d00
Shuffle {
in S_indirect_reflect
name Shuffle64
label S_indirect_reflect
xpos 3012
ypos 3174
postage_stamp true
}
clone $C3a058800 {
xpos 3122
ypos 3203
selected false
}
Grade {
channels alpha
blackpoint 0.095
whitepoint 0.1
white_clamp true
name Grade85
xpos 3414
ypos 3197
}
Dot {
name Dot422
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3448
ypos 3267
}
set N39dc0800 [stack 0]
TimeOffset {
time_offset -1
time ""
name TimeOffset8
xpos 3224
ypos 3336
}
set N39dc0100 [stack 0]
TimeOffset {
time_offset -1
time ""
name TimeOffset9
xpos 3224
ypos 3418
}
set N39db7900 [stack 0]
TimeOffset {
time_offset -1
time ""
name TimeOffset10
xpos 3224
ypos 3521
}
set N39db7200 [stack 0]
TimeOffset {
time_offset -1
time ""
name TimeOffset11
xpos 3224
ypos 3632
}
set N39db6b00 [stack 0]
TimeOffset {
time_offset -1
time ""
name TimeOffset12
xpos 3224
ypos 3744
}
push $N39db6b00
push $N39db7200
push $N39db7900
push $N39dc0100
push $N39dc0800
ChannelMerge {
inputs 2
name ChannelMerge35
xpos 3414
ypos 3324
}
ChannelMerge {
inputs 2
mix 0.5
name ChannelMerge37
xpos 3414
ypos 3406
}
ChannelMerge {
inputs 2
mix 0.25
name ChannelMerge38
xpos 3414
ypos 3509
}
ChannelMerge {
inputs 2
mix 0.125
name ChannelMerge39
xpos 3414
ypos 3620
}
ChannelMerge {
inputs 2
mix 0.0625
name ChannelMerge40
xpos 3414
ypos 3732
}
ChannelMerge {
inputs 2
operation multiply
name ChannelMerge41
xpos 4067
ypos 3732
}
push $N6d11a400
Shuffle {
in LS_sun_LGT_all
name Shuffle65
label LS_sun_LGT_all
xpos 2826
ypos 2445
postage_stamp true
}
clone $C3a058800 {
xpos 2826
ypos 2546
selected false
}
Grade {
channels alpha
blackpoint 0.024
whitepoint 0.08
white_clamp true
name Grade86
xpos 2826
ypos 2590
}
FilterErode {
size -10
name FilterErode16
xpos 2826
ypos 2649
}
FilterErode {
size 10
name FilterErode17
xpos 2826
ypos 2687
}
Blur {
size 100
name Blur8
label *
xpos 2826
ypos 2725
}
Dot {
name Dot423
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2860
ypos 2896
}
push $N3a028100
Grade {
channels alpha
blackpoint 0.25
whitepoint 0.65
white_clamp true
name Grade87
xpos 4059
ypos 2788
}
ChannelMerge {
inputs 2
operation multiply
name ChannelMerge42
xpos 4059
ypos 2880
}
Read {
inputs 0
file_type exr
file /coppi/proj/thrg/shottree/s01e01/015-0300/output2d/comp/comp_precomp/thrg_s01e01_015-0300_comp_precomp_precomp01_lin_ap0_v001/thrg_s01e01_015-0300_comp_precomp_precomp01_lin_ap0_v001.%04d.exr
format "1153 811 0 0 1153 811 1 "
first 1001
last 1237
origfirst 1001
origlast 1237
origset true
in_colorspace scene_linear
out_colorspace scene_linear
name Read61
note_font_color 0xf368e4ff
xpos 4553
ypos 2595
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname precomp01
}
push $N6d11ab00
Shuffle {
in oceanWhitecapRamp
name Shuffle66
label oceanWhitecapRamp
xpos 2649
ypos 2106
postage_stamp true
}
set N39d3b200 [stack 0]
clone $C3a058800 {
xpos 2821
ypos 2135
selected false
}
Grade {
channels alpha
whitepoint 0
white_clamp true
name Grade88
xpos 3141
ypos 2129
}
FrameBlend {
name FrameBlend7
xpos 3266
ypos 2058
}
TimeEcho {
framesbehind 3
frmaesfade 2
name TimeEcho1
xpos 3388
ypos 2064
}
Grade {
channels alpha
whitepoint 0.41
white_clamp true
name Grade89
xpos 3561
ypos 2129
disable true
}
push $N3a028800
ChannelMerge {
inputs 2
operation multiply
name ChannelMerge43
xpos 4330
ypos 2123
}
Dot {
name Dot424
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 4364
ypos 2317
}
set N39ef9d00 [stack 0]
Dot {
name Dot425
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 4186
ypos 2317
}
Group {
name VectorFrameBlend6
help "FrameBlend the input with awareness of the motion"
knobChanged "\n\nn = nuke.thisNode()\n\nif nuke.thisKnob().name() == \"vectors\":\n    n.knobs()\['vectorDetail'].setEnabled(False)\n    n.knobs()\['strength'].setEnabled(False)\n    n.knobs()\['mvpass'].setEnabled(False)\n    n.knobs()\['mvmultiplicator'].setEnabled(False)\n    \n    if n\['vectors'].getValue() == 0: #generate\n        n.knobs()\['vectorDetail'].setEnabled(True)\n        n.knobs()\['strength'].setEnabled(True)\n    elif n\['vectors'].getValue() == 1: #MV pass\n        n.knobs()\['mvpass'].setEnabled(True)\n        n.knobs()\['mvmultiplicator'].setEnabled(True)\n"
tile_color 0xffffffff
label "\[value vectors] (\[value this.radius])*"
xpos 4152
ypos 2391
addUserKnob {20 User}
addUserKnob {41 "Local GPU: " T BlinkScript_Median.gpuName}
addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T BlinkScript_Median.useGPUIfAvailable}
addUserKnob {41 vectorize l "Vectorize on CPU" -STARTLINE T BlinkScript_Median.vectorize}
addUserKnob {26 ""}
addUserKnob {4 radius l "Temporal Radius" t "Example: Radius 2 will average 5 frames (+2 and -2)" M {1 2 ""}}
radius 2
addUserKnob {26 divider1 l "" -STARTLINE T "    "}
addUserKnob {4 operation l Operation -STARTLINE M {average median ""}}
addUserKnob {26 ""}
addUserKnob {4 vectors l Vectors t "Generate: \nCreate vectors using the VectorGenerator node\n\nMotion Vector Pass: \nuses a CG motion pass (must be like default Nuke Scanline Render MV pass with pivot at 0)\n\nExternal: \nPlug another VectorFrameBlend into the vec input and use its already existing vectors" M {Generate "Motion Vector Pass" External "" "" "" ""}}
addUserKnob {26 ""}
addUserKnob {7 vectorDetail l "Vector Detail" t "Use this to adjust the density of the calculated motion vector field. Higher details capture finer movements, but take will longer to calculate." R 0.01 1}
vectorDetail 0.75
addUserKnob {7 strength l Strength t "Match Strength : Stonger values will match larger differences between the two plates." R 0 1.5}
strength 1.5
addUserKnob {26 ""}
addUserKnob {41 mvpass l "MotionVector Pass" -STARTLINE +DISABLED T Shuffle_MVPass.in}
addUserKnob {7 mvmultiplicator l "Motion Vector Multiplicator" +DISABLED R -10 10}
mvmultiplicator 1
}
Input {
inputs 0
name mask
xpos 54
ypos -822
number 2
}
Shuffle {
red black
green black
blue black
alpha white
name Shuffle5
xpos 54
ypos 2854
disable {{"\[exists input2]"}}
}
Input {
inputs 0
name vec
xpos 767
ypos -820
number 1
}
Shuffle {
red black
green black
blue black
alpha black
out vec1
out2 vec2
name Shuffle_SetVec
xpos 767
ypos -761
disable {{"\[exists input1]"}}
}
Dot {
name Dot38
xpos 801
ypos -674
}
Dot {
name Dot39
xpos 1660
ypos -674
}
set N39eda400 [stack 0]
Dot {
name Dot41
xpos 2669
ypos -674
}
set N39ed9d00 [stack 0]
Dot {
name Dot43
xpos 3646
ypos -674
}
set N39ed9600 [stack 0]
Dot {
name Dot45
xpos 4627
ypos -674
}
Dot {
name Dot50
xpos 4627
ypos 882
}
Shuffle {
in vec2
out backward
name Shuffle_Vec4
xpos 4437
ypos 878
}
Input {
inputs 0
name Input
xpos 540
ypos -823
}
Dot {
name Dot2
xpos 574
ypos -462
}
set N39ec7200 [stack 0]
Dot {
name Dot26
xpos 784
ypos -462
}
set N39ec6b00 [stack 0]
Dot {
name Dot3
xpos 1337
ypos -462
}
set N39ec6400 [stack 0]
Dot {
name Dot4
xpos 2334
ypos -462
}
set N39ec5d00 [stack 0]
Dot {
name Dot5
xpos 3311
ypos -462
}
set N39ec5600 [stack 0]
Dot {
name Dot6
xpos 4290
ypos -462
}
TimeOffset {
time_offset -2
time ""
name TimeOffset6
label -2
xpos 4256
ypos -300
}
set N39ec4800 [stack 0]
Dot {
name Dot33
xpos 4485
ypos -290
}
Shuffle {
in none
out backward
name Shuffle_MVPass
xpos 4451
ypos -212
}
set C39eaf900 [stack 0]
Multiply {
channels backward
value {{2*mvmultiplicator}}
name Multiply4
xpos 4451
ypos 611
}
Dot {
name Dot51
xpos 4485
ypos 776
}
push $N39ec6b00
NoTimeBlur {
rounding floor
single false
name NoTimeBlur1
xpos 750
ypos -247
}
Retime {
input.first 1001
input.first_lock true
input.last 1218
output.first 1001
output.last 1436
speed 0.5
before continue
after continue
filter none
time ""
name Retime1
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 750
ypos -201
}
set N39ead600 [stack 0]
push $N39ec4800
NoTimeBlur {
rounding floor
single false
name NoTimeBlur5
xpos 4256
ypos -213
}
Retime {
input.first 1001
input.first_lock true
output.first 1001
output.last 1002
speed 0.5
before continue
after continue
filter none
time ""
name Retime6
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 4256
ypos -172
}
Switch {
inputs 2
which {{(frame-1001)%2}}
name Switch1
xpos 4256
ypos 58
}
set C39eac100 [stack 0]
VectorGenerator {
useGPUIfAvailable {{VectorFrameBlend9.BlinkScript_Median.useGPUIfAvailable}}
motionEstimation Regularized
vectorDetailReg {{parent.vectorDetail}}
strengthReg {{parent.strength}}
name VectorGenerator1
xpos 4256
ypos 336
}
set C39e7f900 [stack 0]
Dot {
name Dot10
tile_color 0xcccccc00
xpos 4290
ypos 476
}
set N39e7f200 [stack 0]
Shuffle {
in backward
blue black
alpha black
name Shuffle4
label "in \[value in]-->out \[value out]"
xpos 4092
ypos 466
}
TimeOffset {
time_offset -1
time ""
name TimeOffset8
label "\[value time_offset]"
xpos 4092
ypos 552
}
push $N39e7f200
Copy {
inputs 2
from0 backward.u
to0 backward.u
from1 backward.v
to1 backward.v
bbox B
name Copy4
xpos 4256
ypos 545
}
Retime {
input.first 1001
input.first_lock true
input.last 1436
output.first 1001
output.last 1218
speed 2
before continue
after continue
filter none
time ""
name Retime9
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 4256
ypos 648
}
Switch {
inputs 3
which {{vectors}}
name Switch_UseExternal
xpos 4258
ypos 878
}
set C39e7cf00 [stack 0]
Dot {
name Dot52
xpos 4292
ypos 1009
}
push $N39ec4800
Dot {
name Dot53
xpos 4053
ypos -290
}
Copy {
inputs 2
channels backward
name Copy11
xpos 4019
ypos 992
}
IDistort {
uv backward
name IDistort4
xpos 4019
ypos 1194
}
Dot {
name Dot24
xpos 4053
ypos 2003
}
set N39e4eb00 [stack 0]
Dot {
name Dot35
xpos 4053
ypos 2510
}
push $N39ed9600
Dot {
name Dot42
xpos 3646
ypos 932
}
Shuffle {
in vec2
red blue
green alpha
out backward
name Shuffle_Vec3
xpos 3456
ypos 928
}
push $N39ec5600
TimeOffset {
time_offset 2
time ""
name TimeOffset5
label +2
xpos 3277
ypos -300
}
set N39e4cf00 [stack 0]
Dot {
name Dot31
xpos 3493
ypos -290
}
clone $C39eaf900 {
xpos 3459
ypos -212
selected false
}
Multiply {
channels backward
value {{-2*mvmultiplicator}}
name Multiply3
xpos 3459
ypos 591
}
Dot {
name Dot44
xpos 3493
ypos 814
}
push $N39ead600
push $N39e4cf00
NoTimeBlur {
rounding floor
single false
name NoTimeBlur4
xpos 3277
ypos -213
}
Retime {
input.first 1001
input.first_lock true
output.first 1001
output.last 1002
speed 0.5
before continue
after continue
filter none
time ""
name Retime5
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 3277
ypos -172
}
clone $C39eac100 {
inputs 2
xpos 3277
ypos 58
selected false
}
clone $C39e7f900 {
xpos 3277
ypos 329
selected false
}
Dot {
name Dot8
tile_color 0xcccccc00
xpos 3311
ypos 465
}
set N3a010800 [stack 0]
Shuffle {
in backward
blue black
alpha black
name Shuffle3
label "in \[value in]-->out \[value out]"
xpos 3113
ypos 455
}
TimeOffset {
time_offset -1
time ""
name TimeOffset7
label "\[value time_offset]"
xpos 3113
ypos 541
}
push $N3a010800
Copy {
inputs 2
from0 backward.u
to0 backward.u
from1 backward.v
to1 backward.v
bbox B
name Copy3
xpos 3277
ypos 534
}
Retime {
input.first 1001
input.first_lock true
input.last 1436
output.first 1001
output.last 1218
speed 2
before continue
after continue
filter none
time ""
name Retime8
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 3277
ypos 637
}
clone $C39e7cf00 {
inputs 3
xpos 3277
ypos 928
selected false
}
Dot {
name Dot48
xpos 3311
ypos 1028
}
push $N39e4cf00
Dot {
name Dot49
xpos 3072
ypos -290
}
Copy {
inputs 2
channels backward
name Copy10
xpos 3038
ypos 1011
}
IDistort {
uv backward
name IDistort3
xpos 3038
ypos 1177
}
Dot {
name Dot22
xpos 3072
ypos 1770
}
set N39fe8100 [stack 0]
ShuffleCopy {
inputs 2
in backward
in2 backward
red red
green green
blue red2
alpha green2
out vec2
name ShuffleCopy1
xpos 3038
ypos 2506
}
push $N39ed9d00
Dot {
name Dot30
xpos 2669
ypos 892
}
Shuffle {
in vec1
out backward
name Shuffle_Vec2
xpos 2479
ypos 888
}
push $N39ec5d00
TimeOffset {
time_offset -1
time ""
name TimeOffset4
label -1
xpos 2300
ypos -313
}
set N39fba400 [stack 0]
Dot {
name Dot29
xpos 2537
ypos -303
}
clone $C39eaf900 {
xpos 2503
ypos -225
selected false
}
Multiply {
channels backward
value {{mvmultiplicator}}
name Multiply2
xpos 2503
ypos 584
}
Dot {
name Dot32
xpos 2537
ypos 760
}
push $N39ead600
push $N39fba400
NoTimeBlur {
rounding floor
single false
name NoTimeBlur3
xpos 2300
ypos -227
}
Retime {
input.first 1001
input.first_lock true
output.first 1001
output.last 1002
speed 0.5
before continue
after continue
filter none
time ""
name Retime4
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 2300
ypos -186
}
clone $C39eac100 {
inputs 2
xpos 2300
ypos 44
selected false
}
clone $C39e7f900 {
xpos 2300
ypos 333
selected false
}
Dot {
name Dot7
tile_color 0xcccccc00
xpos 2334
ypos 449
}
set N39f9dd00 [stack 0]
Shuffle {
in backward
blue black
alpha black
name Shuffle6
label "in \[value in]-->out \[value out]"
xpos 2136
ypos 439
}
TimeOffset {
time_offset -1
time ""
name TimeOffset1
label "\[value time_offset]"
xpos 2136
ypos 525
}
push $N39f9dd00
Copy {
inputs 2
from0 backward.u
to0 backward.u
from1 backward.v
to1 backward.v
bbox B
name Copy1
xpos 2300
ypos 518
}
Retime {
input.first 1001
input.first_lock true
input.last 1436
output.first 1001
output.last 1218
speed 2
before continue
after continue
filter none
time ""
name Retime7
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 2300
ypos 621
}
clone $C39e7cf00 {
inputs 3
xpos 2300
ypos 888
selected false
}
Dot {
name Dot34
xpos 2334
ypos 1042
}
push $N39fba400
Dot {
name Dot40
xpos 2095
ypos -303
}
Copy {
inputs 2
channels backward
name Copy9
xpos 2061
ypos 1025
}
IDistort {
uv backward
name IDistort2
xpos 2061
ypos 1177
}
Dot {
name Dot12
xpos 2095
ypos 1498
}
set N39f65600 [stack 0]
Dot {
name Dot36
xpos 2095
ypos 2403
}
push $N39eda400
Dot {
name Dot37
xpos 1660
ypos 900
}
Shuffle {
in vec1
red blue
green alpha
out backward
name Shuffle_Vec1
xpos 1487
ypos 896
}
push $N39ec6400
TimeOffset {
time_offset 1
time ""
name TimeOffset3
label +1
xpos 1303
ypos -322
}
set N39f3f900 [stack 0]
Dot {
name Dot28
xpos 1512
ypos -312
}
clone $C39eaf900 {
xpos 1478
ypos -224
selected false
}
Multiply {
channels backward
value {{-mvmultiplicator}}
name Multiply1
xpos 1478
ypos 587
}
Dot {
name Dot27
xpos 1512
ypos 749
}
push $N39ead600
push $N39f3f900
NoTimeBlur {
rounding floor
single false
name NoTimeBlur2
xpos 1303
ypos -232
}
Retime {
input.first 1001
input.first_lock true
output.first 1001
output.last 1002
speed 0.5
before continue
after continue
filter none
time ""
name Retime2
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 1303
ypos -192
}
clone $C39eac100 {
inputs 2
xpos 1303
ypos 44
selected false
}
Dot {
name Dot9
tile_color 0xcccccc00
xpos 1337
ypos 133
}
clone $C39e7f900 {
xpos 1303
ypos 330
selected false
}
Dot {
name Dot1
tile_color 0xcccccc00
xpos 1337
ypos 416
}
set N39b02b00 [stack 0]
Shuffle {
in backward
blue black
alpha black
name Shuffle8
label "in \[value in]-->out \[value out]"
xpos 1139
ypos 406
}
TimeOffset {
time_offset -1
time ""
name TimeOffset2
label "\[value time_offset]"
xpos 1139
ypos 492
}
push $N39b02b00
Copy {
inputs 2
from0 backward.u
to0 backward.u
from1 backward.v
to1 backward.v
bbox B
name Copy2
xpos 1303
ypos 485
}
Retime {
input.first 1001
input.first_lock true
input.last 1436
output.first 1001
output.last 1218
speed 2
before continue
after continue
filter none
time ""
name Retime3
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 1303
ypos 588
}
clone $C39e7cf00 {
inputs 3
xpos 1303
ypos 896
selected false
}
Dot {
name Dot47
xpos 1337
ypos 1000
}
push $N39f3f900
Dot {
name Dot46
xpos 1098
ypos -312
}
Copy {
inputs 2
channels backward
name Copy8
xpos 1064
ypos 983
}
IDistort {
uv backward
name IDistort1
xpos 1064
ypos 1160
}
Dot {
name Dot11
tile_color 0xcccccc00
xpos 1098
ypos 1240
}
set N39ac6400 [stack 0]
ShuffleCopy {
inputs 2
in backward
in2 backward
red red
green green
blue red2
alpha green2
out vec1
name ShuffleCopy3
xpos 1064
ypos 2399
}
set N39ac5d00 [stack 0]
push $N39ec7200
Dot {
name Dot14
xpos 574
ypos 975
}
set N39ac5600 [stack 0]
Dot {
name Dot16
xpos 684
ypos 975
}
set N39ac4f00 [stack 0]
push $N39ac6400
Dot {
name Dot13
xpos 850
ypos 1240
}
set N39ac4800 [stack 0]
push $N39f65600
Dot {
name Dot20
xpos 848
ypos 1498
}
set N39ac4100 [stack 0]
push $N39fe8100
Dot {
name Dot23
xpos 859
ypos 1770
}
set N39aa7900 [stack 0]
push $N39e4eb00
Dot {
name Dot25
xpos 848
ypos 2003
}
set N39aa7200 [stack 0]
BlinkScript {
inputs 5
recompileCount 6
ProgramGroup 1
KernelDescription "2 \"MedianKernel\" iterate componentWise 1e7304f930362212e256e53742e266e22e4ba28492c0bc903660683d595e3c9a 6 \"f1\" Read Point \"f2\" Read Point \"f3\" Read Point \"f4\" Read Point \"f5\" Read Point \"dst\" Write Point 0 0 0"
kernelSource "kernel MedianKernel : ImageComputationKernel<eComponentWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> f1;\n  Image<eRead, eAccessPoint, eEdgeClamped> f2;\n  Image<eRead, eAccessPoint, eEdgeClamped> f3;\n  Image<eRead, eAccessPoint, eEdgeClamped> f4;\n  Image<eRead, eAccessPoint, eEdgeClamped> f5;\n  Image<eWrite> dst;\n\n  void process() \{\n    float values\[] = \{f1(),f2(),f3(),f4(),f5()\};\n    dst() = median(values, 5);\n  \}\n\};\n"
useGPUIfAvailable {{parent.BlinkScript_Median.useGPUIfAvailable}}
vectorize {{parent.BlinkScript_Median.vectorize}}
rebuild ""
rebuild_finalise ""
name BlinkScript_Median1
xpos 561
ypos 1993
}
push $N39aa7200
push $N39aa7900
push $N39ac4100
push 0
push $N39ac4800
push $N39ac4f00
Merge2 {
inputs 5+1
operation average
name Merge1
xpos 650
ypos 2080
}
set C39aa5d00 [stack 0]
Switch {
inputs 2
which {{operation}}
name Switch8
xpos 650
ypos 2169
}
set C39aa5600 [stack 0]
Copy {
inputs 2
channels vec1
name Copy6
xpos 650
ypos 2386
}
Copy {
inputs 2
channels vec2
name Copy7
xpos 650
ypos 2493
}
Dot {
name Dot17
xpos 684
ypos 2653
}
push $N39ac5d00
push $N39ac5600
Dot {
name Dot15
xpos 472
ypos 975
}
set N39a83900 [stack 0]
push $N39ac4800
Dot {
name Dot19
xpos 583
ypos 1240
}
set N39a83200 [stack 0]
push $N39ac4100
Dot {
name Dot21
xpos 611
ypos 1498
}
set N39a82b00 [stack 0]
BlinkScript {
inputs 3
recompileCount 5
ProgramGroup 1
KernelDescription "2 \"MedianKernel\" iterate componentWise 722c32f2d1251222314c5b7dcb61e29044fb0774b72a0fee19adf671edcc2cba 4 \"f1\" Read Point \"f2\" Read Point \"f3\" Read Point \"dst\" Write Point 0 0 0"
kernelSource "kernel MedianKernel : ImageComputationKernel<eComponentWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> f1;\n  Image<eRead, eAccessPoint, eEdgeClamped> f2;\n  Image<eRead, eAccessPoint, eEdgeClamped> f3;\n  Image<eWrite> dst;\n\n  void process() \{\n    float values\[] = \{f1(),f2(),f3()\};\n    dst() = median(values, 3);\n  \}\n\};\n"
rebuild ""
rebuild_finalise ""
name BlinkScript_Median
xpos 309
ypos 1997
}
push $N39a82b00
push 0
push $N39a83200
push $N39a83900
clone $C39aa5d00 {
inputs 3+1
xpos 438
ypos 2079
selected false
}
clone $C39aa5600 {
inputs 2
xpos 438
ypos 2170
selected false
}
Copy {
inputs 2
channels vec1
name Copy5
xpos 438
ypos 2386
}
Dot {
name Dot18
xpos 472
ypos 2645
}
Switch {
inputs 2
which {{radius}}
name Switch_Radius
xpos 539
ypos 2749
}
push $N39ec7200
Dot {
name Dot55
xpos 284
ypos -462
}
Dot {
name Dot54
xpos 284
ypos 2780
}
Dissolve {
inputs 2+1
which 1
name Dissolve1
xpos 539
ypos 2848
}
Output {
name Output1
xpos 539
ypos 3106
}
end_group
push $N39ef9d00
ChannelMerge {
inputs 2
operation max
name ChannelMerge44
xpos 4330
ypos 2385
}
set N39a59600 [stack 0]
Switch {
inputs 2
which 1
name Switch1
xpos 4330
ypos 2630
}
ChannelMerge {
inputs 2
name ChannelMerge45
xpos 4330
ypos 2880
}
ChannelMerge {
inputs 2
mix 0.5
name ChannelMerge46
xpos 4335
ypos 3732
}
ChannelMerge {
inputs 2
operation multiply
name ChannelMerge47
xpos 4041
ypos 4075
disable true
}
ChannelMerge {
inputs 2
operation multiply
mix 0.25
name ChannelMerge48
xpos 4041
ypos 4436
}
ChannelMerge {
inputs 2
operation multiply
mix 0.25
name ChannelMerge49
xpos 4041
ypos 4967
disable true
}
Grade {
channels alpha
blackpoint 0.05
whitepoint 0.75
white_clamp true
name Grade90
xpos 4330
ypos 5146
}
ChannelMerge {
inputs 2
operation multiply
mix 0.85
name ChannelMerge51
xpos 4330
ypos 5356
}
ChannelMerge {
inputs 2+1
operation multiply
name ChannelMerge52
xpos 4330
ypos 6232
}
ChannelMerge {
inputs 2
operation multiply
name ChannelMerge58
xpos 4330
ypos 6683
}
FilterErode {
size -1
filter quadratic
name FilterErode20
xpos 4330
ypos 6807
disable true
}
Dot {
name Dot450
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 4364
ypos 7036
}
ModifyMetaData {
metadata {
 {set gbk/scriptname "\[value root.name]"}
 {set exr/task_id "\[getenv FTRACK_TASKID]"}
 {remove exr/chunkCount ""}
 {remove exr/compressionName ""}
}
name ModifyMetaData36
xpos 4330
ypos 7082
}
Write {
channels rgba
file /coppi/proj/thrg/shottree/s01e01/015-0300/output2d/comp/comp_precomp/thrg_s01e01_015-0300_comp_precomp_WhiteCaps_lin_ap0_v001/thrg_s01e01_015-0300_comp_precomp_WhiteCaps_lin_ap0_v001.%04d.exr
colorspace "ACES - ACES2065-1"
file_type exr
metadata "all metadata"
first_part rgba
render_order 100
in_colorspace scene_linear
out_colorspace scene_linear
beforeRender "from nuketools import beforerenderfunctions;beforerenderfunctions.beforeRender()"
name WritePreComp6
note_font "Bitstream Vera Sans Bold"
xpos 4330
ypos 7138
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
addUserKnob {20 fwrite l "GBK Write"}
addUserKnob {1 ffile l File}
ffile /coppi/proj/thrg/shottree/s01e01/015-0300/output2d/comp/comp_precomp/thrg_s01e01_015-0300_comp_precomp_WhiteCaps_lin_ap0_v001/thrg_s01e01_015-0300_comp_precomp_WhiteCaps_lin_ap0_v001.%04d.exr
addUserKnob {1 fproxy l Proxy}
addUserKnob {6 fproxycheck l "Set Proxy Path" +STARTLINE}
addUserKnob {26 divider l "" +STARTLINE}
addUserKnob {4 task l Task M {comp alwy am came char conc cont cran edit fire flar glas inge ocea pm prod sbv scre skye util source}}
addUserKnob {1 fassetname l "Asset Name Preview:" +DISABLED}
fassetname comp_precomp
addUserKnob {1 fassetbasename l "Asset Name:"}
fassetbasename comp
addUserKnob {1 fecompname l "Component Name:"}
fecompname WhiteCaps
addUserKnob {1 flatestversion l "Latest published version:" +DISABLED}
flatestversion 0
addUserKnob {22 getlatest l Refresh -STARTLINE T "from nuketools import writetab \nwritetab.getLatestPubVersion() \n"}
addUserKnob {6 precomp l Precomp +STARTLINE}
precomp true
addUserKnob {6 denoised l Denoised(dn) +STARTLINE}
addUserKnob {6 delensed l Delensed(dl) +STARTLINE}
addUserKnob {6 neutralgrade l Neutralgrade(ng) +STARTLINE}
addUserKnob {6 matte l Matte +STARTLINE}
addUserKnob {6 no_frame_number l "No Frame Numbering" +STARTLINE}
addUserKnob {3 fversion l Version}
fversion 1
addUserKnob {4 format l Format M {exr dpx png tif jpg tga mov}}
addUserKnob {4 channel l Channel M {rgb rgba all}}
channel rgba
addUserKnob {4 fcompression l Compression M {none "Zip (1 scanline)" "Zip (16 scanlines)" "PIZ Wavelet (32 scanlines)" RLE B44 B44A DWAA DWAB}}
fcompression "Zip (1 scanline)"
addUserKnob {1 fview l View}
addUserKnob {26 saveSettingsMsg l "" -STARTLINE T "  "}
addUserKnob {3 frenderorder l "Render order"}
frenderorder 100
addUserKnob {22 frender l Render -STARTLINE T "from nuketools import writetab \nwritetab.render() \n"}
addUserKnob {3 fframeranges l "Frame range" +DISABLED}
fframeranges 1
addUserKnob {3 fframerangee l "" -STARTLINE +DISABLED}
fframerangee 1
addUserKnob {6 flimitrange l "Limit to range" -STARTLINE}
addUserKnob {22 rfromw l "Read from Write" -STARTLINE T "from nuketools import readfromwrite \nreadfromwrite.readFromWrite()"}
addUserKnob {22 rendcurr l "Render current frame" -STARTLINE T "from nuketools import writetab \nwritetab.renderCurrentFrame()"}
addUserKnob {6 fcopyscript l "Don't Copy Nuke Script" +STARTLINE}
addUserKnob {6 fwriteinit l "Is everything added" -STARTLINE +HIDDEN}
fwriteinit true
}
nuke_dispatch {
name nuke_dispatch_WhiteCaps
xpos 4330
ypos 7244
jobtitle comp_precomp
framestart {{"\[getenv FS]"}}
frameend {{"\[getenv FE]"}}
customframes ""
maxtime 3:00:00
StartAfterTime ""
ThreadCount 16
ServiceKeyExpr ""
removelicense true
depthindex 2
}
Group {
name PrecompDispatch1
tile_color 0xff0000ff
label "\[if \{\[value disable]==true\}  \{return OFF\}  \{return ON\}]"
note_font "Bitstream Vera Sans"
note_font_size 21
xpos 4330
ypos 7284
postage_stamp true
addUserKnob {20 User l PrecompDispatch}
addUserKnob {41 file l File T ReadPreComp.file}
addUserKnob {41 localizationPolicy l "Localization Policy" T ReadPreComp.localizationPolicy}
addUserKnob {41 updateLocalization l Update T ReadPreComp.updateLocalization}
addUserKnob {41 localizationPriority l "localization priority" T ReadPreComp.localizationPriority}
addUserKnob {41 format l Format T ReadPreComp.format}
addUserKnob {41 proxy l Proxy T ReadPreComp.proxy}
addUserKnob {41 proxy_format l "Proxy Format" T ReadPreComp.proxy_format}
addUserKnob {41 first l "Frame Range" T ReadPreComp.first}
addUserKnob {41 before l "" -STARTLINE T ReadPreComp.before}
addUserKnob {41 last l "" -STARTLINE T ReadPreComp.last}
addUserKnob {41 after l "" -STARTLINE T ReadPreComp.after}
addUserKnob {41 frame_mode l Frame T ReadPreComp.frame_mode}
addUserKnob {41 frame l "" -STARTLINE T ReadPreComp.frame}
addUserKnob {41 origfirst l "Original Range" T ReadPreComp.origfirst}
addUserKnob {41 origlast l "" -STARTLINE T ReadPreComp.origlast}
addUserKnob {41 origset l "Original Range Set" T ReadPreComp.origset}
addUserKnob {41 on_error l "Missing Frames" T ReadPreComp.on_error}
addUserKnob {41 reload T ReadPreComp.reload}
addUserKnob {41 colorspace l Colorspace T ReadPreComp.colorspace}
addUserKnob {41 premultiplied l Premultiplied T ReadPreComp.premultiplied}
addUserKnob {41 raw l "Raw Data" T ReadPreComp.raw}
addUserKnob {41 auto_alpha l "Auto Alpha" T ReadPreComp.auto_alpha}
addUserKnob {26 "" l "<b>EXR Options</b>"}
addUserKnob {41 offset_negative_display_window l "offset negative display window" T ReadPreComp.offset_negative_display_window}
addUserKnob {41 noprefix l "do not attach prefix" T ReadPreComp.noprefix}
addUserKnob {41 edge_pixels l "edge pixels" T ReadPreComp.edge_pixels}
addUserKnob {20 info}
addUserKnob {26 txt_1 l notes T "Connect to a 'nuke_dispatch' node. \na) rename 'component name' on write node\nb) rename the 'nuke_dispatch'  name adding a number on the end. \n(this set the render order, so you can manually set the order with F7)\nc) Enable node when rendering.\nd) click F7 and set render order dependency before render\nreorder the dispatchNode list. Top is reendered first\ne) after rendering refresh  the precompDispatch nodes and disable it. (use python script)\n* The frame range is set from the dispatch node.\n* Place the precomp before expensive nodes for efficiency."}
addUserKnob {26 ""}
addUserKnob {26 txt l ver: T "0.1 2020.12.21 RafKan"}
addUserKnob {6 UID_precompDispatch l "" +STARTLINE +INVISIBLE +STARTLINE}
}
Input {
inputs 0
name Input1
xpos -477
ypos -239
}
Read {
inputs 0
file_type exr
file "\[value this.parent.input.input.file]"
localizationPolicy off
format "4448 3096 0 0 4448 3096 1 Output Resolution"
first {{"\[value this.parent.input.framestart]" x1031 1001}}
last {{"\[value this.parent.input.frameend]" x1031 1237}}
origfirst {{"\[value this.parent.input.framestart]" x1001 1001 x1194 1001}}
origlast {{"\[value this.parent.input.frameend]" x1001 1040 x1194 1237}}
origset true
version 4
colorspace gbk_plate
auto_alpha true
name ReadPreComp
note_font_color 0xf368e4ff
xpos -477
ypos -164
disable {{"!\[exists parent.input]"}}
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
}
Output {
name Output1
xpos -477
ypos -5
}
end_group
Dot {
name Dot454
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 4364
ypos 7446
}
Grade {
channels alpha
blackpoint 0.1
name Grade118
xpos 4330
ypos 7491
}
OFXuk.co.thefoundry.furnace.f_deflicker2_v403 {
amount 1
blockSize 21.61875
scaleDown 0.5
useMotion true
vectorDetail 0.2
range 2
cacheBreaker true
name F_DeFlicker2_3
xpos 4330
ypos 7529
disable true
}
ChannelMerge {
inputs 2
operation stencil
mix 0.25
name ChannelMerge50
xpos 4330
ypos 7579
disable true
}
Dot {
name Dot472
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 4364
ypos 7749
}
set N39794100 [stack 0]
Dot {
name Dot464
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 4084
ypos 7749
}
set N3978b900 [stack 0]
Dot {
name Dot465
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3778
ypos 7749
}
Dot {
name Dot466
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3778
ypos 7819
}
set N3978ab00 [stack 0]
Dot {
name Dot468
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3778
ypos 7917
}
set N3978a400 [stack 0]
Dot {
name Dot469
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3778
ypos 8017
}
set N39789d00 [stack 0]
Dot {
name Dot467
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3778
ypos 8200
}
set N39789600 [stack 0]
Dot {
name Dot470
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3778
ypos 8327
}
set N39788f00 [stack 0]
Dot {
name Dot471
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3778
ypos 8427
}
TimeOffset {
time_offset 3
time ""
name TimeOffset17
xpos 3871
ypos 8423
}
push $N39788f00
TimeOffset {
time_offset 2
time ""
name TimeOffset18
xpos 3869
ypos 8323
}
push $N39789600
TimeOffset {
time_offset 1
time ""
name TimeOffset14
xpos 3887
ypos 8196
}
push $N39789d00
TimeOffset {
time_offset -3
time ""
name TimeOffset16
xpos 3869
ypos 8013
}
push $N3978a400
TimeOffset {
time_offset -2
time ""
name TimeOffset15
xpos 3869
ypos 7913
}
push $N3978ab00
TimeOffset {
time_offset -1
time ""
name TimeOffset13
xpos 3869
ypos 7815
}
push $N3978b900
ChannelMerge {
inputs 2
name ChannelMerge54
xpos 4050
ypos 7803
}
ChannelMerge {
inputs 2
mix 0.5
name ChannelMerge60
xpos 4050
ypos 7901
}
ChannelMerge {
inputs 2
mix 0.25
name ChannelMerge61
xpos 4050
ypos 8001
}
ChannelMerge {
inputs 2
name ChannelMerge59
xpos 4050
ypos 8184
}
ChannelMerge {
inputs 2
mix 0.5
name ChannelMerge62
xpos 4050
ypos 8311
}
ChannelMerge {
inputs 2
mix 0.25
name ChannelMerge63
xpos 4050
ypos 8411
}
push $N39794100
ChannelMerge {
inputs 2+1
operation max
mix 0.25
name ChannelMerge64
xpos 4330
ypos 8411
disable true
}
Dot {
name Dot444
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 4364
ypos 8739
}
set N3973a400 [stack 0]
FilterErode {
size {-1 0}
name FilterErode19
xpos 4510
ypos 8729
}
TimeEcho {
mode Average
framesbehind 3
name TimeEcho5
xpos 4706
ypos 8735
}
set N39738f00 [stack 0]
EdgeDetectWrapper {
channels alpha
name EdgeDetect2
xpos 4868
ypos 8900
}
push $N39738f00
ChannelMerge {
inputs 2
operation multiply
name ChannelMerge53
xpos 4706
ypos 8894
}
Dot {
name Dot458
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 4740
ypos 9098
}
push $N3973a400
Keymix {
inputs 3
mix 0.5
name Keymix5
xpos 4330
ypos 9088
disable true
}
set N398f7200 [stack 0]
Group {
inputs 3
name VectorFrameBlend13
help "FrameBlend the input with awareness of the motion"
knobChanged "\n\nn = nuke.thisNode()\n\nif nuke.thisKnob().name() == \"vectors\":\n    n.knobs()\['vectorDetail'].setEnabled(False)\n    n.knobs()\['strength'].setEnabled(False)\n    n.knobs()\['mvpass'].setEnabled(False)\n    n.knobs()\['mvmultiplicator'].setEnabled(False)\n    \n    if n\['vectors'].getValue() == 0: #generate\n        n.knobs()\['vectorDetail'].setEnabled(True)\n        n.knobs()\['strength'].setEnabled(True)\n    elif n\['vectors'].getValue() == 1: #MV pass\n        n.knobs()\['mvpass'].setEnabled(True)\n        n.knobs()\['mvmultiplicator'].setEnabled(True)\n"
tile_color 0xffffffff
label "\[value vectors] (\[value this.radius])\nwas on"
xpos 4330
ypos 9180
disable true
addUserKnob {20 User}
addUserKnob {41 "Local GPU: " T BlinkScript_Median.gpuName}
addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T BlinkScript_Median.useGPUIfAvailable}
addUserKnob {41 vectorize l "Vectorize on CPU" -STARTLINE T BlinkScript_Median.vectorize}
addUserKnob {26 ""}
addUserKnob {4 radius l "Temporal Radius" t "Example: Radius 2 will average 5 frames (+2 and -2)" M {1 2 ""}}
addUserKnob {26 divider1 l "" -STARTLINE T "    "}
addUserKnob {4 operation l Operation -STARTLINE M {average median ""}}
addUserKnob {26 ""}
addUserKnob {4 vectors l Vectors t "Generate: \nCreate vectors using the VectorGenerator node\n\nMotion Vector Pass: \nuses a CG motion pass (must be like default Nuke Scanline Render MV pass with pivot at 0)\n\nExternal: \nPlug another VectorFrameBlend into the vec input and use its already existing vectors" M {Generate "Motion Vector Pass" External "" "" "" ""}}
addUserKnob {26 ""}
addUserKnob {7 vectorDetail l "Vector Detail" t "Use this to adjust the density of the calculated motion vector field. Higher details capture finer movements, but take will longer to calculate." R 0.01 1}
vectorDetail 1
addUserKnob {7 strength l Strength t "Match Strength : Stonger values will match larger differences between the two plates." R 0 1.5}
strength 1
addUserKnob {26 ""}
addUserKnob {41 mvpass l "MotionVector Pass" -STARTLINE +DISABLED T Shuffle_MVPass.in}
addUserKnob {7 mvmultiplicator l "Motion Vector Multiplicator" +DISABLED R -10 10}
mvmultiplicator 1
}
Input {
inputs 0
name mask
xpos 54
ypos -822
number 2
}
Shuffle {
red black
green black
blue black
alpha white
name Shuffle5
xpos 54
ypos 2854
disable {{"\[exists input2]"}}
}
Input {
inputs 0
name vec
xpos 767
ypos -820
number 1
}
Shuffle {
red black
green black
blue black
alpha black
out vec1
out2 vec2
name Shuffle_SetVec
xpos 767
ypos -761
disable {{"\[exists input1]"}}
}
Dot {
name Dot38
xpos 801
ypos -674
}
Dot {
name Dot39
xpos 1660
ypos -674
}
set N398f4100 [stack 0]
Dot {
name Dot41
xpos 2669
ypos -674
}
set N398d3900 [stack 0]
Dot {
name Dot43
xpos 3646
ypos -674
}
set N398d3200 [stack 0]
Dot {
name Dot45
xpos 4627
ypos -674
}
Dot {
name Dot50
xpos 4627
ypos 882
}
Shuffle {
in vec2
out backward
name Shuffle_Vec4
xpos 4437
ypos 878
}
Input {
inputs 0
name Input
xpos 540
ypos -823
}
Dot {
name Dot2
xpos 574
ypos -462
}
set N398d0f00 [stack 0]
Dot {
name Dot26
xpos 784
ypos -462
}
set N398d0800 [stack 0]
Dot {
name Dot3
xpos 1337
ypos -462
}
set N398d0100 [stack 0]
Dot {
name Dot4
xpos 2334
ypos -462
}
set N398bb900 [stack 0]
Dot {
name Dot5
xpos 3311
ypos -462
}
set N398bb200 [stack 0]
Dot {
name Dot6
xpos 4290
ypos -462
}
TimeOffset {
time_offset -2
time ""
name TimeOffset6
label -2
xpos 4256
ypos -300
}
set N398ba400 [stack 0]
Dot {
name Dot33
xpos 4485
ypos -290
}
Shuffle {
in none
out backward
name Shuffle_MVPass
xpos 4451
ypos -212
}
set C398b9600 [stack 0]
Multiply {
channels backward
value {{2*mvmultiplicator}}
name Multiply4
xpos 4451
ypos 611
}
Dot {
name Dot51
xpos 4485
ypos 776
}
push $N398d0800
NoTimeBlur {
rounding floor
single false
name NoTimeBlur1
xpos 750
ypos -247
}
Retime {
input.first 1001
input.first_lock true
input.last 1218
output.first 1001
output.last 1436
speed 0.5
before continue
after continue
filter none
time ""
name Retime1
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 750
ypos -201
}
set N3989b200 [stack 0]
push $N398ba400
NoTimeBlur {
rounding floor
single false
name NoTimeBlur5
xpos 4256
ypos -213
}
Retime {
input.first 1001
input.first_lock true
output.first 1001
output.last 1002
speed 0.5
before continue
after continue
filter none
time ""
name Retime6
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 4256
ypos -172
}
Switch {
inputs 2
which {{(frame-1001)%2}}
name Switch1
xpos 4256
ypos 58
}
set C39899d00 [stack 0]
VectorGenerator {
useGPUIfAvailable {{VectorFrameBlend13.BlinkScript_Median.useGPUIfAvailable}}
motionEstimation Regularized
vectorDetailReg {{parent.vectorDetail}}
strengthReg {{parent.strength}}
name VectorGenerator1
xpos 4256
ypos 336
}
set C39899600 [stack 0]
Dot {
name Dot10
tile_color 0xcccccc00
xpos 4290
ypos 476
}
set N39898f00 [stack 0]
Shuffle {
in backward
blue black
alpha black
name Shuffle4
label "in \[value in]-->out \[value out]"
xpos 4092
ypos 466
}
TimeOffset {
time_offset -1
time ""
name TimeOffset8
label "\[value time_offset]"
xpos 4092
ypos 552
}
push $N39898f00
Copy {
inputs 2
from0 backward.u
to0 backward.u
from1 backward.v
to1 backward.v
bbox B
name Copy4
xpos 4256
ypos 545
}
Retime {
input.first 1001
input.first_lock true
input.last 1436
output.first 1001
output.last 1218
speed 2
before continue
after continue
filter none
time ""
name Retime9
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 4256
ypos 648
}
Switch {
inputs 3
which {{vectors}}
name Switch_UseExternal
xpos 4258
ypos 878
}
set C3985eb00 [stack 0]
Dot {
name Dot52
xpos 4292
ypos 1009
}
push $N398ba400
Dot {
name Dot53
xpos 4053
ypos -290
}
Copy {
inputs 2
channels backward
name Copy11
xpos 4019
ypos 992
}
IDistort {
uv backward
name IDistort4
xpos 4019
ypos 1194
}
Dot {
name Dot24
xpos 4053
ypos 2003
}
set N3985c800 [stack 0]
Dot {
name Dot35
xpos 4053
ypos 2510
}
push $N398d3200
Dot {
name Dot42
xpos 3646
ypos 932
}
Shuffle {
in vec2
red blue
green alpha
out backward
name Shuffle_Vec3
xpos 3456
ypos 928
}
push $N398bb200
TimeOffset {
time_offset 2
time ""
name TimeOffset5
label +2
xpos 3277
ypos -300
}
set N3982eb00 [stack 0]
Dot {
name Dot31
xpos 3493
ypos -290
}
clone $C398b9600 {
xpos 3459
ypos -212
selected false
}
Multiply {
channels backward
value {{-2*mvmultiplicator}}
name Multiply3
xpos 3459
ypos 591
}
Dot {
name Dot44
xpos 3493
ypos 814
}
push $N3989b200
push $N3982eb00
NoTimeBlur {
rounding floor
single false
name NoTimeBlur4
xpos 3277
ypos -213
}
Retime {
input.first 1001
input.first_lock true
output.first 1001
output.last 1002
speed 0.5
before continue
after continue
filter none
time ""
name Retime5
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 3277
ypos -172
}
clone $C39899d00 {
inputs 2
xpos 3277
ypos 58
selected false
}
clone $C39899600 {
xpos 3277
ypos 329
selected false
}
Dot {
name Dot8
tile_color 0xcccccc00
xpos 3311
ypos 465
}
set N399fe400 [stack 0]
Shuffle {
in backward
blue black
alpha black
name Shuffle3
label "in \[value in]-->out \[value out]"
xpos 3113
ypos 455
}
TimeOffset {
time_offset -1
time ""
name TimeOffset7
label "\[value time_offset]"
xpos 3113
ypos 541
}
push $N399fe400
Copy {
inputs 2
from0 backward.u
to0 backward.u
from1 backward.v
to1 backward.v
bbox B
name Copy3
xpos 3277
ypos 534
}
Retime {
input.first 1001
input.first_lock true
input.last 1436
output.first 1001
output.last 1218
speed 2
before continue
after continue
filter none
time ""
name Retime8
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 3277
ypos 637
}
clone $C3985eb00 {
inputs 3
xpos 3277
ypos 928
selected false
}
Dot {
name Dot48
xpos 3311
ypos 1028
}
push $N3982eb00
Dot {
name Dot49
xpos 3072
ypos -290
}
Copy {
inputs 2
channels backward
name Copy10
xpos 3038
ypos 1011
}
IDistort {
uv backward
name IDistort3
xpos 3038
ypos 1177
}
Dot {
name Dot22
xpos 3072
ypos 1770
}
set N399cdd00 [stack 0]
ShuffleCopy {
inputs 2
in backward
in2 backward
red red
green green
blue red2
alpha green2
out vec2
name ShuffleCopy1
xpos 3038
ypos 2506
}
push $N398d3900
Dot {
name Dot30
xpos 2669
ypos 892
}
Shuffle {
in vec1
out backward
name Shuffle_Vec2
xpos 2479
ypos 888
}
push $N398bb900
TimeOffset {
time_offset -1
time ""
name TimeOffset4
label -1
xpos 2300
ypos -313
}
set N399cc100 [stack 0]
Dot {
name Dot29
xpos 2537
ypos -303
}
clone $C398b9600 {
xpos 2503
ypos -225
selected false
}
Multiply {
channels backward
value {{mvmultiplicator}}
name Multiply2
xpos 2503
ypos 584
}
Dot {
name Dot32
xpos 2537
ypos 760
}
push $N3989b200
push $N399cc100
NoTimeBlur {
rounding floor
single false
name NoTimeBlur3
xpos 2300
ypos -227
}
Retime {
input.first 1001
input.first_lock true
output.first 1001
output.last 1002
speed 0.5
before continue
after continue
filter none
time ""
name Retime4
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 2300
ypos -186
}
clone $C39899d00 {
inputs 2
xpos 2300
ypos 44
selected false
}
clone $C39899600 {
xpos 2300
ypos 333
selected false
}
Dot {
name Dot7
tile_color 0xcccccc00
xpos 2334
ypos 449
}
set N39977900 [stack 0]
Shuffle {
in backward
blue black
alpha black
name Shuffle6
label "in \[value in]-->out \[value out]"
xpos 2136
ypos 439
}
TimeOffset {
time_offset -1
time ""
name TimeOffset1
label "\[value time_offset]"
xpos 2136
ypos 525
}
push $N39977900
Copy {
inputs 2
from0 backward.u
to0 backward.u
from1 backward.v
to1 backward.v
bbox B
name Copy1
xpos 2300
ypos 518
}
Retime {
input.first 1001
input.first_lock true
input.last 1436
output.first 1001
output.last 1218
speed 2
before continue
after continue
filter none
time ""
name Retime7
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 2300
ypos 621
}
clone $C3985eb00 {
inputs 3
xpos 2300
ypos 888
selected false
}
Dot {
name Dot34
xpos 2334
ypos 1042
}
push $N399cc100
Dot {
name Dot40
xpos 2095
ypos -303
}
Copy {
inputs 2
channels backward
name Copy9
xpos 2061
ypos 1025
}
IDistort {
uv backward
name IDistort2
xpos 2061
ypos 1177
}
Dot {
name Dot12
xpos 2095
ypos 1498
}
set N3994f200 [stack 0]
Dot {
name Dot36
xpos 2095
ypos 2403
}
push $N398f4100
Dot {
name Dot37
xpos 1660
ypos 900
}
Shuffle {
in vec1
red blue
green alpha
out backward
name Shuffle_Vec1
xpos 1487
ypos 896
}
push $N398d0100
TimeOffset {
time_offset 1
time ""
name TimeOffset3
label +1
xpos 1303
ypos -322
}
set N3994d600 [stack 0]
Dot {
name Dot28
xpos 1512
ypos -312
}
clone $C398b9600 {
xpos 1478
ypos -224
selected false
}
Multiply {
channels backward
value {{-mvmultiplicator}}
name Multiply1
xpos 1478
ypos 587
}
Dot {
name Dot27
xpos 1512
ypos 749
}
push $N3989b200
push $N3994d600
NoTimeBlur {
rounding floor
single false
name NoTimeBlur2
xpos 1303
ypos -232
}
Retime {
input.first 1001
input.first_lock true
output.first 1001
output.last 1002
speed 0.5
before continue
after continue
filter none
time ""
name Retime2
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 1303
ypos -192
}
clone $C39899d00 {
inputs 2
xpos 1303
ypos 44
selected false
}
Dot {
name Dot9
tile_color 0xcccccc00
xpos 1337
ypos 133
}
clone $C39899600 {
xpos 1303
ypos 330
selected false
}
Dot {
name Dot1
tile_color 0xcccccc00
xpos 1337
ypos 416
}
set N39928800 [stack 0]
Shuffle {
in backward
blue black
alpha black
name Shuffle8
label "in \[value in]-->out \[value out]"
xpos 1139
ypos 406
}
TimeOffset {
time_offset -1
time ""
name TimeOffset2
label "\[value time_offset]"
xpos 1139
ypos 492
}
push $N39928800
Copy {
inputs 2
from0 backward.u
to0 backward.u
from1 backward.v
to1 backward.v
bbox B
name Copy2
xpos 1303
ypos 485
}
Retime {
input.first 1001
input.first_lock true
input.last 1436
output.first 1001
output.last 1218
speed 2
before continue
after continue
filter none
time ""
name Retime3
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 1303
ypos 588
}
clone $C3985eb00 {
inputs 3
xpos 1303
ypos 896
selected false
}
Dot {
name Dot47
xpos 1337
ypos 1000
}
push $N3994d600
Dot {
name Dot46
xpos 1098
ypos -312
}
Copy {
inputs 2
channels backward
name Copy8
xpos 1064
ypos 983
}
IDistort {
uv backward
name IDistort1
xpos 1064
ypos 1160
}
Dot {
name Dot11
tile_color 0xcccccc00
xpos 1098
ypos 1240
}
set N37540100 [stack 0]
ShuffleCopy {
inputs 2
in backward
in2 backward
red red
green green
blue red2
alpha green2
out vec1
name ShuffleCopy3
xpos 1064
ypos 2399
}
set N3751f900 [stack 0]
push $N398d0f00
Dot {
name Dot14
xpos 574
ypos 975
}
set N3751f200 [stack 0]
Dot {
name Dot16
xpos 684
ypos 975
}
set N3751eb00 [stack 0]
push $N37540100
Dot {
name Dot13
xpos 850
ypos 1240
}
set N3751e400 [stack 0]
push $N3994f200
Dot {
name Dot20
xpos 848
ypos 1498
}
set N3751dd00 [stack 0]
push $N399cdd00
Dot {
name Dot23
xpos 859
ypos 1770
}
set N3751d600 [stack 0]
push $N3985c800
Dot {
name Dot25
xpos 848
ypos 2003
}
set N3751cf00 [stack 0]
BlinkScript {
inputs 5
recompileCount 6
ProgramGroup 1
KernelDescription "2 \"MedianKernel\" iterate componentWise 1e7304f930362212e256e53742e266e22e4ba28492c0bc903660683d595e3c9a 6 \"f1\" Read Point \"f2\" Read Point \"f3\" Read Point \"f4\" Read Point \"f5\" Read Point \"dst\" Write Point 0 0 0"
kernelSource "kernel MedianKernel : ImageComputationKernel<eComponentWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> f1;\n  Image<eRead, eAccessPoint, eEdgeClamped> f2;\n  Image<eRead, eAccessPoint, eEdgeClamped> f3;\n  Image<eRead, eAccessPoint, eEdgeClamped> f4;\n  Image<eRead, eAccessPoint, eEdgeClamped> f5;\n  Image<eWrite> dst;\n\n  void process() \{\n    float values\[] = \{f1(),f2(),f3(),f4(),f5()\};\n    dst() = median(values, 5);\n  \}\n\};\n"
useGPUIfAvailable {{parent.BlinkScript_Median.useGPUIfAvailable}}
vectorize {{parent.BlinkScript_Median.vectorize}}
rebuild ""
rebuild_finalise ""
name BlinkScript_Median1
xpos 561
ypos 1993
}
push $N3751cf00
push $N3751d600
push $N3751dd00
push 0
push $N3751e400
push $N3751eb00
Merge2 {
inputs 5+1
operation average
name Merge1
xpos 650
ypos 2080
}
set C374fb900 [stack 0]
Switch {
inputs 2
which {{operation}}
name Switch8
xpos 650
ypos 2169
}
set C374fb200 [stack 0]
Copy {
inputs 2
channels vec1
name Copy6
xpos 650
ypos 2386
}
Copy {
inputs 2
channels vec2
name Copy7
xpos 650
ypos 2493
}
Dot {
name Dot17
xpos 684
ypos 2653
}
push $N3751f900
push $N3751f200
Dot {
name Dot15
xpos 472
ypos 975
}
set N374f9600 [stack 0]
push $N3751e400
Dot {
name Dot19
xpos 583
ypos 1240
}
set N374f8f00 [stack 0]
push $N3751dd00
Dot {
name Dot21
xpos 611
ypos 1498
}
set N374f8800 [stack 0]
BlinkScript {
inputs 3
recompileCount 5
ProgramGroup 1
KernelDescription "2 \"MedianKernel\" iterate componentWise 722c32f2d1251222314c5b7dcb61e29044fb0774b72a0fee19adf671edcc2cba 4 \"f1\" Read Point \"f2\" Read Point \"f3\" Read Point \"dst\" Write Point 0 0 0"
kernelSource "kernel MedianKernel : ImageComputationKernel<eComponentWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> f1;\n  Image<eRead, eAccessPoint, eEdgeClamped> f2;\n  Image<eRead, eAccessPoint, eEdgeClamped> f3;\n  Image<eWrite> dst;\n\n  void process() \{\n    float values\[] = \{f1(),f2(),f3()\};\n    dst() = median(values, 3);\n  \}\n\};\n"
rebuild ""
rebuild_finalise ""
name BlinkScript_Median
xpos 309
ypos 1997
}
push $N374f8800
push 0
push $N374f8f00
push $N374f9600
clone $C374fb900 {
inputs 3+1
xpos 438
ypos 2079
selected false
}
clone $C374fb200 {
inputs 2
xpos 438
ypos 2170
selected false
}
Copy {
inputs 2
channels vec1
name Copy5
xpos 438
ypos 2386
}
Dot {
name Dot18
xpos 472
ypos 2645
}
Switch {
inputs 2
which {{radius}}
name Switch_Radius
xpos 539
ypos 2749
}
push $N398d0f00
Dot {
name Dot55
xpos 284
ypos -462
}
Dot {
name Dot54
xpos 284
ypos 2780
}
Dissolve {
inputs 2+1
which 1
name Dissolve1
xpos 539
ypos 2848
}
Output {
name Output1
xpos 539
ypos 3106
}
end_group
Dot {
name Dot427
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 4364
ypos 9278
}
push $N6d11b900
Shuffle {
in LS_env_LGT_all
name Shuffle67
label LS_env_LGT_all
xpos 3946
ypos 1305
postage_stamp true
}
clone $C3a058800 {
xpos 4426
ypos 1334
selected false
}
push $N6d13c800
Switch {
inputs 2
which 1
name Switch22
xpos 5365
ypos 1334
disable true
}
Remove {
operation keep
channels rgba
name Remove16
xpos 5365
ypos 9192
}
Grade {
inputs 1+1
multiply 10
name Grade94
xpos 5365
ypos 9274
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
channels zDepth
name Copy26
xpos 5365
ypos 9965
}
add_layer {P P.x P.y P.z P.red P.green P.blue P.alpha P.X P.Y P.Z}
Copy {
inputs 2
to0 -rgba.alpha
channels {P.x P.y P.z P.red}
name Copy27
xpos 5365
ypos 10048
}
Copy {
inputs 2
to0 -rgba.alpha
channels pRef
name Copy28
xpos 5365
ypos 10133
}
Copy {
inputs 2
to0 -rgba.alpha
channels pWorld
name Copy29
xpos 5365
ypos 10233
}
Copy {
inputs 2
to0 -rgba.alpha
channels pObject
name Copy30
xpos 5365
ypos 10330
}
Merge2 {
inputs 2
mix 0.4
name Merge50
xpos 5365
ypos 10782
}
Grade {
inputs 1+1
multiply 5
name Grade95
xpos 5365
ypos 10849
disable true
}
Merge2 {
inputs 2
mix 0.3
name Merge51
xpos 5365
ypos 11748
}
set N3724f200 [stack 0]
Merge2 {
inputs 2
name Merge52
xpos 5365
ypos 12558
disable true
}
Grade {
inputs 1+1
multiply 5
name Grade96
xpos 5365
ypos 12652
}
Merge2 {
inputs 2
name Merge53
xpos 5365
ypos 13261
disable true
}
Grade {
inputs 1+1
multiply 3
name Grade97
xpos 5365
ypos 13353
}
Dot {
name Dot429
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 5394
ypos 14188
}
set N3721ab00 [stack 0]
push $N6d100800
Dot {
name Dot430
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2210
ypos 14188
}
set N3721a400 [stack 0]
Difference {
inputs 2
name Difference2
xpos 5002
ypos 14178
}
push $N3721a400
Dot {
name Dot431
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2210
ypos 14750
}
add_layer {nObject nObject.red nObject.green nObject.blue}
Group {
name pRefTexture15
knobChanged "import nuke\n\ngroup = nuke.thisGroup()\n\ngroup.begin()\n\nnodeSample = nuke.toNode(\"sample\")\nnodeExpr = nuke.toNode(\"expression\")\n\nposU = nodeSample\[\"sampledC\"].getValue(0)\nposV = nodeSample\[\"sampledC\"].getValue(1)\n\nnodeExpr\[\"temp_expr1\"].setValue(str(posU))\nnodeExpr\[\"temp_expr2\"].setValue(str(posV))\n\ngroup.end()\n\n\n"
tile_color 0xff5555ff
label v03
xpos 4420
ypos 14740
addUserKnob {20 user l User}
addUserKnob {41 in l "position data" T ShuffleInputChannels.in}
addUserKnob {41 center T expression.center}
addUserKnob {6 preview l "preview texture" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {7 size R 0 50}
size 3.2
addUserKnob {7 rotation R 0 360}
addUserKnob {14 scaleUV l "scale UV" R 0 100}
scaleUV {1 1}
addUserKnob {41 size_1 l "Blur data" T Blur.size}
addUserKnob {6 tileable l Tileable +STARTLINE}
}
Axis2 {
inputs 0
rotate {0 {parent.rotation} 0}
name Axis1
xpos -645
ypos 209
}
Input {
inputs 0
name img
xpos -1204
ypos -334
}
Shuffle {
in nObject
in2 alpha
alpha red2
name ShuffleInputChannels
label "\[value in]"
xpos -1204
ypos -132
}
set N371ff900 [stack 0]
Dot {
name Dot2
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -879
ypos -128
}
Expression {
temp_name0 size
temp_expr0 parent.size
temp_name1 posU
temp_expr1 center.r
temp_name2 posV
temp_expr2 center.b
expr0 "(posU - r)*(1/size)"
expr1 0
expr2 "(b - posV)*(1/size)"
expr3 a
name expression
xpos -907
ypos 125
addUserKnob {20 User}
addUserKnob {18 center}
center {0.05605032295 0.9982904196 -0.01657263748}
addUserKnob {6 center_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
}
ColorMatrix {
matrix {
    {{Axis1.world_matrix.0} {Axis1.world_matrix.1} {Axis1.world_matrix.2}}
    {{Axis1.world_matrix.4} {Axis1.world_matrix.5} {Axis1.world_matrix.6}}
    {{Axis1.world_matrix.8} {Axis1.world_matrix.9} {Axis1.world_matrix.10}}
  }
name ColorMatrix1
xpos -907
ypos 220
}
Shuffle2 {
fromInput1 {{0} B}
fromInput2 {{0} B}
mappings "4 rgba.red 0 0 rgba.red 0 0 black -1 -1 rgba.alpha 0 3 rgba.blue 0 2 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2"
name Shuffle2
label "\[value in]"
xpos -907
ypos 261
}
Expression {
temp_name0 valu
temp_expr0 parent.scaleUV.w
temp_name1 valv
temp_expr1 parent.scaleUV.h
expr0 r/valu
expr1 g/valv
name Expression_scaleUV
xpos -907
ypos 327
}
Expression {
temp_name0 size
temp_name1 posU
temp_name2 posV
expr0 r+0.5
expr1 g+0.5
expr2 0
name expression2
xpos -907
ypos 430
}
set N371fc800 [stack 0]
Expression {
expr0 abs(r)%1
expr1 abs(g)%1
name tileable
xpos -822
ypos 497
}
push $N371fc800
Switch {
inputs 2
which {{parent.tileable}}
name Switch1
xpos -907
ypos 563
}
Blur {
channels rgba
name Blur
xpos -907
ypos 631
}
Remove {
operation keep
channels rgba
name Remove1
xpos -907
ypos 884
}
Dot {
name Dot3
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -879
ypos 959
}
push $N371ff900
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels all
name Copy1
xpos -1204
ypos 949
}
Dot {
name Dot1
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -1176
ypos 1164
}
set N371c5600 [stack 0]
CheckerBoard2 {
inputs 0
format "1024 1024 0 0 1024 1024 1 square_1K"
name CheckerBoard1
xpos -1880
ypos 782
}
set N371c4f00 [stack 0]
Remove {
name Remove2
xpos -1542
ypos 799
}
set N371a1d00 [stack 0]
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
output {-rgba.red rgba.green -rgba.blue -rgba.alpha}
message "\n-->"
old_message {{10 45 45 62}
  }
box {{curve} {curve} {input.width} {input.height}}
xjustify center
yjustify center
transforms {{0 2}
  }
cursor_position 1
global_font_scale 3
center {1920 1080}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{0 1024}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 1920 1080 0 0 1 1 0 0 0 0}
  }
name Text3
xpos -1673
ypos 991
}
set N371a1600 [stack 0]
Transform {
rotate 90
center {{input.width/2} {input.height/2}}
shutteroffset centred
name Transform1
xpos -1644
ypos 1079
}
push $N371a1600
Transform {
rotate 90
center {{input.width/2} {input.height/2}}
shutteroffset centred
name Transform2
xpos -1759
ypos 1026
}
Mirror2 {
flop true
name Mirror2_1
xpos -1759
ypos 1052
}
push $N371a1d00
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
output {-rgba.red rgba.green -rgba.blue -rgba.alpha}
message Y
old_message {{89}
  }
box {{curve} {curve} {input.width} {input.height}}
xjustify center
yjustify center
transforms {{0 2}
  }
cursor_position 1
global_font_scale 3
center {1920 1080}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{0 1024}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 1920 1080 0 0 1 1 0 0 0 0}
  }
name Text2
xpos -1739
ypos 948
}
push 0
push $N371a1d00
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
output {rgba.red -rgba.green -rgba.blue -rgba.alpha}
message "-->\nX\n-->"
old_message {{45 45 62 10 88 10 45 45 62}
  }
box {{curve} {curve} {input.width} {input.height}}
xjustify center
yjustify center
transforms {{0 2}
  }
cursor_position 3
global_font_scale 3
center {1920 1080}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{0 1024}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 1920 1080 0 0 1 1 0 0 0 0}
  }
name Text1
xpos -1768
ypos 902
}
push $N371c4f00
Merge2 {
inputs 5+1
operation plus
name Plus
xpos -1882
ypos 1079
}
push $N371a1d00
Expression {
expr0 (x+0.5)/width
expr1 (y+0.5)/height
name UVMap
xpos -1534
ypos 1032
}
Grade {
gamma 0.48
name Grade1
xpos -1534
ypos 1125
}
Merge2 {
inputs 2
operation multiply
name Multiply
xpos -1882
ypos 1125
}
BlackOutside {
name BlackOutside1
xpos -1880
ypos 1207
}
STMap {
inputs 2
channels rgba
uv rgb
name STMap1
xpos -1880
ypos 1242
}
push $N371c5600
Switch {
inputs 2
which {{parent.preview}}
name Switch_Preview
tile_color 0xe54c4cff
label "\[if \{\[value this.which]==\"1\"\} \{return \"\[knob this.tile_color 3853012223]\"\} elseif \{\[value this.which]==\"2\"\} \{return \"\[knob this.tile_color 3336916223]\"\} elseif \{\[value this.which]==\"3\"\} \{return \"\[knob this.tile_color 1810189567]\"\} elseif \{\[value this.which]==\"4\"\} \{return \"\[knob this.tile_color 1290111487]\"\} elseif \{\[value this.which]==\"5\"\} \{return \"\[knob this.tile_color 1290135039]\"\} elseif \{\[value this.which]==\"6\"\} \{return \"\[knob this.tile_color 1284105727]\"\} elseif \{\[value this.which]==\"7\"\} \{return \"\[knob this.tile_color 1917642239]\"\} elseif \{\[value this.which]==\"8\"\} \{return \"\[knob this.tile_color 3326928383]\"\} elseif \{\[value this.which]==\"9\"\} \{return \"\[knob this.tile_color 3847006463]\"\} else \{return \"\[knob this.tile_color 3846982911]\"\}]\[value which]\n"
xpos -1204
ypos 1291
}
Output {
name Output1
xpos -1204
ypos 1377
}
Read {
inputs 0
file_type jpeg
file "/coppi/global/flibrary/2D/textures/UV Checkers/UVMaster_c1.jpg"
format "1024 1024 0 0 1024 1024 1 square_1K"
origset true
in_colorspace scene_linear
out_colorspace scene_linear
name Read3
xpos -1582
ypos 679
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
}
end_group
Read {
inputs 0
file_type jpeg
file /coppi/global/flibrary/elements/water/whitewater/misc/8323_2.jpg
format "536 750 0 0 536 750 1 "
origset true
name Read62
xpos 4590
ypos 14409
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
}
Crop {
box {0 0 {width} {height}}
softness 183.5
name CropToInput39
xpos 4590
ypos 14531
}
Grade {
white 0.17
multiply 0.05
name Grade98
xpos 4590
ypos 14576
}
Grade {
multiply 30
name Grade99
xpos 4590
ypos 14616
}
Shuffle2 {
fromInput1 {{0} B}
fromInput2 {{0} B}
mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
name Shuffle69
label "\[value in1]"
xpos 4590
ypos 14660
}
STMap {
inputs 2
uv rgb
name STMap18
xpos 4590
ypos 14740
}
Grade {
channels alpha
blackpoint 0.75
name Grade100
xpos 4590
ypos 14888
}
ChannelMerge {
inputs 2
operation multiply
name ChannelMerge55
xpos 5002
ypos 14882
}
Dot {
name Dot432
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 5859
ypos 14898
}
FrameBlend {
name FrameBlend8
xpos 5663
ypos 15152
}
push $N39d3b200
TimeEcho {
framesbehind 10
frmaesfade 10
name TimeEcho6
xpos 2649
ypos 2190
}
FrameBlend {
numframes 10
name FrameBlend9
xpos 2649
ypos 2216
}
Grade {
channels alpha
whitepoint 0.018
white_clamp true
name Grade109
xpos 2649
ypos 2271
}
Blur {
size 16
name Blur10
xpos 2649
ypos 2322
}
StickyNote {
inputs 0
name StickyNote25
label thickens
xpos 4468
ypos 3732
}
Dot {
inputs 0
name Dot443
tile_color 0x949494ff
label .5
note_font_size 22
note_font_color 0xffffffff
xpos 4431
ypos 3760
}
push $N3feab900
push $N3724f200
Grade {
inputs 1+1
multiply 5
name Grade113
xpos 5365
ypos 11815
disable true
}
push $N39a59600
Dot {
name Dot446
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 4592
ypos 2401
}
ModifyMetaData {
metadata {
 {set gbk/scriptname "\[value root.name]"}
 {set exr/task_id "\[getenv FTRACK_TASKID]"}
 {remove exr/chunkCount ""}
 {remove exr/compressionName ""}
}
name ModifyMetaData34
xpos 4558
ypos 2419
}
Write {
channels rgba
file /coppi/proj/thrg/shottree/s01e01/015-0300/output2d/comp/comp_precomp/thrg_s01e01_015-0300_comp_precomp_precomp01_lin_ap0_v001/thrg_s01e01_015-0300_comp_precomp_precomp01_lin_ap0_v001.%04d.exr
colorspace "ACES - ACES2065-1"
file_type exr
metadata "all metadata"
first_part rgba
in_colorspace scene_linear
out_colorspace scene_linear
beforeRender "from nuketools import beforerenderfunctions;beforerenderfunctions.beforeRender()"
name Write31
xpos 4558
ypos 2456
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
addUserKnob {20 fwrite l "GBK Write"}
addUserKnob {1 ffile l File}
ffile /coppi/proj/thrg/shottree/s01e01/015-0300/output2d/comp/comp_precomp/thrg_s01e01_015-0300_comp_precomp_precomp01_lin_ap0_v001/thrg_s01e01_015-0300_comp_precomp_precomp01_lin_ap0_v001.%04d.exr
addUserKnob {1 fproxy l Proxy}
addUserKnob {6 fproxycheck l "Set Proxy Path" +STARTLINE}
addUserKnob {26 divider l "" +STARTLINE}
addUserKnob {4 task l Task M {comp bloc clie cont crea fx-0 fx-0 fx-0 fx-0 layo layo layo layo ligh ligh ligh ligh matc matc plat roto roto roto roto source}}
addUserKnob {1 fassetname l "Asset Name Preview:" +DISABLED}
fassetname comp_precomp
addUserKnob {1 fassetbasename l "Asset Name:"}
fassetbasename comp
addUserKnob {1 fecompname l "Component Name:"}
fecompname precomp01
addUserKnob {1 flatestversion l "Latest published version:" +DISABLED}
flatestversion 5
addUserKnob {22 getlatest l Refresh -STARTLINE T "from nuketools import writetab \nwritetab.getLatestPubVersion() \n"}
addUserKnob {6 precomp l Precomp +STARTLINE}
precomp true
addUserKnob {6 denoised l Denoised(dn) +STARTLINE}
addUserKnob {6 delensed l Delensed(dl) +STARTLINE}
addUserKnob {6 neutralgrade l Neutralgrade(ng) +STARTLINE}
addUserKnob {6 matte l Matte +STARTLINE}
addUserKnob {6 no_frame_number l "No Frame Numbering" +STARTLINE}
addUserKnob {3 fversion l Version}
fversion 1
addUserKnob {4 format l Format M {exr dpx png tif jpg tga mov}}
addUserKnob {4 channel l Channel M {rgb rgba all}}
channel rgba
addUserKnob {4 fcompression l Compression M {none "Zip (1 scanline)" "Zip (16 scanlines)" "PIZ Wavelet (32 scanlines)" RLE B44 B44A DWAA DWAB}}
fcompression "Zip (1 scanline)"
addUserKnob {1 fview l View}
addUserKnob {26 saveSettingsMsg l "" -STARTLINE T "  "}
addUserKnob {3 frenderorder l "Render order"}
frenderorder 1
addUserKnob {22 frender l Render -STARTLINE T "from nuketools import writetab \nwritetab.render() \n"}
addUserKnob {3 fframeranges l "Frame range" +DISABLED}
fframeranges 1
addUserKnob {3 fframerangee l "" -STARTLINE +DISABLED}
fframerangee 1
addUserKnob {6 flimitrange l "Limit to range" -STARTLINE}
addUserKnob {22 rfromw l "Read from Write" -STARTLINE T "from nuketools import readfromwrite \nreadfromwrite.readFromWrite()"}
addUserKnob {22 rendcurr l "Render current frame" -STARTLINE T "from nuketools import writetab \nwritetab.renderCurrentFrame()"}
addUserKnob {6 fcopyscript l "Don't Copy Nuke Script" +STARTLINE}
addUserKnob {6 fwriteinit l "Is everything added" -STARTLINE +HIDDEN}
fwriteinit true
}
nuke_dispatch {
name nuke_dispatch30
xpos 4558
ypos 2544
jobtitle comp_precomp
framestart {{"\[getenv FS]"}}
frameend {{"\[getenv FE]"}}
customframes ""
maxtime 3:00:00
StartAfterTime ""
ThreadCount 0
ServiceKeyExpr ""
removelicense true
depthindex 6
}
Group {
inputs 0
name aeBrokenShapes1
tile_color 0xa0500ff
note_font "Verdana Bold"
note_font_color 0xffffffff
xpos 5213
ypos 7094
icon aeBrokenEdges_Node.png
disable true
addUserKnob {20 aeBrokenShapes}
addUserKnob {6 color_rgb_panelDropped l "panel dropped state" +HIDDEN +STARTLINE}
addUserKnob {41 channels l multiply T Premult1.channels}
addUserKnob {41 alpha l by T Premult1.alpha}
addUserKnob {41 invertMask l invert -STARTLINE T Keymix3.invertMask}
addUserKnob {26 ""}
addUserKnob {26 text_7 l "<b><font color=#ffffff>Random</font><b>"}
addUserKnob {7 newrandom l seed R 0 100}
addUserKnob {26 ""}
addUserKnob {7 distort}
distort 0.05
addUserKnob {7 linner l lines}
linner 1
addUserKnob {7 outter l size R 1 500}
outter 1
addUserKnob {7 seed R 0 5}
addUserKnob {7 simplify R 0 100}
addUserKnob {7 trans l translucity R 0 200}
trans 1
addUserKnob {26 ""}
addUserKnob {26 text_7_1 l "<b><font color=#ffffff>Alpha</font><b>"}
addUserKnob {4 keep l "keep alpha" M {none "input     " matte "" "" "" "" "" "" ""}}
addUserKnob {26 text_5 l "" -STARTLINE T "     "}
addUserKnob {6 invertshape l "invert shape" -STARTLINE}
addUserKnob {7 gamma2 l gamma R 0 2}
gamma2 1
addUserKnob {7 blur R 0 100}
addUserKnob {7 feather R 0 100}
addUserKnob {26 ""}
addUserKnob {41 maskChannel l mask T Keymix3.maskChannel}
addUserKnob {7 mix}
mix 1
addUserKnob {26 ""}
addUserKnob {26 text l "" +STARTLINE T "<span style=\"color:#666\"><br/><b>aeBrokenShapes v1.0</b> - <a  style=\"color:#666;text-decoration: none;\">Aitor Echeveste</a>  © 2020</span>"}
addUserKnob {20 Custom}
addUserKnob {26 text_6 l "<b><font color=#ffffff>Outter break</font><b>"}
addUserKnob {7 outtertop l "top size"}
outtertop 1
addUserKnob {7 outterbottom l "bottom size"}
outterbottom 1
addUserKnob {7 outexpand l "out expand"}
addUserKnob {7 outter_rotate l rotate R -180 180}
outter_rotate 45
addUserKnob {7 seed_2 l seed}
addUserKnob {26 ""}
addUserKnob {26 text_6_2 l "<b><font color=#ffffff>Cross break</font><b>"}
addUserKnob {7 cross_scale l amount R 0 10}
cross_scale 10
addUserKnob {7 cross_size l size R 0 10}
addUserKnob {7 cross_rotate l rotate R -180 180}
cross_rotate 135
addUserKnob {7 seed_3 l seed}
addUserKnob {26 ""}
addUserKnob {26 text_6_1 l "<b><font color=#ffffff>Inner break</font><b>"}
addUserKnob {7 inner l fill R -1 1}
addUserKnob {7 fill_size l size R -100 100}
addUserKnob {7 seed_4 l seed}
addUserKnob {26 ""}
addUserKnob {26 text_6_1_1 l "<b><font color=#ffffff>Edge break</font><b>"}
addUserKnob {7 outter_break l "outter break"}
outter_break 1
addUserKnob {14 size R 0 100}
size 100
addUserKnob {7 inner_break l "inner break"}
inner_break 1
addUserKnob {14 size2 l size R 0 100}
size2 100
addUserKnob {7 inner_erode l "inner erode" R 0 200}
addUserKnob {20 About}
addUserKnob {26 text_1 l "" +STARTLINE T "   "}
addUserKnob {26 text_2 l "" +STARTLINE T "   "}
addUserKnob {26 text_4 l "" +STARTLINE T "<font color=#ffffff><font size=\"6\">aeBrokenShapes</font><font size=\"4\"> v1.0</font>\n"}
addUserKnob {26 about_1_1 l "" +STARTLINE T "by Aitor Echeveste Izquierdo  © 2020"}
addUserKnob {26 text_1_1 l "" +STARTLINE T "   "}
addUserKnob {26 ""}
addUserKnob {26 text_3 l "" +STARTLINE T "   "}
addUserKnob {26 website l "" +STARTLINE T "<b><a href=\"http://www.aitorecheveste.com\"><span style=\"color:#C8C8C8;\">www.aitorecheveste.com</span></a><b>"}
}
Input {
inputs 0
name mask
xpos -1109
ypos 1725
number 1
}
Invert {
name Invert5
xpos -1109
ypos 1751
}
Dot {
name Dot18
note_font_size 41
xpos -1075
ypos 1801
}
set N37460100 [stack 0]
Dot {
name Dot27
xpos -1075
ypos 2951
}
Input {
inputs 0
name img
xpos -149
ypos -208
}
set N3743b200 [stack 0]
NoOp {
name format
xpos -149
ypos -182
addUserKnob {20 User}
addUserKnob {12 iformat}
iformat {{input.width} {input.height}}
}
Dot {
name Dot13
note_font_size 41
xpos -115
ypos -125
}
set N3743a400 [stack 0]
Dot {
name Dot15
note_font_size 41
xpos 145
ypos -125
}
Dot {
name Dot20
xpos 145
ypos 2443
}
set N37439600 [stack 0]
Dot {
name Dot21
note_font_size 41
xpos 397
ypos 2443
}
Dot {
name Dot24
note_font_size 41
xpos 397
ypos 2951
}
set N37438800 [stack 0]
push $N3743a400
Dot {
name Dot22
xpos -115
ypos -50
}
set N37438100 [stack 0]
Dot {
name Dot23
xpos 29
ypos -50
}
Input {
inputs 0
name matte
xpos -321
ypos -19
number 2
}
Reformat {
type "to box"
box_width {{parent.format.iformat.x}}
box_height {{parent.format.iformat.y}}
box_fixed true
name Reformat1
xpos -321
ypos 7
}
Dot {
name Dot26
xpos -287
ypos 53
}
push $N37438100
Switch {
inputs 2
which 1
name Switch1
xpos -149
ypos 49
disable {{"!\[exists parent.input2]"}}
}
Dot {
name Dot10
xpos -115
ypos 265
}
set N37421600 [stack 0]
Switch {
inputs 2
which {{keep<2?1:0}}
name Switch2
xpos -5
ypos 261
}
Dot {
name Dot5
xpos 39
ypos 2450
}
push $N37460100
push $N3743b200
Remove {
name Remove1
xpos -796
ypos 261
hide_input true
}
set N37420100 [stack 0]
Expression {
expr0 (x+0.5)/width
expr1 (y+0.5)/height
name Expression2
xpos -831
ypos 1797
hide_input true
}
push $N37421600
Blur {
channels alpha
size {{"newrandom==0?parent.trans:lerp(0,100,random(newrandom+1))\n"}}
name Blur3
label "\[value size]"
xpos -149
ypos 499
}
Dot {
name Dot3
note_font_size 41
xpos -115
ypos 953
}
set N37402b00 [stack 0]
Dot {
name Dot33
xpos -115
ypos 1303
}
set N37402400 [stack 0]
FilterErode {
channels alpha
size -150
name FilterErode11
xpos -592
ypos 1293
}
Blur {
channels alpha
size 50
name Blur43
xpos -592
ypos 1329
}
Invert {
channels alpha
name Invert9
xpos -592
ypos 1369
}
Dot {
name Dot34
xpos -558
ypos 1517
}
push $N37420100
Expression {
expr0 (x+0.5)/width
expr1 (y+0.5)/height
name Expression42
xpos -1051
ypos 1509
hide_input true
}
push $N37420100
Noise {
size 1
zoffset {{seed+seed_3+3}}
gamma 0.25
rotate {{parent.cross_rotate}}
scale {{parent.outter*(1+cross_size)} {outter/lerp(1,10,linner)*(1+cross_size)}}
center {1024 659}
name Noise1
xpos -1051
ypos 1270
hide_input true
}
push $N37420100
Noise {
size 1
zoffset {{newrandom==0?seed+seed_4+4:random(newrandom+121)}}
gamma 0.25
rotate {{outter_rotate*(newrandom==0?1:random(newrandom+341))}}
scale {{newrandom==0?outter:lerp(0,300,random(newrandom+2))} {newrandom==0?outter/lerp(1,10,linner):lerp(0,300,random(newrandom+31))}}
center {1024 659}
name Noise2
xpos -666
ypos 902
hide_input true
}
Grade {
channels alpha
add 1
name Grade2
xpos -666
ypos 928
}
push $N37402b00
FilterErode {
size {{parent.fill_size}}
name FilterErode3
xpos -455
ypos 944
}
Blur {
channels alpha
size 100
name Blur1
xpos -455
ypos 984
}
Merge2 {
inputs 2
operation multiply
Achannels alpha
Bchannels alpha
output alpha
name Merge2
xpos -666
ypos 984
}
Dot {
name Dot2
note_font_size 41
xpos -632
ypos 1038
}
set N3739b200 [stack 0]
Dot {
name Dot8
xpos -632
ypos 1136
}
push $N37421600
Dot {
name Dot11
xpos -495
ypos 265
}
FilterErode {
channels alpha
size {{newrandom==0?parent.inner_erode:lerp(-100,100,random(newrandom+1))}}
name FilterErode2
xpos -529
ypos 328
}
Blur {
channels alpha
size 100
name Blur24
xpos -529
ypos 372
}
NoOp {
name ealpha
xpos -612
ypos 378
addUserKnob {20 User}
addUserKnob {6 ealpha l alpha +STARTLINE}
ealpha {{"\[string first \".a\" \[channels \[input this 0]]]>-1?0:1"}}
}
Shuffle {
alpha white
name Shuffle1
xpos -696
ypos 378
disable {{ealpha.ealpha==1?0:1 x9 1}}
}
push $N37420100
Noise {
size 1
zoffset {{newrandom==0?seed+seed_2:random(newrandom+4)}}
rotate {{newrandom==0?outter_rotate:random(newrandom+10)}}
scale {{newrandom==0?size2:lerp(0,100,random(newrandom+10))}}
center {1024 659}
name Noise4
xpos -877
ypos 318
hide_input true
}
Dot {
name Dot19
xpos -843
ypos 382
}
push $N37420100
Noise {
size 1
zoffset {{newrandom==0?seed+seed_2:random(newrandom+41)}}
gamma 0.25
rotate {{outter_rotate*(newrandom==0?1:random(newrandom))}}
scale {{newrandom==0?outter:lerp(5,300,random(newrandom+42))} {newrandom==0?outter/lerp(1,10,linner):lerp(5,200,random(newrandom+43))}}
center {1024 659}
name Noise5
xpos -793
ypos 317
hide_input true
}
Merge2 {
inputs 2+1
operation copy
Achannels alpha
Bchannels alpha
output alpha
mix {{inner_break}}
name Merge1
xpos -793
ypos 372
}
Dot {
name Dot35
xpos -759
ypos 414
}
push $N37420100
Expression {
expr0 (x+0.5)/width
expr1 (y+0.5)/height
name Expression43
xpos -941
ypos 346
hide_input true
}
Grade {
inputs 1+1
multiply {{outterbottom*1.25}}
add {{outterbottom<1?outterbottom:1}}
name Grade3
xpos -941
ypos 410
}
set N36d3b200 [stack 0]
Dot {
name Dot7
xpos -1197
ypos 414
}
Dot {
name Dot9
xpos -1197
ypos 1136
}
push $N3739b200
push $N37420100
Expression {
expr0 (x+0.5)/width
expr1 (y+0.5)/height
name Expression1
xpos -1051
ypos 1034
hide_input true
}
push $N37420100
Noise {
size 1
gain 0.6
rotate {{outter_rotate*(newrandom==0?1:random(newrandom+11))}}
scale {{newrandom==0?parent.size:lerp(0,300,random(newrandom+3))}}
center {1024 659}
name Noise3
xpos -848
ypos 567
hide_input true
}
Dot {
name Dot16
xpos -814
ypos 610
}
push $N37420100
Noise {
size 1
zoffset {{newrandom==0?seed+seed_2+2:random(newrandom+43) x40 2.11}}
gamma 0.25
rotate {{outter_rotate*(newrandom==0?1:random(newrandom+41))}}
scale {{outter} {newrandom==0?outter/lerp(1,10,linner):lerp(0,300,random(newrandom+44))}}
center {1024 659}
name Noise41
xpos -771
ypos 523
hide_input true
}
set N36d1c800 [stack 0]
Merge2 {
inputs 2
operation copy
mix {{outter_break}}
name Merge4
xpos -771
ypos 606
}
Invert {
name Invert10
xpos -771
ypos 632
}
Dot {
name Dot14
xpos -737
ypos 681
}
push $N36d3b200
push $N36d1c800
push $N37420100
Expression {
expr0 (x+0.5)/width
expr1 (y+0.5)/height
name Expression44
xpos -1077
ypos 497
hide_input true
}
Grade {
inputs 1+1
add {{-(parent.outtertop<1?outtertop:1)}}
name Grade6
xpos -1077
ypos 523
}
Dot {
name Dot12
xpos -1043
ypos 681
}
Keymix {
inputs 3
channels rgb
mix 0.5
name Keymix20
xpos -941
ypos 677
}
Keymix {
inputs 3
channels rgb
mix {{parent.inner}}
name Keymix4
xpos -941
ypos 1034
}
Keymix {
inputs 3
channels rgb
mix {{-parent.inner}}
name Keymix1
xpos -941
ypos 1132
}
TransformMasked {
inputs 1+1
scale {{newrandom==0?parent.cross_scale+1:lerp(0,20,random(newrandom+77))}}
center {1024 659}
name Transform4
xpos -941
ypos 1264
}
Keymix {
inputs 3
channels rgb
mix {{1-outexpand}}
name Keymix5
xpos -941
ypos 1509
}
Blur {
channels rgb
size {{simplify}}
name Blur46
xpos -941
ypos 1660
}
Keymix {
inputs 3
name Keymix3
xpos -941
ypos 1791
}
push $N37420100
Expression {
expr0 (x+0.5)/width
expr1 (y+0.5)/height
name Expression41
xpos -831
ypos 1928
hide_input true
}
Dissolve {
inputs 2
channels rgb
which {{distort}}
name Dissolve2
xpos -941
ypos 1928
}
Dot {
name Dot36
xpos -907
ypos 2005
}
push $N37402400
STMap {
inputs 2
channels alpha
uv rgb
name STMap14
xpos -149
ypos 1995
}
Dot {
name Dot6
xpos -115
ypos 2092
}
set N36cc0800 [stack 0]
Dot {
name Dot1
note_font_size 41
xpos -237
ypos 2092
}
Invert {
channels alpha
name Invert1
xpos -271
ypos 2139
}
Blur {
channels alpha
size 300
name Blur2
xpos -271
ypos 2177
}
Invert {
channels alpha
name Invert2
xpos -271
ypos 2219
}
Grade {
channels alpha
blackpoint {{lerp(0,0.01,feather)}}
white 1.5
name Grade5
xpos -271
ypos 2257
}
Blur {
size 100
name Blur5
xpos -271
ypos 2297
}
Dot {
name Dot4
xpos -237
ypos 2382
}
push $N36cc0800
Merge2 {
inputs 2
operation mask
name Merge3
xpos -149
ypos 2379
disable {{!feather}}
}
Merge2 {
inputs 2
operation mask
name Merge6
xpos -149
ypos 2446
disable {{keep==0?1:0 x9 1}}
}
Blur {
channels alpha
size {{parent.blur}}
name Blur47
label "\[value size]"
xpos -149
ypos 2511
}
Crop {
box {{curve} {curve} {input.width} {input.height}}
name Crop6
xpos -149
ypos 2565
}
Grade {
channels alpha
gamma {{gamma2+0.001}}
name Grade1
xpos -149
ypos 2591
}
Invert {
channels alpha
name Invert3
xpos -149
ypos 2676
disable {{!invertshape x10 1}}
}
set N36a3c800 [stack 0]
Dot {
name Dot17
note_font_size 41
xpos -115
ypos 2831
}
push $N36a3c800
push $N37439600
ChannelMerge {
inputs 2
operation multiply
name ChannelMerge1
xpos 111
ypos 2670
disable {{!invertshape*keep>0?1:0 x1 1 x10 1}}
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
unpremult -rgba.alpha
name Copy2
xpos 111
ypos 2821
disable {{invertshape*keep>0?1:0}}
}
Premult {
name Premult1
xpos 111
ypos 2861
}
Keymix {
inputs 3
name Keymix2
xpos 111
ypos 2941
}
push $N37438800
Dot {
name Dot25
note_font_size 41
xpos 397
ypos 3040
}
Dissolve {
inputs 2
which {{parent.mix x1 1}}
name Dissolve1
xpos 111
ypos 3030
}
Output {
name Output1
xpos 111
ypos 3229
}
Viewer {
inputs 0
frame_range 1-100
name Viewer1
xpos -569
ypos 587
}
end_group
StickyNote {
inputs 0
name StickyNote42
label "Break at far end"
note_font_size 30
xpos 4459
ypos 6232
}
push $N39ef9d00
Dot {
name Dot461
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 4898
ypos 2317
}
ModifyMetaData {
metadata {
 {set gbk/scriptname "\[value root.name]"}
 {set exr/task_id "\[getenv FTRACK_TASKID]"}
 {remove exr/chunkCount ""}
 {remove exr/compressionName ""}
}
name ModifyMetaData39
xpos 4864
ypos 2363
}
Write {
channels rgba
file /coppi/proj/thrg/shottree/s01e01/015-0300/output2d/comp/comp_precomp/thrg_s01e01_015-0300_comp_precomp_WhiteCapsBase_lin_ap0_v001/thrg_s01e01_015-0300_comp_precomp_WhiteCapsBase_lin_ap0_v001.%04d.exr
colorspace "ACES - ACES2065-1"
file_type exr
metadata "all metadata"
first_part rgba
render_order 100
in_colorspace scene_linear
out_colorspace scene_linear
beforeRender "from nuketools import beforerenderfunctions;beforerenderfunctions.beforeRender()"
name WritePreComp8
note_font "Bitstream Vera Sans Bold"
xpos 4864
ypos 2419
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
addUserKnob {20 fwrite l "GBK Write"}
addUserKnob {1 ffile l File}
ffile /coppi/proj/thrg/shottree/s01e01/015-0300/output2d/comp/comp_precomp/thrg_s01e01_015-0300_comp_precomp_WhiteCapsBase_lin_ap0_v001/thrg_s01e01_015-0300_comp_precomp_WhiteCapsBase_lin_ap0_v001.%04d.exr
addUserKnob {1 fproxy l Proxy}
addUserKnob {6 fproxycheck l "Set Proxy Path" +STARTLINE}
addUserKnob {26 divider l "" +STARTLINE}
addUserKnob {4 task l Task M {comp alwy am came char conc cont cran edit fire flar glas inge ocea pm prod sbv scre skye util source}}
addUserKnob {1 fassetname l "Asset Name Preview:" +DISABLED}
fassetname comp_precomp
addUserKnob {1 fassetbasename l "Asset Name:"}
fassetbasename comp
addUserKnob {1 fecompname l "Component Name:"}
fecompname WhiteCapsBase
addUserKnob {1 flatestversion l "Latest published version:" +DISABLED}
flatestversion 0
addUserKnob {22 getlatest l Refresh -STARTLINE T "from nuketools import writetab \nwritetab.getLatestPubVersion() \n"}
addUserKnob {6 precomp l Precomp +STARTLINE}
precomp true
addUserKnob {6 denoised l Denoised(dn) +STARTLINE}
addUserKnob {6 delensed l Delensed(dl) +STARTLINE}
addUserKnob {6 neutralgrade l Neutralgrade(ng) +STARTLINE}
addUserKnob {6 matte l Matte +STARTLINE}
addUserKnob {6 no_frame_number l "No Frame Numbering" +STARTLINE}
addUserKnob {3 fversion l Version}
fversion 1
addUserKnob {4 format l Format M {exr dpx png tif jpg tga mov}}
addUserKnob {4 channel l Channel M {rgb rgba all}}
channel rgba
addUserKnob {4 fcompression l Compression M {none "Zip (1 scanline)" "Zip (16 scanlines)" "PIZ Wavelet (32 scanlines)" RLE B44 B44A DWAA DWAB}}
fcompression "Zip (1 scanline)"
addUserKnob {1 fview l View}
addUserKnob {26 saveSettingsMsg l "" -STARTLINE T "  "}
addUserKnob {3 frenderorder l "Render order"}
frenderorder 100
addUserKnob {22 frender l Render -STARTLINE T "from nuketools import writetab \nwritetab.render() \n"}
addUserKnob {3 fframeranges l "Frame range" +DISABLED}
fframeranges 1
addUserKnob {3 fframerangee l "" -STARTLINE +DISABLED}
fframerangee 1
addUserKnob {6 flimitrange l "Limit to range" -STARTLINE}
addUserKnob {22 rfromw l "Read from Write" -STARTLINE T "from nuketools import readfromwrite \nreadfromwrite.readFromWrite()"}
addUserKnob {22 rendcurr l "Render current frame" -STARTLINE T "from nuketools import writetab \nwritetab.renderCurrentFrame()"}
addUserKnob {6 fcopyscript l "Don't Copy Nuke Script" +STARTLINE}
addUserKnob {6 fwriteinit l "Is everything added" -STARTLINE +HIDDEN}
fwriteinit true
}
nuke_dispatch {
name nuke_dispatch_WhiteCapsBase
xpos 4864
ypos 2525
jobtitle comp_precomp
framestart {{"\[getenv FS]"}}
frameend {{"\[getenv FE]"}}
customframes ""
maxtime 3:00:00
StartAfterTime ""
ThreadCount 16
ServiceKeyExpr ""
removelicense true
depthindex 1
}
Group {
name PrecompDispatch4
tile_color 0xff0000ff
label "\[if \{\[value disable]==true\}  \{return OFF\}  \{return ON\}]"
note_font "Bitstream Vera Sans"
note_font_size 21
xpos 4864
ypos 2565
disable true
postage_stamp true
addUserKnob {20 User l PrecompDispatch}
addUserKnob {41 file l File T ReadPreComp.file}
addUserKnob {41 localizationPolicy l "Localization Policy" T ReadPreComp.localizationPolicy}
addUserKnob {41 updateLocalization l Update T ReadPreComp.updateLocalization}
addUserKnob {41 localizationPriority l "localization priority" T ReadPreComp.localizationPriority}
addUserKnob {41 format l Format T ReadPreComp.format}
addUserKnob {41 proxy l Proxy T ReadPreComp.proxy}
addUserKnob {41 proxy_format l "Proxy Format" T ReadPreComp.proxy_format}
addUserKnob {41 first l "Frame Range" T ReadPreComp.first}
addUserKnob {41 before l "" -STARTLINE T ReadPreComp.before}
addUserKnob {41 last l "" -STARTLINE T ReadPreComp.last}
addUserKnob {41 after l "" -STARTLINE T ReadPreComp.after}
addUserKnob {41 frame_mode l Frame T ReadPreComp.frame_mode}
addUserKnob {41 frame l "" -STARTLINE T ReadPreComp.frame}
addUserKnob {41 origfirst l "Original Range" T ReadPreComp.origfirst}
addUserKnob {41 origlast l "" -STARTLINE T ReadPreComp.origlast}
addUserKnob {41 origset l "Original Range Set" T ReadPreComp.origset}
addUserKnob {41 on_error l "Missing Frames" T ReadPreComp.on_error}
addUserKnob {41 reload T ReadPreComp.reload}
addUserKnob {41 colorspace l Colorspace T ReadPreComp.colorspace}
addUserKnob {41 premultiplied l Premultiplied T ReadPreComp.premultiplied}
addUserKnob {41 raw l "Raw Data" T ReadPreComp.raw}
addUserKnob {41 auto_alpha l "Auto Alpha" T ReadPreComp.auto_alpha}
addUserKnob {26 "" l "<b>EXR Options</b>"}
addUserKnob {41 offset_negative_display_window l "offset negative display window" T ReadPreComp.offset_negative_display_window}
addUserKnob {41 noprefix l "do not attach prefix" T ReadPreComp.noprefix}
addUserKnob {41 edge_pixels l "edge pixels" T ReadPreComp.edge_pixels}
addUserKnob {20 info}
addUserKnob {26 txt_1 l notes T "Connect to a 'nuke_dispatch' node. \na) rename 'component name' on write node\nb) rename the 'nuke_dispatch'  name adding a number on the end. \n(this set the render order, so you can manually set the order with F7)\nc) Enable node when rendering.\nd) click F7 and set render order dependency before render\nreorder the dispatchNode list. Top is reendered first\ne) after rendering refresh  the precompDispatch nodes and disable it. (use python script)\n* The frame range is set from the dispatch node.\n* Place the precomp before expensive nodes for efficiency."}
addUserKnob {26 ""}
addUserKnob {26 txt l ver: T "0.1 2020.12.21 RafKan"}
addUserKnob {6 UID_precompDispatch l "" +STARTLINE +INVISIBLE +STARTLINE}
}
Input {
inputs 0
name Input1
xpos -477
ypos -239
}
Read {
inputs 0
file_type exr
file "\[value this.parent.input.input.file]"
localizationPolicy off
format "4448 3096 0 0 4448 3096 1 Output Resolution"
first {{"\[value this.parent.input.framestart]" x1031 1001}}
last {{"\[value this.parent.input.frameend]" x1031 1237}}
origfirst {{"\[value this.parent.input.framestart]" x1001 1001 x1194 1001}}
origlast {{"\[value this.parent.input.frameend]" x1001 1040 x1194 1237}}
origset true
version 2
colorspace gbk_plate
auto_alpha true
in_colorspace scene_linear
out_colorspace scene_linear
name ReadPreComp
note_font_color 0xf368e4ff
xpos -477
ypos -164
disable {{"!\[exists parent.input]"}}
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
}
Output {
name Output1
xpos -477
ypos -5
}
end_group
Dot {
name Dot462
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 4898
ypos 2695
}
Group {
inputs 0
name VectorFrameBlend12
help "FrameBlend the input with awareness of the motion"
knobChanged "\n\nn = nuke.thisNode()\n\nif nuke.thisKnob().name() == \"vectors\":\n    n.knobs()\['vectorDetail'].setEnabled(False)\n    n.knobs()\['strength'].setEnabled(False)\n    n.knobs()\['mvpass'].setEnabled(False)\n    n.knobs()\['mvmultiplicator'].setEnabled(False)\n    \n    if n\['vectors'].getValue() == 0: #generate\n        n.knobs()\['vectorDetail'].setEnabled(True)\n        n.knobs()\['strength'].setEnabled(True)\n    elif n\['vectors'].getValue() == 1: #MV pass\n        n.knobs()\['mvpass'].setEnabled(True)\n        n.knobs()\['mvmultiplicator'].setEnabled(True)\n"
tile_color 0xffffffff
label "\[value vectors] (\[value this.radius])\n"
xpos 4711
ypos 7920
disable true
addUserKnob {20 User}
addUserKnob {41 "Local GPU: " T BlinkScript_Median.gpuName}
addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T BlinkScript_Median.useGPUIfAvailable}
addUserKnob {41 vectorize l "Vectorize on CPU" -STARTLINE T BlinkScript_Median.vectorize}
addUserKnob {26 ""}
addUserKnob {4 radius l "Temporal Radius" t "Example: Radius 2 will average 5 frames (+2 and -2)" M {1 2 ""}}
addUserKnob {26 divider1 l "" -STARTLINE T "    "}
addUserKnob {4 operation l Operation -STARTLINE M {average median ""}}
operation median
addUserKnob {26 ""}
addUserKnob {4 vectors l Vectors t "Generate: \nCreate vectors using the VectorGenerator node\n\nMotion Vector Pass: \nuses a CG motion pass (must be like default Nuke Scanline Render MV pass with pivot at 0)\n\nExternal: \nPlug another VectorFrameBlend into the vec input and use its already existing vectors" M {Generate "Motion Vector Pass" External "" "" "" ""}}
addUserKnob {26 ""}
addUserKnob {7 vectorDetail l "Vector Detail" t "Use this to adjust the density of the calculated motion vector field. Higher details capture finer movements, but take will longer to calculate." R 0.01 1}
vectorDetail 1
addUserKnob {7 strength l Strength t "Match Strength : Stonger values will match larger differences between the two plates." R 0 1.5}
strength 1
addUserKnob {26 ""}
addUserKnob {41 mvpass l "MotionVector Pass" -STARTLINE +DISABLED T Shuffle_MVPass.in}
addUserKnob {7 mvmultiplicator l "Motion Vector Multiplicator" +DISABLED R -10 10}
mvmultiplicator 1
}
Input {
inputs 0
name mask
xpos 54
ypos -822
number 2
}
Shuffle {
red black
green black
blue black
alpha white
name Shuffle5
xpos 54
ypos 2854
disable {{"\[exists input2]"}}
}
Input {
inputs 0
name vec
xpos 767
ypos -820
number 1
}
Shuffle {
red black
green black
blue black
alpha black
out vec1
out2 vec2
name Shuffle_SetVec
xpos 767
ypos -761
disable {{"\[exists input1]"}}
}
Dot {
name Dot38
xpos 801
ypos -674
}
Dot {
name Dot39
xpos 1660
ypos -674
}
set N369a1600 [stack 0]
Dot {
name Dot41
xpos 2669
ypos -674
}
set N369a0f00 [stack 0]
Dot {
name Dot43
xpos 3646
ypos -674
}
set N369a0800 [stack 0]
Dot {
name Dot45
xpos 4627
ypos -674
}
Dot {
name Dot50
xpos 4627
ypos 882
}
Shuffle {
in vec2
out backward
name Shuffle_Vec4
xpos 4437
ypos 878
}
Input {
inputs 0
name Input
xpos 540
ypos -823
}
Dot {
name Dot2
xpos 574
ypos -462
}
set N36982400 [stack 0]
Dot {
name Dot26
xpos 784
ypos -462
}
set N36981d00 [stack 0]
Dot {
name Dot3
xpos 1337
ypos -462
}
set N36981600 [stack 0]
Dot {
name Dot4
xpos 2334
ypos -462
}
set N36980f00 [stack 0]
Dot {
name Dot5
xpos 3311
ypos -462
}
set N36980800 [stack 0]
Dot {
name Dot6
xpos 4290
ypos -462
}
TimeOffset {
time_offset -2
time ""
name TimeOffset6
label -2
xpos 4256
ypos -300
}
set N3695f900 [stack 0]
Dot {
name Dot33
xpos 4485
ypos -290
}
Shuffle {
in none
out backward
name Shuffle_MVPass
xpos 4451
ypos -212
}
set C3695eb00 [stack 0]
Multiply {
channels backward
value {{2*mvmultiplicator}}
name Multiply4
xpos 4451
ypos 611
}
Dot {
name Dot51
xpos 4485
ypos 776
}
push $N36981d00
NoTimeBlur {
rounding floor
single false
name NoTimeBlur1
xpos 750
ypos -247
}
Retime {
input.first 1001
input.first_lock true
input.last 1218
output.first 1001
output.last 1436
speed 0.5
before continue
after continue
filter none
time ""
name Retime1
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 750
ypos -201
}
set N3695c800 [stack 0]
push $N3695f900
NoTimeBlur {
rounding floor
single false
name NoTimeBlur5
xpos 4256
ypos -213
}
Retime {
input.first 1001
input.first_lock true
output.first 1001
output.last 1002
speed 0.5
before continue
after continue
filter none
time ""
name Retime6
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 4256
ypos -172
}
Switch {
inputs 2
which {{(frame-1001)%2}}
name Switch1
xpos 4256
ypos 58
}
set C36b3b200 [stack 0]
VectorGenerator {
useGPUIfAvailable {{VectorFrameBlend12.BlinkScript_Median.useGPUIfAvailable}}
motionEstimation Regularized
vectorDetailReg {{parent.vectorDetail}}
strengthReg {{parent.strength}}
name VectorGenerator1
xpos 4256
ypos 336
}
set C36b3ab00 [stack 0]
Dot {
name Dot10
tile_color 0xcccccc00
xpos 4290
ypos 476
}
set N36b3a400 [stack 0]
Shuffle {
in backward
blue black
alpha black
name Shuffle4
label "in \[value in]-->out \[value out]"
xpos 4092
ypos 466
}
TimeOffset {
time_offset -1
time ""
name TimeOffset8
label "\[value time_offset]"
xpos 4092
ypos 552
}
push $N36b3a400
Copy {
inputs 2
from0 backward.u
to0 backward.u
from1 backward.v
to1 backward.v
bbox B
name Copy4
xpos 4256
ypos 545
}
Retime {
input.first 1001
input.first_lock true
input.last 1436
output.first 1001
output.last 1218
speed 2
before continue
after continue
filter none
time ""
name Retime9
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 4256
ypos 648
}
Switch {
inputs 3
which {{vectors}}
name Switch_UseExternal
xpos 4258
ypos 878
}
set C36b38100 [stack 0]
Dot {
name Dot52
xpos 4292
ypos 1009
}
push $N3695f900
Dot {
name Dot53
xpos 4053
ypos -290
}
Copy {
inputs 2
channels backward
name Copy11
xpos 4019
ypos 992
}
IDistort {
uv backward
name IDistort4
xpos 4019
ypos 1194
}
Dot {
name Dot24
xpos 4053
ypos 2003
}
set N36b01d00 [stack 0]
Dot {
name Dot35
xpos 4053
ypos 2510
}
push $N369a0800
Dot {
name Dot42
xpos 3646
ypos 932
}
Shuffle {
in vec2
red blue
green alpha
out backward
name Shuffle_Vec3
xpos 3456
ypos 928
}
push $N36980800
TimeOffset {
time_offset 2
time ""
name TimeOffset5
label +2
xpos 3277
ypos -300
}
set N36b00100 [stack 0]
Dot {
name Dot31
xpos 3493
ypos -290
}
clone $C3695eb00 {
xpos 3459
ypos -212
selected false
}
Multiply {
channels backward
value {{-2*mvmultiplicator}}
name Multiply3
xpos 3459
ypos 591
}
Dot {
name Dot44
xpos 3493
ypos 814
}
push $N3695c800
push $N36b00100
NoTimeBlur {
rounding floor
single false
name NoTimeBlur4
xpos 3277
ypos -213
}
Retime {
input.first 1001
input.first_lock true
output.first 1001
output.last 1002
speed 0.5
before continue
after continue
filter none
time ""
name Retime5
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 3277
ypos -172
}
clone $C36b3b200 {
inputs 2
xpos 3277
ypos 58
selected false
}
clone $C36b3ab00 {
xpos 3277
ypos 329
selected false
}
Dot {
name Dot8
tile_color 0xcccccc00
xpos 3311
ypos 465
}
set N36aa7900 [stack 0]
Shuffle {
in backward
blue black
alpha black
name Shuffle3
label "in \[value in]-->out \[value out]"
xpos 3113
ypos 455
}
TimeOffset {
time_offset -1
time ""
name TimeOffset7
label "\[value time_offset]"
xpos 3113
ypos 541
}
push $N36aa7900
Copy {
inputs 2
from0 backward.u
to0 backward.u
from1 backward.v
to1 backward.v
bbox B
name Copy3
xpos 3277
ypos 534
}
Retime {
input.first 1001
input.first_lock true
input.last 1436
output.first 1001
output.last 1218
speed 2
before continue
after continue
filter none
time ""
name Retime8
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 3277
ypos 637
}
clone $C36b38100 {
inputs 3
xpos 3277
ypos 928
selected false
}
Dot {
name Dot48
xpos 3311
ypos 1028
}
push $N36b00100
Dot {
name Dot49
xpos 3072
ypos -290
}
Copy {
inputs 2
channels backward
name Copy10
xpos 3038
ypos 1011
}
IDistort {
uv backward
name IDistort3
xpos 3038
ypos 1177
}
Dot {
name Dot22
xpos 3072
ypos 1770
}
set N36a83200 [stack 0]
ShuffleCopy {
inputs 2
in backward
in2 backward
red red
green green
blue red2
alpha green2
out vec2
name ShuffleCopy1
xpos 3038
ypos 2506
}
push $N369a0f00
Dot {
name Dot30
xpos 2669
ypos 892
}
Shuffle {
in vec1
out backward
name Shuffle_Vec2
xpos 2479
ypos 888
}
push $N36980f00
TimeOffset {
time_offset -1
time ""
name TimeOffset4
label -1
xpos 2300
ypos -313
}
set N36a81600 [stack 0]
Dot {
name Dot29
xpos 2537
ypos -303
}
clone $C3695eb00 {
xpos 2503
ypos -225
selected false
}
Multiply {
channels backward
value {{mvmultiplicator}}
name Multiply2
xpos 2503
ypos 584
}
Dot {
name Dot32
xpos 2537
ypos 760
}
push $N3695c800
push $N36a81600
NoTimeBlur {
rounding floor
single false
name NoTimeBlur3
xpos 2300
ypos -227
}
Retime {
input.first 1001
input.first_lock true
output.first 1001
output.last 1002
speed 0.5
before continue
after continue
filter none
time ""
name Retime4
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 2300
ypos -186
}
clone $C36b3b200 {
inputs 2
xpos 2300
ypos 44
selected false
}
clone $C36b3ab00 {
xpos 2300
ypos 333
selected false
}
Dot {
name Dot7
tile_color 0xcccccc00
xpos 2334
ypos 449
}
set N36c50f00 [stack 0]
Shuffle {
in backward
blue black
alpha black
name Shuffle6
label "in \[value in]-->out \[value out]"
xpos 2136
ypos 439
}
TimeOffset {
time_offset -1
time ""
name TimeOffset1
label "\[value time_offset]"
xpos 2136
ypos 525
}
push $N36c50f00
Copy {
inputs 2
from0 backward.u
to0 backward.u
from1 backward.v
to1 backward.v
bbox B
name Copy1
xpos 2300
ypos 518
}
Retime {
input.first 1001
input.first_lock true
input.last 1436
output.first 1001
output.last 1218
speed 2
before continue
after continue
filter none
time ""
name Retime7
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 2300
ypos 621
}
clone $C36b38100 {
inputs 3
xpos 2300
ypos 888
selected false
}
Dot {
name Dot34
xpos 2334
ypos 1042
}
push $N36a81600
Dot {
name Dot40
xpos 2095
ypos -303
}
Copy {
inputs 2
channels backward
name Copy9
xpos 2061
ypos 1025
}
IDistort {
uv backward
name IDistort2
xpos 2061
ypos 1177
}
Dot {
name Dot12
xpos 2095
ypos 1498
}
set N36c1c800 [stack 0]
Dot {
name Dot36
xpos 2095
ypos 2403
}
push $N369a1600
Dot {
name Dot37
xpos 1660
ypos 900
}
Shuffle {
in vec1
red blue
green alpha
out backward
name Shuffle_Vec1
xpos 1487
ypos 896
}
push $N36981600
TimeOffset {
time_offset 1
time ""
name TimeOffset3
label +1
xpos 1303
ypos -322
}
set N36bf2b00 [stack 0]
Dot {
name Dot28
xpos 1512
ypos -312
}
clone $C3695eb00 {
xpos 1478
ypos -224
selected false
}
Multiply {
channels backward
value {{-mvmultiplicator}}
name Multiply1
xpos 1478
ypos 587
}
Dot {
name Dot27
xpos 1512
ypos 749
}
push $N3695c800
push $N36bf2b00
NoTimeBlur {
rounding floor
single false
name NoTimeBlur2
xpos 1303
ypos -232
}
Retime {
input.first 1001
input.first_lock true
output.first 1001
output.last 1002
speed 0.5
before continue
after continue
filter none
time ""
name Retime2
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 1303
ypos -192
}
clone $C36b3b200 {
inputs 2
xpos 1303
ypos 44
selected false
}
Dot {
name Dot9
tile_color 0xcccccc00
xpos 1337
ypos 133
}
clone $C36b3ab00 {
xpos 1303
ypos 330
selected false
}
Dot {
name Dot1
tile_color 0xcccccc00
xpos 1337
ypos 416
}
set N36bc5d00 [stack 0]
Shuffle {
in backward
blue black
alpha black
name Shuffle8
label "in \[value in]-->out \[value out]"
xpos 1139
ypos 406
}
TimeOffset {
time_offset -1
time ""
name TimeOffset2
label "\[value time_offset]"
xpos 1139
ypos 492
}
push $N36bc5d00
Copy {
inputs 2
from0 backward.u
to0 backward.u
from1 backward.v
to1 backward.v
bbox B
name Copy2
xpos 1303
ypos 485
}
Retime {
input.first 1001
input.first_lock true
input.last 1436
output.first 1001
output.last 1218
speed 2
before continue
after continue
filter none
time ""
name Retime3
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 1303
ypos 588
}
clone $C36b38100 {
inputs 3
xpos 1303
ypos 896
selected false
}
Dot {
name Dot47
xpos 1337
ypos 1000
}
push $N36bf2b00
Dot {
name Dot46
xpos 1098
ypos -312
}
Copy {
inputs 2
channels backward
name Copy8
xpos 1064
ypos 983
}
IDistort {
uv backward
name IDistort1
xpos 1064
ypos 1160
}
Dot {
name Dot11
tile_color 0xcccccc00
xpos 1098
ypos 1240
}
set N36b95600 [stack 0]
ShuffleCopy {
inputs 2
in backward
in2 backward
red red
green green
blue red2
alpha green2
out vec1
name ShuffleCopy3
xpos 1064
ypos 2399
}
set N36b94f00 [stack 0]
push $N36982400
Dot {
name Dot14
xpos 574
ypos 975
}
set N36b94800 [stack 0]
Dot {
name Dot16
xpos 684
ypos 975
}
set N36b94100 [stack 0]
push $N36b95600
Dot {
name Dot13
xpos 850
ypos 1240
}
set N36b73900 [stack 0]
push $N36c1c800
Dot {
name Dot20
xpos 848
ypos 1498
}
set N36b73200 [stack 0]
push $N36a83200
Dot {
name Dot23
xpos 859
ypos 1770
}
set N36b72b00 [stack 0]
push $N36b01d00
Dot {
name Dot25
xpos 848
ypos 2003
}
set N36b72400 [stack 0]
BlinkScript {
inputs 5
recompileCount 6
ProgramGroup 1
KernelDescription "2 \"MedianKernel\" iterate componentWise 1e7304f930362212e256e53742e266e22e4ba28492c0bc903660683d595e3c9a 6 \"f1\" Read Point \"f2\" Read Point \"f3\" Read Point \"f4\" Read Point \"f5\" Read Point \"dst\" Write Point 0 0 0"
kernelSource "kernel MedianKernel : ImageComputationKernel<eComponentWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> f1;\n  Image<eRead, eAccessPoint, eEdgeClamped> f2;\n  Image<eRead, eAccessPoint, eEdgeClamped> f3;\n  Image<eRead, eAccessPoint, eEdgeClamped> f4;\n  Image<eRead, eAccessPoint, eEdgeClamped> f5;\n  Image<eWrite> dst;\n\n  void process() \{\n    float values\[] = \{f1(),f2(),f3(),f4(),f5()\};\n    dst() = median(values, 5);\n  \}\n\};\n"
useGPUIfAvailable {{parent.BlinkScript_Median.useGPUIfAvailable}}
vectorize {{parent.BlinkScript_Median.vectorize}}
rebuild ""
rebuild_finalise ""
name BlinkScript_Median1
xpos 561
ypos 1993
}
push $N36b72400
push $N36b72b00
push $N36b73200
push 0
push $N36b73900
push $N36b94100
Merge2 {
inputs 5+1
operation average
name Merge1
xpos 650
ypos 2080
}
set C36b70f00 [stack 0]
Switch {
inputs 2
which {{operation}}
name Switch8
xpos 650
ypos 2169
}
set C36b70800 [stack 0]
Copy {
inputs 2
channels vec1
name Copy6
xpos 650
ypos 2386
}
Copy {
inputs 2
channels vec2
name Copy7
xpos 650
ypos 2493
}
Dot {
name Dot17
xpos 684
ypos 2653
}
push $N36b94f00
push $N36b94800
Dot {
name Dot15
xpos 472
ypos 975
}
set N3694ab00 [stack 0]
push $N36b73900
Dot {
name Dot19
xpos 583
ypos 1240
}
set N3694a400 [stack 0]
push $N36b73200
Dot {
name Dot21
xpos 611
ypos 1498
}
set N36949d00 [stack 0]
BlinkScript {
inputs 3
recompileCount 5
ProgramGroup 1
KernelDescription "2 \"MedianKernel\" iterate componentWise 722c32f2d1251222314c5b7dcb61e29044fb0774b72a0fee19adf671edcc2cba 4 \"f1\" Read Point \"f2\" Read Point \"f3\" Read Point \"dst\" Write Point 0 0 0"
kernelSource "kernel MedianKernel : ImageComputationKernel<eComponentWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> f1;\n  Image<eRead, eAccessPoint, eEdgeClamped> f2;\n  Image<eRead, eAccessPoint, eEdgeClamped> f3;\n  Image<eWrite> dst;\n\n  void process() \{\n    float values\[] = \{f1(),f2(),f3()\};\n    dst() = median(values, 3);\n  \}\n\};\n"
rebuild ""
rebuild_finalise ""
name BlinkScript_Median
xpos 309
ypos 1997
}
push $N36949d00
push 0
push $N3694a400
push $N3694ab00
clone $C36b70f00 {
inputs 3+1
xpos 438
ypos 2079
selected false
}
clone $C36b70800 {
inputs 2
xpos 438
ypos 2170
selected false
}
Copy {
inputs 2
channels vec1
name Copy5
xpos 438
ypos 2386
}
Dot {
name Dot18
xpos 472
ypos 2645
}
Switch {
inputs 2
which {{radius}}
name Switch_Radius
xpos 539
ypos 2749
}
push $N36982400
Dot {
name Dot55
xpos 284
ypos -462
}
Dot {
name Dot54
xpos 284
ypos 2780
}
Dissolve {
inputs 2+1
which 1
name Dissolve1
xpos 539
ypos 2848
}
Output {
name Output1
xpos 539
ypos 3106
}
end_group
push $N39794100
Group {
name VectorFrameBlend11
help "FrameBlend the input with awareness of the motion"
knobChanged "\n\nn = nuke.thisNode()\n\nif nuke.thisKnob().name() == \"vectors\":\n    n.knobs()\['vectorDetail'].setEnabled(False)\n    n.knobs()\['strength'].setEnabled(False)\n    n.knobs()\['mvpass'].setEnabled(False)\n    n.knobs()\['mvmultiplicator'].setEnabled(False)\n    \n    if n\['vectors'].getValue() == 0: #generate\n        n.knobs()\['vectorDetail'].setEnabled(True)\n        n.knobs()\['strength'].setEnabled(True)\n    elif n\['vectors'].getValue() == 1: #MV pass\n        n.knobs()\['mvpass'].setEnabled(True)\n        n.knobs()\['mvmultiplicator'].setEnabled(True)\n"
tile_color 0xffffffff
label "\[value vectors] (\[value this.radius])\n"
xpos 4711
ypos 7811
addUserKnob {20 User}
addUserKnob {41 "Local GPU: " T BlinkScript_Median.gpuName}
addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T BlinkScript_Median.useGPUIfAvailable}
addUserKnob {41 vectorize l "Vectorize on CPU" -STARTLINE T BlinkScript_Median.vectorize}
addUserKnob {26 ""}
addUserKnob {4 radius l "Temporal Radius" t "Example: Radius 2 will average 5 frames (+2 and -2)" M {1 2 ""}}
radius 2
addUserKnob {26 divider1 l "" -STARTLINE T "    "}
addUserKnob {4 operation l Operation -STARTLINE M {average median ""}}
operation median
addUserKnob {26 ""}
addUserKnob {4 vectors l Vectors t "Generate: \nCreate vectors using the VectorGenerator node\n\nMotion Vector Pass: \nuses a CG motion pass (must be like default Nuke Scanline Render MV pass with pivot at 0)\n\nExternal: \nPlug another VectorFrameBlend into the vec input and use its already existing vectors" M {Generate "Motion Vector Pass" External "" "" "" ""}}
addUserKnob {26 ""}
addUserKnob {7 vectorDetail l "Vector Detail" t "Use this to adjust the density of the calculated motion vector field. Higher details capture finer movements, but take will longer to calculate." R 0.01 1}
vectorDetail 1
addUserKnob {7 strength l Strength t "Match Strength : Stonger values will match larger differences between the two plates." R 0 1.5}
strength 1
addUserKnob {26 ""}
addUserKnob {41 mvpass l "MotionVector Pass" -STARTLINE +DISABLED T Shuffle_MVPass.in}
addUserKnob {7 mvmultiplicator l "Motion Vector Multiplicator" +DISABLED R -10 10}
mvmultiplicator 1
}
Input {
inputs 0
name mask
xpos 54
ypos -822
number 2
}
Shuffle {
red black
green black
blue black
alpha white
name Shuffle5
xpos 54
ypos 2854
disable {{"\[exists input2]"}}
}
Input {
inputs 0
name vec
xpos 767
ypos -820
number 1
}
Shuffle {
red black
green black
blue black
alpha black
out vec1
out2 vec2
name Shuffle_SetVec
xpos 767
ypos -761
disable {{"\[exists input1]"}}
}
Dot {
name Dot38
xpos 801
ypos -674
}
Dot {
name Dot39
xpos 1660
ypos -674
}
set N368f1d00 [stack 0]
Dot {
name Dot41
xpos 2669
ypos -674
}
set N368f1600 [stack 0]
Dot {
name Dot43
xpos 3646
ypos -674
}
set N368f0f00 [stack 0]
Dot {
name Dot45
xpos 4627
ypos -674
}
Dot {
name Dot50
xpos 4627
ypos 882
}
Shuffle {
in vec2
out backward
name Shuffle_Vec4
xpos 4437
ypos 878
}
Input {
inputs 0
name Input
xpos 540
ypos -823
}
Dot {
name Dot2
xpos 574
ypos -462
}
set N368dab00 [stack 0]
Dot {
name Dot26
xpos 784
ypos -462
}
set N368da400 [stack 0]
Dot {
name Dot3
xpos 1337
ypos -462
}
set N368d9d00 [stack 0]
Dot {
name Dot4
xpos 2334
ypos -462
}
set N368d9600 [stack 0]
Dot {
name Dot5
xpos 3311
ypos -462
}
set N368d8f00 [stack 0]
Dot {
name Dot6
xpos 4290
ypos -462
}
TimeOffset {
time_offset -2
time ""
name TimeOffset6
label -2
xpos 4256
ypos -300
}
set N368d8100 [stack 0]
Dot {
name Dot33
xpos 4485
ypos -290
}
Shuffle {
in none
out backward
name Shuffle_MVPass
xpos 4451
ypos -212
}
set C368bb200 [stack 0]
Multiply {
channels backward
value {{2*mvmultiplicator}}
name Multiply4
xpos 4451
ypos 611
}
Dot {
name Dot51
xpos 4485
ypos 776
}
push $N368da400
NoTimeBlur {
rounding floor
single false
name NoTimeBlur1
xpos 750
ypos -247
}
Retime {
input.first 1001
input.first_lock true
input.last 1218
output.first 1001
output.last 1436
speed 0.5
before continue
after continue
filter none
time ""
name Retime1
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 750
ypos -201
}
set N368b8f00 [stack 0]
push $N368d8100
NoTimeBlur {
rounding floor
single false
name NoTimeBlur5
xpos 4256
ypos -213
}
Retime {
input.first 1001
input.first_lock true
output.first 1001
output.last 1002
speed 0.5
before continue
after continue
filter none
time ""
name Retime6
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 4256
ypos -172
}
Switch {
inputs 2
which {{(frame-1001)%2}}
name Switch1
xpos 4256
ypos 58
}
set C36887900 [stack 0]
VectorGenerator {
useGPUIfAvailable {{VectorFrameBlend11.BlinkScript_Median.useGPUIfAvailable}}
motionEstimation Regularized
vectorDetailReg {{parent.vectorDetail}}
strengthReg {{parent.strength}}
name VectorGenerator1
xpos 4256
ypos 336
}
set C36887200 [stack 0]
Dot {
name Dot10
tile_color 0xcccccc00
xpos 4290
ypos 476
}
set N36886b00 [stack 0]
Shuffle {
in backward
blue black
alpha black
name Shuffle4
label "in \[value in]-->out \[value out]"
xpos 4092
ypos 466
}
TimeOffset {
time_offset -1
time ""
name TimeOffset8
label "\[value time_offset]"
xpos 4092
ypos 552
}
push $N36886b00
Copy {
inputs 2
from0 backward.u
to0 backward.u
from1 backward.v
to1 backward.v
bbox B
name Copy4
xpos 4256
ypos 545
}
Retime {
input.first 1001
input.first_lock true
input.last 1436
output.first 1001
output.last 1218
speed 2
before continue
after continue
filter none
time ""
name Retime9
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 4256
ypos 648
}
Switch {
inputs 3
which {{vectors}}
name Switch_UseExternal
xpos 4258
ypos 878
}
set C36884800 [stack 0]
Dot {
name Dot52
xpos 4292
ypos 1009
}
push $N368d8100
Dot {
name Dot53
xpos 4053
ypos -290
}
Copy {
inputs 2
channels backward
name Copy11
xpos 4019
ypos 992
}
IDistort {
uv backward
name IDistort4
xpos 4019
ypos 1194
}
Dot {
name Dot24
xpos 4053
ypos 2003
}
set N3664e400 [stack 0]
Dot {
name Dot35
xpos 4053
ypos 2510
}
push $N368f0f00
Dot {
name Dot42
xpos 3646
ypos 932
}
Shuffle {
in vec2
red blue
green alpha
out backward
name Shuffle_Vec3
xpos 3456
ypos 928
}
push $N368d8f00
TimeOffset {
time_offset 2
time ""
name TimeOffset5
label +2
xpos 3277
ypos -300
}
set N3664c800 [stack 0]
Dot {
name Dot31
xpos 3493
ypos -290
}
clone $C368bb200 {
xpos 3459
ypos -212
selected false
}
Multiply {
channels backward
value {{-2*mvmultiplicator}}
name Multiply3
xpos 3459
ypos 591
}
Dot {
name Dot44
xpos 3493
ypos 814
}
push $N368b8f00
push $N3664c800
NoTimeBlur {
rounding floor
single false
name NoTimeBlur4
xpos 3277
ypos -213
}
Retime {
input.first 1001
input.first_lock true
output.first 1001
output.last 1002
speed 0.5
before continue
after continue
filter none
time ""
name Retime5
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 3277
ypos -172
}
clone $C36887900 {
inputs 2
xpos 3277
ypos 58
selected false
}
clone $C36887200 {
xpos 3277
ypos 329
selected false
}
Dot {
name Dot8
tile_color 0xcccccc00
xpos 3311
ypos 465
}
set N36630100 [stack 0]
Shuffle {
in backward
blue black
alpha black
name Shuffle3
label "in \[value in]-->out \[value out]"
xpos 3113
ypos 455
}
TimeOffset {
time_offset -1
time ""
name TimeOffset7
label "\[value time_offset]"
xpos 3113
ypos 541
}
push $N36630100
Copy {
inputs 2
from0 backward.u
to0 backward.u
from1 backward.v
to1 backward.v
bbox B
name Copy3
xpos 3277
ypos 534
}
Retime {
input.first 1001
input.first_lock true
input.last 1436
output.first 1001
output.last 1218
speed 2
before continue
after continue
filter none
time ""
name Retime8
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 3277
ypos 637
}
clone $C36884800 {
inputs 3
xpos 3277
ypos 928
selected false
}
Dot {
name Dot48
xpos 3311
ypos 1028
}
push $N3664c800
Dot {
name Dot49
xpos 3072
ypos -290
}
Copy {
inputs 2
channels backward
name Copy10
xpos 3038
ypos 1011
}
IDistort {
uv backward
name IDistort3
xpos 3038
ypos 1177
}
Dot {
name Dot22
xpos 3072
ypos 1770
}
set N365cf900 [stack 0]
ShuffleCopy {
inputs 2
in backward
in2 backward
red red
green green
blue red2
alpha green2
out vec2
name ShuffleCopy1
xpos 3038
ypos 2506
}
push $N368f1600
Dot {
name Dot30
xpos 2669
ypos 892
}
Shuffle {
in vec1
out backward
name Shuffle_Vec2
xpos 2479
ypos 888
}
push $N368d9600
TimeOffset {
time_offset -1
time ""
name TimeOffset4
label -1
xpos 2300
ypos -313
}
set N365cdd00 [stack 0]
Dot {
name Dot29
xpos 2537
ypos -303
}
clone $C368bb200 {
xpos 2503
ypos -225
selected false
}
Multiply {
channels backward
value {{mvmultiplicator}}
name Multiply2
xpos 2503
ypos 584
}
Dot {
name Dot32
xpos 2537
ypos 760
}
push $N368b8f00
push $N365cdd00
NoTimeBlur {
rounding floor
single false
name NoTimeBlur3
xpos 2300
ypos -227
}
Retime {
input.first 1001
input.first_lock true
output.first 1001
output.last 1002
speed 0.5
before continue
after continue
filter none
time ""
name Retime4
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 2300
ypos -186
}
clone $C36887900 {
inputs 2
xpos 2300
ypos 44
selected false
}
clone $C36887200 {
xpos 2300
ypos 333
selected false
}
Dot {
name Dot7
tile_color 0xcccccc00
xpos 2334
ypos 449
}
set N365a5600 [stack 0]
Shuffle {
in backward
blue black
alpha black
name Shuffle6
label "in \[value in]-->out \[value out]"
xpos 2136
ypos 439
}
TimeOffset {
time_offset -1
time ""
name TimeOffset1
label "\[value time_offset]"
xpos 2136
ypos 525
}
push $N365a5600
Copy {
inputs 2
from0 backward.u
to0 backward.u
from1 backward.v
to1 backward.v
bbox B
name Copy1
xpos 2300
ypos 518
}
Retime {
input.first 1001
input.first_lock true
input.last 1436
output.first 1001
output.last 1218
speed 2
before continue
after continue
filter none
time ""
name Retime7
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 2300
ypos 621
}
clone $C36884800 {
inputs 3
xpos 2300
ypos 888
selected false
}
Dot {
name Dot34
xpos 2334
ypos 1042
}
push $N365cdd00
Dot {
name Dot40
xpos 2095
ypos -303
}
Copy {
inputs 2
channels backward
name Copy9
xpos 2061
ypos 1025
}
IDistort {
uv backward
name IDistort2
xpos 2061
ypos 1177
}
Dot {
name Dot12
xpos 2095
ypos 1498
}
set N36574f00 [stack 0]
Dot {
name Dot36
xpos 2095
ypos 2403
}
push $N368f1d00
Dot {
name Dot37
xpos 1660
ypos 900
}
Shuffle {
in vec1
red blue
green alpha
out backward
name Shuffle_Vec1
xpos 1487
ypos 896
}
push $N368d9d00
TimeOffset {
time_offset 1
time ""
name TimeOffset3
label +1
xpos 1303
ypos -322
}
set N36747200 [stack 0]
Dot {
name Dot28
xpos 1512
ypos -312
}
clone $C368bb200 {
xpos 1478
ypos -224
selected false
}
Multiply {
channels backward
value {{-mvmultiplicator}}
name Multiply1
xpos 1478
ypos 587
}
Dot {
name Dot27
xpos 1512
ypos 749
}
push $N368b8f00
push $N36747200
NoTimeBlur {
rounding floor
single false
name NoTimeBlur2
xpos 1303
ypos -232
}
Retime {
input.first 1001
input.first_lock true
output.first 1001
output.last 1002
speed 0.5
before continue
after continue
filter none
time ""
name Retime2
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 1303
ypos -192
}
clone $C36887900 {
inputs 2
xpos 1303
ypos 44
selected false
}
Dot {
name Dot9
tile_color 0xcccccc00
xpos 1337
ypos 133
}
clone $C36887200 {
xpos 1303
ypos 330
selected false
}
Dot {
name Dot1
tile_color 0xcccccc00
xpos 1337
ypos 416
}
set N36716400 [stack 0]
Shuffle {
in backward
blue black
alpha black
name Shuffle8
label "in \[value in]-->out \[value out]"
xpos 1139
ypos 406
}
TimeOffset {
time_offset -1
time ""
name TimeOffset2
label "\[value time_offset]"
xpos 1139
ypos 492
}
push $N36716400
Copy {
inputs 2
from0 backward.u
to0 backward.u
from1 backward.v
to1 backward.v
bbox B
name Copy2
xpos 1303
ypos 485
}
Retime {
input.first 1001
input.first_lock true
input.last 1436
output.first 1001
output.last 1218
speed 2
before continue
after continue
filter none
time ""
name Retime3
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 1303
ypos 588
}
clone $C36884800 {
inputs 3
xpos 1303
ypos 896
selected false
}
Dot {
name Dot47
xpos 1337
ypos 1000
}
push $N36747200
Dot {
name Dot46
xpos 1098
ypos -312
}
Copy {
inputs 2
channels backward
name Copy8
xpos 1064
ypos 983
}
IDistort {
uv backward
name IDistort1
xpos 1064
ypos 1160
}
Dot {
name Dot11
tile_color 0xcccccc00
xpos 1098
ypos 1240
}
set N366f1d00 [stack 0]
ShuffleCopy {
inputs 2
in backward
in2 backward
red red
green green
blue red2
alpha green2
out vec1
name ShuffleCopy3
xpos 1064
ypos 2399
}
set N366f1600 [stack 0]
push $N368dab00
Dot {
name Dot14
xpos 574
ypos 975
}
set N366f0f00 [stack 0]
Dot {
name Dot16
xpos 684
ypos 975
}
set N366f0800 [stack 0]
push $N366f1d00
Dot {
name Dot13
xpos 850
ypos 1240
}
set N366f0100 [stack 0]
push $N36574f00
Dot {
name Dot20
xpos 848
ypos 1498
}
set N366cb900 [stack 0]
push $N365cf900
Dot {
name Dot23
xpos 859
ypos 1770
}
set N366cb200 [stack 0]
push $N3664e400
Dot {
name Dot25
xpos 848
ypos 2003
}
set N366cab00 [stack 0]
BlinkScript {
inputs 5
recompileCount 6
ProgramGroup 1
KernelDescription "2 \"MedianKernel\" iterate componentWise 1e7304f930362212e256e53742e266e22e4ba28492c0bc903660683d595e3c9a 6 \"f1\" Read Point \"f2\" Read Point \"f3\" Read Point \"f4\" Read Point \"f5\" Read Point \"dst\" Write Point 0 0 0"
kernelSource "kernel MedianKernel : ImageComputationKernel<eComponentWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> f1;\n  Image<eRead, eAccessPoint, eEdgeClamped> f2;\n  Image<eRead, eAccessPoint, eEdgeClamped> f3;\n  Image<eRead, eAccessPoint, eEdgeClamped> f4;\n  Image<eRead, eAccessPoint, eEdgeClamped> f5;\n  Image<eWrite> dst;\n\n  void process() \{\n    float values\[] = \{f1(),f2(),f3(),f4(),f5()\};\n    dst() = median(values, 5);\n  \}\n\};\n"
useGPUIfAvailable {{parent.BlinkScript_Median.useGPUIfAvailable}}
vectorize {{parent.BlinkScript_Median.vectorize}}
rebuild ""
rebuild_finalise ""
name BlinkScript_Median1
xpos 561
ypos 1993
}
push $N366cab00
push $N366cb200
push $N366cb900
push 0
push $N366f0100
push $N366f0800
Merge2 {
inputs 5+1
operation average
name Merge1
xpos 650
ypos 2080
}
set C366c9600 [stack 0]
Switch {
inputs 2
which {{operation}}
name Switch8
xpos 650
ypos 2169
}
set C366c8f00 [stack 0]
Copy {
inputs 2
channels vec1
name Copy6
xpos 650
ypos 2386
}
Copy {
inputs 2
channels vec2
name Copy7
xpos 650
ypos 2493
}
Dot {
name Dot17
xpos 684
ypos 2653
}
push $N366f1600
push $N366f0f00
Dot {
name Dot15
xpos 472
ypos 975
}
set N36697200 [stack 0]
push $N366f0100
Dot {
name Dot19
xpos 583
ypos 1240
}
set N36696b00 [stack 0]
push $N366cb900
Dot {
name Dot21
xpos 611
ypos 1498
}
set N36696400 [stack 0]
BlinkScript {
inputs 3
recompileCount 5
ProgramGroup 1
KernelDescription "2 \"MedianKernel\" iterate componentWise 722c32f2d1251222314c5b7dcb61e29044fb0774b72a0fee19adf671edcc2cba 4 \"f1\" Read Point \"f2\" Read Point \"f3\" Read Point \"dst\" Write Point 0 0 0"
kernelSource "kernel MedianKernel : ImageComputationKernel<eComponentWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> f1;\n  Image<eRead, eAccessPoint, eEdgeClamped> f2;\n  Image<eRead, eAccessPoint, eEdgeClamped> f3;\n  Image<eWrite> dst;\n\n  void process() \{\n    float values\[] = \{f1(),f2(),f3()\};\n    dst() = median(values, 3);\n  \}\n\};\n"
rebuild ""
rebuild_finalise ""
name BlinkScript_Median
xpos 309
ypos 1997
}
push $N36696400
push 0
push $N36696b00
push $N36697200
clone $C366c9600 {
inputs 3+1
xpos 438
ypos 2079
selected false
}
clone $C366c8f00 {
inputs 2
xpos 438
ypos 2170
selected false
}
Copy {
inputs 2
channels vec1
name Copy5
xpos 438
ypos 2386
}
Dot {
name Dot18
xpos 472
ypos 2645
}
Switch {
inputs 2
which {{radius}}
name Switch_Radius
xpos 539
ypos 2749
}
push $N368dab00
Dot {
name Dot55
xpos 284
ypos -462
}
Dot {
name Dot54
xpos 284
ypos 2780
}
Dissolve {
inputs 2+1
which 1
name Dissolve1
xpos 539
ypos 2848
}
Output {
name Output1
xpos 539
ypos 3106
}
end_group
push $N398f7200
TemporalMedian {
channels alpha
core 0.5
name TemporalMedian1
xpos 4500
ypos 9181
}
push $N3d548f00
Dot {
name Dot409
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2946
ypos 15214
}
Invert {
name Invert10
xpos 5114
ypos 15204
}
Dot {
name Dot410
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 5148
ypos 15275
}
push 0
Soften {
inputs 1+1
name Soften4
xpos 5509
ypos 15265
}
push $N3721ab00
Grade {
inputs 1+1
multiply 5
name Grade101
xpos 5360
ypos 15437
}
Remove {
operation keep
channels rgba
channels2 zDepth
name Remove15
xpos 5360
ypos 15557
}
Output {
name Output1
xpos 5360
ypos 15698
}
end_group
Group {
name Reformat_Overscan9
selected true
xpos 9917
ypos -17633
addUserKnob {20 User l Reformat_Overscan}
addUserKnob {41 format l "output format" T ReformatMASTER.format}
addUserKnob {41 overscanPercent T ReformatOverscanMASTER.overscanPercent}
addUserKnob {20 info}
addUserKnob {26 version l ver: T "v1 rafal 10/02/2020"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust4
tile_color 0xaaaaaaff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 42
xpos -987
ypos -496
bdwidth 280
bdheight 332
z_order -92960
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "Flat plate res"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Black
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
Input {
inputs 0
name Input1
xpos -884
ypos -382
}
Reformat {
format {{{parent.parent.Reformat_OverscanMASTER.ReformatMASTER.format}}}
pbb true
name ReformatMASTER
xpos -884
ypos -342
}
Reformat {
type scale
scale {{overscanPercent==0?1:1-(1/overscanPercent)}}
resize none
pbb true
name ReformatOverscanMASTER
xpos -884
ypos -288
addUserKnob {20 User l percent}
addUserKnob {7 overscanPercent R 0 80}
overscanPercent {{parent.parent.Reformat_OverscanMASTER.ReformatOverscanMASTER.overscanPercent}}
}
Crop {
box {{-ceil(((input.height*((1-ReformatOverscanMASTER.scale)))*0.5))} {-ceil(((input.width*((1-ReformatOverscanMASTER.scale)))*0.5))} {ceil(input.width+((input.width*(1-ReformatOverscanMASTER.scale))*0.5))} {ceil(input.height+((input.height*(1-ReformatOverscanMASTER.scale))*0.5))}}
name CropOverscanMASTER
xpos -884
ypos -244
addUserKnob {20 User}
}
set N367ff900 [stack 0]
Output {
name Output1
xpos -884
ypos -144
}
push $N367ff900
Viewer {
frame_range 994-1161
fps 25
viewerProcess "sRGB (ACES)"
name Viewer1
xpos -624
ypos -303
}
end_group
Dot {
name Dot387
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9951
ypos -17397
}
set N367fe400 [stack 0]
ModifyMetaData {
metadata {
 {set gbk/scriptname "\[value root.name]"}
 {set exr/task_id "\[getenv FTRACK_TASKID]"}
 {remove exr/chunkCount ""}
 {remove exr/compressionName ""}
}
name ModifyMetaData6
selected true
xpos 9918
ypos -17346
}
Write {
channels rgba
file /coppi/proj/thrg/shottree/s01e01/015-0250/output2d/comp/comp_precomp/thrg_s01e01_015-0250_comp_precomp_WhiteCaps_lin_ap0_v001/thrg_s01e01_015-0250_comp_precomp_WhiteCaps_lin_ap0_v001.%04d.exr
colorspace "ACES - ACES2065-1"
file_type exr
metadata "all metadata"
first_part rgba
render_order 100
in_colorspace scene_linear
out_colorspace scene_linear
beforeRender "from nuketools import beforerenderfunctions;beforerenderfunctions.beforeRender()"
name WritePreComp2
note_font "Bitstream Vera Sans Bold"
selected true
xpos 9918
ypos -17320
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
addUserKnob {20 fwrite l "GBK Write"}
addUserKnob {1 ffile l File}
ffile /coppi/proj/thrg/shottree/s01e01/015-0250/output2d/comp/comp_precomp/thrg_s01e01_015-0250_comp_precomp_WhiteCaps_lin_ap0_v001/thrg_s01e01_015-0250_comp_precomp_WhiteCaps_lin_ap0_v001.%04d.exr
addUserKnob {1 fproxy l Proxy}
addUserKnob {6 fproxycheck l "Set Proxy Path" +STARTLINE}
addUserKnob {26 divider l "" +STARTLINE}
addUserKnob {4 task l Task M {comp alwy am came char conc cont cran edit fire flar glas inge ocea pm prod sbv scre skye util source}}
addUserKnob {1 fassetname l "Asset Name Preview:" +DISABLED}
fassetname comp_precomp
addUserKnob {1 fassetbasename l "Asset Name:"}
fassetbasename comp
addUserKnob {1 fecompname l "Component Name:"}
fecompname WhiteCaps
addUserKnob {1 flatestversion l "Latest published version:" +DISABLED}
flatestversion 0
addUserKnob {22 getlatest l Refresh -STARTLINE T "from nuketools import writetab \nwritetab.getLatestPubVersion() \n"}
addUserKnob {6 precomp l Precomp +STARTLINE}
precomp true
addUserKnob {6 denoised l Denoised(dn) +STARTLINE}
addUserKnob {6 delensed l Delensed(dl) +STARTLINE}
addUserKnob {6 neutralgrade l Neutralgrade(ng) +STARTLINE}
addUserKnob {6 matte l Matte +STARTLINE}
addUserKnob {6 no_frame_number l "No Frame Numbering" +STARTLINE}
addUserKnob {3 fversion l Version}
fversion 1
addUserKnob {4 format l Format M {exr dpx png tif jpg tga mov}}
addUserKnob {4 channel l Channel M {rgb rgba all}}
channel rgba
addUserKnob {4 fcompression l Compression M {none "Zip (1 scanline)" "Zip (16 scanlines)" "PIZ Wavelet (32 scanlines)" RLE B44 B44A DWAA DWAB}}
fcompression "Zip (1 scanline)"
addUserKnob {1 fview l View}
addUserKnob {26 saveSettingsMsg l "" -STARTLINE T "  "}
addUserKnob {3 frenderorder l "Render order"}
frenderorder 100
addUserKnob {22 frender l Render -STARTLINE T "from nuketools import writetab \nwritetab.render() \n"}
addUserKnob {3 fframeranges l "Frame range" +DISABLED}
fframeranges 1
addUserKnob {3 fframerangee l "" -STARTLINE +DISABLED}
fframerangee 1
addUserKnob {6 flimitrange l "Limit to range" -STARTLINE}
addUserKnob {22 rfromw l "Read from Write" -STARTLINE T "from nuketools import readfromwrite \nreadfromwrite.readFromWrite()"}
addUserKnob {22 rendcurr l "Render current frame" -STARTLINE T "from nuketools import writetab \nwritetab.renderCurrentFrame()"}
addUserKnob {6 fcopyscript l "Don't Copy Nuke Script" +STARTLINE}
addUserKnob {6 fwriteinit l "Is everything added" -STARTLINE +HIDDEN}
fwriteinit true
}
nuke_dispatch {
name nuke_dispatch_WhiteCaps
selected true
xpos 9918
ypos -17226
jobtitle comp_precomp
framestart 1001
frameend 1161
customframes ""
maxtime 3:00:00
StartAfterTime ""
ThreadCount 16
ServiceKeyExpr ""
removelicense true
depthindex 0
}
Group {
name PrecompDispatch1
tile_color 0xff0000ff
label "\[if \{\[value disable]==true\}  \{return OFF\}  \{return ON\}]"
note_font "Bitstream Vera Sans"
note_font_size 21
selected true
xpos 9918
ypos -17181
postage_stamp true
addUserKnob {20 User l PrecompDispatch}
addUserKnob {41 file l File T ReadPreComp.file}
addUserKnob {41 localizationPolicy l "Localization Policy" T ReadPreComp.localizationPolicy}
addUserKnob {41 updateLocalization l Update T ReadPreComp.updateLocalization}
addUserKnob {41 localizationPriority l "localization priority" T ReadPreComp.localizationPriority}
addUserKnob {41 format l Format T ReadPreComp.format}
addUserKnob {41 proxy l Proxy T ReadPreComp.proxy}
addUserKnob {41 proxy_format l "Proxy Format" T ReadPreComp.proxy_format}
addUserKnob {41 first l "Frame Range" T ReadPreComp.first}
addUserKnob {41 before l "" -STARTLINE T ReadPreComp.before}
addUserKnob {41 last l "" -STARTLINE T ReadPreComp.last}
addUserKnob {41 after l "" -STARTLINE T ReadPreComp.after}
addUserKnob {41 frame_mode l Frame T ReadPreComp.frame_mode}
addUserKnob {41 frame l "" -STARTLINE T ReadPreComp.frame}
addUserKnob {41 origfirst l "Original Range" T ReadPreComp.origfirst}
addUserKnob {41 origlast l "" -STARTLINE T ReadPreComp.origlast}
addUserKnob {41 origset l "Original Range Set" T ReadPreComp.origset}
addUserKnob {41 on_error l "Missing Frames" T ReadPreComp.on_error}
addUserKnob {41 reload T ReadPreComp.reload}
addUserKnob {41 colorspace l Colorspace T ReadPreComp.colorspace}
addUserKnob {41 premultiplied l Premultiplied T ReadPreComp.premultiplied}
addUserKnob {41 raw l "Raw Data" T ReadPreComp.raw}
addUserKnob {41 auto_alpha l "Auto Alpha" T ReadPreComp.auto_alpha}
addUserKnob {26 "" l "<b>EXR Options</b>"}
addUserKnob {41 offset_negative_display_window l "offset negative display window" T ReadPreComp.offset_negative_display_window}
addUserKnob {41 noprefix l "do not attach prefix" T ReadPreComp.noprefix}
addUserKnob {41 edge_pixels l "edge pixels" T ReadPreComp.edge_pixels}
addUserKnob {20 info}
addUserKnob {26 txt_1 l notes T "Connect to a 'nuke_dispatch' node. \na) rename 'component name' on write node\nb) rename the 'nuke_dispatch'  name adding a number on the end. \n(this set the render order, so you can manually set the order with F7)\nc) Enable node when rendering.\nd) click F7 and set render order dependency before render\nreorder the dispatchNode list. Top is reendered first\ne) after rendering refresh  the precompDispatch nodes and disable it. (use python script)\n* The frame range is set from the dispatch node.\n* Place the precomp before expensive nodes for efficiency."}
addUserKnob {26 ""}
addUserKnob {26 txt l ver: T "0.1 2020.12.21 RafKan"}
addUserKnob {6 UID_precompDispatch l "" +STARTLINE +INVISIBLE +STARTLINE}
}
Input {
inputs 0
name Input1
xpos -477
ypos -239
}
Read {
inputs 0
file_type exr
file "\[value this.parent.input.input.file]"
localizationPolicy off
format "4448 3096 0 0 4448 3096 1 Output Resolution"
first {{"\[value this.parent.input.framestart]" x1031 1001}}
last {{"\[value this.parent.input.frameend]" x1031 1237}}
origfirst {{"\[value this.parent.input.framestart]" x1001 1001 x1194 1001}}
origlast {{"\[value this.parent.input.frameend]" x1001 1040 x1194 1237}}
origset true
version 32
colorspace gbk_plate
auto_alpha true
name ReadPreComp
note_font_color 0xf368e4ff
xpos -477
ypos -164
disable {{"!\[exists parent.input]"}}
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
}
Output {
name Output1
xpos -477
ypos -5
}
end_group
Dot {
name Dot49
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9952
ypos -17058
}
add_layer {whiteCaps whiteCaps.red}
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 whiteCaps
fromInput2 {{0} B}
mappings "1 rgba.alpha 0 0 whiteCaps.red 0 0"
name Shuffle5
label "\[value in1]"
selected true
xpos 9918
ypos -16974
}
push $N367fe400
Dot {
name Dot150
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 10138
ypos -17397
}
Dot {
name Dot148
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 10133
ypos -16881
}
Shuffle2 {
inputs 2
fromInput1 {{1} B A}
in1 rgb
fromInput2 {{0} B A}
in2 alpha
out2 alpha
mappings "5 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3 rgba.alpha 1 0 rgba.alpha 1 0"
name Shuffle8
label "\[value in1]"
selected true
xpos 9918
ypos -16891
}
Dot {
name Dot108
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9947
ypos -16658
}
Unpremult {
name Unpremult3
selected true
xpos 9913
ypos -16640
}
Group {
name GradeAOV8
help "Colour correct the CG beauty using the secondary(aov) passes.with a subtractive process.\nto be used when:\n * the CG is good and only a few passes need adjusting\n * the secondaries don't add up to the beauty\n * rgb saturation (luminance mix on)\n * rgb contrast (with pivot)\n * matting with external mask input or main channel input or both with an operation.\n The order of correction is: Grade Node>Contrast Node>Saturation."
tile_color 0x8aa7dbff
label " \[value in]"
selected true
xpos 9913
ypos -16566
addUserKnob {20 User l GradeAOV}
addUserKnob {41 in l "Channel to use" T Shuffle5345.in}
addUserKnob {41 AlsoGradeChannel l "Also Grade Channel" t "as well as grading the beauty bake the grade into the selected channel" -STARTLINE T ShuffleCopy1544235.AlsoGradeChannel}
addUserKnob {41 solo T Switch3.solo}
addUserKnob {41 mute -STARTLINE T Switch3.mute}
addUserKnob {41 contact -STARTLINE T Switch3.contact}
addUserKnob {26 spacetxt l "                                                                                         " -STARTLINE T " "}
addUserKnob {22 NodeExpCopy l "Node Exp Copy" -STARTLINE T "knobsList = \[\"blackpoint\", \"whitepoint\", \"black\", \"white\", \"multiply\", \"add\", \"gamma\", \"reverse\", \"black_clamp\", \"white_clamp\", \"enable_mix_luminance\", \"mix_luminance\", \"value\", \"grey\", \"saturation\",\n \"enable_mix_luminance_1\", \"mix_luminance_1\", \"alpha\", \"mixBlend\"]\nnukescripts.clear_selection_recursive()\nn = nuke.thisNode()\nn\['selected'].setValue(True)\nwith nuke.root():\n nuke.nodeCopy(\"%clipboard%\")\n nuke.nodePaste(\"%clipboard%\")\n new_node = nuke.selectedNode()\n\n for j in new_node.knobs():\n\n  if j in  knobsList:\n   if isinstance(new_node.knob(j), nuke.Array_Knob):\n     new_node\[j].setSingleValue(False)\n   new_node\[j].setExpression( n.name() + '.' + j )\n\n\n"}
addUserKnob {26 ""}
addUserKnob {41 blackpoint T Grade273535.blackpoint}
addUserKnob {41 whitepoint T Grade273535.whitepoint}
addUserKnob {41 black l lift T Grade273535.black}
addUserKnob {41 white l gain T Grade273535.white}
addUserKnob {41 multiply T Grade273535.multiply}
addUserKnob {41 add l offset T Grade273535.add}
addUserKnob {41 gamma T Grade273535.gamma}
addUserKnob {41 reverse T Grade273535.reverse}
addUserKnob {41 black_clamp l "black clamp" -STARTLINE T Grade273535.black_clamp}
addUserKnob {41 white_clamp l "white clamp" -STARTLINE T Grade273535.white_clamp}
addUserKnob {26 text2 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance l "" -STARTLINE T Grade273535.enable_mix_luminance}
addUserKnob {41 mix_luminance l "" -STARTLINE T Grade273535.mix_luminance}
addUserKnob {26 "" l "  "}
addUserKnob {41 value l Contrast t " " T contrast.value}
addUserKnob {41 grey T contrast.grey}
addUserKnob {41 saturation T ColorCorrect6.saturation}
addUserKnob {26 text3 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance_1 l "" -STARTLINE T ColorCorrect6.enable_mix_luminance}
addUserKnob {41 mix_luminance_1 l "" -STARTLINE T ColorCorrect6.mix_luminance}
addUserKnob {26 ""}
addUserKnob {41 maskChannel l "mask channel" t "if the mask input is unplugged then the input channel can be used" T Keymix3.maskChannel}
addUserKnob {41 invertMask l invert -STARTLINE T Keymix3.invertMask}
addUserKnob {26 ""}
addUserKnob {41 alpha l "(un)premult by" T Unpremult13535.alpha}
addUserKnob {41 mixBlend l mix T Blend1.mixBlend}
addUserKnob {20 Info}
addUserKnob {22 documentation l " Documentation / Feedback " T "import webbrowser\nwebbrowser.open(\"http://opennuke.github.io/gradeAov_nkV/\")" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {26 version l version: T v1.2}
addUserKnob {26 created l created: T "1/1/2015 by <a href=\\'http://movingimagearts.com'> Rafal Kaniewski</a>"}
addUserKnob {26 modified l "modified: " T "01/10/2016 :update to fix back clamp by Rafal_Kan\n2017/12/19 :v1: forked, renamed, premult per channel, colourspaceShift\n2018/01/01: added copyExpNode and solo/mute"}
addUserKnob {26 source l source: T "<a href='https://github.com/vfxwiki/gradeAOV/'> Github.com</a>"}
addUserKnob {26 licence l licence: T "<a href=\"https://github.com/openNuke/toolset/blob/master/LICENCE\">READ ME</a>"}
}
Input {
inputs 0
name Input
xpos -220
ypos -721
}
set N3678b900 [stack 0]
Dot {
name Dot8
xpos -995
ypos -718
}
Dot {
name Dot5
xpos -995
ypos 105
}
set N3678ab00 [stack 0]
Dot {
name Dot9
xpos -995
ypos 217
}
LayerContactSheet {
width {{width*6}}
height {{height*6}}
showLayerNames true
name LayerContactSheet1
xpos -632
ypos 213
}
push $N3678b900
Dot {
name Dot1
xpos -186
ypos -633
}
set N36789600 [stack 0]
Dot {
name Dot27
xpos -457
ypos -567
}
set N36788f00 [stack 0]
Dot {
name Dot26
xpos -646
ypos -567
}
Shuffle {
in LS_sun_LGT_all
in2 alpha
alpha red2
name Shuffle5345
xpos -680
ypos -533
}
Premult {
name Premult1
xpos -680
ypos -507
}
set N3676b900 [stack 0]
push $N36788f00
Merge2 {
inputs 2
operation from
Achannels rgb
Bchannels rgb
output rgb
name From
xpos -491
ypos -507
}
Dot {
name Dot15
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -457
ypos -422
}
set N3676ab00 [stack 0]
Dot {
name Dot12
xpos -922
ypos -422
}
Dot {
name Dot14
xpos -922
ypos 172
}
push $N3676b900
Unpremult {
alpha -rgba.alpha
name Unpremult13535
xpos -680
ypos -469
disable {{!alpha}}
addUserKnob {20 User}
}
Grade {
channels all
white {0.925 0.930751 1.075 1}
white_panelDropped true
multiply 0.5
black_clamp false
name Grade273535
xpos -680
ypos -380
addUserKnob {20 User}
addUserKnob {18 exposure R -1 1}
exposure {{multiply==0|white==0|multiply==0?0:log10(multiply)/log10(2)+log10(white)/log10(2)}}
addUserKnob {6 exposure_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
Expression {
expr0 "pow(r/grey, value+1)*grey"
expr1 "pow(g/grey, value+1)*grey"
expr2 "pow(b/grey, value+1)*grey"
name contrast
xpos -680
ypos -322
addUserKnob {20 User}
addUserKnob {7 grey}
grey 0.18
addUserKnob {18 value R -1 1}
value {0 0 0}
addUserKnob {6 value_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
ColorCorrect {
channels all
enable_mix_luminance false
name ColorCorrect6
xpos -680
ypos -273
}
set N36130100 [stack 0]
Dot {
name Dot4
xpos -833
ypos -263
}
Dot {
name Dot7
xpos -833
ypos 157
}
Dot {
name Dot10
xpos -403
ypos 186
}
Input {
inputs 0
name mask
label mask
xpos 65
ypos -760
number 1
}
Dot {
name Dot13
xpos 99
ypos 105
}
push $N3678ab00
Dot {
name Dot11
xpos -435
ypos 105
}
set N3610c800 [stack 0]
Switch {
inputs 2
which {{"\[exists parent.input1]"}}
name Switch1
xpos -177
ypos 101
disable {{"!\[exists parent.input1]"}}
}
Invert {
name Invert1
xpos -177
ypos 127
}
push $N3610c800
push $N36130100
Dot {
name Dot6
xpos -646
ypos 39
}
push $N36789600
Dot {
name Dot2
xpos -186
ypos -321
}
Dot {
name Dot3
xpos -284
ypos -321
}
push $N36130100
push $N3676ab00
Clamp {
channels rgb
minimum_enable {{parent.Grade273535.black_clamp}}
maximum 1e+14
maximum_enable {{parent.Grade273535.white_clamp}}
name Clamp135345
xpos -491
ypos -374
}
Merge2 {
inputs 2
operation plus
Achannels rgb
Bchannels rgb
output rgb
name Merge34
xpos -491
ypos -267
}
Premult {
alpha {{{Unpremult1.alpha}}}
name Premult435345345
xpos -487
ypos -142
disable {{Unpremult13535.disable}}
}
Blend {
inputs 2
channels rgb
weight0 {{mixBlend}}
weight1 {{1-weight0}}
name Blend1
xpos -318
ypos -142
addUserKnob {20 User}
addUserKnob {7 mixBlend}
mixBlend 1
}
ShuffleCopy {
inputs 2
in {{{Shuffle.in}}}
alpha alpha2
black red
white green
red2 blue
out2 {{{Shuffle.in}}}
name ShuffleCopy1544235
xpos -318
ypos 35
disable {{!AlsoGradeChannel}}
addUserKnob {20 User}
addUserKnob {6 AlsoGradeChannel l "Also Grade Channel" +STARTLINE}
AlsoGradeChannel true
}
Keymix {
inputs 3
channels rgb
maskChannel -rgba.alpha
name Keymix3
xpos -318
ypos 161
disable {{!maskChannel}}
}
Switch {
inputs 4
which {{contact?3:mute?2:solo?1:0}}
name Switch3
xpos -318
ypos 196
addUserKnob {20 User}
addUserKnob {4 output M {"rgb graded by channel" "preview channel (solo)" "preview without (mute)" "channel contact sheet" "" "" "" "" ""}}
output "preview channel (solo)"
addUserKnob {6 solo +STARTLINE}
addUserKnob {6 mute -STARTLINE}
addUserKnob {6 contact -STARTLINE}
}
Output {
name Output1
xpos -318
ypos 385
}
end_group
Group {
name GradeAOV10
help "Colour correct the CG beauty using the secondary(aov) passes.with a subtractive process.\nto be used when:\n * the CG is good and only a few passes need adjusting\n * the secondaries don't add up to the beauty\n * rgb saturation (luminance mix on)\n * rgb contrast (with pivot)\n * matting with external mask input or main channel input or both with an operation.\n The order of correction is: Grade Node>Contrast Node>Saturation."
tile_color 0x8aa7dbff
label " \[value in]"
selected true
xpos 9913
ypos -16440
addUserKnob {20 User l GradeAOV}
addUserKnob {41 in l "Channel to use" T Shuffle5345.in}
addUserKnob {41 AlsoGradeChannel l "Also Grade Channel" t "as well as grading the beauty bake the grade into the selected channel" -STARTLINE T ShuffleCopy1544235.AlsoGradeChannel}
addUserKnob {41 solo T Switch3.solo}
addUserKnob {41 mute -STARTLINE T Switch3.mute}
addUserKnob {41 contact -STARTLINE T Switch3.contact}
addUserKnob {26 spacetxt l "                                                                                         " -STARTLINE T " "}
addUserKnob {22 NodeExpCopy l "Node Exp Copy" -STARTLINE T "knobsList = \[\"blackpoint\", \"whitepoint\", \"black\", \"white\", \"multiply\", \"add\", \"gamma\", \"reverse\", \"black_clamp\", \"white_clamp\", \"enable_mix_luminance\", \"mix_luminance\", \"value\", \"grey\", \"saturation\",\n \"enable_mix_luminance_1\", \"mix_luminance_1\", \"alpha\", \"mixBlend\"]\nnukescripts.clear_selection_recursive()\nn = nuke.thisNode()\nn\['selected'].setValue(True)\nwith nuke.root():\n nuke.nodeCopy(\"%clipboard%\")\n nuke.nodePaste(\"%clipboard%\")\n new_node = nuke.selectedNode()\n\n for j in new_node.knobs():\n\n  if j in  knobsList:\n   if isinstance(new_node.knob(j), nuke.Array_Knob):\n     new_node\[j].setSingleValue(False)\n   new_node\[j].setExpression( n.name() + '.' + j )\n\n\n"}
addUserKnob {26 ""}
addUserKnob {41 blackpoint T Grade273535.blackpoint}
addUserKnob {41 whitepoint T Grade273535.whitepoint}
addUserKnob {41 black l lift T Grade273535.black}
addUserKnob {41 white l gain T Grade273535.white}
addUserKnob {41 multiply T Grade273535.multiply}
addUserKnob {41 add l offset T Grade273535.add}
addUserKnob {41 gamma T Grade273535.gamma}
addUserKnob {41 reverse T Grade273535.reverse}
addUserKnob {41 black_clamp l "black clamp" -STARTLINE T Grade273535.black_clamp}
addUserKnob {41 white_clamp l "white clamp" -STARTLINE T Grade273535.white_clamp}
addUserKnob {26 text2 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance l "" -STARTLINE T Grade273535.enable_mix_luminance}
addUserKnob {41 mix_luminance l "" -STARTLINE T Grade273535.mix_luminance}
addUserKnob {26 "" l "  "}
addUserKnob {41 value l Contrast t " " T contrast.value}
addUserKnob {41 grey T contrast.grey}
addUserKnob {41 saturation T ColorCorrect6.saturation}
addUserKnob {26 text3 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance_1 l "" -STARTLINE T ColorCorrect6.enable_mix_luminance}
addUserKnob {41 mix_luminance_1 l "" -STARTLINE T ColorCorrect6.mix_luminance}
addUserKnob {26 ""}
addUserKnob {41 maskChannel l "mask channel" t "if the mask input is unplugged then the input channel can be used" T Keymix3.maskChannel}
addUserKnob {41 invertMask l invert -STARTLINE T Keymix3.invertMask}
addUserKnob {26 ""}
addUserKnob {41 alpha l "(un)premult by" T Unpremult13535.alpha}
addUserKnob {41 mixBlend l mix T Blend1.mixBlend}
addUserKnob {20 Info}
addUserKnob {22 documentation l " Documentation / Feedback " T "import webbrowser\nwebbrowser.open(\"http://opennuke.github.io/gradeAov_nkV/\")" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {26 version l version: T v1.2}
addUserKnob {26 created l created: T "1/1/2015 by <a href=\\'http://movingimagearts.com'> Rafal Kaniewski</a>"}
addUserKnob {26 modified l "modified: " T "01/10/2016 :update to fix back clamp by Rafal_Kan\n2017/12/19 :v1: forked, renamed, premult per channel, colourspaceShift\n2018/01/01: added copyExpNode and solo/mute"}
addUserKnob {26 source l source: T "<a href='https://github.com/vfxwiki/gradeAOV/'> Github.com</a>"}
addUserKnob {26 licence l licence: T "<a href=\"https://github.com/openNuke/toolset/blob/master/LICENCE\">READ ME</a>"}
}
Input {
inputs 0
name Input
xpos -220
ypos -721
}
set N360e0100 [stack 0]
Dot {
name Dot8
xpos -995
ypos -718
}
Dot {
name Dot5
xpos -995
ypos 105
}
set N360b3200 [stack 0]
Dot {
name Dot9
xpos -995
ypos 217
}
LayerContactSheet {
width {{width*6}}
height {{height*6}}
showLayerNames true
name LayerContactSheet1
xpos -632
ypos 213
}
push $N360e0100
Dot {
name Dot1
xpos -186
ypos -633
}
set N360b1d00 [stack 0]
Dot {
name Dot27
xpos -457
ypos -567
}
set N360b1600 [stack 0]
Dot {
name Dot26
xpos -646
ypos -567
}
Shuffle {
in LS_env_LGT_all
in2 alpha
alpha red2
name Shuffle5345
xpos -680
ypos -533
}
Premult {
name Premult1
xpos -680
ypos -507
}
set N360b0100 [stack 0]
push $N360b1600
Merge2 {
inputs 2
operation from
Achannels rgb
Bchannels rgb
output rgb
name From
xpos -491
ypos -507
}
Dot {
name Dot15
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -457
ypos -422
}
set N36087200 [stack 0]
Dot {
name Dot12
xpos -922
ypos -422
}
Dot {
name Dot14
xpos -922
ypos 172
}
push $N360b0100
Unpremult {
alpha -rgba.alpha
name Unpremult13535
xpos -680
ypos -469
disable {{!alpha}}
addUserKnob {20 User}
}
Grade {
channels all
white_panelDropped true
multiply 1.8
gamma 1.05
black_clamp false
name Grade273535
xpos -680
ypos -380
addUserKnob {20 User}
addUserKnob {18 exposure R -1 1}
exposure {{multiply==0|white==0|multiply==0?0:log10(multiply)/log10(2)+log10(white)/log10(2)}}
addUserKnob {6 exposure_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
Expression {
expr0 "pow(r/grey, value+1)*grey"
expr1 "pow(g/grey, value+1)*grey"
expr2 "pow(b/grey, value+1)*grey"
name contrast
xpos -680
ypos -322
addUserKnob {20 User}
addUserKnob {7 grey}
grey 0.18
addUserKnob {18 value R -1 1}
value {0 0 0}
addUserKnob {6 value_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
ColorCorrect {
channels all
enable_mix_luminance false
name ColorCorrect6
xpos -680
ypos -273
}
set N36070800 [stack 0]
Dot {
name Dot4
xpos -833
ypos -263
}
Dot {
name Dot7
xpos -833
ypos 157
}
Dot {
name Dot10
xpos -403
ypos 186
}
Input {
inputs 0
name mask
label mask
xpos 65
ypos -760
number 1
}
Dot {
name Dot13
xpos 99
ypos 105
}
push $N360b3200
Dot {
name Dot11
xpos -435
ypos 105
}
set N3604cf00 [stack 0]
Switch {
inputs 2
which {{"\[exists parent.input1]"}}
name Switch1
xpos -177
ypos 101
disable {{"!\[exists parent.input1]"}}
}
Invert {
name Invert1
xpos -177
ypos 127
}
push $N3604cf00
push $N36070800
Dot {
name Dot6
xpos -646
ypos 39
}
push $N360b1d00
Dot {
name Dot2
xpos -186
ypos -321
}
Dot {
name Dot3
xpos -284
ypos -321
}
push $N36070800
push $N36087200
Clamp {
channels rgb
minimum_enable {{parent.Grade273535.black_clamp}}
maximum 1e+14
maximum_enable {{parent.Grade273535.white_clamp}}
name Clamp135345
xpos -491
ypos -374
}
Merge2 {
inputs 2
operation plus
Achannels rgb
Bchannels rgb
output rgb
name Merge34
xpos -491
ypos -267
}
Premult {
alpha {{{Unpremult1.alpha}}}
name Premult435345345
xpos -487
ypos -142
disable {{Unpremult13535.disable}}
}
Blend {
inputs 2
channels rgb
weight0 {{mixBlend}}
weight1 {{1-weight0}}
name Blend1
xpos -318
ypos -142
addUserKnob {20 User}
addUserKnob {7 mixBlend}
mixBlend 1
}
ShuffleCopy {
inputs 2
in {{{Shuffle.in}}}
alpha alpha2
black red
white green
red2 blue
out2 {{{Shuffle.in}}}
name ShuffleCopy1544235
xpos -318
ypos 35
disable {{!AlsoGradeChannel}}
addUserKnob {20 User}
addUserKnob {6 AlsoGradeChannel l "Also Grade Channel" +STARTLINE}
AlsoGradeChannel true
}
Keymix {
inputs 3
channels rgb
maskChannel -rgba.alpha
name Keymix3
xpos -318
ypos 161
disable {{!maskChannel}}
}
Switch {
inputs 4
which {{contact?3:mute?2:solo?1:0}}
name Switch3
xpos -318
ypos 196
addUserKnob {20 User}
addUserKnob {4 output M {"rgb graded by channel" "preview channel (solo)" "preview without (mute)" "channel contact sheet" "" "" "" "" ""}}
output "preview channel (solo)"
addUserKnob {6 solo +STARTLINE}
addUserKnob {6 mute -STARTLINE}
addUserKnob {6 contact -STARTLINE}
}
Output {
name Output1
xpos -318
ypos 385
}
end_group
Grade {
white {0.7236911058 1.005196333 1.099998951 1}
multiply 0.2
name GradeWaterENV
note_font_size 31
selected true
xpos 9912
ypos -16329
}
Premult {
name Premult6
selected true
xpos 9912
ypos -16018
}
Dot {
name Dot109
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9950
ypos -15971
}
Transform {
translate {0 -10}
center {2272 1582}
shutteroffset centred
name WaterTransform
label "match Layout Horizon\nif required \n(or use cornerpin)"
note_font_size 21
selected true
xpos 9916
ypos -15886
disable true
}
Dot {
name Dot52
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9950
ypos -15736
}
Dot {
name Dot94
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 10724
ypos -15736
}
add_layer {CryptoMaterial CryptoMaterial.red CryptoMaterial.green CryptoMaterial.blue}
add_layer {CryptoMaterial00 CryptoMaterial00.red CryptoMaterial00.green CryptoMaterial00.blue CryptoMaterial00.alpha}
add_layer {CryptoMaterial02 CryptoMaterial02.red CryptoMaterial02.green CryptoMaterial02.blue CryptoMaterial02.alpha}
add_layer {CryptoMaterial_a CryptoMaterial_a.red CryptoMaterial_a.green CryptoMaterial_a.blue}
add_layer {CryptoMaterial_a00 CryptoMaterial_a00.red CryptoMaterial_a00.green CryptoMaterial_a00.blue CryptoMaterial_a00.alpha}
add_layer {CryptoMaterial_a02 CryptoMaterial_a02.red CryptoMaterial_a02.green CryptoMaterial_a02.blue CryptoMaterial_a02.alpha}
add_layer {emitcolor emitcolor.red emitcolor.green emitcolor.blue}
add_layer {CryptoMaterial01 CryptoMaterial01.red CryptoMaterial01.green CryptoMaterial01.blue CryptoMaterial01.alpha}
add_layer {CryptoMaterial_a01 CryptoMaterial_a01.red CryptoMaterial_a01.green CryptoMaterial_a01.blue CryptoMaterial_a01.alpha}
add_layer {basecolor basecolor.red basecolor.green basecolor.blue}
add_layer {S_direct_coat S_direct_coat.red S_direct_coat.green S_direct_coat.blue}
add_layer {S_indirect_emission S_indirect_emission.red S_indirect_emission.green S_indirect_emission.blue}
add_layer {S_indirect_sss S_indirect_sss.red S_indirect_sss.green S_indirect_sss.blue}
add_layer {S_indirect_volume S_indirect_volume.red S_indirect_volume.green S_indirect_volume.blue}
add_layer {nWorld nWorld.red nWorld.green nWorld.blue}
add_layer {S_direct_refract S_direct_refract.red S_direct_refract.green S_direct_refract.blue}
add_layer {S_direct_sss S_direct_sss.red S_direct_sss.green S_direct_sss.blue}
add_layer {S_indirect_coat S_indirect_coat.red S_indirect_coat.green S_indirect_coat.blue}
add_layer {S_direct_volume S_direct_volume.red S_direct_volume.green S_direct_volume.blue}
add_layer {S_direct_emission S_direct_emission.red S_direct_emission.green S_direct_emission.blue}
add_layer {S_indirect_diffuse S_indirect_diffuse.red S_indirect_diffuse.green S_indirect_diffuse.blue}
Group {
name UnlimitedRemove2
tile_color 0x9e3a61ff
selected true
xpos 10847
ypos -15746
lock_connections true
addUserKnob {20 user l UnlimitedRemove}
addUserKnob {20 info l Info n 1}
info 0
addUserKnob {26 text_info l "" +STARTLINE T "<font color=#e1f2a2>UnlimitedRemove v1.2</font> | author: Guillermo Algora\n<br>\nThe functionality of the native Remove node with the possibility of unlimited channel slots.\n<br>"}
addUserKnob {20 endGroup n -1}
addUserKnob {4 operation t "Remove: the named channels are deleted\nKeep: all but the named channels are deleted" M {remove keep "" "" "" "" "" "" "" "" "" ""}}
addUserKnob {26 description l "" -STARTLINE T "                   Channel slots:"}
addUserKnob {22 add l "Add (+4)" t "Add four additional channel slots" -STARTLINE T "def add_remove_node(switch_node):\n\n    last_remove_node = switch_node.input(0)\n\n    nukescripts.clear_selection_recursive()\n    last_remove_node.setSelected(True)\n    new_remove_node = nuke.createNode(\"Remove\", inpanel=False)\n    nukescripts.clear_selection_recursive()\n\n    new_remove_node\['operation'].setValue(\"remove\")\n    for knob_name in (\"channels\", \"channels2\", \"channels3\", \"channels4\"):\n        new_remove_node\[knob_name].setValue(\"none\")\n\n    new_remove_node\['xpos'].setExpression('\{\}'.format(last_remove_node\['xpos'].value()))\n    new_remove_node\['ypos'].setExpression('\{\}'.format(last_remove_node\['ypos'].value()+50))\n\n    return new_remove_node\n\ndef add_keep_node(switch_node, new_remove_node):\n\n    last_keep_node = switch_node.input(1)\n\n    nukescripts.clear_selection_recursive()\n    last_keep_node.setSelected(True)\n    new_keep_node = nuke.createNode(\"Remove\", inpanel=False)\n\n    new_keep_node\['operation'].setValue(\"keep\")\n    for knob_name in (\"channels\", \"channels2\", \"channels3\", \"channels4\"):\n        new_keep_node\[knob_name].setValue(\"none\")\n\n    new_keep_node\['xpos'].setExpression('\{\}'.format(last_keep_node\['xpos'].value()-100))\n    new_keep_node\['ypos'].setExpression('\{\}'.format(last_keep_node\['ypos'].value()+50))\n\n    new_keep_node.setSelected(True)\n    copy_node = nuke.createNode(\"Copy\", inpanel=False)\n    nukescripts.clear_selection_recursive()\n\n    for knob_name in (\"from0\", \"from1\", \"from2\", \"from3\"):\n        copy_node\[knob_name].setValue(\"none\")\n    for knob_name in (\"to0\", \"to1\", \"to2\", \"to3\"):\n        copy_node\[knob_name].setValue(\"none\")\n   \n    copy_node\['channels'].setValue(\"all\")\n    copy_node\['metainput'].setValue(\"All\")\n    copy_node\['rangeinput'].setValue(\"All\")\n    copy_node\['bbox'].setValue(\"union\")\n     \n    copy_node\['xpos'].setExpression('\{\}'.format(new_keep_node\['xpos'].value()+100))\n    copy_node\['ypos'].setExpression('\{\}'.format(new_keep_node\['ypos'].value()))\n\n    copy_node.setInput(0, last_keep_node)\n    new_keep_node.setInput(0, nuke.toNode(\"Dot1\"))\n\n    for knob_name in (\"channels\", \"channels2\", \"channels3\", \"channels4\"):\n        new_keep_node\[knob_name].setExpression(new_remove_node.name() + '.\{\}'.format(knob_name))\n\ndef add_channels(this_node, new_remove_node):\n\n    highest = \[]\n    for knob in this_node.allKnobs():\n        if \"channel\" in knob.name():\n            number = knob.name().split(\"channels\")\[1]\n            if number.isdigit():\n                highest.append(int(number))\n    highest = max(highest)\n\n    for knob_name in (\"channels\", \"channels2\", \"channels3\", \"channels4\"):\n        highest += 1\n        knob = nuke.Link_Knob(\"channels\" + '\{\}'.format(highest))\n        knob.setLink(new_remove_node.name() +'.\{\}'.format(knob_name))\n        this_node.addKnob(knob)\n\nundo = nuke.Undo()\nundo.disable()\n\ntry:\n    this_node = nuke.thisNode()\n\n    group = this_node\n    group.begin()\n\n    switch_node = nuke.toNode(\"Switch1\")\n    switch_node\['xpos'].setExpression('\{\}'.format(switch_node\['xpos'].value()))\n    switch_node\['ypos'].setExpression('\{\}'.format(switch_node\['ypos'].value()+50))\n\n    output_node = nuke.toNode(\"Output1\")\n    output_node\['xpos'].setExpression('\{\}'.format(output_node\['xpos'].value()))\n    output_node\['ypos'].setExpression('\{\}'.format(output_node\['ypos'].value()+50))\n\n    new_remove_node = add_remove_node(switch_node)\n    add_keep_node(switch_node, new_remove_node)\n\n    group.end()\n\n    add_channels(this_node, new_remove_node)\n\nfinally:\n    undo.enable()"}
addUserKnob {22 remove l "Remove (last 4)" t "Remove the last four additional channel slots" -STARTLINE T "def get_highest(this_node):\n\n    highest = \[]\n    for knob in this_node.allKnobs():\n        if \"channel\" in knob.name():\n            number = knob.name().split(\"channels\")\[1]\n            if number.isdigit():\n                highest.append(int(number))\n    highest = max(highest) + 1\n    return highest\n\ndef remove_channels(this_node, highest):\n\n        for i in range (0,4):\n            highest -= 1\n            this_node.removeKnob(this_node.knobs()\[(\"channels\" + '\{\}'.format(highest))])\n\ndef remove_nodes(switch_node):\n    copy_node = switch_node.input(1)\n    keep_node = copy_node.input(1)\n    remove_node = switch_node.input(0)\n\n    nuke.delete(copy_node)\n    nuke.delete(keep_node)\n    nuke.delete(remove_node)\n\nundo = nuke.Undo()\nundo.disable()\n\ntry:\n    this_node = nuke.thisNode()\n    highest = get_highest(this_node)\n\n    if highest > 5:\n        \n        remove_channels(this_node, highest)\n\n        group = this_node\n        group.begin()\n\n        switch_node = nuke.toNode(\"Switch1\")\n        switch_node\['xpos'].setExpression('\{\}'.format(switch_node\['xpos'].value()))\n        switch_node\['ypos'].setExpression('\{\}'.format(switch_node\['ypos'].value()-50))\n\n        output_node = nuke.toNode(\"Output1\")\n        output_node\['xpos'].setExpression('\{\}'.format(output_node\['xpos'].value()))\n        output_node\['ypos'].setExpression('\{\}'.format(output_node\['ypos'].value()-50))\n\n        remove_nodes(switch_node)\n\n        group.end()\n\nfinally:\n    undo.enable()"}
addUserKnob {41 channels T Remove1.channels}
addUserKnob {41 channels2 T Remove1.channels2}
addUserKnob {41 channels3 T Remove1.channels3}
addUserKnob {41 channels4 T Remove1.channels4}
addUserKnob {41 channels5 T Remove3.channels}
addUserKnob {41 channels6 T Remove3.channels2}
addUserKnob {41 channels7 T Remove3.channels3}
addUserKnob {41 channels8 T Remove3.channels4}
addUserKnob {41 channels9 T Remove5.channels}
addUserKnob {41 channels10 T Remove5.channels2}
addUserKnob {41 channels11 T Remove5.channels3}
addUserKnob {41 channels12 T Remove5.channels4}
addUserKnob {41 channels13 T Remove7.channels}
addUserKnob {41 channels14 T Remove7.channels2}
addUserKnob {41 channels15 T Remove7.channels3}
addUserKnob {41 channels16 T Remove7.channels4}
addUserKnob {41 channels17 T Remove9.channels}
addUserKnob {41 channels18 T Remove9.channels2}
addUserKnob {41 channels19 T Remove9.channels3}
addUserKnob {41 channels20 T Remove9.channels4}
addUserKnob {41 channels21 T Remove11.channels}
addUserKnob {41 channels22 T Remove11.channels2}
addUserKnob {41 channels23 T Remove11.channels3}
addUserKnob {41 channels24 T Remove11.channels4}
addUserKnob {41 channels25 T Remove13.channels}
addUserKnob {41 channels26 T Remove13.channels2}
addUserKnob {41 channels27 T Remove13.channels3}
addUserKnob {41 channels28 T Remove13.channels4}
}
Input {
inputs 0
name Input
xpos {{0.0 x1001 0}}
ypos {{0.0 x1001 -1}}
}
Dot {
name Dot1
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos {{34.0 x1001 26}}
ypos {{125.0 x1001 125}}
}
set N35dda400 [stack 0]
Remove {
operation keep
channels {{{Remove13.channels}}}
channels2 {{{Remove13.channels2}}}
channels3 {{{Remove13.channels3}}}
channels4 {{{Remove13.channels4}}}
name Remove14
xpos 89
ypos 415
}
push $N35dda400
Remove {
operation keep
channels {{{Remove11.channels}}}
channels2 {{{Remove11.channels2}}}
channels3 {{{Remove11.channels3}}}
channels4 {{{Remove11.channels4}}}
name Remove12
xpos 89
ypos 365
}
push $N35dda400
Remove {
operation keep
channels {{{Remove9.channels}}}
channels2 {{{Remove9.channels2}}}
channels3 {{{Remove9.channels3}}}
channels4 {{{Remove9.channels4}}}
name Remove10
xpos 89
ypos 315
}
push $N35dda400
Remove {
operation keep
channels {{{Remove7.channels}}}
channels2 {{{Remove7.channels2}}}
channels3 {{{Remove7.channels3}}}
channels4 {{{Remove7.channels4}}}
name Remove8
xpos 89
ypos 265
}
push $N35dda400
Remove {
operation keep
channels {{{Remove5.channels}}}
channels2 {{{Remove5.channels2}}}
channels3 {{{Remove5.channels3}}}
channels4 {{{Remove5.channels4}}}
name Remove6
xpos 89
ypos 215
}
push $N35dda400
Remove {
operation keep
channels {{{Remove3.channels}}}
channels2 {{{Remove3.channels2}}}
channels3 {{{Remove3.channels3}}}
channels4 {{{Remove3.channels4}}}
name Remove4
xpos 89
ypos 165
}
push $N35dda400
Remove {
operation keep
channels {{{Remove1.channels}}}
channels2 {{{Remove1.channels2}}}
channels3 {{{Remove1.channels3}}}
channels4 {{{Remove1.channels4}}}
name Remove2
xpos {{189.0 x1001 188}}
ypos {{115.0 x1001 115}}
}
Copy {
inputs 2
channels all
metainput All
rangeinput All
name Copy1
xpos 189
ypos 165
}
Copy {
inputs 2
channels all
metainput All
rangeinput All
name Copy2
xpos 189
ypos 215
}
Copy {
inputs 2
channels all
metainput All
rangeinput All
name Copy3
xpos 189
ypos 265
}
Copy {
inputs 2
channels all
metainput All
rangeinput All
name Copy4
xpos 189
ypos 315
}
Copy {
inputs 2
channels all
metainput All
rangeinput All
name Copy5
xpos 189
ypos 365
}
Copy {
inputs 2
channels all
metainput All
rangeinput All
name Copy6
xpos 189
ypos 415
}
push $N35dda400
Remove {
channels CryptoMaterial
channels2 CryptoMaterial00
channels3 CryptoMaterial02
channels4 CryptoMaterial_a
name Remove1
xpos {{-185.0 x1001 -183}}
ypos {{115.0 x1001 115}}
}
Remove {
channels CryptoMaterial_a00
channels2 CryptoMaterial_a02
channels4 zDepth
name Remove3
xpos -185
ypos 165
}
Remove {
channels emitcolor
channels2 CryptoMaterial01
channels3 CryptoMaterial_a01
channels4 {P.x P.y P.z P.red}
name Remove5
xpos -185
ypos 215
}
Remove {
channels pObject
channels2 pRef
channels3 basecolor
channels4 S_direct_coat
name Remove7
xpos -185
ypos 265
}
Remove {
channels S_indirect_emission
channels2 S_indirect_refract
channels3 S_indirect_sss
channels4 S_indirect_volume
name Remove9
xpos -185
ypos 315
}
Remove {
channels nWorld
channels2 nObject
channels3 S_direct_refract
channels4 S_direct_sss
name Remove11
xpos -185
ypos 365
}
Remove {
channels S_indirect_coat
channels2 S_direct_volume
channels3 S_direct_emission
channels4 S_indirect_diffuse
name Remove13
xpos -185
ypos 415
}
Switch {
inputs 2
which {{UnlimitedRemove2.operation}}
name Switch1
xpos {{0.0 x1001 0}}
ypos {{532.0 x1001 233}}
}
Output {
name Output1
xpos {{0.0 x1001 -7}}
ypos {{642.0 x1001 342}}
}
end_group
push $N6cec5d00
Dot {
name Dot185
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11087
ypos -15876
}
Shuffle2 {
fromInput1 {{0} B}
in1 water
fromInput2 {{0} B}
mappings "4 water.red 0 0 rgba.red 0 0 water.green 0 1 rgba.green 0 1 water.blue 0 2 rgba.blue 0 2 water.alpha 0 3 rgba.alpha 0 3"
name Shuffle2
label "\[value in1]"
selected true
xpos 11053
ypos -15842
}
Switch {
inputs 2
which 1
name SwitchWater
label "WATER RENDER?"
note_font_size 21
selected true
xpos 11053
ypos -15724
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels pWater
name Copy5
selected true
xpos 11053
ypos -15557
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels zDepth
name Copy7
selected true
xpos 11053
ypos -15495
}
Group {
name Reformat_Overscan8
selected true
xpos 11053
ypos -15355
addUserKnob {20 User l Reformat_Overscan}
addUserKnob {41 format l "output format" T ReformatMASTER.format}
addUserKnob {41 filter T ReformatOverscanMASTER.filter}
addUserKnob {41 overscanPercent T ReformatOverscanMASTER.overscanPercent}
addUserKnob {20 info}
addUserKnob {26 version l ver: T "v1 rafal 10/02/2020"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust4
tile_color 0xaaaaaaff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 42
xpos -987
ypos -496
bdwidth 280
bdheight 332
z_order -92960
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "Flat plate res"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Black
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
Input {
inputs 0
name Input1
xpos -884
ypos -382
}
Reformat {
format {{{parent.parent.Reformat_OverscanMASTER.ReformatMASTER.format}}}
pbb true
name ReformatMASTER
xpos -884
ypos -342
}
Reformat {
type scale
scale {{overscanPercent==0?1:1-(1/overscanPercent)}}
resize none
filter impulse
pbb true
name ReformatOverscanMASTER
xpos -884
ypos -288
addUserKnob {20 User l percent}
addUserKnob {7 overscanPercent R 0 80}
overscanPercent {{parent.parent.Reformat_OverscanMASTER.ReformatOverscanMASTER.overscanPercent}}
}
Crop {
box {{-ceil(((input.height*((1-ReformatOverscanMASTER.scale)))*0.5))} {-ceil(((input.width*((1-ReformatOverscanMASTER.scale)))*0.5))} {ceil(input.width+((input.width*(1-ReformatOverscanMASTER.scale))*0.5))} {ceil(input.height+((input.height*(1-ReformatOverscanMASTER.scale))*0.5))}}
name CropOverscanMASTER
xpos -884
ypos -244
addUserKnob {20 User}
}
set N35f07200 [stack 0]
Output {
name Output1
xpos -884
ypos -144
}
push $N35f07200
Viewer {
frame_range 994-1161
fps 25
viewerProcess "sRGB (ACES)"
name Viewer1
xpos -624
ypos -303
}
end_group
Dot {
name Dot92
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11087
ypos -15106
}
ModifyMetaData {
metadata {
 {set gbk/scriptname "\[value root.name]"}
 {set exr/task_id "\[getenv FTRACK_TASKID]"}
 {remove exr/chunkCount ""}
 {remove exr/compressionName ""}
}
name ModifyMetaData1
selected true
xpos 11053
ypos -15071
}
Write {
channels all
file /coppi/proj/thrg/shottree/s01e01/015-0250/output2d/comp/comp25_precomp/thrg_s01e01_015-0250_comp25_precomp_ENVwater_lin_ap0_v001/thrg_s01e01_015-0250_comp25_precomp_ENVwater_lin_ap0_v001.%04d.exr
colorspace "ACES - ACES2065-1"
file_type exr
dw_compression_level 80
metadata "all metadata"
first_part rgba
render_order 100
version 20
beforeRender "from nuketools import beforerenderfunctions;beforerenderfunctions.beforeRender()"
name WritePreComp1
note_font "Bitstream Vera Sans Bold"
selected true
xpos 11053
ypos -15037
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
addUserKnob {20 fwrite l "GBK Write"}
addUserKnob {1 ffile l File}
ffile /coppi/proj/thrg/shottree/s01e01/015-0250/output2d/comp/comp25_precomp/thrg_s01e01_015-0250_comp25_precomp_ENVwater_lin_ap0_v001/thrg_s01e01_015-0250_comp25_precomp_ENVwater_lin_ap0_v001.%04d.exr
addUserKnob {1 fproxy l Proxy}
addUserKnob {6 fproxycheck l "Set Proxy Path" +STARTLINE}
addUserKnob {26 divider l "" +STARTLINE}
addUserKnob {4 task l Task M {comp alwy am came char conc cont cran edit fire flar glas inge ocea pm prod sbv scre skye util source}}
addUserKnob {1 fassetname l "Asset Name Preview:" +DISABLED}
fassetname comp25_precomp
addUserKnob {1 fassetbasename l "Asset Name:"}
fassetbasename comp25
addUserKnob {1 fecompname l "Component Name:"}
fecompname ENVwater
addUserKnob {1 flatestversion l "Latest published version:" +DISABLED}
flatestversion 0
addUserKnob {22 getlatest l Refresh -STARTLINE T "from nuketools import writetab \nwritetab.getLatestPubVersion() \n"}
addUserKnob {6 precomp l Precomp +STARTLINE}
precomp true
addUserKnob {6 denoised l Denoised(dn) +STARTLINE}
addUserKnob {6 delensed l Delensed(dl) +STARTLINE}
addUserKnob {6 neutralgrade l Neutralgrade(ng) +STARTLINE}
addUserKnob {6 matte l Matte +STARTLINE}
addUserKnob {6 no_frame_number l "No Frame Numbering" +STARTLINE}
addUserKnob {3 fversion l Version}
fversion 1
addUserKnob {4 format l Format M {exr dpx png tif jpg tga mov}}
addUserKnob {4 channel l Channel M {rgb rgba all}}
channel all
addUserKnob {4 fcompression l Compression M {none "Zip (1 scanline)" "Zip (16 scanlines)" "PIZ Wavelet (32 scanlines)" RLE B44 B44A DWAA DWAB}}
fcompression "Zip (1 scanline)"
addUserKnob {1 fview l View}
addUserKnob {26 saveSettingsMsg l "" -STARTLINE T "  "}
addUserKnob {3 frenderorder l "Render order"}
frenderorder 100
addUserKnob {22 frender l Render -STARTLINE T "from nuketools import writetab \nwritetab.render() \n"}
addUserKnob {3 fframeranges l "Frame range" +DISABLED}
fframeranges 1
addUserKnob {3 fframerangee l "" -STARTLINE +DISABLED}
fframerangee 1
addUserKnob {6 flimitrange l "Limit to range" -STARTLINE}
addUserKnob {22 rfromw l "Read from Write" -STARTLINE T "from nuketools import readfromwrite \nreadfromwrite.readFromWrite()"}
addUserKnob {22 rendcurr l "Render current frame" -STARTLINE T "from nuketools import writetab \nwritetab.renderCurrentFrame()"}
addUserKnob {6 fcopyscript l "Don't Copy Nuke Script" +STARTLINE}
addUserKnob {6 fwriteinit l "Is everything added" -STARTLINE +HIDDEN}
fwriteinit true
}
nuke_dispatch {
name nuke_dispatch_ENVwater
selected true
xpos 11053
ypos -14959
jobtitle comp25_precomp
framestart 1001
frameend 1161
customframes ""
maxtime 3:00:00
StartAfterTime ""
ThreadCount 0
ServiceKeyExpr ""
removelicense true
depthindex 2
}
set N35f04100 [stack 0]
Group {
name PrecompDispatch_ENVwater
tile_color 0xff0000ff
label "\[if \{\[value disable]==true\}  \{return OFF\}  \{return ON\}]"
note_font "Bitstream Vera Sans"
note_font_size 21
selected true
xpos 11053
ypos -14922
postage_stamp true
addUserKnob {20 User l PrecompDispatch}
addUserKnob {41 file l File T ReadPreComp.file}
addUserKnob {41 localizationPolicy l "Localization Policy" T ReadPreComp.localizationPolicy}
addUserKnob {41 updateLocalization l Update T ReadPreComp.updateLocalization}
addUserKnob {41 localizationPriority l "localization priority" T ReadPreComp.localizationPriority}
addUserKnob {41 format l Format T ReadPreComp.format}
addUserKnob {41 proxy l Proxy T ReadPreComp.proxy}
addUserKnob {41 proxy_format l "Proxy Format" T ReadPreComp.proxy_format}
addUserKnob {41 first l "Frame Range" T ReadPreComp.first}
addUserKnob {41 before l "" -STARTLINE T ReadPreComp.before}
addUserKnob {41 last l "" -STARTLINE T ReadPreComp.last}
addUserKnob {41 after l "" -STARTLINE T ReadPreComp.after}
addUserKnob {41 frame_mode l Frame T ReadPreComp.frame_mode}
addUserKnob {41 frame l "" -STARTLINE T ReadPreComp.frame}
addUserKnob {41 origfirst l "Original Range" T ReadPreComp.origfirst}
addUserKnob {41 origlast l "" -STARTLINE T ReadPreComp.origlast}
addUserKnob {41 origset l "Original Range Set" T ReadPreComp.origset}
addUserKnob {41 on_error l "Missing Frames" T ReadPreComp.on_error}
addUserKnob {41 reload T ReadPreComp.reload}
addUserKnob {41 colorspace l Colorspace T ReadPreComp.colorspace}
addUserKnob {41 premultiplied l Premultiplied T ReadPreComp.premultiplied}
addUserKnob {41 raw l "Raw Data" T ReadPreComp.raw}
addUserKnob {41 auto_alpha l "Auto Alpha" T ReadPreComp.auto_alpha}
addUserKnob {26 "" l "<b>EXR Options</b>"}
addUserKnob {41 offset_negative_display_window l "offset negative display window" T ReadPreComp.offset_negative_display_window}
addUserKnob {41 noprefix l "do not attach prefix" T ReadPreComp.noprefix}
addUserKnob {41 edge_pixels l "edge pixels" T ReadPreComp.edge_pixels}
addUserKnob {20 info}
addUserKnob {26 txt_1 l notes T "Connect to a 'nuke_dispatch' node. \na) rename 'component name' on write node\nb) rename the 'nuke_dispatch'  name adding a number on the end. \n(this set the render order, so you can manually set the order with F7)\nc) Enable node when rendering.\nd) click F7 and set render order dependency before render\nreorder the dispatchNode list. Top is reendered first\ne) after rendering refresh  the precompDispatch nodes and disable it. (use python script)\n* The frame range is set from the dispatch node.\n* Place the precomp before expensive nodes for efficiency."}
addUserKnob {26 ""}
addUserKnob {26 txt l ver: T "0.1 2020.12.21 RafKan"}
addUserKnob {6 UID_precompDispatch l "" +STARTLINE +INVISIBLE +STARTLINE}
}
Input {
inputs 0
name Input1
xpos -477
ypos -239
}
Read {
inputs 0
file_type exr
file "\[value this.parent.input.input.file]"
localizationPolicy off
format "4448 3096 0 0 4448 3096 1 Output Resolution_1_1"
first {{"\[value this.parent.input.framestart]" x1031 1001}}
last {{"\[value this.parent.input.frameend]" x1031 1237}}
origfirst {{"\[value this.parent.input.framestart]" x1001 1001}}
origlast {{"\[value this.parent.input.frameend]" x1001 1237}}
origset true
version 100
colorspace gbk_plate
auto_alpha true
name ReadPreComp
note_font_color 0xf368e4ff
xpos -477
ypos -164
disable {{"!\[exists parent.input]"}}
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
}
Output {
name Output1
xpos -477
ypos -5
}
end_group
Dot {
name Dot93
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11087
ypos -14788
}
Dot {
name Dot249
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11087
ypos -14602
}
Dot {
name Dot250
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11087
ypos -14224
}
Unpremult {
name Unpremult11
selected true
xpos 11053
ypos -14152
}
Grade {
white_panelDropped true
multiply 1.25
name GradeWater
note_font_size 31
selected true
xpos 11052
ypos -14119
}
Dot {
name Dot165
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11086
ypos -13948
}
set N35e85600 [stack 0]
Dot {
name Dot166
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11360
ypos -13948
}
set N35e84f00 [stack 0]
Roto {
cliptype none
replace true
curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x450e0000 x44c5c000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Ellipse1 512 bezier
     {{cc
       {f 8192}
       {p
        {xc35f049d xc0395f4d}
        {x4598bc46 x44c60cf7}
        {x435f049d x40395f8c}
        {0 xc377ae00}
        {x45afedc1 x451e2662}
        {0 x4377ade0}
        {x43c61970 x3eaa8000}
        {x4599a2af x45491dca}
        {xc3c8dfd0 xbeac8000}
        {x3a000000 x437aef71}
        {x457b4d98 x451746ec}
        {0 xc37aef71}}}
      {cc
       {f 8192}
       {p
        {xc454f568 xc21f9f40}
        {xc28410c0 xc5004e50}
        {x4439ca98 xc16e7d00}
        {xc1ddc100 xc4a8acc0}
        {x456060be x42f67f20}
        {xc2877040 x448d5340}
        {x43c61970 x3eaa4000}
        {xbe568000 x450a9908}
        {xc3c8dfd0 xbeacc000}
        {xc29b8020 x44810bc2}
        {xc4f48634 x42793ac0}
        {xc18e0080 xc44b287c}}}}
     {tx x448ae000 x4583cc00 x452ac800}
     {a osw x41200000 osf 0 str 1 spx x450e0000 spy x44c5c000 sb 1 ltn x448ae000 ltm x448ae000 tt x40e00000 fx x42c80000 fy x42c80000}}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x448ae000
        {x43da4cc0 x4125d82d}
        {x4599119c x450db000}
        {xc3da4cc0 xc125d800}
        {x43a1b0f0 x43b3f3d5}
        {x458a1a84 x45095e5e}
        {xc3a1b0e8 xc3b3f3d7}
        {x41700000 x41200000}
        {x45387277 x42c81b03}
        {xc1700000 xc1200000}
        {xc25c0000 xc2dc0000}
        {x45404a31 x42ea43a3}
        {x425c0000 x42dc0000}
        {xc38d28bd xc3a699b7}
        {x45a6a2ba x450ab930}
        {x438d28c0 x43a699b8}}}
      {cc
       {f 8192}
       {px x448ae000
        {x43da4cc0 x4125d82d}
        {0 0}
        {xc3da4cc0 xc125d800}
        {x4405c12c x4332dd88}
        {xc509e554 xc3ee61ac}
        {xc3ffe52c xc32b1988}
        {x41700000 x41200000}
        {xc59d8dd6 xc34a4330}
        {xc1700000 xc1200000}
        {xc25c0000 xc2dc0000}
        {x4537903f xc29b5020}
        {x425c0000 x42dc0000}
        {xc38d28bd xc3a699b7}
        {x43838160 xc0981c00}
        {x438d28c0 x43a699b8}}}}
     {tx x448ae000 x45592000 x449b4000}
     {a osw x41200000 osf 0 str 1 spx x450e0000 spy x44c5c000 sb 1 ltn x448ae000 ltm x448ae000 tt x40800000}}}}}}
toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 tt 7 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
toolbar_brush_hardness 0.200000003
toolbar_source_transform_scale {1 1}
toolbar_source_transform_center {2272 1582}
colorOverlay {0 0 0 0}
lifetime_type "all frames"
lifetime_start 1111
lifetime_end 1111
motionblur_shutter_offset_type centred
source_black_outside true
name Roto8
note_font_size 21
selected true
xpos 11326
ypos -13900
}
Blur {
size {1000 50}
mix 0.305
name Blur8
selected true
xpos 11326
ypos -13825
}
Project3D2 {
inputs 2
crop false
name Project3D3
selected true
xpos 11191
ypos -13819
}
Card2 {
rotate {90 0 0}
uniform_scale 100000000
control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
name Card3
selected true
xpos 11191
ypos -13783
}
push $N35e84f00
Dot {
name Dot112
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11419
ypos -13948
}
Shuffle2 {
fromInput1 {{0} B}
fromInput2 {{0} B}
mappings "4 black -1 -1 rgba.red 0 0 black -1 -1 rgba.green 0 1 black -1 -1 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
name Shuffle7
label "\[value in1]"
selected true
xpos 11385
ypos -13765
}
Dot {
name Dot162
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11419
ypos -13727
}
ScanlineRender {
inputs 3
conservative_shader_sampling false
shutteroffset centred
motion_vectors_type distance
name ScanlineRender3
selected true
xpos 11191
ypos -13700
}
push $N35e85600
Dot {
name Dot163
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11086
ypos -13816
}
set N36016400 [stack 0]
Dot {
name Dot164
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 10985
ypos -13816
}
Group {
name GradeAOV11
help "Colour correct the CG beauty using the secondary(aov) passes.with a subtractive process.\nto be used when:\n * the CG is good and only a few passes need adjusting\n * the secondaries don't add up to the beauty\n * rgb saturation (luminance mix on)\n * rgb contrast (with pivot)\n * matting with external mask input or main channel input or both with an operation.\n The order of correction is: Grade Node>Contrast Node>Saturation."
tile_color 0x8aa7dbff
label " \[value in]"
selected true
xpos 10951
ypos -13798
addUserKnob {20 User l GradeAOV}
addUserKnob {41 in l "Channel to use" T Shuffle5345.in}
addUserKnob {41 AlsoGradeChannel l "Also Grade Channel" t "as well as grading the beauty bake the grade into the selected channel" -STARTLINE T ShuffleCopy1544235.AlsoGradeChannel}
addUserKnob {41 solo T Switch3.solo}
addUserKnob {41 mute -STARTLINE T Switch3.mute}
addUserKnob {41 contact -STARTLINE T Switch3.contact}
addUserKnob {26 spacetxt l "                                                                                         " -STARTLINE T " "}
addUserKnob {22 NodeExpCopy l "Node Exp Copy" -STARTLINE T "knobsList = \[\"blackpoint\", \"whitepoint\", \"black\", \"white\", \"multiply\", \"add\", \"gamma\", \"reverse\", \"black_clamp\", \"white_clamp\", \"enable_mix_luminance\", \"mix_luminance\", \"value\", \"grey\", \"saturation\",\n \"enable_mix_luminance_1\", \"mix_luminance_1\", \"alpha\", \"mixBlend\"]\nnukescripts.clear_selection_recursive()\nn = nuke.thisNode()\nn\['selected'].setValue(True)\nwith nuke.root():\n nuke.nodeCopy(\"%clipboard%\")\n nuke.nodePaste(\"%clipboard%\")\n new_node = nuke.selectedNode()\n\n for j in new_node.knobs():\n\n  if j in  knobsList:\n   if isinstance(new_node.knob(j), nuke.Array_Knob):\n     new_node\[j].setSingleValue(False)\n   new_node\[j].setExpression( n.name() + '.' + j )\n\n\n"}
addUserKnob {26 ""}
addUserKnob {41 blackpoint T Grade273535.blackpoint}
addUserKnob {41 whitepoint T Grade273535.whitepoint}
addUserKnob {41 black l lift T Grade273535.black}
addUserKnob {41 white l gain T Grade273535.white}
addUserKnob {41 multiply T Grade273535.multiply}
addUserKnob {41 add l offset T Grade273535.add}
addUserKnob {41 gamma T Grade273535.gamma}
addUserKnob {41 reverse T Grade273535.reverse}
addUserKnob {41 black_clamp l "black clamp" -STARTLINE T Grade273535.black_clamp}
addUserKnob {41 white_clamp l "white clamp" -STARTLINE T Grade273535.white_clamp}
addUserKnob {26 text2 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance l "" -STARTLINE T Grade273535.enable_mix_luminance}
addUserKnob {41 mix_luminance l "" -STARTLINE T Grade273535.mix_luminance}
addUserKnob {26 "" l "  "}
addUserKnob {41 value l Contrast t " " T contrast.value}
addUserKnob {41 grey T contrast.grey}
addUserKnob {41 saturation T ColorCorrect6.saturation}
addUserKnob {26 text3 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance_1 l "" -STARTLINE T ColorCorrect6.enable_mix_luminance}
addUserKnob {41 mix_luminance_1 l "" -STARTLINE T ColorCorrect6.mix_luminance}
addUserKnob {26 ""}
addUserKnob {41 maskChannel l "mask channel" t "if the mask input is unplugged then the input channel can be used" T Keymix3.maskChannel}
addUserKnob {41 invertMask l invert -STARTLINE T Keymix3.invertMask}
addUserKnob {26 ""}
addUserKnob {41 alpha l "(un)premult by" T Unpremult13535.alpha}
addUserKnob {41 mixBlend l mix T Blend1.mixBlend}
addUserKnob {20 Info}
addUserKnob {22 documentation l " Documentation / Feedback " T "import webbrowser\nwebbrowser.open(\"http://opennuke.github.io/gradeAov_nkV/\")" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {26 version l version: T v1.2}
addUserKnob {26 created l created: T "1/1/2015 by <a href=\\'http://movingimagearts.com'> Rafal Kaniewski</a>"}
addUserKnob {26 modified l "modified: " T "01/10/2016 :update to fix back clamp by Rafal_Kan\n2017/12/19 :v1: forked, renamed, premult per channel, colourspaceShift\n2018/01/01: added copyExpNode and solo/mute"}
addUserKnob {26 source l source: T "<a href='https://github.com/vfxwiki/gradeAOV/'> Github.com</a>"}
addUserKnob {26 licence l licence: T "<a href=\"https://github.com/openNuke/toolset/blob/master/LICENCE\">READ ME</a>"}
}
Input {
inputs 0
name Input
xpos -220
ypos -721
}
set N36014f00 [stack 0]
Dot {
name Dot8
xpos -995
ypos -718
}
Dot {
name Dot5
xpos -995
ypos 105
}
set N36014100 [stack 0]
Dot {
name Dot9
xpos -995
ypos 217
}
LayerContactSheet {
width {{width*6}}
height {{height*6}}
showLayerNames true
name LayerContactSheet1
xpos -632
ypos 213
}
push $N36014f00
Dot {
name Dot1
xpos -186
ypos -633
}
set N35feeb00 [stack 0]
Dot {
name Dot27
xpos -457
ypos -567
}
set N35fee400 [stack 0]
Dot {
name Dot26
xpos -646
ypos -567
}
Shuffle {
in LS_sun_LGT_all
in2 alpha
alpha red2
name Shuffle5345
xpos -680
ypos -533
}
Premult {
name Premult1
xpos -680
ypos -507
}
set N35fecf00 [stack 0]
push $N35fee400
Merge2 {
inputs 2
operation from
Achannels rgb
Bchannels rgb
output rgb
name From
xpos -491
ypos -507
}
Dot {
name Dot15
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -457
ypos -422
}
set N35fec100 [stack 0]
Dot {
name Dot12
xpos -922
ypos -422
}
Dot {
name Dot14
xpos -922
ypos 172
}
push $N35fecf00
Unpremult {
alpha -rgba.alpha
name Unpremult13535
xpos -680
ypos -469
disable {{!alpha}}
addUserKnob {20 User}
}
Grade {
channels all
white {0.896666 1.166666 0.936666 1}
white_panelDropped true
multiply 9
black_clamp false
name Grade273535
xpos -680
ypos -380
addUserKnob {20 User}
addUserKnob {18 exposure R -1 1}
exposure {{multiply==0|white==0|multiply==0?0:log10(multiply)/log10(2)+log10(white)/log10(2)}}
addUserKnob {6 exposure_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
Expression {
expr0 "pow(r/grey, value+1)*grey"
expr1 "pow(g/grey, value+1)*grey"
expr2 "pow(b/grey, value+1)*grey"
name contrast
xpos -680
ypos -322
addUserKnob {20 User}
addUserKnob {7 grey}
grey 0.18
addUserKnob {18 value R -1 1}
value {0 0 0}
addUserKnob {6 value_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
ColorCorrect {
channels all
enable_mix_luminance false
name ColorCorrect6
xpos -680
ypos -273
}
set N35fc9600 [stack 0]
Dot {
name Dot4
xpos -833
ypos -263
}
Dot {
name Dot7
xpos -833
ypos 157
}
Dot {
name Dot10
xpos -403
ypos 186
}
Input {
inputs 0
name mask
label mask
xpos 65
ypos -760
number 1
}
Dot {
name Dot13
xpos 99
ypos 105
}
push $N36014100
Dot {
name Dot11
xpos -435
ypos 105
}
set N35f99d00 [stack 0]
Switch {
inputs 2
which {{"\[exists parent.input1]"}}
name Switch1
xpos -177
ypos 101
disable {{"!\[exists parent.input1]"}}
}
Invert {
name Invert1
xpos -177
ypos 127
}
push $N35f99d00
push $N35fc9600
Dot {
name Dot6
xpos -646
ypos 39
}
push $N35feeb00
Dot {
name Dot2
xpos -186
ypos -321
}
Dot {
name Dot3
xpos -284
ypos -321
}
push $N35fc9600
push $N35fec100
Clamp {
channels rgb
minimum_enable {{parent.Grade273535.black_clamp}}
maximum 1e+14
maximum_enable {{parent.Grade273535.white_clamp}}
name Clamp135345
xpos -491
ypos -374
}
Merge2 {
inputs 2
operation plus
Achannels rgb
Bchannels rgb
output rgb
name Merge34
xpos -491
ypos -267
}
Premult {
alpha {{{Unpremult1.alpha}}}
name Premult435345345
xpos -487
ypos -142
disable {{Unpremult13535.disable}}
}
Blend {
inputs 2
channels rgb
weight0 {{mixBlend}}
weight1 {{1-weight0}}
name Blend1
xpos -318
ypos -142
addUserKnob {20 User}
addUserKnob {7 mixBlend}
mixBlend 1
}
ShuffleCopy {
inputs 2
in {{{Shuffle.in}}}
alpha alpha2
black red
white green
red2 blue
out2 {{{Shuffle.in}}}
name ShuffleCopy1544235
xpos -318
ypos 35
disable {{!AlsoGradeChannel}}
addUserKnob {20 User}
addUserKnob {6 AlsoGradeChannel l "Also Grade Channel" +STARTLINE}
AlsoGradeChannel true
}
Keymix {
inputs 3
channels rgb
name Keymix3
xpos -318
ypos 161
disable {{!maskChannel}}
}
Switch {
inputs 4
which {{contact?3:mute?2:solo?1:0}}
name Switch3
xpos -318
ypos 196
addUserKnob {20 User}
addUserKnob {4 output M {"rgb graded by channel" "preview channel (solo)" "preview without (mute)" "channel contact sheet" "" "" "" "" ""}}
output "preview channel (solo)"
addUserKnob {6 solo +STARTLINE}
addUserKnob {6 mute -STARTLINE}
addUserKnob {6 contact -STARTLINE}
}
Output {
name Output1
xpos -318
ypos 385
}
end_group
Group {
name GradeAOV5
help "Colour correct the CG beauty using the secondary(aov) passes.with a subtractive process.\nto be used when:\n * the CG is good and only a few passes need adjusting\n * the secondaries don't add up to the beauty\n * rgb saturation (luminance mix on)\n * rgb contrast (with pivot)\n * matting with external mask input or main channel input or both with an operation.\n The order of correction is: Grade Node>Contrast Node>Saturation."
tile_color 0x8aa7dbff
label " \[value in]"
selected true
xpos 10951
ypos -13752
addUserKnob {20 User l GradeAOV}
addUserKnob {41 in l "Channel to use" T Shuffle5345.in}
addUserKnob {41 AlsoGradeChannel l "Also Grade Channel" t "as well as grading the beauty bake the grade into the selected channel" -STARTLINE T ShuffleCopy1544235.AlsoGradeChannel}
addUserKnob {41 solo T Switch3.solo}
addUserKnob {41 mute -STARTLINE T Switch3.mute}
addUserKnob {41 contact -STARTLINE T Switch3.contact}
addUserKnob {26 spacetxt l "                                                                                         " -STARTLINE T " "}
addUserKnob {22 NodeExpCopy l "Node Exp Copy" -STARTLINE T "knobsList = \[\"blackpoint\", \"whitepoint\", \"black\", \"white\", \"multiply\", \"add\", \"gamma\", \"reverse\", \"black_clamp\", \"white_clamp\", \"enable_mix_luminance\", \"mix_luminance\", \"value\", \"grey\", \"saturation\",\n \"enable_mix_luminance_1\", \"mix_luminance_1\", \"alpha\", \"mixBlend\"]\nnukescripts.clear_selection_recursive()\nn = nuke.thisNode()\nn\['selected'].setValue(True)\nwith nuke.root():\n nuke.nodeCopy(\"%clipboard%\")\n nuke.nodePaste(\"%clipboard%\")\n new_node = nuke.selectedNode()\n\n for j in new_node.knobs():\n\n  if j in  knobsList:\n   if isinstance(new_node.knob(j), nuke.Array_Knob):\n     new_node\[j].setSingleValue(False)\n   new_node\[j].setExpression( n.name() + '.' + j )\n\n\n"}
addUserKnob {26 ""}
addUserKnob {41 blackpoint T Grade273535.blackpoint}
addUserKnob {41 whitepoint T Grade273535.whitepoint}
addUserKnob {41 black l lift T Grade273535.black}
addUserKnob {41 white l gain T Grade273535.white}
addUserKnob {41 multiply T Grade273535.multiply}
addUserKnob {41 add l offset T Grade273535.add}
addUserKnob {41 gamma T Grade273535.gamma}
addUserKnob {41 reverse T Grade273535.reverse}
addUserKnob {41 black_clamp l "black clamp" -STARTLINE T Grade273535.black_clamp}
addUserKnob {41 white_clamp l "white clamp" -STARTLINE T Grade273535.white_clamp}
addUserKnob {26 text2 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance l "" -STARTLINE T Grade273535.enable_mix_luminance}
addUserKnob {41 mix_luminance l "" -STARTLINE T Grade273535.mix_luminance}
addUserKnob {26 "" l "  "}
addUserKnob {41 value l Contrast t " " T contrast.value}
addUserKnob {41 grey T contrast.grey}
addUserKnob {41 saturation T ColorCorrect6.saturation}
addUserKnob {26 text3 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance_1 l "" -STARTLINE T ColorCorrect6.enable_mix_luminance}
addUserKnob {41 mix_luminance_1 l "" -STARTLINE T ColorCorrect6.mix_luminance}
addUserKnob {26 ""}
addUserKnob {41 maskChannel l "mask channel" t "if the mask input is unplugged then the input channel can be used" T Keymix3.maskChannel}
addUserKnob {41 invertMask l invert -STARTLINE T Keymix3.invertMask}
addUserKnob {26 ""}
addUserKnob {41 alpha l "(un)premult by" T Unpremult13535.alpha}
addUserKnob {41 mixBlend l mix T Blend1.mixBlend}
addUserKnob {20 Info}
addUserKnob {22 documentation l " Documentation / Feedback " T "import webbrowser\nwebbrowser.open(\"http://opennuke.github.io/gradeAov_nkV/\")" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {26 version l version: T v1.2}
addUserKnob {26 created l created: T "1/1/2015 by <a href=\\'http://movingimagearts.com'> Rafal Kaniewski</a>"}
addUserKnob {26 modified l "modified: " T "01/10/2016 :update to fix back clamp by Rafal_Kan\n2017/12/19 :v1: forked, renamed, premult per channel, colourspaceShift\n2018/01/01: added copyExpNode and solo/mute"}
addUserKnob {26 source l source: T "<a href='https://github.com/vfxwiki/gradeAOV/'> Github.com</a>"}
addUserKnob {26 licence l licence: T "<a href=\"https://github.com/openNuke/toolset/blob/master/LICENCE\">READ ME</a>"}
}
Input {
inputs 0
name Input
xpos -220
ypos -721
}
set Nea0ecf00 [stack 0]
Dot {
name Dot8
xpos -995
ypos -718
}
Dot {
name Dot5
xpos -995
ypos 105
}
set Nea0ec100 [stack 0]
Dot {
name Dot9
xpos -995
ypos 217
}
LayerContactSheet {
width {{width*6}}
height {{height*6}}
showLayerNames true
name LayerContactSheet1
xpos -632
ypos 213
}
push $Nea0ecf00
Dot {
name Dot1
xpos -186
ypos -633
}
set N33b6b00 [stack 0]
Dot {
name Dot27
xpos -457
ypos -567
}
set N33b6400 [stack 0]
Dot {
name Dot26
xpos -646
ypos -567
}
Shuffle {
in LS_env_LGT_all
in2 alpha
alpha red2
name Shuffle5345
xpos -680
ypos -533
}
Premult {
name Premult1
xpos -680
ypos -507
}
set N33b4f00 [stack 0]
push $N33b6400
Merge2 {
inputs 2
operation from
Achannels rgb
Bchannels rgb
output rgb
name From
xpos -491
ypos -507
}
Dot {
name Dot15
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -457
ypos -422
}
set N33b4100 [stack 0]
Dot {
name Dot12
xpos -922
ypos -422
}
Dot {
name Dot14
xpos -922
ypos 172
}
push $N33b4f00
Unpremult {
alpha -rgba.alpha
name Unpremult13535
xpos -680
ypos -469
disable {{!alpha}}
addUserKnob {20 User}
}
Grade {
channels all
white {0.9781431556 0.9666659832 1.016666055 1}
white_panelDropped true
multiply 1.1
black_clamp false
name Grade273535
xpos -680
ypos -380
addUserKnob {20 User}
addUserKnob {18 exposure R -1 1}
exposure {{multiply==0|white==0|multiply==0?0:log10(multiply)/log10(2)+log10(white)/log10(2)}}
addUserKnob {6 exposure_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
Expression {
expr0 "pow(r/grey, value+1)*grey"
expr1 "pow(g/grey, value+1)*grey"
expr2 "pow(b/grey, value+1)*grey"
name contrast
xpos -680
ypos -322
addUserKnob {20 User}
addUserKnob {7 grey}
grey 0.11
addUserKnob {18 value R -1 1}
value -0.08
addUserKnob {6 value_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
ColorCorrect {
channels all
saturation 1.05
enable_mix_luminance false
name ColorCorrect6
xpos -680
ypos -273
}
set N6fb5600 [stack 0]
Dot {
name Dot4
xpos -833
ypos -263
}
Dot {
name Dot7
xpos -833
ypos 157
}
Dot {
name Dot10
xpos -403
ypos 186
}
Input {
inputs 0
name mask
label mask
xpos 65
ypos -760
number 1
}
Dot {
name Dot13
xpos 99
ypos 105
}
push $Nea0ec100
Dot {
name Dot11
xpos -435
ypos 105
}
set N2a3d9d00 [stack 0]
Switch {
inputs 2
which {{"\[exists parent.input1]"}}
name Switch1
xpos -177
ypos 101
disable {{"!\[exists parent.input1]"}}
}
Invert {
name Invert1
xpos -177
ypos 127
}
push $N2a3d9d00
push $N6fb5600
Dot {
name Dot6
xpos -646
ypos 39
}
push $N33b6b00
Dot {
name Dot2
xpos -186
ypos -321
}
Dot {
name Dot3
xpos -284
ypos -321
}
push $N6fb5600
push $N33b4100
Clamp {
channels rgb
minimum_enable {{parent.Grade273535.black_clamp}}
maximum 1e+14
maximum_enable {{parent.Grade273535.white_clamp}}
name Clamp135345
xpos -491
ypos -374
}
Merge2 {
inputs 2
operation plus
Achannels rgb
Bchannels rgb
output rgb
name Merge34
xpos -491
ypos -267
}
Premult {
alpha {{{Unpremult1.alpha}}}
name Premult435345345
xpos -487
ypos -142
disable {{Unpremult13535.disable}}
}
Blend {
inputs 2
channels rgb
weight0 {{mixBlend}}
weight1 {{1-weight0}}
name Blend1
xpos -318
ypos -142
addUserKnob {20 User}
addUserKnob {7 mixBlend}
mixBlend 1
}
ShuffleCopy {
inputs 2
in {{{Shuffle.in}}}
alpha alpha2
black red
white green
red2 blue
out2 {{{Shuffle.in}}}
name ShuffleCopy1544235
xpos -318
ypos 35
disable {{!AlsoGradeChannel}}
addUserKnob {20 User}
addUserKnob {6 AlsoGradeChannel l "Also Grade Channel" +STARTLINE}
AlsoGradeChannel true
}
Keymix {
inputs 3
channels rgb
name Keymix3
xpos -318
ypos 161
disable {{!maskChannel}}
}
Switch {
inputs 4
which {{contact?3:mute?2:solo?1:0}}
name Switch3
xpos -318
ypos 196
addUserKnob {20 User}
addUserKnob {4 output M {"rgb graded by channel" "preview channel (solo)" "preview without (mute)" "channel contact sheet" "" "" "" "" ""}}
output "preview channel (solo)"
addUserKnob {6 solo +STARTLINE}
addUserKnob {6 mute -STARTLINE}
addUserKnob {6 contact -STARTLINE}
}
Output {
name Output1
xpos -318
ypos 385
}
end_group
Group {
name GradeAOV12
help "Colour correct the CG beauty using the secondary(aov) passes.with a subtractive process.\nto be used when:\n * the CG is good and only a few passes need adjusting\n * the secondaries don't add up to the beauty\n * rgb saturation (luminance mix on)\n * rgb contrast (with pivot)\n * matting with external mask input or main channel input or both with an operation.\n The order of correction is: Grade Node>Contrast Node>Saturation."
tile_color 0x8aa7dbff
label " \[value in]"
selected true
xpos 10951
ypos -13691
addUserKnob {20 User l GradeAOV}
addUserKnob {41 in l "Channel to use" T Shuffle5345.in}
addUserKnob {41 AlsoGradeChannel l "Also Grade Channel" t "as well as grading the beauty bake the grade into the selected channel" -STARTLINE T ShuffleCopy1544235.AlsoGradeChannel}
addUserKnob {41 solo T Switch3.solo}
addUserKnob {41 mute -STARTLINE T Switch3.mute}
addUserKnob {41 contact -STARTLINE T Switch3.contact}
addUserKnob {26 spacetxt l "                                                                                         " -STARTLINE T " "}
addUserKnob {22 NodeExpCopy l "Node Exp Copy" -STARTLINE T "knobsList = \[\"blackpoint\", \"whitepoint\", \"black\", \"white\", \"multiply\", \"add\", \"gamma\", \"reverse\", \"black_clamp\", \"white_clamp\", \"enable_mix_luminance\", \"mix_luminance\", \"value\", \"grey\", \"saturation\",\n \"enable_mix_luminance_1\", \"mix_luminance_1\", \"alpha\", \"mixBlend\"]\nnukescripts.clear_selection_recursive()\nn = nuke.thisNode()\nn\['selected'].setValue(True)\nwith nuke.root():\n nuke.nodeCopy(\"%clipboard%\")\n nuke.nodePaste(\"%clipboard%\")\n new_node = nuke.selectedNode()\n\n for j in new_node.knobs():\n\n  if j in  knobsList:\n   if isinstance(new_node.knob(j), nuke.Array_Knob):\n     new_node\[j].setSingleValue(False)\n   new_node\[j].setExpression( n.name() + '.' + j )\n\n\n"}
addUserKnob {26 ""}
addUserKnob {41 blackpoint T Grade273535.blackpoint}
addUserKnob {41 whitepoint T Grade273535.whitepoint}
addUserKnob {41 black l lift T Grade273535.black}
addUserKnob {41 white l gain T Grade273535.white}
addUserKnob {41 multiply T Grade273535.multiply}
addUserKnob {41 add l offset T Grade273535.add}
addUserKnob {41 gamma T Grade273535.gamma}
addUserKnob {41 reverse T Grade273535.reverse}
addUserKnob {41 black_clamp l "black clamp" -STARTLINE T Grade273535.black_clamp}
addUserKnob {41 white_clamp l "white clamp" -STARTLINE T Grade273535.white_clamp}
addUserKnob {26 text2 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance l "" -STARTLINE T Grade273535.enable_mix_luminance}
addUserKnob {41 mix_luminance l "" -STARTLINE T Grade273535.mix_luminance}
addUserKnob {26 "" l "  "}
addUserKnob {41 value l Contrast t " " T contrast.value}
addUserKnob {41 grey T contrast.grey}
addUserKnob {41 saturation T ColorCorrect6.saturation}
addUserKnob {26 text3 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance_1 l "" -STARTLINE T ColorCorrect6.enable_mix_luminance}
addUserKnob {41 mix_luminance_1 l "" -STARTLINE T ColorCorrect6.mix_luminance}
addUserKnob {26 ""}
addUserKnob {41 maskChannel l "mask channel" t "if the mask input is unplugged then the input channel can be used" T Keymix3.maskChannel}
addUserKnob {41 invertMask l invert -STARTLINE T Keymix3.invertMask}
addUserKnob {26 ""}
addUserKnob {41 alpha l "(un)premult by" T Unpremult13535.alpha}
addUserKnob {41 mixBlend l mix T Blend1.mixBlend}
addUserKnob {20 Info}
addUserKnob {22 documentation l " Documentation / Feedback " T "import webbrowser\nwebbrowser.open(\"http://opennuke.github.io/gradeAov_nkV/\")" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {26 version l version: T v1.2}
addUserKnob {26 created l created: T "1/1/2015 by <a href=\\'http://movingimagearts.com'> Rafal Kaniewski</a>"}
addUserKnob {26 modified l "modified: " T "01/10/2016 :update to fix back clamp by Rafal_Kan\n2017/12/19 :v1: forked, renamed, premult per channel, colourspaceShift\n2018/01/01: added copyExpNode and solo/mute"}
addUserKnob {26 source l source: T "<a href='https://github.com/vfxwiki/gradeAOV/'> Github.com</a>"}
addUserKnob {26 licence l licence: T "<a href=\"https://github.com/openNuke/toolset/blob/master/LICENCE\">READ ME</a>"}
}
Input {
inputs 0
name Input
xpos -220
ypos -721
}
set N35f55600 [stack 0]
Dot {
name Dot8
xpos -995
ypos -718
}
Dot {
name Dot5
xpos -995
ypos 105
}
set N35f54800 [stack 0]
Dot {
name Dot9
xpos -995
ypos 217
}
LayerContactSheet {
width {{width*6}}
height {{height*6}}
showLayerNames true
name LayerContactSheet1
xpos -632
ypos 213
}
push $N35f55600
Dot {
name Dot1
xpos -186
ypos -633
}
set N35b1f200 [stack 0]
Dot {
name Dot27
xpos -457
ypos -567
}
set N35b1eb00 [stack 0]
Dot {
name Dot26
xpos -646
ypos -567
}
Shuffle {
in S_indirect_reflect
in2 alpha
alpha red2
name Shuffle5345
xpos -680
ypos -533
}
Premult {
name Premult1
xpos -680
ypos -507
}
set N35b1d600 [stack 0]
push $N35b1eb00
Merge2 {
inputs 2
operation from
Achannels rgb
Bchannels rgb
output rgb
name From
xpos -491
ypos -507
}
Dot {
name Dot15
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -457
ypos -422
}
set N35b1c800 [stack 0]
Dot {
name Dot12
xpos -922
ypos -422
}
Dot {
name Dot14
xpos -922
ypos 172
}
push $N35b1d600
Unpremult {
alpha -rgba.alpha
name Unpremult13535
xpos -680
ypos -469
disable {{!alpha}}
addUserKnob {20 User}
}
Grade {
channels all
white {1.7 1 0.3 1}
white_panelDropped true
multiply 6
black_clamp false
name Grade273535
xpos -680
ypos -380
addUserKnob {20 User}
addUserKnob {18 exposure R -1 1}
exposure {{multiply==0|white==0|multiply==0?0:log10(multiply)/log10(2)+log10(white)/log10(2)}}
addUserKnob {6 exposure_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
Expression {
expr0 "pow(r/grey, value+1)*grey"
expr1 "pow(g/grey, value+1)*grey"
expr2 "pow(b/grey, value+1)*grey"
name contrast
xpos -680
ypos -322
addUserKnob {20 User}
addUserKnob {7 grey}
grey 0.18
addUserKnob {18 value R -1 1}
value {0 0 0}
addUserKnob {6 value_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
ColorCorrect {
channels all
enable_mix_luminance false
name ColorCorrect6
xpos -680
ypos -273
}
set N35ae1d00 [stack 0]
Dot {
name Dot4
xpos -833
ypos -263
}
Dot {
name Dot7
xpos -833
ypos 157
}
Dot {
name Dot10
xpos -403
ypos 186
}
Input {
inputs 0
name mask
label mask
xpos 65
ypos -760
number 1
}
Dot {
name Dot13
xpos 99
ypos 105
}
push $N35f54800
Dot {
name Dot11
xpos -435
ypos 105
}
set N35ab2400 [stack 0]
Switch {
inputs 2
which {{"\[exists parent.input1]"}}
name Switch1
xpos -177
ypos 101
disable {{"!\[exists parent.input1]"}}
}
Invert {
name Invert1
xpos -177
ypos 127
}
push $N35ab2400
push $N35ae1d00
Dot {
name Dot6
xpos -646
ypos 39
}
push $N35b1f200
Dot {
name Dot2
xpos -186
ypos -321
}
Dot {
name Dot3
xpos -284
ypos -321
}
push $N35ae1d00
push $N35b1c800
Clamp {
channels rgb
minimum_enable {{parent.Grade273535.black_clamp}}
maximum 1e+14
maximum_enable {{parent.Grade273535.white_clamp}}
name Clamp135345
xpos -491
ypos -374
}
Merge2 {
inputs 2
operation plus
Achannels rgb
Bchannels rgb
output rgb
name Merge34
xpos -491
ypos -267
}
Premult {
alpha {{{Unpremult1.alpha}}}
name Premult435345345
xpos -487
ypos -142
disable {{Unpremult13535.disable}}
}
Blend {
inputs 2
channels rgb
weight0 {{mixBlend}}
weight1 {{1-weight0}}
name Blend1
xpos -318
ypos -142
addUserKnob {20 User}
addUserKnob {7 mixBlend}
mixBlend 1
}
ShuffleCopy {
inputs 2
in {{{Shuffle.in}}}
alpha alpha2
black red
white green
red2 blue
out2 {{{Shuffle.in}}}
name ShuffleCopy1544235
xpos -318
ypos 35
disable {{!AlsoGradeChannel}}
addUserKnob {20 User}
addUserKnob {6 AlsoGradeChannel l "Also Grade Channel" +STARTLINE}
AlsoGradeChannel true
}
Keymix {
inputs 3
channels rgb
name Keymix3
xpos -318
ypos 161
disable {{!maskChannel}}
}
Switch {
inputs 4
which {{contact?3:mute?2:solo?1:0}}
name Switch3
xpos -318
ypos 196
addUserKnob {20 User}
addUserKnob {4 output M {"rgb graded by channel" "preview channel (solo)" "preview without (mute)" "channel contact sheet" "" "" "" "" ""}}
output "preview channel (solo)"
addUserKnob {6 solo +STARTLINE}
addUserKnob {6 mute -STARTLINE}
addUserKnob {6 contact -STARTLINE}
}
Output {
name Output1
xpos -318
ypos 385
}
end_group
Group {
name GradeAOV1
help "Colour correct the CG beauty using the secondary(aov) passes.with a subtractive process.\nto be used when:\n * the CG is good and only a few passes need adjusting\n * the secondaries don't add up to the beauty\n * rgb saturation (luminance mix on)\n * rgb contrast (with pivot)\n * matting with external mask input or main channel input or both with an operation.\n The order of correction is: Grade Node>Contrast Node>Saturation."
tile_color 0x8aa7dbff
label " \[value in]"
selected true
xpos 10951
ypos -13653
addUserKnob {20 User l GradeAOV}
addUserKnob {41 in l "Channel to use" T Shuffle5345.in}
addUserKnob {41 AlsoGradeChannel l "Also Grade Channel" t "as well as grading the beauty bake the grade into the selected channel" -STARTLINE T ShuffleCopy1544235.AlsoGradeChannel}
addUserKnob {41 solo T Switch3.solo}
addUserKnob {41 mute -STARTLINE T Switch3.mute}
addUserKnob {41 contact -STARTLINE T Switch3.contact}
addUserKnob {26 spacetxt l "                                                                                         " -STARTLINE T " "}
addUserKnob {22 NodeExpCopy l "Node Exp Copy" -STARTLINE T "knobsList = \[\"blackpoint\", \"whitepoint\", \"black\", \"white\", \"multiply\", \"add\", \"gamma\", \"reverse\", \"black_clamp\", \"white_clamp\", \"enable_mix_luminance\", \"mix_luminance\", \"value\", \"grey\", \"saturation\",\n \"enable_mix_luminance_1\", \"mix_luminance_1\", \"alpha\", \"mixBlend\"]\nnukescripts.clear_selection_recursive()\nn = nuke.thisNode()\nn\['selected'].setValue(True)\nwith nuke.root():\n nuke.nodeCopy(\"%clipboard%\")\n nuke.nodePaste(\"%clipboard%\")\n new_node = nuke.selectedNode()\n\n for j in new_node.knobs():\n\n  if j in  knobsList:\n   if isinstance(new_node.knob(j), nuke.Array_Knob):\n     new_node\[j].setSingleValue(False)\n   new_node\[j].setExpression( n.name() + '.' + j )\n\n\n"}
addUserKnob {26 ""}
addUserKnob {41 blackpoint T Grade273535.blackpoint}
addUserKnob {41 whitepoint T Grade273535.whitepoint}
addUserKnob {41 black l lift T Grade273535.black}
addUserKnob {41 white l gain T Grade273535.white}
addUserKnob {41 multiply T Grade273535.multiply}
addUserKnob {41 add l offset T Grade273535.add}
addUserKnob {41 gamma T Grade273535.gamma}
addUserKnob {41 reverse T Grade273535.reverse}
addUserKnob {41 black_clamp l "black clamp" -STARTLINE T Grade273535.black_clamp}
addUserKnob {41 white_clamp l "white clamp" -STARTLINE T Grade273535.white_clamp}
addUserKnob {26 text2 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance l "" -STARTLINE T Grade273535.enable_mix_luminance}
addUserKnob {41 mix_luminance l "" -STARTLINE T Grade273535.mix_luminance}
addUserKnob {26 "" l "  "}
addUserKnob {41 value l Contrast t " " T contrast.value}
addUserKnob {41 grey T contrast.grey}
addUserKnob {41 saturation T ColorCorrect6.saturation}
addUserKnob {26 text3 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance_1 l "" -STARTLINE T ColorCorrect6.enable_mix_luminance}
addUserKnob {41 mix_luminance_1 l "" -STARTLINE T ColorCorrect6.mix_luminance}
addUserKnob {26 ""}
addUserKnob {41 maskChannel l "mask channel" t "if the mask input is unplugged then the input channel can be used" T Keymix3.maskChannel}
addUserKnob {41 invertMask l invert -STARTLINE T Keymix3.invertMask}
addUserKnob {26 ""}
addUserKnob {41 alpha l "(un)premult by" T Unpremult13535.alpha}
addUserKnob {41 mixBlend l mix T Blend1.mixBlend}
addUserKnob {20 Info}
addUserKnob {22 documentation l " Documentation / Feedback " T "import webbrowser\nwebbrowser.open(\"http://opennuke.github.io/gradeAov_nkV/\")" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {26 version l version: T v1.2}
addUserKnob {26 created l created: T "1/1/2015 by <a href=\\'http://movingimagearts.com'> Rafal Kaniewski</a>"}
addUserKnob {26 modified l "modified: " T "01/10/2016 :update to fix back clamp by Rafal_Kan\n2017/12/19 :v1: forked, renamed, premult per channel, colourspaceShift\n2018/01/01: added copyExpNode and solo/mute"}
addUserKnob {26 source l source: T "<a href='https://github.com/vfxwiki/gradeAOV/'> Github.com</a>"}
addUserKnob {26 licence l licence: T "<a href=\"https://github.com/openNuke/toolset/blob/master/LICENCE\">READ ME</a>"}
}
Input {
inputs 0
name Input
xpos -220
ypos -721
}
set N7effab00 [stack 0]
Dot {
name Dot8
xpos -995
ypos -718
}
Dot {
name Dot5
xpos -995
ypos 105
}
set N7eff9d00 [stack 0]
Dot {
name Dot9
xpos -995
ypos 217
}
LayerContactSheet {
width {{width*6}}
height {{height*6}}
showLayerNames true
name LayerContactSheet1
xpos -632
ypos 213
}
push $N7effab00
Dot {
name Dot1
xpos -186
ypos -633
}
set N7eff8800 [stack 0]
Dot {
name Dot27
xpos -457
ypos -567
}
set N7eff8100 [stack 0]
Dot {
name Dot26
xpos -646
ypos -567
}
Shuffle {
in S_direct_diffuse
in2 alpha
alpha red2
name Shuffle5345
xpos -680
ypos -533
}
Premult {
name Premult1
xpos -680
ypos -507
}
set N4e7deb00 [stack 0]
push $N7eff8100
Merge2 {
inputs 2
operation from
Achannels rgb
Bchannels rgb
output rgb
name From
xpos -491
ypos -507
}
Dot {
name Dot15
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -457
ypos -422
}
set N4e7ddd00 [stack 0]
Dot {
name Dot12
xpos -922
ypos -422
}
Dot {
name Dot14
xpos -922
ypos 172
}
push $N4e7deb00
Unpremult {
alpha -rgba.alpha
name Unpremult13535
xpos -680
ypos -469
disable {{!alpha}}
addUserKnob {20 User}
}
Grade {
channels all
white {1.35 1 0.65 1}
white_panelDropped true
multiply 3
black_clamp false
name Grade273535
xpos -680
ypos -380
addUserKnob {20 User}
addUserKnob {18 exposure R -1 1}
exposure {{multiply==0|white==0|multiply==0?0:log10(multiply)/log10(2)+log10(white)/log10(2)}}
addUserKnob {6 exposure_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
Expression {
expr0 "pow(r/grey, value+1)*grey"
expr1 "pow(g/grey, value+1)*grey"
expr2 "pow(b/grey, value+1)*grey"
name contrast
xpos -680
ypos -322
addUserKnob {20 User}
addUserKnob {7 grey}
grey 0.18
addUserKnob {18 value R -1 1}
value {0 0 0}
addUserKnob {6 value_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
ColorCorrect {
channels all
enable_mix_luminance false
name ColorCorrect6
xpos -680
ypos -273
}
set N4e7ab200 [stack 0]
Dot {
name Dot4
xpos -833
ypos -263
}
Dot {
name Dot7
xpos -833
ypos 157
}
Dot {
name Dot10
xpos -403
ypos 186
}
Input {
inputs 0
name mask
label mask
xpos 65
ypos -760
number 1
}
Dot {
name Dot13
xpos 99
ypos 105
}
push $N7eff9d00
Dot {
name Dot11
xpos -435
ypos 105
}
set N4e77f900 [stack 0]
Switch {
inputs 2
which {{"\[exists parent.input1]"}}
name Switch1
xpos -177
ypos 101
disable {{"!\[exists parent.input1]"}}
}
Invert {
name Invert1
xpos -177
ypos 127
}
push $N4e77f900
push $N4e7ab200
Dot {
name Dot6
xpos -646
ypos 39
}
push $N7eff8800
Dot {
name Dot2
xpos -186
ypos -321
}
Dot {
name Dot3
xpos -284
ypos -321
}
push $N4e7ab200
push $N4e7ddd00
Clamp {
channels rgb
minimum_enable {{parent.Grade273535.black_clamp}}
maximum 1e+14
maximum_enable {{parent.Grade273535.white_clamp}}
name Clamp135345
xpos -491
ypos -374
}
Merge2 {
inputs 2
operation plus
Achannels rgb
Bchannels rgb
output rgb
name Merge34
xpos -491
ypos -267
}
Premult {
alpha {{{Unpremult1.alpha}}}
name Premult435345345
xpos -487
ypos -142
disable {{Unpremult13535.disable}}
}
Blend {
inputs 2
channels rgb
weight0 {{mixBlend}}
weight1 {{1-weight0}}
name Blend1
xpos -318
ypos -142
addUserKnob {20 User}
addUserKnob {7 mixBlend}
mixBlend 1
}
ShuffleCopy {
inputs 2
in {{{Shuffle.in}}}
alpha alpha2
black red
white green
red2 blue
out2 {{{Shuffle.in}}}
name ShuffleCopy1544235
xpos -318
ypos 35
disable {{!AlsoGradeChannel}}
addUserKnob {20 User}
addUserKnob {6 AlsoGradeChannel l "Also Grade Channel" +STARTLINE}
AlsoGradeChannel true
}
Keymix {
inputs 3
channels rgb
name Keymix3
xpos -318
ypos 161
disable {{!maskChannel}}
}
Switch {
inputs 4
which {{contact?3:mute?2:solo?1:0}}
name Switch3
xpos -318
ypos 196
addUserKnob {20 User}
addUserKnob {4 output M {"rgb graded by channel" "preview channel (solo)" "preview without (mute)" "channel contact sheet" "" "" "" "" ""}}
output "preview channel (solo)"
addUserKnob {6 solo +STARTLINE}
addUserKnob {6 mute -STARTLINE}
addUserKnob {6 contact -STARTLINE}
}
Output {
name Output1
xpos -318
ypos 385
}
end_group
push $N36016400
Keymix {
inputs 3
name Keymix5
selected true
xpos 11052
ypos -13586
}
Dot {
name Dot251
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11086
ypos -13409
}
set N35a71d00 [stack 0]
Dot {
name Dot252
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11386
ypos -13409
}
Dot {
name Dot253
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11386
ypos -13376
}
set N35a70f00 [stack 0]
Dot {
name Dot254
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11386
ypos -13266
}
set N35a70800 [stack 0]
Dot {
name Dot255
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11386
ypos -12915
}
push $N35a70800
Grade {
channels nWorld
white {1 1 0 1}
white_panelDropped true
black_clamp false
name Grade9
selected true
xpos 11290
ypos -13276
}
push $N35a70f00
Group {
name P_Noise3Dsmall
help "Generates a 3D noise pattern on a given position pass.\nSupports fBm (Fractional Brownian Noise) and Turbulent Noise algorithms."
selected true
xpos 11260
ypos -13380
addUserKnob {20 User}
addUserKnob {41 in l "position data" T Shuffle_Input_Channels.in}
addUserKnob {41 output T OutChannel.out}
addUserKnob {6 unpremultiply +STARTLINE}
addUserKnob {6 useAlpha l "ignore outside alpha" -STARTLINE}
useAlpha true
addUserKnob {26 ""}
addUserKnob {4 noisetype M {fBm turbulent}}
noisetype turbulent
addUserKnob {13 size}
size {2 2 2}
addUserKnob {13 offset}
offset {{parent._P_Noise3D1_large_.offset.x} 0 0}
addUserKnob {26 ""}
addUserKnob {3 octaves}
octaves 4
addUserKnob {7 lacunarity R 0 5}
lacunarity 3
addUserKnob {7 gain}
gain 0.5
}
Input {
inputs 0
name img
xpos 131
ypos -676
}
AddChannels {
channels alpha
color 1
name AddChannels1
xpos 131
ypos -547
}
Shuffle {
in pWater
alpha blue
out rgb
name Shuffle_Input_Channels
xpos 131
ypos -486
}
set N35a42400 [stack 0]
Unpremult {
name Unpremult1
xpos 389
ypos -486
disable {{!parent.unpremultiply i}}
}
Expression {
temp_name0 fBmNoise
temp_expr0 fBm((r+offset.x)*1/size.x,(g+offset.y)*1/size.y,(b+offset.z)*1/size.z,octaves,lacunarity,gain)*.5+0.5
temp_name1 turbNoise
temp_expr1 turbulence((r+offset.x)*1/size.x,(g+offset.y)*1/size.y,(b+offset.z)*1/size.z,octaves,lacunarity,gain)
channel0 alpha
expr0 "parent.useAlpha && a == 0 ? 0 : (noisetype==0?fBmNoise:noisetype==1?turbNoise:0)"
name Expression3
xpos 390
ypos -431
}
Remove {
operation keep
channels alpha
name Remove1
xpos 390
ypos -363
}
Shuffle {
in alpha
name OutChannel
xpos 390
ypos -301
}
push $N35a42400
Dot {
name Dot1
xpos 165
ypos -244
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels all
name Copy1
xpos 390
ypos -263
}
Output {
name Output1
xpos 389
ypos -44
}
end_group
set N35a54100 [stack 0]
Group {
name _P_Noise3D1_large_
help "Generates a 3D noise pattern on a given position pass.\nSupports fBm (Fractional Brownian Noise) and Turbulent Noise algorithms."
selected true
xpos 11137
ypos -13380
addUserKnob {20 User}
addUserKnob {41 in l "position data" T Shuffle_Input_Channels.in}
addUserKnob {41 output T OutChannel.out}
addUserKnob {6 unpremultiply +STARTLINE}
addUserKnob {6 useAlpha l "ignore outside alpha" -STARTLINE}
useAlpha true
addUserKnob {26 ""}
addUserKnob {4 noisetype M {fBm turbulent}}
addUserKnob {13 size}
size {14 14 14}
addUserKnob {13 offset}
offset {0 2 -8}
addUserKnob {26 ""}
addUserKnob {3 octaves}
octaves 3
addUserKnob {7 lacunarity R 0 5}
lacunarity 2
addUserKnob {7 gain}
gain 0.5
}
Input {
inputs 0
name img
xpos 131
ypos -676
}
AddChannels {
channels alpha
color 1
name AddChannels1
xpos 131
ypos -547
}
Shuffle {
in pWater
alpha blue
out rgb
name Shuffle_Input_Channels
xpos 131
ypos -486
}
set N35814f00 [stack 0]
Unpremult {
name Unpremult1
xpos 389
ypos -486
disable {{!parent.unpremultiply i}}
}
Expression {
temp_name0 fBmNoise
temp_expr0 fBm((r+offset.x)*1/size.x,(g+offset.y)*1/size.y,(b+offset.z)*1/size.z,octaves,lacunarity,gain)*.5+0.5
temp_name1 turbNoise
temp_expr1 turbulence((r+offset.x)*1/size.x,(g+offset.y)*1/size.y,(b+offset.z)*1/size.z,octaves,lacunarity,gain)
channel0 alpha
expr0 "parent.useAlpha && a == 0 ? 0 : (noisetype==0?fBmNoise:noisetype==1?turbNoise:0)"
name Expression3
xpos 390
ypos -431
}
Remove {
operation keep
channels alpha
name Remove1
xpos 390
ypos -363
}
Shuffle {
in alpha
name OutChannel
xpos 390
ypos -301
}
push $N35814f00
Dot {
name Dot1
xpos 165
ypos -244
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels all
name Copy1
xpos 390
ypos -263
}
Output {
name Output1
xpos 389
ypos -44
}
end_group
Blur {
channels rgba
size 20
name Blur3
selected true
xpos 11137
ypos -13354
}
Grade {
channels rgba
blackpoint 0.18
multiply 1.25
gamma 0.5
white_clamp true
name Grade11
selected true
xpos 11137
ypos -13328
}
push $N35a54100
Blur {
channels rgba
size {10 30}
name Blur1
selected true
xpos 11260
ypos -13354
}
Grade {
channels rgba
gamma 0.42
white_clamp true
name Grade15
selected true
xpos 11260
ypos -13328
}
ChannelMerge {
inputs 2
name ChannelMerge15
selected true
xpos 11200
ypos -13288
}
Group {
inputs 2
name X_Distort
onCreate "n = nuke.thisNode()\nn\['levels'].setFlag(0x00000002)\nn\['levels'].setFlag(0x00000004)\nn\['levels'].setRange(3,30)"
knobChanged "n = nuke.thisNode()\n\nif n\['result'].value() == 'Distorted Source':\n    n\['mix'].setVisible(True)\n    n\['multiply'].setVisible(False)\nelse:\n    n\['mix'].setVisible(False)\n    n\['multiply'].setVisible(True)\n\nif n\['enable_aberration'].value() == 1:\n    n\['levels'].setEnabled(True)\n    n\['strength'].setEnabled(True)\nelse:\n    n\['levels'].setEnabled(False)\n    n\['strength'].setEnabled(False)\n\nif n\['distort_from'].value() == 'Noise':\n    n\['noise_size'].setVisible(True)\n    n\['noise_speed'].setVisible(True)\nelse:\n    n\['noise_size'].setVisible(False)\n    n\['noise_speed'].setVisible(False)\n\nif n\['levels'].value() < 3:\n    n\['levels'].setValue(3)\n\nif n\['blur_map'].value() <= 0:\n    n\['blur_map'].setValue(0)\n\nif n\['distort_from'].value() == 'Dist Map' and n.input(1) == None:\n\tn\['map_channels'].setEnabled(False)\nelse:\n\tn\['map_channels'].setEnabled(True)\n\nif n.input(2) == None:\n\tn\['mask'].setEnabled(False)\n\tn\['invert_mask'].setEnabled(False)\n\tn\['fringe_mask'].setEnabled(False)\nelse:\n\tn\['mask'].setEnabled(True)\n\tn\['invert_mask'].setEnabled(True)\n\tn\['fringe_mask'].setEnabled(True)"
tile_color 0xa57aaaff
selected true
xpos 11200
ypos -13206
addUserKnob {20 X_Distort}
addUserKnob {26 distortion_text l <b>Distortion}
addUserKnob {41 channels t "The channels that are going to be distorted." T Copy_Source.channels}
addUserKnob {14 distort t "The amount of distortion that is going to be applied." R -100 100}
distort 5.5
addUserKnob {14 blur t "The amount of blur that is going to be applied." R -100 100}
blur 10
addUserKnob {7 direction t "The direction of the generated vector map:\n\n· <b>At 0:</b> Pixels will be attracted to the brighter areas.\n· <b>At 0.5:</b> Pixels will be attracted to the darker areas.\n· <b>At 0.25 or .75:</b> Pixels will spin around the bright ans dark areas.\n\nThis pattern repeats, so a value of 1 will produce the same result as a value of 0 and a value of 0.5 will produce the same result as a value of 1.5."}
direction 0.5
addUserKnob {68 filter t "• <b>Impulse</b> - remapped pixels carry their original values.\n• <b>Cubic</b> - remapped pixels receive some smoothing.\n• <b>Keys</b> - remapped pixels receive some smoothing, plus minor sharpening (as shown by the negative -y portions of the curve).\n• <b>Simon</b> - remapped pixels receive some smoothing, plus medium sharpening (as shown by the negative -y portions of the curve).\n• <b>Rifman</b> - remapped pixels receive some smoothing, plus significant sharpening (as shown by the negative -y portions of the curve).\n• <b>Mitchell</b> - remapped pixels receive some smoothing, plus blurring to hide pixelation.\n• <b>Parzen</b> - remapped pixels receive the greatest smoothing of all filters.\n• <b>Notch</b> - remapped pixels receive flat smoothing (which tends to hide moire patterns).\n• <b>Lanczos4</b>, <b>Lanczos6</b>, and <b>Sinc4</b> - remapped pixels receive sharpening which can be useful for scaling down. Lanczos4 provides the least sharpening and Sinc4 the most." M {Impulse Cubic Keys Simon Rifman Mitchell Parzen Notch Lanczos4 Lanczos6 Sinc4 ""}}
filter Cubic
addUserKnob {68 method l " " t "The order in which Blur and Distortion will be applied. Distorting after the blur gives sharper results. Blurring after the distortion gives smoother edges." -STARTLINE M {"Blur then Distort" "Distort then Blur" "" "" "" ""}}
method "Distort then Blur"
addUserKnob {26 space_1 l "" +STARTLINE T " "}
addUserKnob {26 dist_map_text l "<b>Distortion Map"}
addUserKnob {41 map_channels l channels t "The channels that will be used to create the distortion map." T Copy_Map.Bchannels}
addUserKnob {68 distort_from l "distort from" t "Choose where do you want to create the distortion map from:\n\n<b>· Source</b> will distort the image using the information on the original image. \n<b>· Dist Map</b> will distort the image using the information on the secondary input of this node. \n<b>· Noise</b> will generate an animated fractal that will be used to create the distortion map." M {Source "Dist Map" Noise "" ""}}
distort_from "Dist Map"
addUserKnob {6 invert_map l invert t "Invert the distortion map. Should have the same effect as multiplying the distort and blur values for -1." -STARTLINE}
addUserKnob {6 fringe_map l fringe t "Use 4*(1-map)*map to create the distortion map.\n\nThis will have the effect deforming to both bright and dark areas at the same time." -STARTLINE}
addUserKnob {6 clamp_map l clamp t "Clamp any values from the distortion map below 0 or bigger than 1 before distorting." -STARTLINE}
addUserKnob {6 vector_map l INVISIBLE -STARTLINE +INVISIBLE}
addUserKnob {14 noise_size l size t "The size of the noise map that is going to be generated." +HIDDEN R 0 100}
noise_size 5000
addUserKnob {7 noise_speed l speed t "The rate of change of the noise over time. Currently this setting doesn't support animation (it may cause jittering)." -STARTLINE +HIDDEN}
noise_speed 1
addUserKnob {7 blur_map l "blur map" t "Filter the map to make it smoother and get rid of the high frequency distortions. Decrease this value to make a smoother distortion." R 0 100}
blur_map 1
addUserKnob {6 smooth t "Use a logarithmic scale instead of a linear scale for controlling the noise. It also decreases the overall distortion the higher the distortion map frequencies are.\n\nIn other words: this makes the distortion much more user friendly and easy to control." -STARTLINE}
smooth true
addUserKnob {26 space_2 l "" +STARTLINE T " "}
addUserKnob {26 aberration l <b>Aberration}
addUserKnob {26 enable -STARTLINE T ""}
addUserKnob {6 enable_aberration l " " t "Enable the chromatic aberration settings.\nChromatic Aberration will cause different colors to be distorted separately to get a leaking color effect." -STARTLINE}
addUserKnob {3 levels t "When distorting red, green and blue channels, this will create intermediate sublevels to make the blending smoother.\n\nKeep in mind that the rendertime is directly proportional to this level, so having 10 layers will make the render x10 slower.\n\nIt is recomended that you try to use the \"blur\" setting above before drastically increasing this setting." -STARTLINE +DISABLED R 3 30}
levels 7
addUserKnob {18 strength t "The ratio by which each channel will be distorted. The channel will be distorted by the distortion value times this ratio.\n\nSettings you can try:\n· <b>Red-Blue</b>: r:2 g:1 b:0.5\n· <b>Purple Fringe</b>: r:1 g:2 b:0.9\n· <b>Blue-Yellow</b>: r:1 g:0.9 b:1.5" +DISABLED}
strength {1.2 1 0.8}
addUserKnob {6 strength_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 strength_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 strength_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 strength_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 space_3 l "" +STARTLINE T " "}
addUserKnob {26 output_text l "" +STARTLINE}
addUserKnob {26 space_4 l " " T " "}
addUserKnob {41 mask t "Use this channel from the Mask input to blend the output with the Source input." T Copy_Mask.A}
addUserKnob {6 invert_mask l invert t "Inverts the use of the mask channel so that the distortion is limited to the non-white areas of the mask." -STARTLINE +DISABLED}
addUserKnob {6 fringe_mask l fringe t "Distorts on the edges of the mask." -STARTLINE +DISABLED}
addUserKnob {68 result t "Decide what is going to be the output of this node:\n\n<b>· Distorted Source:</b> Outputs the source with the applied distortion.\n<b>· Vector Map:</b> Outputs the raw distortion map. This can be used with and IDistort, for example.\n<b>· Normal Map:</b> Outputs a normalised vector map between 0 and 1, with 0.5 meaning no distortion." M {"Distorted Source" "Vector Map" "Normal Map" "" "" ""}}
addUserKnob {7 mix t "Dissolves between the original image at 0 and the full expressions effect at 1." -STARTLINE}
mix 1
addUserKnob {7 multiply t "Adjust the resulting map. Specially useful when exporting normal maps." -STARTLINE +HIDDEN R 0 10}
multiply 1
addUserKnob {22 onKnobChange l INVISIBLE +INVISIBLE T "n = nuke.thisNode()\n\nif n\['result'].value() == 'Distorted Source':\n    n\['mix'].setVisible(True)\n    n\['multiply'].setVisible(False)\nelse:\n    n\['mix'].setVisible(False)\n    n\['multiply'].setVisible(True)\n\nif n\['enable_aberration'].value() == 1:\n    n\['levels'].setEnabled(True)\n    n\['strength'].setEnabled(True)\nelse:\n    n\['levels'].setEnabled(False)\n    n\['strength'].setEnabled(False)\n\nif n\['distort_from'].value() == 'Noise':\n    n\['noise_size'].setVisible(True)\n    n\['noise_speed'].setVisible(True)\nelse:\n    n\['noise_size'].setVisible(False)\n    n\['noise_speed'].setVisible(False)\n\nif n\['levels'].value() < 3:\n    n\['levels'].setValue(3)\n\nif n\['blur_map'].value() <= 0:\n    n\['blur_map'].setValue(0)\n\nif n\['distort_from'].value() == 'Dist Map' and n.input(1) == None:\n\tn\['map_channels'].setEnabled(False)\nelse:\n\tn\['map_channels'].setEnabled(True)\n\nif n.input(2) == None:\n\tn\['mask'].setEnabled(False)\n\tn\['invert_mask'].setEnabled(False)\n\tn\['fringe_mask'].setEnabled(False)\nelse:\n\tn\['mask'].setEnabled(True)\n\tn\['invert_mask'].setEnabled(True)\n\tn\['fringe_mask'].setEnabled(True)" +STARTLINE}
addUserKnob {22 onNodeCreate l INVISIBLE -STARTLINE +INVISIBLE T "n = nuke.thisNode()\nn\['levels'].setFlag(0x00000002)\nn\['levels'].setFlag(0x00000004)\nn\['levels'].setRange(3,30)"}
addUserKnob {20 about l About}
addUserKnob {26 about_1 l "" t "A bunny:\n(\\(\\ \n( - -)\n((') (')" +STARTLINE T "<br>\n<b>Xavier Martín © 2016</b>"}
addUserKnob {26 ""}
addUserKnob {26 website l "" +STARTLINE T "<a href=\"http://www.xaviermartinvfx.com\"><span style=\"color:#C8C8C8;\">www.xaviermartinvfx.com</span></a>"}
addUserKnob {26 space4_1 l "" +STARTLINE T <br>}
addUserKnob {22 version l <center>version</center> T "nuke.message('X_Distort Gizmo <i>v3.3</i><br><b>Xavier Martín © 2016</b>')" +STARTLINE}
addUserKnob {22 help_documentation l <center>?</center> -STARTLINE T "nuke.message('You can find more documentation<br>on <a href=\"http://www.nukepedia.com/gizmos/transform/x_distort\"><span style=\"color:#BCBCBC;\">Nukepedia</span></a> or my <a href=\"http://www.xaviermartinvfx.com/x_distort/\"><span style=\"color:#BCBCBC;\">website</span></a>.')"}
}
Input {
inputs 0
name Mask
xpos -478
ypos 258
number 2
addUserKnob {20 User}
addUserKnob {3 input_test}
input_test {{"\[string first \[value Copy_Mask.A] \[channels this]] >-1"}}
}
Dot {
inputs 0
name Dot10
xpos -368
ypos 301
hide_input true
}
ChannelMerge {
inputs 2
A -rgba.alpha
operation plus
B none
name Copy_Mask
xpos -478
ypos 284
}
Expression {
channel0 alpha
expr0 4*(1-a)*a
channel1 none
channel2 none
channel3 none
name Fringe2
xpos -478
ypos 336
disable {{1-parent.fringe_mask}}
}
Invert {
channels alpha
name Invert2
xpos -478
ypos 362
disable {{1-parent.invert_mask}}
}
Constant {
inputs 0
channels alpha
color 1
name Constant1
xpos -342
ypos 303
postage_stamp false
}
Switch {
inputs 2
which {{parent.Mask.input_test}}
name Switch2
xpos -342
ypos 368
}
Input {
inputs 0
name Source
xpos -12
ypos -131
}
set N35788800 [stack 0]
Dot {
name Dot3
xpos 22
ypos -105
}
set N35788100 [stack 0]
Noise {
replace true
size {{noise_size.w} {noise_size.h}}
zoffset {{noise_speed*frame/fps}}
gamma 1
center {1024 778}
name Noise1
xpos -374
ypos -109
}
Input {
inputs 0
name Dist_Map
xpos -232
ypos -171
number 1
}
push $N35788100
Switch {
inputs 3
which {{distort_from}}
name Switch1
xpos -232
ypos -109
}
set N3576dd00 [stack 0]
push $N3576dd00
Merge2 {
inputs 2
operation plus
Achannels none
Bchannels nWorld
output {forward.u forward.v none backward.u}
name Copy_Map
xpos -232
ypos -83
}
set N3576d600 [stack 0]
Remove {
operation keep
channels {forward.u forward.v none -backward.v}
name Clear1
xpos -122
ypos -83
}
Multiply {
channels forward
value 0.01
name Multiply6
xpos -122
ypos 73
}
Expression {
channel0 {forward.u -forward.v}
expr0 4*(1-forward.u)*forward.u
channel1 {-forward.u forward.v}
expr1 4*(1-forward.v)*forward.v
channel2 none
channel3 none
name Fringe3
xpos -122
ypos 130
disable {{1-fringe_map}}
}
Invert {
channels forward
name Invert3
xpos -122
ypos 172
disable {{1-invert_map}}
}
Dot {
name Dot4
xpos -88
ypos 269
}
push $N3576d600
Saturation {
channels motion
saturation 0
mode Average
name Average
xpos -232
ypos -45
}
push $N3576d600
push $N3576d600
Merge2 {
inputs 2
operation divide
Achannels {forward.u forward.v none backward.u}
Bchannels {forward.u forward.v none backward.u}
output {forward.u forward.v none backward.u}
name Detect_Chnl
xpos -375
ypos -83
}
Saturation {
channels motion
saturation 0
mode Average
name Average1
xpos -375
ypos -45
}
Merge2 {
inputs 2
operation divide
Achannels {forward.u -forward.v}
Bchannels {forward.u -forward.v}
output {forward.u -forward.v}
name Normalize
xpos -232
ypos -7
}
Remove {
operation keep
channels {forward.u -forward.v none -backward.v}
name Clear
xpos -232
ypos 31
}
Expression {
channel0 {forward.u -forward.v}
expr0 4*(1-forward.u)*forward.u
channel1 none
channel2 none
channel3 none
name Fringe1
xpos -232
ypos 69
disable {{1-fringe_map}}
}
Invert {
channels {forward.u -forward.v}
name Invert1
xpos -232
ypos 95
disable {{1-invert_map}}
}
Clamp {
channels {forward.u -forward.v}
name Clamp1
xpos -232
ypos 133
disable {{1-clamp_map}}
}
Dot {
name Dot8
xpos -198
ypos 171
}
set N35904f00 [stack 0]
Matrix {
channels {forward.u -forward.v none -backward.u}
matrix {
    {0 1 0}
    {0 0 0}
    {0 -1 0}
  }
name YMatrix
xpos -232
ypos 189
}
push $N35904f00
Dot {
name Dot2
xpos -308
ypos 171
}
Matrix {
channels {forward.u -forward.v none -backward.u}
matrix {
    {0 0 0}
    {-1 0 1}
    {0 0 0}
  }
name XMatrix
xpos -342
ypos 189
}
Dot {
name Dot1
xpos -308
ypos 237
}
Copy {
inputs 2
from0 forward.u
to0 forward.v
name Join
xpos -232
ypos 227
}
Switch {
inputs 2
which {{vector_map}}
name Switch5
xpos -232
ypos 265
}
Expression {
temp_name0 ds
temp_expr0 -sin(direction*2*pi)
temp_name1 dc
temp_expr1 -cos(direction*2*pi)
temp_name2 u
temp_expr2 forward.u
temp_name3 v
temp_expr3 forward.v
channel0 {forward.u -forward.v}
expr0 u*dc+v*ds
channel1 {-forward.u forward.v}
expr1 -u*ds+v*dc
channel2 none
channel3 none
name Expression1
xpos -232
ypos 291
}
Blur {
size {{blur_map+1}}
quality {{ceil(blur_map+1)}}
name Blur1
xpos -232
ypos 317
}
ChannelMerge {
inputs 2
operation plus
B none
bbox B
name Copy_Mask1
xpos -232
ypos 355
}
Premult {
channels forward
name Premult1
xpos -232
ypos 407
}
NoTimeBlur {
name NoTimeBlur2
xpos -232
ypos 445
disable {{"1- enable_aberration"}}
}
Multiply {
channels forward
value {{"smoothstep(.5,0,frame-int(frame))*strength.r + (1-smoothstep(.5,0,frame-int(frame))-smoothstep(.5,1,frame-int(frame)))*strength.g + smoothstep(.5,1,frame-int(frame))*strength.b"}}
name Multiply4
xpos -232
ypos 471
disable {{"1- enable_aberration"}}
}
set N358af900 [stack 0]
Multiply {
value {{"smooth*distort.w == 0 ? distort.w*100*multiply : distort.w*blur_map*2"} {"smooth*distort.h == 0 ? distort.h*100*multiply : distort.h*blur_map*2"} 1 1}
name Multiply5
xpos -382
ypos 471
}
Shuffle {
in forward
blue black
alpha black
name Shuffle1
label "\[value in 1]"
xpos -382
ypos 509
}
set N358add00 [stack 0]
Expression {
expr0 (r/(abs(r)+20))*.5+.5
expr1 (g/(abs(g)+20))*.5+.5
expr2 1
channel3 none
name Expression2
xpos -516
ypos 509
}
Remove {
operation keep
channels {rgba.red rgba.green rgba.blue none}
name Remove2
xpos -516
ypos 535
}
Dot {
name Dot15
xpos -482
ypos 941
}
push $N358add00
Remove {
operation keep
channels {rgba.red rgba.green -rgba.blue none}
name Remove1
xpos -382
ypos 535
}
Dot {
name Dot14
xpos -348
ypos 941
}
push $N358af900
Dot {
name Dot13
xpos -198
ypos 518
}
Dot {
name Dot5
xpos -122
ypos 518
}
set N35882b00 [stack 0]
Dot {
name Dot6
xpos -122
ypos 622
}
set N35882400 [stack 0]
Dot {
name Dot7
xpos -122
ypos 700
}
push $N35882400
push $N35882b00
push $N35788100
Remove {
operation keep
channels rgba
name Copy_Source
xpos -12
ypos -87
}
NoTimeBlur {
name NoTimeBlur1
xpos -12
ypos 379
disable {{"1- enable_aberration"}}
}
Multiply {
channels rgb
value {{smoothstep(.5,0,frame-int(frame))} {1-smoothstep(.5,0,frame-int(frame))-smoothstep(.5,1,frame-int(frame))} {smoothstep(.5,1,frame-int(frame))} {smoothstep(.5,0,frame)}}
value_panelDropped true
name Multiply1
xpos -12
ypos 405
disable {{"1- enable_aberration"}}
}
Copy {
inputs 2
channels forward
bbox B
name Copy1
xpos -12
ypos 501
disable {{"parent.method + (blur==0)"}}
}
VectorBlur {
channels {{{Copy_Source.channels}}}
uv forward
scale {{"smooth*blur.w == 0 ? blur.w*100 : blur.w*(min(blur_map,50))*2"} {"smooth*blur.h == 0 ? blur.h*100 : blur.h*(min(blur_map,50))*2"}}
offset -1
name VectorBlur1
xpos -12
ypos 553
disable {{"parent.method + (blur==0)"}}
}
AdjBBox {
numpixels -1
name AdjBBox1
xpos -12
ypos 579
disable {{parent.method}}
}
Copy {
inputs 2
channels forward
bbox B
name Copy2
xpos -12
ypos 605
disable {{(distort==0)}}
}
IDistort {
channels {{{Copy_Source.channels}}}
uv forward
uv_scale {{"smooth*distort.w == 0 ? distort.w*100 : distort.w*(min(blur_map,50))*2"} {"smooth*distort.h == 0 ? distort.h*100 : distort.h*(min(blur_map,50))*2"}}
filter {{parent.filter}}
name IDistort1
xpos -12
ypos 657
disable {{"distort == 0"}}
}
Copy {
inputs 2
channels forward
bbox B
name Copy3
xpos -12
ypos 683
disable {{"1-parent.method + (blur==0)"}}
}
VectorBlur {
channels {{{Copy_Source.channels}}}
uv forward
scale {{parent.VectorBlur1.scale.w} {parent.VectorBlur1.scale.h}}
offset -1
name VectorBlur2
xpos -12
ypos 735
disable {{"1-parent.method + (parent.blur == 0)"}}
}
set N3586cf00 [stack 0]
TimeBlur {
divisions {{levels}}
shutter 1.49999999
shutteroffset start
shuttercustomoffset 0
name TimeBlur1
xpos -12
ypos 837
disable {{"1- enable_aberration"}}
}
set N3586c800 [stack 0]
push $N3586c800
Dot {
name Dot11
xpos -112
ypos 841
}
push $N3586cf00
NoTimeBlur {
name NoTimeBlur3
xpos -324
ypos 735
}
Multiply {
value 0
name Multiply3
xpos -324
ypos 761
}
Add {
value 1
name Add1
xpos -324
ypos 799
}
Multiply {
channels rgb
value {{smoothstep(.5,0,frame-int(frame))} {1-smoothstep(.5,0,frame-int(frame))-smoothstep(.5,1,frame-int(frame))} {smoothstep(.5,1,frame-int(frame))} {smoothstep(.5,0,frame)}}
value_panelDropped true
name Multiply2
xpos -324
ypos 837
}
TimeBlur {
divisions {{levels}}
shutter 1.4999999
shutteroffset start
shuttercustomoffset 0
name TimeBlur2
xpos -324
ypos 863
}
Merge2 {
inputs 2
operation divide
bbox A
metainput A
name Merge2
xpos -146
ypos 863
}
Switch {
inputs 2
which {{"1- enable_aberration"}}
name Switch3
xpos -12
ypos 863
}
push $N35788800
Dot {
name Dot9
xpos 132
ypos -127
}
Dot {
name Dot12
xpos 132
ypos 839
}
set N35a02b00 [stack 0]
Merge2 {
inputs 2
operation copy
bbox B
Achannels none
Bchannels none
output none
also_merge {{{parent.Copy_Source.channels}}}
name Merge1
xpos 98
ypos 857
}
push $N35a02b00
Dissolve {
inputs 2
which {{parent.mix}}
name Dissolve1
xpos 263
ypos 857
}
Switch {
inputs 3
which {{result}}
name Switch4
xpos 263
ypos 937
}
Output {
name Output1
xpos 263
ypos 992
}
end_group
Dot {
name Dot256
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11234
ypos -13100
}
push $N35a71d00
Dot {
name Dot111
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11088
ypos -13275
}
set N35a00100 [stack 0]
Dot {
name Dot113
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 10993
ypos -13275
}
SoftClip {
conversion "logarithmic compress"
softclip_min 0.1
softclip_max 0.5
name SoftClip1
selected true
xpos 10959
ypos -13228
}
Grade {
white 0.65
white_clamp true
name Grade17
label "cloud shadow"
selected true
xpos 10963
ypos -13182
}
push $N35a00100
Keymix {
inputs 3
name Keymix4
selected true
xpos 11053
ypos -13110
}
Premult {
name Premult15
selected true
xpos 11053
ypos -12961
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy4
selected true
xpos 11053
ypos -12925
}
Dot {
name Dot258
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11087
ypos -12844
}
Dot {
name Dot180
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11089
ypos -12728
}
set N2f230100 [stack 0]
Dot {
name Dot181
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11373
ypos -12728
}
Dot {
name Dot177
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11373
ypos -12656
}
set N33190f00 [stack 0]
Dot {
name Dot179
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11373
ypos -12515
}
add_layer {foam_additional foam_additional.red foam_additional.green foam_additional.blue foam_additional.alpha}
Shuffle2 {
fromInput1 {{0} B}
in1 foam_additional
fromInput2 {{0} B}
mappings "4 foam_additional.red 0 0 rgba.red 0 0 foam_additional.green 0 1 rgba.green 0 1 foam_additional.blue 0 2 rgba.blue 0 2 foam_additional.alpha 0 3 rgba.alpha 0 3"
name Shuffle35
label "\[value in1]"
selected true
xpos 11164
ypos -12525
}
push $N33190f00
add_layer {foam_main foam_main.red foam_main.green foam_main.blue foam_main.alpha}
Shuffle2 {
fromInput1 {{0} B}
in1 foam_main
fromInput2 {{0} B}
mappings "4 foam_main.red 0 0 rgba.red 0 0 foam_main.green 0 1 rgba.green 0 1 foam_main.blue 0 2 rgba.blue 0 2 foam_main.alpha 0 3 rgba.alpha 0 3"
name Shuffle31
label "\[value in1]"
selected true
xpos 11184
ypos -12666
}
push $N2f230100
Grade {
inputs 1+1
multiply 30
name Grade34
selected true
xpos 11054
ypos -12660
}
Grade {
inputs 1+1
multiply 5
name Grade3
selected true
xpos 11054
ypos -12519
}
Dot {
name Dot274
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11084
ypos -12205
}
set N359c9600 [stack 0]
Dot {
name Dot275
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11084
ypos -12148
}
set N359c8f00 [stack 0]
Dot {
name Dot278
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11084
ypos -12092
}
set N359c8800 [stack 0]
push $N6cec4f00
Group {
name Reformat_Overscan1
selected true
xpos 11713
ypos -15341
addUserKnob {20 User l Reformat_Overscan}
addUserKnob {41 format l "output format" T ReformatMASTER.format}
addUserKnob {41 filter T ReformatOverscanMASTER.filter}
addUserKnob {41 overscanPercent T ReformatOverscanMASTER.overscanPercent}
addUserKnob {20 info}
addUserKnob {26 version l ver: T "v1 rafal 10/02/2020"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust4
tile_color 0xaaaaaaff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 42
xpos -987
ypos -496
bdwidth 280
bdheight 332
z_order -92960
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "Flat plate res"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Black
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
Input {
inputs 0
name Input1
xpos -884
ypos -382
}
Reformat {
format {{{parent.parent.Reformat_OverscanMASTER.ReformatMASTER.format}}}
pbb true
name ReformatMASTER
xpos -884
ypos -342
}
Reformat {
type scale
scale {{overscanPercent==0?1:1-(1/overscanPercent)}}
resize none
filter impulse
pbb true
name ReformatOverscanMASTER
xpos -884
ypos -288
addUserKnob {20 User l percent}
addUserKnob {7 overscanPercent R 0 80}
overscanPercent {{parent.parent.Reformat_OverscanMASTER.ReformatOverscanMASTER.overscanPercent}}
}
Crop {
box {{-ceil(((input.height*((1-ReformatOverscanMASTER.scale)))*0.5))} {-ceil(((input.width*((1-ReformatOverscanMASTER.scale)))*0.5))} {ceil(input.width+((input.width*(1-ReformatOverscanMASTER.scale))*0.5))} {ceil(input.height+((input.height*(1-ReformatOverscanMASTER.scale))*0.5))}}
name CropOverscanMASTER
xpos -884
ypos -244
addUserKnob {20 User}
}
set N359add00 [stack 0]
Output {
name Output1
xpos -884
ypos -144
}
push $N359add00
Viewer {
frame_range 994-1161
fps 25
viewerProcess "sRGB (ACES)"
name Viewer1
xpos -624
ypos -303
}
end_group
add_layer {cloudSeprarted cloudSeprarted.red cloudSeprarted.green cloudSeprarted.blue cloudSeprarted.alpha}
Group {
name UnlimitedRemove1
tile_color 0x9e3a61ff
selected true
xpos 11713
ypos -15280
lock_connections true
addUserKnob {20 user l UnlimitedRemove}
addUserKnob {20 info l Info n 1}
info 0
addUserKnob {26 text_info l "" +STARTLINE T "<font color=#e1f2a2>UnlimitedRemove v1.2</font> | author: Guillermo Algora\n<br>\nThe functionality of the native Remove node with the possibility of unlimited channel slots.\n<br>"}
addUserKnob {20 endGroup n -1}
addUserKnob {4 operation t "Remove: the named channels are deleted\nKeep: all but the named channels are deleted" M {remove keep "" "" "" "" "" "" "" "" "" ""}}
operation keep
addUserKnob {26 description l "" -STARTLINE T "                   Channel slots:"}
addUserKnob {22 add l "Add (+4)" t "Add four additional channel slots" -STARTLINE T "def add_remove_node(switch_node):\n\n    last_remove_node = switch_node.input(0)\n\n    nukescripts.clear_selection_recursive()\n    last_remove_node.setSelected(True)\n    new_remove_node = nuke.createNode(\"Remove\", inpanel=False)\n    nukescripts.clear_selection_recursive()\n\n    new_remove_node\['operation'].setValue(\"remove\")\n    for knob_name in (\"channels\", \"channels2\", \"channels3\", \"channels4\"):\n        new_remove_node\[knob_name].setValue(\"none\")\n\n    new_remove_node\['xpos'].setExpression('\{\}'.format(last_remove_node\['xpos'].value()))\n    new_remove_node\['ypos'].setExpression('\{\}'.format(last_remove_node\['ypos'].value()+50))\n\n    return new_remove_node\n\ndef add_keep_node(switch_node, new_remove_node):\n\n    last_keep_node = switch_node.input(1)\n\n    nukescripts.clear_selection_recursive()\n    last_keep_node.setSelected(True)\n    new_keep_node = nuke.createNode(\"Remove\", inpanel=False)\n\n    new_keep_node\['operation'].setValue(\"keep\")\n    for knob_name in (\"channels\", \"channels2\", \"channels3\", \"channels4\"):\n        new_keep_node\[knob_name].setValue(\"none\")\n\n    new_keep_node\['xpos'].setExpression('\{\}'.format(last_keep_node\['xpos'].value()-100))\n    new_keep_node\['ypos'].setExpression('\{\}'.format(last_keep_node\['ypos'].value()+50))\n\n    new_keep_node.setSelected(True)\n    copy_node = nuke.createNode(\"Copy\", inpanel=False)\n    nukescripts.clear_selection_recursive()\n\n    for knob_name in (\"from0\", \"from1\", \"from2\", \"from3\"):\n        copy_node\[knob_name].setValue(\"none\")\n    for knob_name in (\"to0\", \"to1\", \"to2\", \"to3\"):\n        copy_node\[knob_name].setValue(\"none\")\n   \n    copy_node\['channels'].setValue(\"all\")\n    copy_node\['metainput'].setValue(\"All\")\n    copy_node\['rangeinput'].setValue(\"All\")\n    copy_node\['bbox'].setValue(\"union\")\n     \n    copy_node\['xpos'].setExpression('\{\}'.format(new_keep_node\['xpos'].value()+100))\n    copy_node\['ypos'].setExpression('\{\}'.format(new_keep_node\['ypos'].value()))\n\n    copy_node.setInput(0, last_keep_node)\n    new_keep_node.setInput(0, nuke.toNode(\"Dot1\"))\n\n    for knob_name in (\"channels\", \"channels2\", \"channels3\", \"channels4\"):\n        new_keep_node\[knob_name].setExpression(new_remove_node.name() + '.\{\}'.format(knob_name))\n\ndef add_channels(this_node, new_remove_node):\n\n    highest = \[]\n    for knob in this_node.allKnobs():\n        if \"channel\" in knob.name():\n            number = knob.name().split(\"channels\")\[1]\n            if number.isdigit():\n                highest.append(int(number))\n    highest = max(highest)\n\n    for knob_name in (\"channels\", \"channels2\", \"channels3\", \"channels4\"):\n        highest += 1\n        knob = nuke.Link_Knob(\"channels\" + '\{\}'.format(highest))\n        knob.setLink(new_remove_node.name() +'.\{\}'.format(knob_name))\n        this_node.addKnob(knob)\n\nundo = nuke.Undo()\nundo.disable()\n\ntry:\n    this_node = nuke.thisNode()\n\n    group = this_node\n    group.begin()\n\n    switch_node = nuke.toNode(\"Switch1\")\n    switch_node\['xpos'].setExpression('\{\}'.format(switch_node\['xpos'].value()))\n    switch_node\['ypos'].setExpression('\{\}'.format(switch_node\['ypos'].value()+50))\n\n    output_node = nuke.toNode(\"Output1\")\n    output_node\['xpos'].setExpression('\{\}'.format(output_node\['xpos'].value()))\n    output_node\['ypos'].setExpression('\{\}'.format(output_node\['ypos'].value()+50))\n\n    new_remove_node = add_remove_node(switch_node)\n    add_keep_node(switch_node, new_remove_node)\n\n    group.end()\n\n    add_channels(this_node, new_remove_node)\n\nfinally:\n    undo.enable()"}
addUserKnob {22 remove l "Remove (last 4)" t "Remove the last four additional channel slots" -STARTLINE T "def get_highest(this_node):\n\n    highest = \[]\n    for knob in this_node.allKnobs():\n        if \"channel\" in knob.name():\n            number = knob.name().split(\"channels\")\[1]\n            if number.isdigit():\n                highest.append(int(number))\n    highest = max(highest) + 1\n    return highest\n\ndef remove_channels(this_node, highest):\n\n        for i in range (0,4):\n            highest -= 1\n            this_node.removeKnob(this_node.knobs()\[(\"channels\" + '\{\}'.format(highest))])\n\ndef remove_nodes(switch_node):\n    copy_node = switch_node.input(1)\n    keep_node = copy_node.input(1)\n    remove_node = switch_node.input(0)\n\n    nuke.delete(copy_node)\n    nuke.delete(keep_node)\n    nuke.delete(remove_node)\n\nundo = nuke.Undo()\nundo.disable()\n\ntry:\n    this_node = nuke.thisNode()\n    highest = get_highest(this_node)\n\n    if highest > 5:\n        \n        remove_channels(this_node, highest)\n\n        group = this_node\n        group.begin()\n\n        switch_node = nuke.toNode(\"Switch1\")\n        switch_node\['xpos'].setExpression('\{\}'.format(switch_node\['xpos'].value()))\n        switch_node\['ypos'].setExpression('\{\}'.format(switch_node\['ypos'].value()-50))\n\n        output_node = nuke.toNode(\"Output1\")\n        output_node\['xpos'].setExpression('\{\}'.format(output_node\['xpos'].value()))\n        output_node\['ypos'].setExpression('\{\}'.format(output_node\['ypos'].value()-50))\n\n        remove_nodes(switch_node)\n\n        group.end()\n\nfinally:\n    undo.enable()"}
addUserKnob {41 channels T Remove1.channels}
addUserKnob {41 channels2 T Remove1.channels2}
addUserKnob {41 channels3 T Remove1.channels3}
addUserKnob {41 channels4 T Remove1.channels4}
addUserKnob {41 channels5 T Remove3.channels}
addUserKnob {41 channels6 T Remove3.channels2}
addUserKnob {41 channels7 T Remove3.channels3}
addUserKnob {41 channels8 T Remove3.channels4}
addUserKnob {41 channels9 T Remove5.channels}
addUserKnob {41 channels10 T Remove5.channels2}
addUserKnob {41 channels11 T Remove5.channels3}
addUserKnob {41 channels12 T Remove5.channels4}
}
Input {
inputs 0
name Input
xpos {{0.0 x1001 0}}
ypos {{0.0 x1001 -1}}
}
Dot {
name Dot1
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos {{34.0 x1001 26}}
ypos {{125.0 x1001 125}}
}
set N3596b900 [stack 0]
Remove {
operation keep
channels {{{Remove5.channels}}}
channels2 {{{Remove5.channels2}}}
channels3 {{{Remove5.channels3}}}
channels4 {{{Remove5.channels4}}}
name Remove6
xpos 89
ypos 215
}
push $N3596b900
Remove {
operation keep
channels {{{Remove3.channels}}}
channels2 {{{Remove3.channels2}}}
channels3 {{{Remove3.channels3}}}
channels4 {{{Remove3.channels4}}}
name Remove4
xpos 89
ypos 165
}
push $N3596b900
Remove {
operation keep
channels {{{Remove1.channels}}}
channels2 {{{Remove1.channels2}}}
channels3 {{{Remove1.channels3}}}
channels4 {{{Remove1.channels4}}}
name Remove2
xpos {{189.0 x1001 188}}
ypos {{115.0 x1001 115}}
}
Copy {
inputs 2
channels all
metainput All
rangeinput All
name Copy1
xpos 189
ypos 165
}
Copy {
inputs 2
channels all
metainput All
rangeinput All
name Copy2
xpos 189
ypos 215
}
push $N3596b900
Remove {
channels rgba
channels2 pSky
channels4 clouds
name Remove1
xpos {{-185.0 x1001 -183}}
ypos {{115.0 x1001 115}}
}
Remove {
channels zDepth
channels3 cloudSeprarted
name Remove3
xpos -185
ypos 165
}
Remove {
channels none
name Remove5
xpos -185
ypos 215
}
Switch {
inputs 2
which {{UnlimitedRemove1.operation}}
name Switch1
xpos {{0.0 x1001 0}}
ypos {{332.0 x1001 233}}
}
Output {
name Output1
xpos {{0.0 x1001 -7}}
ypos {{442.0 x1001 342}}
}
end_group
Dot {
name Dot189
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11747
ypos -15105
}
ModifyMetaData {
metadata {
 {set gbk/scriptname "\[value root.name]"}
 {set exr/task_id "\[getenv FTRACK_TASKID]"}
 {remove exr/chunkCount ""}
 {remove exr/compressionName ""}
}
name ModifyMetaData7
selected true
xpos 11713
ypos -15070
}
Write {
channels all
file /coppi/proj/thrg/shottree/s01e01/015-0250/output2d/comp/comp25_precomp/thrg_s01e01_015-0250_comp25_precomp_ENV_lin_ap0_v001/thrg_s01e01_015-0250_comp25_precomp_ENV_lin_ap0_v001.%04d.exr
colorspace "ACES - ACES2065-1"
file_type exr
dw_compression_level 80
metadata "all metadata"
first_part rgba
render_order 100
version 16
in_colorspace scene_linear
out_colorspace scene_linear
beforeRender "from nuketools import beforerenderfunctions;beforerenderfunctions.beforeRender()"
name WritePreComp6
note_font "Bitstream Vera Sans Bold"
selected true
xpos 11713
ypos -15037
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
addUserKnob {20 fwrite l "GBK Write"}
addUserKnob {1 ffile l File}
ffile /coppi/proj/thrg/shottree/s01e01/015-0250/output2d/comp/comp25_precomp/thrg_s01e01_015-0250_comp25_precomp_ENV_lin_ap0_v001/thrg_s01e01_015-0250_comp25_precomp_ENV_lin_ap0_v001.%04d.exr
addUserKnob {1 fproxy l Proxy}
addUserKnob {6 fproxycheck l "Set Proxy Path" +STARTLINE}
addUserKnob {26 divider l "" +STARTLINE}
addUserKnob {4 task l Task M {comp alwy am came char conc cont cran edit fire flar glas inge ocea pm prod sbv scre skye util source}}
addUserKnob {1 fassetname l "Asset Name Preview:" +DISABLED}
fassetname comp25_precomp
addUserKnob {1 fassetbasename l "Asset Name:"}
fassetbasename comp25
addUserKnob {1 fecompname l "Component Name:"}
fecompname ENV
addUserKnob {1 flatestversion l "Latest published version:" +DISABLED}
flatestversion 0
addUserKnob {22 getlatest l Refresh -STARTLINE T "from nuketools import writetab \nwritetab.getLatestPubVersion() \n"}
addUserKnob {6 precomp l Precomp +STARTLINE}
precomp true
addUserKnob {6 denoised l Denoised(dn) +STARTLINE}
addUserKnob {6 delensed l Delensed(dl) +STARTLINE}
addUserKnob {6 neutralgrade l Neutralgrade(ng) +STARTLINE}
addUserKnob {6 matte l Matte +STARTLINE}
addUserKnob {6 no_frame_number l "No Frame Numbering" +STARTLINE}
addUserKnob {3 fversion l Version}
fversion 1
addUserKnob {4 format l Format M {exr dpx png tif jpg tga mov}}
addUserKnob {4 channel l Channel M {rgb rgba all}}
channel all
addUserKnob {4 fcompression l Compression M {none "Zip (1 scanline)" "Zip (16 scanlines)" "PIZ Wavelet (32 scanlines)" RLE B44 B44A DWAA DWAB}}
fcompression "Zip (1 scanline)"
addUserKnob {1 fview l View}
addUserKnob {26 saveSettingsMsg l "" -STARTLINE T "  "}
addUserKnob {3 frenderorder l "Render order"}
frenderorder 100
addUserKnob {22 frender l Render -STARTLINE T "from nuketools import writetab \nwritetab.render() \n"}
addUserKnob {3 fframeranges l "Frame range" +DISABLED}
fframeranges 1
addUserKnob {3 fframerangee l "" -STARTLINE +DISABLED}
fframerangee 1
addUserKnob {6 flimitrange l "Limit to range" -STARTLINE}
addUserKnob {22 rfromw l "Read from Write" -STARTLINE T "from nuketools import readfromwrite \nreadfromwrite.readFromWrite()"}
addUserKnob {22 rendcurr l "Render current frame" -STARTLINE T "from nuketools import writetab \nwritetab.renderCurrentFrame()"}
addUserKnob {6 fcopyscript l "Don't Copy Nuke Script" +STARTLINE}
addUserKnob {6 fwriteinit l "Is everything added" -STARTLINE +HIDDEN}
fwriteinit true
}
nuke_dispatch {
name nuke_dispatch_ENVsky
selected true
xpos 11713
ypos -14958
jobtitle comp25_precomp
framestart 1001
frameend 1161
customframes ""
maxtime 3:00:00
StartAfterTime ""
ThreadCount 0
ServiceKeyExpr ""
removelicense true
depthindex 1
}
set N34f08f00 [stack 0]
Group {
name PrecompDispatch_ENVsky
tile_color 0xff0000ff
label "\[if \{\[value disable]==true\}  \{return OFF\}  \{return ON\}]"
note_font "Bitstream Vera Sans"
note_font_size 21
selected true
xpos 11713
ypos -14923
postage_stamp true
addUserKnob {20 User l PrecompDispatch}
addUserKnob {41 file l File T ReadPreComp.file}
addUserKnob {41 localizationPolicy l "Localization Policy" T ReadPreComp.localizationPolicy}
addUserKnob {41 updateLocalization l Update T ReadPreComp.updateLocalization}
addUserKnob {41 localizationPriority l "localization priority" T ReadPreComp.localizationPriority}
addUserKnob {41 format l Format T ReadPreComp.format}
addUserKnob {41 proxy l Proxy T ReadPreComp.proxy}
addUserKnob {41 proxy_format l "Proxy Format" T ReadPreComp.proxy_format}
addUserKnob {41 first l "Frame Range" T ReadPreComp.first}
addUserKnob {41 before l "" -STARTLINE T ReadPreComp.before}
addUserKnob {41 last l "" -STARTLINE T ReadPreComp.last}
addUserKnob {41 after l "" -STARTLINE T ReadPreComp.after}
addUserKnob {41 frame_mode l Frame T ReadPreComp.frame_mode}
addUserKnob {41 frame l "" -STARTLINE T ReadPreComp.frame}
addUserKnob {41 origfirst l "Original Range" T ReadPreComp.origfirst}
addUserKnob {41 origlast l "" -STARTLINE T ReadPreComp.origlast}
addUserKnob {41 origset l "Original Range Set" T ReadPreComp.origset}
addUserKnob {41 on_error l "Missing Frames" T ReadPreComp.on_error}
addUserKnob {41 reload T ReadPreComp.reload}
addUserKnob {41 colorspace l Colorspace T ReadPreComp.colorspace}
addUserKnob {41 premultiplied l Premultiplied T ReadPreComp.premultiplied}
addUserKnob {41 raw l "Raw Data" T ReadPreComp.raw}
addUserKnob {41 auto_alpha l "Auto Alpha" T ReadPreComp.auto_alpha}
addUserKnob {26 "" l "<b>EXR Options</b>"}
addUserKnob {41 offset_negative_display_window l "offset negative display window" T ReadPreComp.offset_negative_display_window}
addUserKnob {41 noprefix l "do not attach prefix" T ReadPreComp.noprefix}
addUserKnob {41 edge_pixels l "edge pixels" T ReadPreComp.edge_pixels}
addUserKnob {20 info}
addUserKnob {26 txt_1 l notes T "Connect to a 'nuke_dispatch' node. \na) rename 'component name' on write node\nb) rename the 'nuke_dispatch'  name adding a number on the end. \n(this set the render order, so you can manually set the order with F7)\nc) Enable node when rendering.\nd) click F7 and set render order dependency before render\nreorder the dispatchNode list. Top is reendered first\ne) after rendering refresh  the precompDispatch nodes and disable it. (use python script)\n* The frame range is set from the dispatch node.\n* Place the precomp before expensive nodes for efficiency."}
addUserKnob {26 ""}
addUserKnob {26 txt l ver: T "0.1 2020.12.21 RafKan"}
addUserKnob {6 UID_precompDispatch l "" +STARTLINE +INVISIBLE +STARTLINE}
}
Input {
inputs 0
name Input1
xpos -477
ypos -239
}
Read {
inputs 0
file_type exr
file "\[value this.parent.input.input.file]"
localizationPolicy off
format "4448 3096 0 0 4448 3096 1 Output Resolution_1_1"
first {{"\[value this.parent.input.framestart]" x1031 1001}}
last {{"\[value this.parent.input.frameend]" x1031 1237}}
origfirst {{"\[value this.parent.input.framestart]" x1001 1001}}
origlast {{"\[value this.parent.input.frameend]" x1001 1237}}
origset true
version 96
colorspace gbk_plate
auto_alpha true
name ReadPreComp
note_font_color 0xf368e4ff
xpos -477
ypos -164
disable {{"!\[exists parent.input]"}}
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
}
Output {
name Output1
xpos -477
ypos -5
}
end_group
Dot {
name Dot204
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11747
ypos -14787
}
Dot {
name Dot213
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11747
ypos -14602
}
Dot {
name Dot279
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11747
ypos -14238
}
Grade {
name GradeSky
note_font_size 31
selected true
xpos 11713
ypos -14188
}
Grade {
multiply 0.9
maskChannelInput rgba.alpha
name GradeSkyNoClouds
note_font_size 31
selected true
xpos 11713
ypos -14094
}
Dot {
name Dot280
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11747
ypos -13901
}
set N34ea3200 [stack 0]
Dot {
name Dot281
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 12082
ypos -13901
}
Dot {
name Dot282
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 12082
ypos -13855
}
Group {
name aPMatte3
help "aPMatte v1.0 by Adrian Pueyo\n\nGenerate a matte of different shapes, based on a Position pass. Includes options to transform the mask and change its falloff. Also has the option to output or overlay a P-based 3D noise.\n\nadrianpueyo.com, 2017"
knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == \"shape\":\n    rampOn = k.value() in \['linear ramp', 'radial ramp'];\n    n\['radius'].setVisible(not rampOn)\n    n.knobs()\[\"black\"].setVisible(rampOn)\n    n.knobs()\[\"picker\"].setLabel( \"white\" if rampOn else \"center\" )\n\n\nif k.name() == \"noise\":\n    noiseOn = k.value() != 'off';\n    n\['noise_rel'].setVisible(noiseOn)\n    n\['noise_persistance'].setVisible(noiseOn)\n    n\['noise_octaves'].setVisible(noiseOn)\n    n\['noise_lacunarity'].setVisible(noiseOn)\n    n\['noise_size'].setVisible(noiseOn)\n    n\['noise_offset'].setVisible(noiseOn)\n    n\['noise_add'].setVisible(noiseOn)\n    n\['noise_gain'].setVisible(noiseOn)\n    n\['noise_gamma'].setVisible(noiseOn)\n    n\['noise_mix'].setVisible(noiseOn)\n\nif not n\[\"autolabel\"].value():\n    n\[\"autolabel\"].setValue(\"'%s\\\\n(%s)'%(nuke.thisNode()\['name'].value(),nuke.thisNode()\['out'].value()) if nuke.thisNode()\['out'].value()!='alpha' else nuke.thisNode()\['name'].value()\")"
autolabel "'%s\\n(%s)'%(nuke.thisNode()\['name'].value(),nuke.thisNode()\['out'].value()) if nuke.thisNode()\['out'].value()!='alpha' else nuke.thisNode()\['name'].value()"
label "center.r is \nsun position"
selected true
xpos 11979
ypos -13859
addUserKnob {20 aPMatte}
addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T BlinkScriptPMatte.useGPUIfAvailable}
addUserKnob {41 vectorize l "Vectorize on CPU" -STARTLINE T BlinkScriptPMatte.vectorize}
addUserKnob {26 ""}
addUserKnob {41 p_channels l "P channels" T ShuffleIn.in}
addUserKnob {41 out l " output" -STARTLINE T ShuffleCopyOut.out}
addUserKnob {6 alpha_masking l "alpha masking" t "Multiply the output by the input's alpha." +STARTLINE}
alpha_masking true
addUserKnob {4 shape M {sphere "cusped box" "rounded box" "linear ramp" "radial ramp" ""}}
addUserKnob {6 invert -STARTLINE}
addUserKnob {41 picker l center T BlinkScriptPMatte.picker}
addUserKnob {7 radius R 0 100}
radius 20
addUserKnob {41 black t "Black point of your ramp." +HIDDEN T BlinkScriptPMatte.black_point}
addUserKnob {26 ""}
addUserKnob {4 falloff t "Fallof type for the matte." M {linear smooth quadratic cubic "inv. cubic" "" ""}}
falloff cubic
addUserKnob {7 hardness}
hardness 0.2
addUserKnob {26 ""}
addUserKnob {4 rotation_order l "rotation order" M {XYZ XZY YXZ YZX ZXY ZYX}}
rotation_order ZXY
addUserKnob {13 translate}
addUserKnob {13 rotate}
addUserKnob {13 scale}
scale {100 70 100}
addUserKnob {26 ""}
addUserKnob {4 noise t "overlay: uses the noise in overlay blend mode over the resulting mask, to make it more organic and less obvious for grading.\nnoise only: ignore the mask, output a 3D noise." M {off overlay "noise only"}}
addUserKnob {6 noise_rel l relative t "On: Pick world transformations and positioning of the shape.\nOff: Pick absolute world transformations.\n\nTip: Check when you want the mask to always be affected by the same noise, uncheck when you want to lock the noise to your scene." -STARTLINE +HIDDEN}
noise_rel true
addUserKnob {7 noise_size l size t "Size of the noise pattern." +HIDDEN R 0 100}
noise_size 10
addUserKnob {7 noise_offset l offset t "Spatial offset of the noise pattern (use to find a sweet spot for your matte)." +HIDDEN R 0 100}
addUserKnob {3 noise_octaves l octaves t "Number of noise iterations." +HIDDEN}
noise_octaves 8
addUserKnob {7 noise_lacunarity l lacunarity t "Each octave gets downscaled by this value." +HIDDEN R 0 10}
noise_lacunarity 1.8
addUserKnob {7 noise_persistance l persistance t "Each octave gets multiplied by this value." +HIDDEN}
noise_persistance 0.5
addUserKnob {7 noise_add l add t "Add a value to the noise." +HIDDEN}
noise_add 0.5
addUserKnob {7 noise_gain l gain t "Multiply the resulting noise by this value." +HIDDEN R 0 4}
noise_gain 1
addUserKnob {7 noise_gamma l gamma t "Gamma the resulting value." +HIDDEN R 0 4}
noise_gamma 1
addUserKnob {7 noise_mix l mix +HIDDEN}
noise_mix 1
addUserKnob {26 copyright l " " T "<br/><font color=#777><b>aPMatte v1.0</b> - adrianpueyo.com, 2017"}
addUserKnob {6 BlinkScriptPMatte_black_point_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
}
Input {
inputs 0
name Inputimg
xpos -528
ypos 483
}
set N34ea1600 [stack 0]
Shuffle {
in pSky
in2 rgba
alpha alpha2
name ShuffleIn
xpos -418
ypos 483
}
BlinkScript {
ProgramGroup 1
KernelDescription "2 \"aPMatteKernel\" iterate pixelWise eba2548d360b6b3d2b97555753832bdfb4c4224623cecc4870a6d5c5e54e4fdb 2 \"p\" Read Point \"dst\" Write Point 23 \"picked\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"pickedB\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"rotation order\" Int 1 BAAAAA== \"translate\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"rotate\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"scale\" Float 3 AACAPwAAgD8AAIA/AAAAAA== \"radius\" Float 1 AACAPw== \"shape\" Int 1 AAAAAA== \"invert_shape\" Int 1 AAAAAA== \"use_alpha\" Int 1 AAAAAA== \"falloff\" Int 1 AQAAAA== \"hardness\" Float 1 AAAAAA== \"use noise\" Int 1 AAAAAA== \"noise_relative\" Int 1 AAAAAA== \"noise octaves\" Int 1 CAAAAA== \"noise persistence\" Float 1 AAAAPw== \"lacunarity\" Float 1 AAAAQA== \"noise scale\" Float 1 CtcjPA== \"noise_offset\" Float 1 AAAAAA== \"noise_add\" Float 1 AAAAAA== \"noise_gain\" Float 1 AAAAAA== \"noise_gamma\" Float 1 AAAAAA== \"noise_mix\" Float 1 AAAAAA== 23 \"picked\" 3 1 \"pickedB\" 3 1 \"rotOrder\" 1 1 \"translate\" 3 1 \"rotate\" 3 1 \"scale\" 3 1 \"radius\" 1 1 \"shape\" 1 1 \"invert_shape\" 1 1 \"use_alpha\" 1 1 \"falloff\" 1 1 \"hardness\" 1 1 \"use_noise\" 1 1 \"noise_relative\" 1 1 \"noise_octaves\" 1 1 \"noise_persistence\" 1 1 \"noise_lacunarity\" 1 1 \"noise_scale\" 1 1 \"noise_offset\" 1 1 \"noise_add\" 1 1 \"noise_gain\" 1 1 \"noise_gamma\" 1 1 \"noise_mix\" 1 1 0"
kernelSource "// ----------------------------------------------------------------\n// aPMatte v1.0 by Adrian Pueyo\n//\n// Generate a matte of different shapes, based on a Position pass.\n// Includes options to transform the mask and change its falloff.\n// Also includes the option to output or overlay a P-based noise.\n//\n// adrianpueyo.com, 2017\n// ----------------------------------------------------------------\n\n\n// Noise algorithm adapted by Adrian Pueyo from Noise4D function by Mads Hagbarth Lund\n// Noise4D function Ported by Mads Hagbarth Lund 2014\n// Based on https://github.com/Draradech/csworldgen/blob/master/simplexnoise.cpp\n\n/* Copyright (c) 2007-2012 Eliot Eshelman\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n\nint fastfloor( const float x ) \{ return x > 0 ? (int) x : (int) x - 1; \}\ninline float raw_noise_4d( const float x, const float y, const float z, const float w ) \n\{\nint simplex\[64]\[4] = \{\n    \{0,1,2,3\},\{0,1,3,2\},\{0,0,0,0\},\{0,2,3,1\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{1,2,3,0\},\n    \{0,2,1,3\},\{0,0,0,0\},\{0,3,1,2\},\{0,3,2,1\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{1,3,2,0\},\n    \{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\n    \{1,2,0,3\},\{0,0,0,0\},\{1,3,0,2\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{2,3,0,1\},\{2,3,1,0\},\n    \{1,0,2,3\},\{1,0,3,2\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{2,0,3,1\},\{0,0,0,0\},\{2,1,3,0\},\n    \{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\n    \{2,0,1,3\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{3,0,1,2\},\{3,0,2,1\},\{0,0,0,0\},\{3,1,2,0\},\n    \{2,1,0,3\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{3,1,0,2\},\{0,0,0,0\},\{3,2,0,1\},\{3,2,1,0\}\n\};\n    int perm\[512] = \{\n        151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,\n        8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,\n        35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,\n        134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,\n        55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208, 89,\n        18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,\n        250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,\n        189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,\n        172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,\n        228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,\n        107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,\n        138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180,\n\n        151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,\n        8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,\n        35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,\n        134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,\n        55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208, 89,\n        18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,\n        250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,\n        189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,\n        172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,\n        228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,\n        107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,\n        138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180\n    \};\n  int grad4\[32]\[4]= \{\n    \{0,1,1,1\},  \{0,1,1,-1\},  \{0,1,-1,1\},  \{0,1,-1,-1\},\n    \{0,-1,1,1\}, \{0,-1,1,-1\}, \{0,-1,-1,1\}, \{0,-1,-1,-1\},\n    \{1,0,1,1\},  \{1,0,1,-1\},  \{1,0,-1,1\},  \{1,0,-1,-1\},\n    \{-1,0,1,1\}, \{-1,0,1,-1\}, \{-1,0,-1,1\}, \{-1,0,-1,-1\},\n    \{1,1,0,1\},  \{1,1,0,-1\},  \{1,-1,0,1\},  \{1,-1,0,-1\},\n    \{-1,1,0,1\}, \{-1,1,0,-1\}, \{-1,-1,0,1\}, \{-1,-1,0,-1\},\n    \{1,1,1,0\},  \{1,1,-1,0\},  \{1,-1,1,0\},  \{1,-1,-1,0\},\n    \{-1,1,1,0\}, \{-1,1,-1,0\}, \{-1,-1,1,0\}, \{-1,-1,-1,0\}\n  \};\n    float F4 = (sqrt(5.0f)-1.0)/4.0;\n    float G4 = (5.0-sqrt(5.0f))/20.0;\n    float n0, n1, n2, n3, n4;\n    float s = (x + y + z + w) * F4;\n    int i = fastfloor(x + s);\n    int j = fastfloor(y + s);\n    int k = fastfloor(z + s);\n    int l = fastfloor(w + s);\n    float t = (i + j + k + l) * G4;\n    float X0 = i - t;\n    float Y0 = j - t;\n    float Z0 = k - t;\n    float W0 = l - t;\n\n    float x0 = x - X0;\n    float y0 = y - Y0;\n    float z0 = z - Z0;\n    float w0 = w - W0;\n    int c1 = (x0 > y0) ? 32 : 0;\n    int c2 = (x0 > z0) ? 16 : 0;\n    int c3 = (y0 > z0) ? 8 : 0;\n    int c4 = (x0 > w0) ? 4 : 0;\n    int c5 = (y0 > w0) ? 2 : 0;\n    int c6 = (z0 > w0) ? 1 : 0;\n    int c = c1 + c2 + c3 + c4 + c5 + c6;\n\n    int i1, j1, k1, l1;\n    int i2, j2, k2, l2;\n    int i3, j3, k3, l3;\n    i1 = simplex\[c]\[0]>=3 ? 1 : 0;\n    j1 = simplex\[c]\[1]>=3 ? 1 : 0;\n    k1 = simplex\[c]\[2]>=3 ? 1 : 0;\n    l1 = simplex\[c]\[3]>=3 ? 1 : 0;\n    i2 = simplex\[c]\[0]>=2 ? 1 : 0;\n    j2 = simplex\[c]\[1]>=2 ? 1 : 0;\n    k2 = simplex\[c]\[2]>=2 ? 1 : 0;\n    l2 = simplex\[c]\[3]>=2 ? 1 : 0;\n    i3 = simplex\[c]\[0]>=1 ? 1 : 0;\n    j3 = simplex\[c]\[1]>=1 ? 1 : 0;\n    k3 = simplex\[c]\[2]>=1 ? 1 : 0;\n    l3 = simplex\[c]\[3]>=1 ? 1 : 0;\n    float x1 = x0 - i1 + G4;\n    float y1 = y0 - j1 + G4;\n    float z1 = z0 - k1 + G4;\n    float w1 = w0 - l1 + G4;\n    float x2 = x0 - i2 + 2.0*G4;\n    float y2 = y0 - j2 + 2.0*G4;\n    float z2 = z0 - k2 + 2.0*G4;\n    float w2 = w0 - l2 + 2.0*G4;\n    float x3 = x0 - i3 + 3.0*G4;\n    float y3 = y0 - j3 + 3.0*G4;\n    float z3 = z0 - k3 + 3.0*G4;\n    float w3 = w0 - l3 + 3.0*G4;\n    float x4 = x0 - 1.0 + 4.0*G4;\n    float y4 = y0 - 1.0 + 4.0*G4;\n    float z4 = z0 - 1.0 + 4.0*G4;\n    float w4 = w0 - 1.0 + 4.0*G4;\n    int ii = i & 255;\n    int jj = j & 255;\n    int kk = k & 255;\n    int ll = l & 255;\n    int gi0 = perm\[ii+perm\[jj+perm\[kk+perm\[ll]]]] % 32;\n    int gi1 = perm\[ii+i1+perm\[jj+j1+perm\[kk+k1+perm\[ll+l1]]]] % 32;\n    int gi2 = perm\[ii+i2+perm\[jj+j2+perm\[kk+k2+perm\[ll+l2]]]] % 32;\n    int gi3 = perm\[ii+i3+perm\[jj+j3+perm\[kk+k3+perm\[ll+l3]]]] % 32;\n    int gi4 = perm\[ii+1+perm\[jj+1+perm\[kk+1+perm\[ll+1]]]] % 32;\n    float t0 = 0.6 - x0*x0 - y0*y0 - z0*z0 - w0*w0;\n    if(t0<0) n0 = 0.0;\n    else \{\n        t0 *= t0;\n        n0 = t0 * t0 * dot(float4(grad4\[gi0]\[0],grad4\[gi0]\[2],grad4\[gi0]\[3],grad4\[gi0]\[3]), float4(x0, y0, z0, w0));\n    \}\n    float t1 = 0.6 - x1*x1 - y1*y1 - z1*z1 - w1*w1;\n    if(t1<0) n1 = 0.0;\n    else \{\n        t1 *= t1;\n        n1 = t1 * t1 * dot(float4(grad4\[gi1]\[0],grad4\[gi1]\[2],grad4\[gi1]\[3],grad4\[gi1]\[3]), float4(x1, y1, z1, w1));\n    \}\n    float t2 = 0.6 - x2*x2 - y2*y2 - z2*z2 - w2*w2;\n    if(t2<0) n2 = 0.0;\n    else \{\n        t2 *= t2;\n        n2 = t2 * t2 * dot(float4(grad4\[gi2]\[0],grad4\[gi2]\[2],grad4\[gi2]\[3],grad4\[gi2]\[3]), float4(x2, y2, z2, w2));\n    \}\n    float t3 = 0.6 - x3*x3 - y3*y3 - z3*z3 - w3*w3;\n    if(t3<0) n3 = 0.0;\n    else \{\n        t3 *= t3;\n        n3 = t3 * t3 * dot(float4(grad4\[gi3]\[0],grad4\[gi3]\[2],grad4\[gi3]\[3],grad4\[gi3]\[3]), float4(x3, y3, z3, w3));\n    \}\n    float t4 = 0.6 - x4*x4 - y4*y4 - z4*z4 - w4*w4;\n    if(t4<0) n4 = 0.0;\n    else \{\n        t4 *= t4;\n        n4 = t4 * t4 * dot(float4(grad4\[gi4]\[0],grad4\[gi4]\[2],grad4\[gi4]\[3],grad4\[gi4]\[3]), float4(x4, y4, z4, w4));\n    \}\n    return 27.0 * (n0 + n1 + n2 + n3 + n4);\n\}\ninline float octave_noise_4d( const float octaves, const float persistence, const float scale, const float x, const float y, const float z, const float w, const float lacunarity=2 ) \n\{\n    float total = 0;\n    float frequency = scale;\n    float amplitude = 1;\n    float maxAmplitude = 0;\n    for( int i=0; i < octaves; i++ ) \{\n        total += (float)raw_noise_4d( x * frequency, y * frequency, z * frequency, w * frequency ) * amplitude;\n\n        frequency *= lacunarity;\n        maxAmplitude += amplitude;\n        amplitude *= persistence;\n    \}\n    return float(total / maxAmplitude);\n\}\n\nkernel aPMatteKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> p;\n  Image<eWrite> dst;\n\n  param:\n    float3 picked; //Center, or white for ramps\n    float3 pickedB; //Black for ramps\n    int rotOrder; //0=XYZ,1=XZY,2=YXZ,3=YZX,4=ZXY,5=ZYX\n    float3 translate;\n    float3 rotate;\n    float3 scale;\n    float radius;\n    int shape; //0=sphere,1=cusped box,2=rounded box,3=ramp, 4=rad.ramp\n    int invert_shape;\n    int use_alpha;\n    int falloff; //0=linear,1=smooth,2=square,3=inv.square\n    float hardness;\n\n    // Noise parameters here\n    int use_noise; //0=off,1=overlay,2=noise only\n    int noise_relative;\n    int noise_octaves;\n    float noise_persistence;\n    float noise_lacunarity;\n    float noise_scale;\n    float noise_offset;\n    float noise_add;\n    float noise_gain;\n    float noise_gamma;\n    float noise_mix;\n\n  void define() \{\n    defineParam(rotOrder, \"rotation order\", 4);\n    defineParam(scale, \"scale\", float3(1.0f,1.0f,1.0f));\n    defineParam(radius, \"radius\", 1.0f);\n    defineParam(falloff, \"falloff\", 1);\n    defineParam(use_noise, \"use noise\", 0);\n    defineParam(noise_octaves, \"noise octaves\", 8);\n    defineParam(noise_persistence, \"noise persistence\",  0.5f);\n    defineParam(noise_lacunarity, \"lacunarity\",  2.0f);\n    defineParam(noise_scale, \"noise scale\", 0.01f);\n  \}\n\n  inline float rad(float deg)\{ \n    return deg*PI/180;\n  \}\n\n  inline float smoothstep(float edge0, float edge1, float x)\{\n    x = clamp((x - edge0)/(edge1 - edge0), 0.0f, 1.0f);\n    return x*x*x*(x*(x*6-15)+10);\n  \}\n\n  inline float cl(float val)\{\n  return clamp(val,0.0f,1.0f); \n  \}\n\n  float3 rotX(float3 vec, float rot)\{\n    if(rot==0.0f)\{\n      return vec;\n    \} else \{\n      float3 vecOut;\n      vecOut.y = vec.y*cos(rad(rot)) - vec.z*sin(rad(rot));\n      vecOut.z = vec.y*sin(rad(rot)) + vec.z*cos(rad(rot));\n      vecOut.x = vec.x;\n      return float3(vecOut.x,vecOut.y,vecOut.z);\n    \}\n  \}\n\n  float3 rotY(float3 vec, float rot)\{\n    if(rot==0.0f)\{\n      return vec;\n    \} else \{\n      float3 vecOut;\n      vecOut.z = vec.z*cos(rad(rot)) - vec.x*sin(rad(rot));\n      vecOut.x = vec.z*sin(rad(rot)) + vec.x*cos(rad(rot));\n      vecOut.y = vec.y;\n      return float3(vecOut.x,vecOut.y,vecOut.z);\n    \}\n  \}\n\n  float3 rotZ(float3 vec, float rot)\{\n    if(rot==0.0f)\{\n      return vec;\n    \} else \{\n      float3 vecOut;\n      vecOut.x = vec.x*cos(rad(rot)) - vec.y*sin(rad(rot));\n      vecOut.y = vec.x*sin(rad(rot)) + vec.y*cos(rad(rot));\n      vecOut.z = vec.z;\n      return float3(vecOut.x,vecOut.y,vecOut.z);\n    \}\n  \}\n\n  void process() \{\n    //1. P WORLD\n    // Center the coordinates\n    float3 color = float3(p(0)-picked.x,p(1)-picked.y,p(2)-picked.z);\n    int black = 0;\n\n    // Translate\n    color -= translate;\n\n    // Rotate\n    if (rotOrder<=0) color = rotZ(rotY(rotX(color,rotate.x),rotate.y),rotate.z);\n    else if (rotOrder==1) color = rotY(rotZ(rotX(color,rotate.x),rotate.z),rotate.y);\n    else if (rotOrder==2) color = rotZ(rotX(rotY(color,rotate.y),rotate.x),rotate.z);\n    else if (rotOrder==3) color = rotX(rotZ(rotY(color,rotate.y),rotate.z),rotate.x);\n    else if (rotOrder==4) color = rotY(rotX(rotZ(color,rotate.z),rotate.x),rotate.y);\n    else if (rotOrder>=5) color = rotX(rotY(rotZ(color,rotate.z),rotate.y),rotate.x);\n\n    // Scale\n    if (scale.x!=0 && scale.y!=0 && scale.z!=0) \{\n      color *= float3(1/scale.x, 1/scale.y, 1/scale.z);\n    \} else \{\n      dst() = 0.0f;\n      return;\n    \}\n\n    //2. SHAPES\n    float dist;\n    float result;\n\n    if(shape==0)\{//Sphere\n      dist = sqrt(pow(color\[0],2) + pow(color\[1],2) + pow(color\[2],2));\n      result = radius==0.0f? 0:cl(1-dist/radius);\n    \} else if(shape==1)\{//Cusped Box\n      result = min( min( cl((radius-fabs(color.x))/radius) , cl((radius-fabs(color.y))/radius)) , cl((radius-fabs(color.z))/radius)) ;\n      result = hardness>=1? float(result>0) : result;\n    \} else if(shape==2)\{//Rounded Box\n      result = radius==0.0f? 0: smoothstep(0,1-hardness, cl(1-fabs(float(color.x)/radius)) ) * smoothstep(0,1-hardness, cl(1-fabs(float(color.y)/radius)) ) * smoothstep(0,1-hardness, cl(1-fabs(float(color.z)/radius)) );\n      result = hardness>=1? float(result>0) : result;\n    \} else if(shape==3)\{//Linear Ramp\n      dist = sqrt(pow(color\[0],2) + pow(color\[1],2) + pow(color\[2],2));\n      float distB = sqrt(pow(color\[0]-(pickedB.x-picked.x),2) + pow(color\[1]-(pickedB.y-picked.y),2) + pow(color\[2]-(pickedB.z-picked.z),2));\n      float distWB = sqrt(pow(pickedB.x-picked.x,2) + pow(pickedB.y-picked.y,2) + pow(pickedB.z-picked.z,2));\n      float angWB = acos( clamp((pow(dist,2)-pow(distB,2)+pow(distWB,2))/(2*dist*distWB),-1.0f,1.0f) );\n      float cosAngWB = dist==0.0f? 0:cos(angWB);\n      result = distWB==0? 0.0f: cl((dist * cosAngWB) / distWB );\n      result = 1-result;\n    \} else if(shape==4)\{//Radial Ramp\n      dist = sqrt(pow(color\[0],2) + pow(color\[1],2) + pow(color\[2],2));\n      float distB = sqrt(pow(color\[0]-(pickedB.x-picked.x),2) + pow(color\[1]-(pickedB.y-picked.y),2) + pow(color\[2]-(pickedB.z-picked.z),2));\n      float distWB = sqrt(pow(pickedB.x-picked.x,2) + pow(pickedB.y-picked.y,2) + pow(pickedB.z-picked.z,2));\n      result = distWB==0? 0.0f: cl((dist) / distWB );\n      result = 1-result;\n    \}\n    result = invert_shape? 1-result:result;\n\n    //3. FALLOFF\n    if(falloff==0)\{//Linear\n      result = hardness>=1? float(result>0) : cl(result/(1-hardness));\n    \}else if(falloff==1)\{//Smooth\n      result = hardness>=1? float(result>0) : smoothstep(0,1-hardness,result);\n    \}else if(falloff==2)\{//Quadratic\n      result = hardness>=1? float(result>0) : cl(pow(float(result/(1-hardness)),2));\n    \}else if(falloff==3)\{//Cubic\n      result = hardness>=1? float(result>0) : cl(pow(float(result/(1-hardness)),3));\n    \}else if(falloff==4)\{//Inv. Cubic\n      result = hardness>=1? float(result>0) : 1-cl(pow(float(cl(1-(result/(1-hardness)))),3));\n    \}\n\n    //4. GENERATE NOISE\n    float noise;\n    if(use_noise!=0)\{//Avoid calculations if possible\n      if(noise_relative!=1)\{\n        noise = (float)octave_noise_4d(float(noise_octaves),noise_persistence,noise_scale==0?10000.0f:1/noise_scale,p(0),p(1),p(2),noise_offset,noise_lacunarity);\n      \}else\{\n        noise = (float)octave_noise_4d(float(noise_octaves),noise_persistence,noise_scale==0?10000.0f:1/noise_scale,color\[0],color\[1],color\[2],noise_offset,noise_lacunarity);\n      \}\n      noise = cl(pow(max((noise+noise_add)*noise_gain,0.0f),noise_gamma==0?1:1/noise_gamma));\n    \}\n\n\n    //5. ALPHA MASK AND APPLY NOISE\n    result = max(result,0.0f); //Clamp negative values\n    if(use_noise==1)\{//Overlay\n      result = result<0.5f? noise_mix*(2*noise*result)+(1-noise_mix)*result : noise_mix*(1-2*(1-result)*(1-noise))+(1-noise_mix)*result;\n    \}else if(use_noise>=2)\{\n      result = noise*noise_mix;\n    \}\n\n    if(use_alpha > 0) result=result*p(3);\n\n    //6. WE'RE DONE\n    dst() = result;\n  \}\n\};"
useGPUIfAvailable false
vectorize false
rebuild ""
aPMatteKernel_picked {{picker.r} {picker.g} {picker.b}}
aPMatteKernel_pickedB {{black_point} {black_point} {black_point}}
"aPMatteKernel_rotation order" {{parent.rotation_order}}
aPMatteKernel_translate {{parent.translate} {parent.translate} {parent.translate}}
aPMatteKernel_rotate {{parent.rotate} {parent.rotate} {parent.rotate}}
aPMatteKernel_scale {{parent.scale} {parent.scale} {parent.scale}}
aPMatteKernel_radius {{parent.radius}}
aPMatteKernel_shape {{parent.shape}}
aPMatteKernel_invert_shape {{parent.invert}}
aPMatteKernel_use_alpha {{parent.alpha_masking}}
aPMatteKernel_falloff {{parent.falloff}}
aPMatteKernel_hardness {{parent.hardness}}
"aPMatteKernel_use noise" {{parent.noise}}
aPMatteKernel_noise_relative {{parent.noise_rel}}
"aPMatteKernel_noise octaves" {{parent.noise_octaves}}
"aPMatteKernel_noise persistence" {{parent.noise_persistance}}
aPMatteKernel_lacunarity {{parent.noise_lacunarity}}
"aPMatteKernel_noise scale" {{parent.noise_size}}
aPMatteKernel_noise_offset {{parent.noise_offset}}
aPMatteKernel_noise_add {{parent.noise_add}}
aPMatteKernel_noise_gain {{parent.noise_gain}}
aPMatteKernel_noise_gamma {{parent.noise_gamma}}
aPMatteKernel_noise_mix {{parent.noise_mix}}
rebuild_finalise ""
name BlinkScriptPMatte
xpos -418
ypos 523
addUserKnob {20 User}
addUserKnob {6 black_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 picker}
picker {1380 300 2000}
addUserKnob {6 picker_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 picker_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 black_point l black}
black_point {0 0 0}
addUserKnob {6 black_point_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 black_point_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
push $N34ea1600
ShuffleCopy {
inputs 2
red red
green green
blue blue
out alpha
name ShuffleCopyOut
xpos -528
ypos 527
}
Output {
name Output
xpos -528
ypos 566
}
end_group
push $N34ea3200
Grade {
inputs 1+1
white {1.2 1 0.8 1}
white_panelDropped true
multiply 4
name Grade18
selected true
xpos 11713
ypos -13859
}
Dot {
name Dot283
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11747
ypos -13740
}
set N34e6a400 [stack 0]
Dot {
name Dot284
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11882
ypos -13740
}
set N34e69d00 [stack 0]
push $N34e69d00
Dot {
name Dot285
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 12089
ypos -13740
}
Dot {
name Dot286
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 12089
ypos -13694
}
Group {
name aPMatte4
help "aPMatte v1.0 by Adrian Pueyo\n\nGenerate a matte of different shapes, based on a Position pass. Includes options to transform the mask and change its falloff. Also has the option to output or overlay a P-based 3D noise.\n\nadrianpueyo.com, 2017"
knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == \"shape\":\n    rampOn = k.value() in \['linear ramp', 'radial ramp'];\n    n\['radius'].setVisible(not rampOn)\n    n.knobs()\[\"black\"].setVisible(rampOn)\n    n.knobs()\[\"picker\"].setLabel( \"white\" if rampOn else \"center\" )\n\n\nif k.name() == \"noise\":\n    noiseOn = k.value() != 'off';\n    n\['noise_rel'].setVisible(noiseOn)\n    n\['noise_persistance'].setVisible(noiseOn)\n    n\['noise_octaves'].setVisible(noiseOn)\n    n\['noise_lacunarity'].setVisible(noiseOn)\n    n\['noise_size'].setVisible(noiseOn)\n    n\['noise_offset'].setVisible(noiseOn)\n    n\['noise_add'].setVisible(noiseOn)\n    n\['noise_gain'].setVisible(noiseOn)\n    n\['noise_gamma'].setVisible(noiseOn)\n    n\['noise_mix'].setVisible(noiseOn)\n\nif not n\[\"autolabel\"].value():\n    n\[\"autolabel\"].setValue(\"'%s\\\\n(%s)'%(nuke.thisNode()\['name'].value(),nuke.thisNode()\['out'].value()) if nuke.thisNode()\['out'].value()!='alpha' else nuke.thisNode()\['name'].value()\")"
autolabel "'%s\\n(%s)'%(nuke.thisNode()\['name'].value(),nuke.thisNode()\['out'].value()) if nuke.thisNode()\['out'].value()!='alpha' else nuke.thisNode()\['name'].value()"
selected true
xpos 11979
ypos -13698
addUserKnob {20 aPMatte}
addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T BlinkScriptPMatte.useGPUIfAvailable}
addUserKnob {41 vectorize l "Vectorize on CPU" -STARTLINE T BlinkScriptPMatte.vectorize}
addUserKnob {26 ""}
addUserKnob {41 p_channels l "P channels" T ShuffleIn.in}
addUserKnob {41 out l " output" -STARTLINE T ShuffleCopyOut.out}
addUserKnob {6 alpha_masking l "alpha masking" t "Multiply the output by the input's alpha." +STARTLINE}
alpha_masking true
addUserKnob {4 shape M {sphere "cusped box" "rounded box" "linear ramp" "radial ramp" ""}}
addUserKnob {6 invert -STARTLINE}
addUserKnob {41 picker l center T BlinkScriptPMatte.picker}
addUserKnob {7 radius R 0 100}
radius 20
addUserKnob {41 black t "Black point of your ramp." +HIDDEN T BlinkScriptPMatte.black_point}
addUserKnob {26 ""}
addUserKnob {4 falloff t "Fallof type for the matte." M {linear smooth quadratic cubic "inv. cubic" "" ""}}
falloff smooth
addUserKnob {7 hardness}
addUserKnob {26 ""}
addUserKnob {4 rotation_order l "rotation order" M {XYZ XZY YXZ YZX ZXY ZYX}}
rotation_order ZXY
addUserKnob {13 translate}
addUserKnob {13 rotate}
addUserKnob {13 scale}
scale {150 10 1000}
addUserKnob {26 ""}
addUserKnob {4 noise t "overlay: uses the noise in overlay blend mode over the resulting mask, to make it more organic and less obvious for grading.\nnoise only: ignore the mask, output a 3D noise." M {off overlay "noise only"}}
addUserKnob {6 noise_rel l relative t "On: Pick world transformations and positioning of the shape.\nOff: Pick absolute world transformations.\n\nTip: Check when you want the mask to always be affected by the same noise, uncheck when you want to lock the noise to your scene." -STARTLINE +HIDDEN}
noise_rel true
addUserKnob {7 noise_size l size t "Size of the noise pattern." +HIDDEN R 0 100}
noise_size 10
addUserKnob {7 noise_offset l offset t "Spatial offset of the noise pattern (use to find a sweet spot for your matte)." +HIDDEN R 0 100}
addUserKnob {3 noise_octaves l octaves t "Number of noise iterations." +HIDDEN}
noise_octaves 8
addUserKnob {7 noise_lacunarity l lacunarity t "Each octave gets downscaled by this value." +HIDDEN R 0 10}
noise_lacunarity 1.8
addUserKnob {7 noise_persistance l persistance t "Each octave gets multiplied by this value." +HIDDEN}
noise_persistance 0.5
addUserKnob {7 noise_add l add t "Add a value to the noise." +HIDDEN}
noise_add 0.5
addUserKnob {7 noise_gain l gain t "Multiply the resulting noise by this value." +HIDDEN R 0 4}
noise_gain 1
addUserKnob {7 noise_gamma l gamma t "Gamma the resulting value." +HIDDEN R 0 4}
noise_gamma 1
addUserKnob {7 noise_mix l mix +HIDDEN}
noise_mix 1
addUserKnob {26 copyright l " " T "<br/><font color=#777><b>aPMatte v1.0</b> - adrianpueyo.com, 2017"}
addUserKnob {6 BlinkScriptPMatte_black_point_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
}
Input {
inputs 0
name Inputimg
xpos -528
ypos 483
}
set N34e68100 [stack 0]
Shuffle {
in pSky
in2 rgba
alpha alpha2
name ShuffleIn
xpos -418
ypos 483
}
BlinkScript {
ProgramGroup 1
KernelDescription "2 \"aPMatteKernel\" iterate pixelWise eba2548d360b6b3d2b97555753832bdfb4c4224623cecc4870a6d5c5e54e4fdb 2 \"p\" Read Point \"dst\" Write Point 23 \"picked\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"pickedB\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"rotation order\" Int 1 BAAAAA== \"translate\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"rotate\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"scale\" Float 3 AACAPwAAgD8AAIA/AAAAAA== \"radius\" Float 1 AACAPw== \"shape\" Int 1 AAAAAA== \"invert_shape\" Int 1 AAAAAA== \"use_alpha\" Int 1 AAAAAA== \"falloff\" Int 1 AQAAAA== \"hardness\" Float 1 AAAAAA== \"use noise\" Int 1 AAAAAA== \"noise_relative\" Int 1 AAAAAA== \"noise octaves\" Int 1 CAAAAA== \"noise persistence\" Float 1 AAAAPw== \"lacunarity\" Float 1 AAAAQA== \"noise scale\" Float 1 CtcjPA== \"noise_offset\" Float 1 AAAAAA== \"noise_add\" Float 1 AAAAAA== \"noise_gain\" Float 1 AAAAAA== \"noise_gamma\" Float 1 AAAAAA== \"noise_mix\" Float 1 AAAAAA== 23 \"picked\" 3 1 \"pickedB\" 3 1 \"rotOrder\" 1 1 \"translate\" 3 1 \"rotate\" 3 1 \"scale\" 3 1 \"radius\" 1 1 \"shape\" 1 1 \"invert_shape\" 1 1 \"use_alpha\" 1 1 \"falloff\" 1 1 \"hardness\" 1 1 \"use_noise\" 1 1 \"noise_relative\" 1 1 \"noise_octaves\" 1 1 \"noise_persistence\" 1 1 \"noise_lacunarity\" 1 1 \"noise_scale\" 1 1 \"noise_offset\" 1 1 \"noise_add\" 1 1 \"noise_gain\" 1 1 \"noise_gamma\" 1 1 \"noise_mix\" 1 1 0"
kernelSource "// ----------------------------------------------------------------\n// aPMatte v1.0 by Adrian Pueyo\n//\n// Generate a matte of different shapes, based on a Position pass.\n// Includes options to transform the mask and change its falloff.\n// Also includes the option to output or overlay a P-based noise.\n//\n// adrianpueyo.com, 2017\n// ----------------------------------------------------------------\n\n\n// Noise algorithm adapted by Adrian Pueyo from Noise4D function by Mads Hagbarth Lund\n// Noise4D function Ported by Mads Hagbarth Lund 2014\n// Based on https://github.com/Draradech/csworldgen/blob/master/simplexnoise.cpp\n\n/* Copyright (c) 2007-2012 Eliot Eshelman\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n\nint fastfloor( const float x ) \{ return x > 0 ? (int) x : (int) x - 1; \}\ninline float raw_noise_4d( const float x, const float y, const float z, const float w ) \n\{\nint simplex\[64]\[4] = \{\n    \{0,1,2,3\},\{0,1,3,2\},\{0,0,0,0\},\{0,2,3,1\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{1,2,3,0\},\n    \{0,2,1,3\},\{0,0,0,0\},\{0,3,1,2\},\{0,3,2,1\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{1,3,2,0\},\n    \{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\n    \{1,2,0,3\},\{0,0,0,0\},\{1,3,0,2\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{2,3,0,1\},\{2,3,1,0\},\n    \{1,0,2,3\},\{1,0,3,2\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{2,0,3,1\},\{0,0,0,0\},\{2,1,3,0\},\n    \{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\n    \{2,0,1,3\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{3,0,1,2\},\{3,0,2,1\},\{0,0,0,0\},\{3,1,2,0\},\n    \{2,1,0,3\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{3,1,0,2\},\{0,0,0,0\},\{3,2,0,1\},\{3,2,1,0\}\n\};\n    int perm\[512] = \{\n        151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,\n        8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,\n        35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,\n        134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,\n        55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208, 89,\n        18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,\n        250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,\n        189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,\n        172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,\n        228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,\n        107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,\n        138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180,\n\n        151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,\n        8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,\n        35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,\n        134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,\n        55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208, 89,\n        18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,\n        250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,\n        189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,\n        172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,\n        228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,\n        107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,\n        138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180\n    \};\n  int grad4\[32]\[4]= \{\n    \{0,1,1,1\},  \{0,1,1,-1\},  \{0,1,-1,1\},  \{0,1,-1,-1\},\n    \{0,-1,1,1\}, \{0,-1,1,-1\}, \{0,-1,-1,1\}, \{0,-1,-1,-1\},\n    \{1,0,1,1\},  \{1,0,1,-1\},  \{1,0,-1,1\},  \{1,0,-1,-1\},\n    \{-1,0,1,1\}, \{-1,0,1,-1\}, \{-1,0,-1,1\}, \{-1,0,-1,-1\},\n    \{1,1,0,1\},  \{1,1,0,-1\},  \{1,-1,0,1\},  \{1,-1,0,-1\},\n    \{-1,1,0,1\}, \{-1,1,0,-1\}, \{-1,-1,0,1\}, \{-1,-1,0,-1\},\n    \{1,1,1,0\},  \{1,1,-1,0\},  \{1,-1,1,0\},  \{1,-1,-1,0\},\n    \{-1,1,1,0\}, \{-1,1,-1,0\}, \{-1,-1,1,0\}, \{-1,-1,-1,0\}\n  \};\n    float F4 = (sqrt(5.0f)-1.0)/4.0;\n    float G4 = (5.0-sqrt(5.0f))/20.0;\n    float n0, n1, n2, n3, n4;\n    float s = (x + y + z + w) * F4;\n    int i = fastfloor(x + s);\n    int j = fastfloor(y + s);\n    int k = fastfloor(z + s);\n    int l = fastfloor(w + s);\n    float t = (i + j + k + l) * G4;\n    float X0 = i - t;\n    float Y0 = j - t;\n    float Z0 = k - t;\n    float W0 = l - t;\n\n    float x0 = x - X0;\n    float y0 = y - Y0;\n    float z0 = z - Z0;\n    float w0 = w - W0;\n    int c1 = (x0 > y0) ? 32 : 0;\n    int c2 = (x0 > z0) ? 16 : 0;\n    int c3 = (y0 > z0) ? 8 : 0;\n    int c4 = (x0 > w0) ? 4 : 0;\n    int c5 = (y0 > w0) ? 2 : 0;\n    int c6 = (z0 > w0) ? 1 : 0;\n    int c = c1 + c2 + c3 + c4 + c5 + c6;\n\n    int i1, j1, k1, l1;\n    int i2, j2, k2, l2;\n    int i3, j3, k3, l3;\n    i1 = simplex\[c]\[0]>=3 ? 1 : 0;\n    j1 = simplex\[c]\[1]>=3 ? 1 : 0;\n    k1 = simplex\[c]\[2]>=3 ? 1 : 0;\n    l1 = simplex\[c]\[3]>=3 ? 1 : 0;\n    i2 = simplex\[c]\[0]>=2 ? 1 : 0;\n    j2 = simplex\[c]\[1]>=2 ? 1 : 0;\n    k2 = simplex\[c]\[2]>=2 ? 1 : 0;\n    l2 = simplex\[c]\[3]>=2 ? 1 : 0;\n    i3 = simplex\[c]\[0]>=1 ? 1 : 0;\n    j3 = simplex\[c]\[1]>=1 ? 1 : 0;\n    k3 = simplex\[c]\[2]>=1 ? 1 : 0;\n    l3 = simplex\[c]\[3]>=1 ? 1 : 0;\n    float x1 = x0 - i1 + G4;\n    float y1 = y0 - j1 + G4;\n    float z1 = z0 - k1 + G4;\n    float w1 = w0 - l1 + G4;\n    float x2 = x0 - i2 + 2.0*G4;\n    float y2 = y0 - j2 + 2.0*G4;\n    float z2 = z0 - k2 + 2.0*G4;\n    float w2 = w0 - l2 + 2.0*G4;\n    float x3 = x0 - i3 + 3.0*G4;\n    float y3 = y0 - j3 + 3.0*G4;\n    float z3 = z0 - k3 + 3.0*G4;\n    float w3 = w0 - l3 + 3.0*G4;\n    float x4 = x0 - 1.0 + 4.0*G4;\n    float y4 = y0 - 1.0 + 4.0*G4;\n    float z4 = z0 - 1.0 + 4.0*G4;\n    float w4 = w0 - 1.0 + 4.0*G4;\n    int ii = i & 255;\n    int jj = j & 255;\n    int kk = k & 255;\n    int ll = l & 255;\n    int gi0 = perm\[ii+perm\[jj+perm\[kk+perm\[ll]]]] % 32;\n    int gi1 = perm\[ii+i1+perm\[jj+j1+perm\[kk+k1+perm\[ll+l1]]]] % 32;\n    int gi2 = perm\[ii+i2+perm\[jj+j2+perm\[kk+k2+perm\[ll+l2]]]] % 32;\n    int gi3 = perm\[ii+i3+perm\[jj+j3+perm\[kk+k3+perm\[ll+l3]]]] % 32;\n    int gi4 = perm\[ii+1+perm\[jj+1+perm\[kk+1+perm\[ll+1]]]] % 32;\n    float t0 = 0.6 - x0*x0 - y0*y0 - z0*z0 - w0*w0;\n    if(t0<0) n0 = 0.0;\n    else \{\n        t0 *= t0;\n        n0 = t0 * t0 * dot(float4(grad4\[gi0]\[0],grad4\[gi0]\[2],grad4\[gi0]\[3],grad4\[gi0]\[3]), float4(x0, y0, z0, w0));\n    \}\n    float t1 = 0.6 - x1*x1 - y1*y1 - z1*z1 - w1*w1;\n    if(t1<0) n1 = 0.0;\n    else \{\n        t1 *= t1;\n        n1 = t1 * t1 * dot(float4(grad4\[gi1]\[0],grad4\[gi1]\[2],grad4\[gi1]\[3],grad4\[gi1]\[3]), float4(x1, y1, z1, w1));\n    \}\n    float t2 = 0.6 - x2*x2 - y2*y2 - z2*z2 - w2*w2;\n    if(t2<0) n2 = 0.0;\n    else \{\n        t2 *= t2;\n        n2 = t2 * t2 * dot(float4(grad4\[gi2]\[0],grad4\[gi2]\[2],grad4\[gi2]\[3],grad4\[gi2]\[3]), float4(x2, y2, z2, w2));\n    \}\n    float t3 = 0.6 - x3*x3 - y3*y3 - z3*z3 - w3*w3;\n    if(t3<0) n3 = 0.0;\n    else \{\n        t3 *= t3;\n        n3 = t3 * t3 * dot(float4(grad4\[gi3]\[0],grad4\[gi3]\[2],grad4\[gi3]\[3],grad4\[gi3]\[3]), float4(x3, y3, z3, w3));\n    \}\n    float t4 = 0.6 - x4*x4 - y4*y4 - z4*z4 - w4*w4;\n    if(t4<0) n4 = 0.0;\n    else \{\n        t4 *= t4;\n        n4 = t4 * t4 * dot(float4(grad4\[gi4]\[0],grad4\[gi4]\[2],grad4\[gi4]\[3],grad4\[gi4]\[3]), float4(x4, y4, z4, w4));\n    \}\n    return 27.0 * (n0 + n1 + n2 + n3 + n4);\n\}\ninline float octave_noise_4d( const float octaves, const float persistence, const float scale, const float x, const float y, const float z, const float w, const float lacunarity=2 ) \n\{\n    float total = 0;\n    float frequency = scale;\n    float amplitude = 1;\n    float maxAmplitude = 0;\n    for( int i=0; i < octaves; i++ ) \{\n        total += (float)raw_noise_4d( x * frequency, y * frequency, z * frequency, w * frequency ) * amplitude;\n\n        frequency *= lacunarity;\n        maxAmplitude += amplitude;\n        amplitude *= persistence;\n    \}\n    return float(total / maxAmplitude);\n\}\n\nkernel aPMatteKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> p;\n  Image<eWrite> dst;\n\n  param:\n    float3 picked; //Center, or white for ramps\n    float3 pickedB; //Black for ramps\n    int rotOrder; //0=XYZ,1=XZY,2=YXZ,3=YZX,4=ZXY,5=ZYX\n    float3 translate;\n    float3 rotate;\n    float3 scale;\n    float radius;\n    int shape; //0=sphere,1=cusped box,2=rounded box,3=ramp, 4=rad.ramp\n    int invert_shape;\n    int use_alpha;\n    int falloff; //0=linear,1=smooth,2=square,3=inv.square\n    float hardness;\n\n    // Noise parameters here\n    int use_noise; //0=off,1=overlay,2=noise only\n    int noise_relative;\n    int noise_octaves;\n    float noise_persistence;\n    float noise_lacunarity;\n    float noise_scale;\n    float noise_offset;\n    float noise_add;\n    float noise_gain;\n    float noise_gamma;\n    float noise_mix;\n\n  void define() \{\n    defineParam(rotOrder, \"rotation order\", 4);\n    defineParam(scale, \"scale\", float3(1.0f,1.0f,1.0f));\n    defineParam(radius, \"radius\", 1.0f);\n    defineParam(falloff, \"falloff\", 1);\n    defineParam(use_noise, \"use noise\", 0);\n    defineParam(noise_octaves, \"noise octaves\", 8);\n    defineParam(noise_persistence, \"noise persistence\",  0.5f);\n    defineParam(noise_lacunarity, \"lacunarity\",  2.0f);\n    defineParam(noise_scale, \"noise scale\", 0.01f);\n  \}\n\n  inline float rad(float deg)\{ \n    return deg*PI/180;\n  \}\n\n  inline float smoothstep(float edge0, float edge1, float x)\{\n    x = clamp((x - edge0)/(edge1 - edge0), 0.0f, 1.0f);\n    return x*x*x*(x*(x*6-15)+10);\n  \}\n\n  inline float cl(float val)\{\n  return clamp(val,0.0f,1.0f); \n  \}\n\n  float3 rotX(float3 vec, float rot)\{\n    if(rot==0.0f)\{\n      return vec;\n    \} else \{\n      float3 vecOut;\n      vecOut.y = vec.y*cos(rad(rot)) - vec.z*sin(rad(rot));\n      vecOut.z = vec.y*sin(rad(rot)) + vec.z*cos(rad(rot));\n      vecOut.x = vec.x;\n      return float3(vecOut.x,vecOut.y,vecOut.z);\n    \}\n  \}\n\n  float3 rotY(float3 vec, float rot)\{\n    if(rot==0.0f)\{\n      return vec;\n    \} else \{\n      float3 vecOut;\n      vecOut.z = vec.z*cos(rad(rot)) - vec.x*sin(rad(rot));\n      vecOut.x = vec.z*sin(rad(rot)) + vec.x*cos(rad(rot));\n      vecOut.y = vec.y;\n      return float3(vecOut.x,vecOut.y,vecOut.z);\n    \}\n  \}\n\n  float3 rotZ(float3 vec, float rot)\{\n    if(rot==0.0f)\{\n      return vec;\n    \} else \{\n      float3 vecOut;\n      vecOut.x = vec.x*cos(rad(rot)) - vec.y*sin(rad(rot));\n      vecOut.y = vec.x*sin(rad(rot)) + vec.y*cos(rad(rot));\n      vecOut.z = vec.z;\n      return float3(vecOut.x,vecOut.y,vecOut.z);\n    \}\n  \}\n\n  void process() \{\n    //1. P WORLD\n    // Center the coordinates\n    float3 color = float3(p(0)-picked.x,p(1)-picked.y,p(2)-picked.z);\n    int black = 0;\n\n    // Translate\n    color -= translate;\n\n    // Rotate\n    if (rotOrder<=0) color = rotZ(rotY(rotX(color,rotate.x),rotate.y),rotate.z);\n    else if (rotOrder==1) color = rotY(rotZ(rotX(color,rotate.x),rotate.z),rotate.y);\n    else if (rotOrder==2) color = rotZ(rotX(rotY(color,rotate.y),rotate.x),rotate.z);\n    else if (rotOrder==3) color = rotX(rotZ(rotY(color,rotate.y),rotate.z),rotate.x);\n    else if (rotOrder==4) color = rotY(rotX(rotZ(color,rotate.z),rotate.x),rotate.y);\n    else if (rotOrder>=5) color = rotX(rotY(rotZ(color,rotate.z),rotate.y),rotate.x);\n\n    // Scale\n    if (scale.x!=0 && scale.y!=0 && scale.z!=0) \{\n      color *= float3(1/scale.x, 1/scale.y, 1/scale.z);\n    \} else \{\n      dst() = 0.0f;\n      return;\n    \}\n\n    //2. SHAPES\n    float dist;\n    float result;\n\n    if(shape==0)\{//Sphere\n      dist = sqrt(pow(color\[0],2) + pow(color\[1],2) + pow(color\[2],2));\n      result = radius==0.0f? 0:cl(1-dist/radius);\n    \} else if(shape==1)\{//Cusped Box\n      result = min( min( cl((radius-fabs(color.x))/radius) , cl((radius-fabs(color.y))/radius)) , cl((radius-fabs(color.z))/radius)) ;\n      result = hardness>=1? float(result>0) : result;\n    \} else if(shape==2)\{//Rounded Box\n      result = radius==0.0f? 0: smoothstep(0,1-hardness, cl(1-fabs(float(color.x)/radius)) ) * smoothstep(0,1-hardness, cl(1-fabs(float(color.y)/radius)) ) * smoothstep(0,1-hardness, cl(1-fabs(float(color.z)/radius)) );\n      result = hardness>=1? float(result>0) : result;\n    \} else if(shape==3)\{//Linear Ramp\n      dist = sqrt(pow(color\[0],2) + pow(color\[1],2) + pow(color\[2],2));\n      float distB = sqrt(pow(color\[0]-(pickedB.x-picked.x),2) + pow(color\[1]-(pickedB.y-picked.y),2) + pow(color\[2]-(pickedB.z-picked.z),2));\n      float distWB = sqrt(pow(pickedB.x-picked.x,2) + pow(pickedB.y-picked.y,2) + pow(pickedB.z-picked.z,2));\n      float angWB = acos( clamp((pow(dist,2)-pow(distB,2)+pow(distWB,2))/(2*dist*distWB),-1.0f,1.0f) );\n      float cosAngWB = dist==0.0f? 0:cos(angWB);\n      result = distWB==0? 0.0f: cl((dist * cosAngWB) / distWB );\n      result = 1-result;\n    \} else if(shape==4)\{//Radial Ramp\n      dist = sqrt(pow(color\[0],2) + pow(color\[1],2) + pow(color\[2],2));\n      float distB = sqrt(pow(color\[0]-(pickedB.x-picked.x),2) + pow(color\[1]-(pickedB.y-picked.y),2) + pow(color\[2]-(pickedB.z-picked.z),2));\n      float distWB = sqrt(pow(pickedB.x-picked.x,2) + pow(pickedB.y-picked.y,2) + pow(pickedB.z-picked.z,2));\n      result = distWB==0? 0.0f: cl((dist) / distWB );\n      result = 1-result;\n    \}\n    result = invert_shape? 1-result:result;\n\n    //3. FALLOFF\n    if(falloff==0)\{//Linear\n      result = hardness>=1? float(result>0) : cl(result/(1-hardness));\n    \}else if(falloff==1)\{//Smooth\n      result = hardness>=1? float(result>0) : smoothstep(0,1-hardness,result);\n    \}else if(falloff==2)\{//Quadratic\n      result = hardness>=1? float(result>0) : cl(pow(float(result/(1-hardness)),2));\n    \}else if(falloff==3)\{//Cubic\n      result = hardness>=1? float(result>0) : cl(pow(float(result/(1-hardness)),3));\n    \}else if(falloff==4)\{//Inv. Cubic\n      result = hardness>=1? float(result>0) : 1-cl(pow(float(cl(1-(result/(1-hardness)))),3));\n    \}\n\n    //4. GENERATE NOISE\n    float noise;\n    if(use_noise!=0)\{//Avoid calculations if possible\n      if(noise_relative!=1)\{\n        noise = (float)octave_noise_4d(float(noise_octaves),noise_persistence,noise_scale==0?10000.0f:1/noise_scale,p(0),p(1),p(2),noise_offset,noise_lacunarity);\n      \}else\{\n        noise = (float)octave_noise_4d(float(noise_octaves),noise_persistence,noise_scale==0?10000.0f:1/noise_scale,color\[0],color\[1],color\[2],noise_offset,noise_lacunarity);\n      \}\n      noise = cl(pow(max((noise+noise_add)*noise_gain,0.0f),noise_gamma==0?1:1/noise_gamma));\n    \}\n\n\n    //5. ALPHA MASK AND APPLY NOISE\n    result = max(result,0.0f); //Clamp negative values\n    if(use_noise==1)\{//Overlay\n      result = result<0.5f? noise_mix*(2*noise*result)+(1-noise_mix)*result : noise_mix*(1-2*(1-result)*(1-noise))+(1-noise_mix)*result;\n    \}else if(use_noise>=2)\{\n      result = noise*noise_mix;\n    \}\n\n    if(use_alpha > 0) result=result*p(3);\n\n    //6. WE'RE DONE\n    dst() = result;\n  \}\n\};"
useGPUIfAvailable false
vectorize false
rebuild ""
aPMatteKernel_picked {{picker.r} {picker.g} {picker.b}}
aPMatteKernel_pickedB {{black_point} {black_point} {black_point}}
"aPMatteKernel_rotation order" {{parent.rotation_order}}
aPMatteKernel_translate {{parent.translate} {parent.translate} {parent.translate}}
aPMatteKernel_rotate {{parent.rotate} {parent.rotate} {parent.rotate}}
aPMatteKernel_scale {{parent.scale} {parent.scale} {parent.scale}}
aPMatteKernel_radius {{parent.radius}}
aPMatteKernel_shape {{parent.shape}}
aPMatteKernel_invert_shape {{parent.invert}}
aPMatteKernel_use_alpha {{parent.alpha_masking}}
aPMatteKernel_falloff {{parent.falloff}}
aPMatteKernel_hardness {{parent.hardness}}
"aPMatteKernel_use noise" {{parent.noise}}
aPMatteKernel_noise_relative {{parent.noise_rel}}
"aPMatteKernel_noise octaves" {{parent.noise_octaves}}
"aPMatteKernel_noise persistence" {{parent.noise_persistance}}
aPMatteKernel_lacunarity {{parent.noise_lacunarity}}
"aPMatteKernel_noise scale" {{parent.noise_size}}
aPMatteKernel_noise_offset {{parent.noise_offset}}
aPMatteKernel_noise_add {{parent.noise_add}}
aPMatteKernel_noise_gain {{parent.noise_gain}}
aPMatteKernel_noise_gamma {{parent.noise_gamma}}
aPMatteKernel_noise_mix {{parent.noise_mix}}
rebuild_finalise ""
name BlinkScriptPMatte
xpos -418
ypos 523
addUserKnob {20 User}
addUserKnob {6 black_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 picker}
picker {{aPMatte3.picker.r} -40 2000}
addUserKnob {6 picker_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 picker_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 black_point l black}
black_point {0 0 0}
addUserKnob {6 black_point_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 black_point_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
push $N34e68100
ShuffleCopy {
inputs 2
red red
green green
blue blue
out alpha
name ShuffleCopyOut
xpos -528
ypos 527
}
Output {
name Output
xpos -528
ypos 566
}
end_group
ChannelMerge {
inputs 2
A clouds.alpha
operation stencil
name ChannelMerge8
selected true
xpos 11848
ypos -13710
disable true
}
push $N34e6a400
Grade {
inputs 1+1
white {1.2 1 0.8 1}
white_panelDropped true
multiply 0.9
name Grade19
selected true
xpos 11713
ypos -13698
}
Dot {
name Dot287
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11747
ypos -13534
}
set N34e28800 [stack 0]
Dot {
name Dot288
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11877
ypos -13534
}
set N34e28100 [stack 0]
push $N34e28100
Dot {
name Dot289
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 12084
ypos -13534
}
Dot {
name Dot290
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 12084
ypos -13488
}
Group {
name aPMatte5
help "aPMatte v2.0 by Adrian Pueyo\n\nCreates a matte of different shapes, based on a Position pass. Includes transformation and falloff controls, and the option to output or overlay a Position 4D noise.\n\nv2.0 has the code more optimized, new available shapes and modes, includes a 3D-space view of the matte and point cloud, and accepts an Axis or Camera input. Also, lets you preview the p-matte over an image input and merge the alpha with the incoming one.\n\nadrianpueyo.com, 2017-2020"
onCreate "n = nuke.thisNode()\n\nfor k in \[\"radius\",\"card_scale\",\"noise_size\"]:\n    n\[k].setFlag(0x00000004)"
knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\nkn = k.name()\n\nif kn in \['xpos','ypos','selected']:\n    pass\nelif kn == \"shape\":\n    ramp_on = k.value() in \['linear ramp', 'radial ramp']\n    n\['radius'].setVisible(not ramp_on)\n    n.knobs()\[\"black\"].setVisible(ramp_on)\n    n\[\"axis\"].setVisible(k.value()==\"plane\")\n    n\[\"card_scale\"].setVisible(k.getValue() in \[3,5] and n\[\"preview_in_3d\"].value())\n    picker = n.knobs()\[\"picker\"]\n    if ramp_on:\n        picker.setLabel(\"white\")\n    elif k.value() == \"plane\":\n        picker.setLabel(\"pivot\")\n    else:\n        picker.setLabel(\"center\")\n\n    # Connect Scene\n    sc = nuke.toNode(\"SceneGeo\")\n    kv = k.getValue()\n    if kv in \[0,1,2]:\n        sc.setInput(1,nuke.toNode(\"DotSphereCube\"))\n    elif kv in \[3,5]:\n        sc.setInput(1,nuke.toNode(\"DotPlanes\"))\n    else:\n        sc.setInput(1,nuke.toNode(\"DotRadialRamp\"))\n\nelif kn == \"use_axis\":\n    ianame = \"Inputaxis\"\n    if k.value():\n        a = nuke.toNode(\"AxisInput\")\n        if not nuke.exists(ianame):\n            ia = nuke.nodes.Input(name=ianame)\n            ia.setXYpos(a.xpos()-10,a.ypos()-60)\n            a.setInput(0,ia)\n    else:\n        if nuke.exists(ianame):\n            n.setInput(3,None)\n            ia = nuke.toNode(ianame)\n            nuke.delete(ia)\n\nelif kn == \"preview_in_3d\":\n    kv = k.value()\n    n.knobs()\[\"point_detail\"].setVisible(kv)\n    n.knobs()\[\"point_size\"].setVisible(kv)\n    n\[\"card_scale\"].setVisible(n\[\"shape\"].getValue() in \[3,5] and k.value())\n    nuke.toNode(\"RenderPC\").setInput(1,nuke.toNode(\"SceneGeo\") if kv else None)\nelif kn == \"noise\":\n    noise_on = k.value() != 'off'\n    for t in \['noise_rel','noise_persistance','noise_octaves','noise_lacunarity','noise_size','noise_offset','noise_add','noise_gain','noise_gamma','noise_mix']:\n        n\[t].setVisible(noise_on)\np_input = n.input(1) is not None\nn\[\"img_in\"].setEnabled(not p_input)\nn\[\"img_txt\"].setEnabled(not p_input)\nn.knobs()\[\"p_in\"].setEnabled(p_input)\nn.knobs()\[\"p_txt\"].setEnabled(p_input)\n"
tile_color 0x898989ff
selected true
xpos 11964
ypos -13492
addUserKnob {20 aPMatte}
addUserKnob {26 position_from l "" +STARTLINE T " Position from:"}
addUserKnob {26 img_txt l img T " "}
addUserKnob {41 img_in l "" -STARTLINE T ShuffleInImg.in}
addUserKnob {26 p_txt l "P (optional)" +DISABLED T " "}
addUserKnob {41 p_in l "" -STARTLINE +DISABLED T ShuffleIn.in}
addUserKnob {6 premultiplied +STARTLINE}
premultiplied true
addUserKnob {6 alpha_masking l "alpha masking" t "Multiply the output by the input's alpha." -STARTLINE}
addUserKnob {26 text l "" +STARTLINE}
addUserKnob {4 outChannels l output M {alpha rgba ""}}
addUserKnob {6 mergeAlpha l "merge with input alpha" -STARTLINE}
addUserKnob {41 Channeloperation l "" -STARTLINE T ChannelMerge1.operation}
addUserKnob {6 preview l "preview over image" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {4 shape M {sphere "cusped box" "rounded box" "linear ramp" "radial ramp" plane}}
addUserKnob {4 axis l "" -STARTLINE +HIDDEN M {X Y Z "" "" "" ""}}
axis Y
addUserKnob {6 mirrored -STARTLINE}
addUserKnob {6 invert -STARTLINE}
addUserKnob {41 picker l center T BlinkScriptPMatte.picker}
addUserKnob {6 use_axis l "use axis" -STARTLINE}
addUserKnob {7 radius R 0.1 1000}
radius 5
addUserKnob {41 black t "Black point of your ramp." +HIDDEN T BlinkScriptPMatte.black_point}
addUserKnob {26 ""}
addUserKnob {6 preview_in_3d l "preview in 3d space" t "Recreates a 3D-space preview of the point cloud and the P-matte. After activating this, simply press the Tab key on the active viewer to change to 3D space." +STARTLINE}
addUserKnob {41 point_detail l "point detail" +HIDDEN T PositionToPointsPC.detail}
addUserKnob {41 point_size l "point size" +HIDDEN T PositionToPointsPC.pointSize}
addUserKnob {7 card_scale l "card scale" +HIDDEN R 0 100}
card_scale 100
addUserKnob {26 ""}
addUserKnob {4 falloff t "Fallof type for the matte." M {linear smooth quadratic cubic "inv. cubic" "" ""}}
addUserKnob {7 hardness}
addUserKnob {26 ""}
addUserKnob {41 xform_order l "transform order" T Axis.xform_order}
addUserKnob {41 rot_order l "rotation order" T Axis.rot_order}
addUserKnob {41 translate T Axis.translate}
addUserKnob {41 rotate T Axis.rotate}
addUserKnob {41 scaling l scale T Axis.scaling}
addUserKnob {41 uniform_scale l "uniform scale" T Axis.uniform_scale}
addUserKnob {41 skew T Axis.skew}
addUserKnob {41 pivot T Axis.pivot}
addUserKnob {22 reset_transformations l "  reset transformations  " T "a = nuke.toNode(\"Axis\")\na.readKnobs(\"xform_order SRT rot_order ZXY translate \{0 0 0\} rotate \{0 0 0\} scaling \{1 1 1\} uniform_scale 1 skew \{0 0 0\} pivot \{0 0 0\} useMatrix false\")" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {4 noise t "overlay: uses the noise in overlay blend mode over the resulting mask, to make it more organic and less obvious for grading.\nnoise only: ignore the mask, output a 4D noise." M {off overlay "noise only" ""}}
addUserKnob {6 noise_rel l relative t "On: Pick world transformations and positioning of the shape.\nOff: Pick absolute world transformations.\n\nTip: Check when you want the mask to always be affected by the same noise, uncheck when you want to lock the noise to your scene." -STARTLINE +HIDDEN}
noise_rel true
addUserKnob {7 noise_size l size t "Size of the noise pattern." +HIDDEN R 0 100}
noise_size 10
addUserKnob {7 noise_offset l offset t "Spatial offset of the noise pattern (use to find a sweet spot for your matte)." +HIDDEN R 0 100}
addUserKnob {3 noise_octaves l octaves t "Number of noise iterations." +HIDDEN}
noise_octaves 8
addUserKnob {7 noise_lacunarity l lacunarity t "Each octave gets downscaled by this value." +HIDDEN R 0 10}
noise_lacunarity 1.8
addUserKnob {7 noise_persistance l persistance t "Each octave gets multiplied by this value." +HIDDEN}
noise_persistance 0.5
addUserKnob {7 noise_add l add t "Add a value to the noise." +HIDDEN}
noise_add 0.5
addUserKnob {7 noise_gain l gain t "Multiply the resulting noise by this value." +HIDDEN R 0 4}
noise_gain 1
addUserKnob {7 noise_gamma l gamma t "Gamma the resulting value." +HIDDEN R 0 4}
noise_gamma 0.3
addUserKnob {7 noise_mix l mix +HIDDEN}
noise_mix 1
addUserKnob {26 version_author l " " t "aPMatte v2.0\n13 Feb 2020" T "<span style=\"color:#666\"><b>aPMatte v2.0</b> - <a href=\"http://www.adrianpueyo.com\" style=\"color:#666;text-decoration: none;\">adrianpueyo.com</a>, 2015-2020</span>"}
addUserKnob {6 BlinkScriptPMatte_black_point_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
}
Axis2 {
inputs 0
display off
selectable false
translate {{parent.BlinkScriptPMatte.aPMatteKernel_picked} {parent.BlinkScriptPMatte.aPMatteKernel_picked} {parent.BlinkScriptPMatte.aPMatteKernel_picked}}
name AxisPicked
xpos 211
ypos 364
}
Axis2 {
display off
selectable false
useMatrix true
matrix {
    {{parent.AxisInput.world_matrix} {parent.AxisInput.world_matrix} {parent.AxisInput.world_matrix} {parent.AxisInput.world_matrix}}
    {{parent.AxisInput.world_matrix} {parent.AxisInput.world_matrix} {parent.AxisInput.world_matrix} {parent.AxisInput.world_matrix}}
    {{parent.AxisInput.world_matrix} {parent.AxisInput.world_matrix} {parent.AxisInput.world_matrix} {parent.AxisInput.world_matrix}}
    {{parent.AxisInput.world_matrix} {parent.AxisInput.world_matrix} {parent.AxisInput.world_matrix} {parent.AxisInput.world_matrix}}
  }
name AxisInputCopy1
xpos 211
ypos 430
}
Axis2 {
scaling {10000 17 100000000}
name Axis
xpos 211
ypos 496
}
Dot {
name Dot18
note_font_size 41
xpos 235
ypos 635
}
set N34e18f00 [stack 0]
Axis2 {
display off
selectable false
uniform_scale {{sqrt(pow2(BlinkScriptPMatte.aPMatteKernel_picked.x-BlinkScriptPMatte.aPMatteKernel_pickedB.x)+pow2(BlinkScriptPMatte.aPMatteKernel_picked.y-BlinkScriptPMatte.aPMatteKernel_pickedB.y)+pow2(BlinkScriptPMatte.aPMatteKernel_picked.z-BlinkScriptPMatte.aPMatteKernel_pickedB.z))}}
name Axis2
xpos 211
ypos 870
}
Card2 {
inputs 0
display wireframe
selectable false
render_mode off
cast_shadow false
receive_shadow false
image_aspect false
rows 1
columns 1
uniform_scale {{parent.card_scale}}
control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
name Card2
xpos 617
ypos 438
}
Dot {
name Dot29
note_font_size 41
xpos 651
ypos 484
}
set N34bdf200 [stack 0]
Dot {
name Dot30
note_font_size 41
xpos 651
ypos 537
}
Sphere {
inputs 0
display wireframe
selectable false
render_mode off
cast_shadow false
receive_shadow false
rows 6
columns 6
name Sphere2
xpos 709
ypos 438
}
Dot {
name Dot31
note_font_size 41
xpos 743
ypos 563
}
push $N34bdf200
Cube {
inputs 0
display wireframe
selectable false
render_mode off
cast_shadow false
receive_shadow false
rows 1
columns 1
cube {-1 -1 -1 1 1 1}
name Cube1
xpos 523
ypos 438
}
set N34bdd600 [stack 0]
Dot {
name Dot20
note_font_size 41
xpos 591
ypos 484
}
push $N34bdd600
Sphere {
inputs 0
display wireframe
selectable false
render_mode off
cast_shadow false
receive_shadow false
rows 6
columns 6
name Sphere1
xpos 433
ypos 438
}
Dot {
name Dot21
note_font_size 41
xpos 467
ypos 499
}
Switch {
inputs 6
which {{parent.shape}}
name SwitchShapeGeo
xpos 523
ypos 559
}
Dot {
name Dot25
note_font_size 41
xpos 557
ypos 756
}
set N34b9f200 [stack 0]
Dot {
name Dot28
note_font_size 41
xpos 331
ypos 756
}
TransformGeo {
inputs 2
selectable false
name TransformGeoRadius1
xpos 297
ypos 890
}
Dot {
name DotRadialRamp
label "\[value name]"
note_font_size 12
xpos 331
ypos 922
}
push $N34e18f00
Dot {
name Dot26
note_font_size 41
xpos 466
ypos 635
}
set N34b9d600 [stack 0]
Axis2 {
display off
selectable false
uniform_scale {{parent.BlinkScriptPMatte.aPMatteKernel_radius}}
name Axis1
xpos 442
ypos 868
}
push $N34b9f200
TransformGeo {
inputs 2
selectable false
name TransformGeoAxis1
xpos 523
ypos 888
}
Dot {
name DotSphereCube
label "\[value name]"
note_font_size 12
xpos 557
ypos 967
}
Input {
inputs 0
name Inputimg
xpos -528
ypos 176
}
Dot {
name Dot1
note_font_size 41
xpos -494
ypos 257
}
set N34b63200 [stack 0]
Dot {
name Dot5
note_font_size 41
xpos -350
ypos 257
}
set N34b62b00 [stack 0]
Dot {
name Dot4
note_font_size 41
xpos -240
ypos 257
}
set N34b62400 [stack 0]
Dot {
name Dot6
note_font_size 41
xpos -157
ypos 257
}
set N34b61d00 [stack 0]
Input {
inputs 0
name InputP
xpos -73
ypos 178
number 1
}
set N34b61600 [stack 0]
Dot {
name Dot7
note_font_size 41
xpos 100
ypos 182
}
Switch {
inputs 2
which {{"\[exists parent.input0]"}}
name SwitchAlpha
label "\[value which]"
xpos 66
ypos 247
}
Dot {
name Dot8
xpos 100
ypos 356
}
push $N34b61d00
Shuffle {
in pSky
in2 rgba
alpha alpha2
name ShuffleInImg
xpos -191
ypos 296
}
push $N34b61600
Shuffle {
in2 rgba
alpha alpha2
name ShuffleIn
xpos -73
ypos 225
}
Switch {
inputs 2
which {{"!\[exists parent.input1]"}}
name Switch1
label "\[value which]"
xpos -73
ypos 290
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy2
xpos -73
ypos 346
disable {{!parent.alpha_masking}}
}
Unpremult {
name UnpremultP
xpos -73
ypos 384
disable {{!parent.premultiplied}}
}
Dot {
name Dot15
note_font_size 41
xpos -39
ypos 440
}
set N34b4d600 [stack 0]
Dot {
name Dot16
note_font_size 41
xpos -132
ypos 440
}
Blur {
channels rgba
name Blur1
xpos -166
ypos 827
}
Input {
inputs 0
name Inputmask
xpos -679
ypos 579
number 2
}
Dot {
name Dot14
note_font_size 41
xpos -645
ypos 795
}
set N34b27900 [stack 0]
push $N34b4d600
BlinkScript {
recompileCount 9
ProgramGroup 1
KernelDescription "2 \"aPMatteKernel\" iterate pixelWise ccf9f47b19e966f0f59161f3becf0189d1b2d3f9ee3837adfa2441f9df801783 2 \"p\" Read Point \"dst\" Write Point 21 \"picked\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"pickedB\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"m\" Float 16 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA== \"radius\" Float 1 AAAAAA== \"shape\" Int 1 AAAAAA== \"invert_shape\" Int 1 AAAAAA== \"use_alpha\" Int 1 AAAAAA== \"mirrored\" Int 1 AAAAAA== \"falloff\" Int 1 AQAAAA== \"hardness\" Float 1 AAAAAA== \"use noise\" Int 1 AAAAAA== \"noise_relative\" Int 1 AAAAAA== \"noise octaves\" Int 1 CAAAAA== \"noise persistence\" Float 1 AAAAPw== \"lacunarity\" Float 1 AAAAQA== \"noise scale\" Float 1 CtcjPA== \"noise_offset\" Float 1 AAAAAA== \"noise_add\" Float 1 AAAAAA== \"noise_gain\" Float 1 AAAAAA== \"noise_gamma\" Float 1 AAAAAA== \"noise_mix\" Float 1 AAAAAA== 21 \"picked\" 3 1 \"pickedB\" 3 1 \"m\" 16 1 \"radius\" 1 1 \"shape\" 1 1 \"invert_shape\" 1 1 \"use_alpha\" 1 1 \"mirrored\" 1 1 \"falloff\" 1 1 \"hardness\" 1 1 \"use_noise\" 1 1 \"noise_relative\" 1 1 \"noise_octaves\" 1 1 \"noise_persistence\" 1 1 \"noise_lacunarity\" 1 1 \"noise_scale\" 1 1 \"noise_offset\" 1 1 \"noise_add\" 1 1 \"noise_gain\" 1 1 \"noise_gamma\" 1 1 \"noise_mix\" 1 1 0"
kernelSource "// ----------------------------------------------------------------\n// aPMatte v1.0 by Adrian Pueyo\n//\n// Generate a matte of different shapes, based on a Position pass.\n// Includes options to transform the mask and change its falloff.\n// Also includes the option to output or overlay a P-based noise.\n//\n// adrianpueyo.com, 2017-2020\n// ----------------------------------------------------------------\n\n\n// Noise algorithm adapted by Adrian Pueyo from Noise4D function by Mads Hagbarth Lund\n// Noise4D function Ported by Mads Hagbarth Lund 2014\n// Based on https://github.com/Draradech/csworldgen/blob/master/simplexnoise.cpp\n\n/* Copyright (c) 2007-2012 Eliot Eshelman\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n\nint fastfloor( const float x ) \{ return x > 0 ? (int) x : (int) x - 1; \}\ninline float raw_noise_4d( const float x, const float y, const float z, const float w ) \n\{\nint simplex\[64]\[4] = \{\n    \{0,1,2,3\},\{0,1,3,2\},\{0,0,0,0\},\{0,2,3,1\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{1,2,3,0\},\n    \{0,2,1,3\},\{0,0,0,0\},\{0,3,1,2\},\{0,3,2,1\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{1,3,2,0\},\n    \{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\n    \{1,2,0,3\},\{0,0,0,0\},\{1,3,0,2\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{2,3,0,1\},\{2,3,1,0\},\n    \{1,0,2,3\},\{1,0,3,2\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{2,0,3,1\},\{0,0,0,0\},\{2,1,3,0\},\n    \{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\n    \{2,0,1,3\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{3,0,1,2\},\{3,0,2,1\},\{0,0,0,0\},\{3,1,2,0\},\n    \{2,1,0,3\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{3,1,0,2\},\{0,0,0,0\},\{3,2,0,1\},\{3,2,1,0\}\n\};\n    int perm\[512] = \{\n        151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,\n        8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,\n        35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,\n        134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,\n        55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208, 89,\n        18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,\n        250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,\n        189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,\n        172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,\n        228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,\n        107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,\n        138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180,\n\n        151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,\n        8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,\n        35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,\n        134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,\n        55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208, 89,\n        18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,\n        250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,\n        189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,\n        172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,\n        228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,\n        107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,\n        138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180\n    \};\n  int grad4\[32]\[4]= \{\n    \{0,1,1,1\},  \{0,1,1,-1\},  \{0,1,-1,1\},  \{0,1,-1,-1\},\n    \{0,-1,1,1\}, \{0,-1,1,-1\}, \{0,-1,-1,1\}, \{0,-1,-1,-1\},\n    \{1,0,1,1\},  \{1,0,1,-1\},  \{1,0,-1,1\},  \{1,0,-1,-1\},\n    \{-1,0,1,1\}, \{-1,0,1,-1\}, \{-1,0,-1,1\}, \{-1,0,-1,-1\},\n    \{1,1,0,1\},  \{1,1,0,-1\},  \{1,-1,0,1\},  \{1,-1,0,-1\},\n    \{-1,1,0,1\}, \{-1,1,0,-1\}, \{-1,-1,0,1\}, \{-1,-1,0,-1\},\n    \{1,1,1,0\},  \{1,1,-1,0\},  \{1,-1,1,0\},  \{1,-1,-1,0\},\n    \{-1,1,1,0\}, \{-1,1,-1,0\}, \{-1,-1,1,0\}, \{-1,-1,-1,0\}\n  \};\n    float F4 = (sqrt(5.0f)-1.0)/4.0;\n    float G4 = (5.0-sqrt(5.0f))/20.0;\n    float n0, n1, n2, n3, n4;\n    float s = (x + y + z + w) * F4;\n    int i = fastfloor(x + s);\n    int j = fastfloor(y + s);\n    int k = fastfloor(z + s);\n    int l = fastfloor(w + s);\n    float t = (i + j + k + l) * G4;\n    float X0 = i - t;\n    float Y0 = j - t;\n    float Z0 = k - t;\n    float W0 = l - t;\n\n    float x0 = x - X0;\n    float y0 = y - Y0;\n    float z0 = z - Z0;\n    float w0 = w - W0;\n    int c1 = (x0 > y0) ? 32 : 0;\n    int c2 = (x0 > z0) ? 16 : 0;\n    int c3 = (y0 > z0) ? 8 : 0;\n    int c4 = (x0 > w0) ? 4 : 0;\n    int c5 = (y0 > w0) ? 2 : 0;\n    int c6 = (z0 > w0) ? 1 : 0;\n    int c = c1 + c2 + c3 + c4 + c5 + c6;\n\n    int i1, j1, k1, l1;\n    int i2, j2, k2, l2;\n    int i3, j3, k3, l3;\n    i1 = simplex\[c]\[0]>=3 ? 1 : 0;\n    j1 = simplex\[c]\[1]>=3 ? 1 : 0;\n    k1 = simplex\[c]\[2]>=3 ? 1 : 0;\n    l1 = simplex\[c]\[3]>=3 ? 1 : 0;\n    i2 = simplex\[c]\[0]>=2 ? 1 : 0;\n    j2 = simplex\[c]\[1]>=2 ? 1 : 0;\n    k2 = simplex\[c]\[2]>=2 ? 1 : 0;\n    l2 = simplex\[c]\[3]>=2 ? 1 : 0;\n    i3 = simplex\[c]\[0]>=1 ? 1 : 0;\n    j3 = simplex\[c]\[1]>=1 ? 1 : 0;\n    k3 = simplex\[c]\[2]>=1 ? 1 : 0;\n    l3 = simplex\[c]\[3]>=1 ? 1 : 0;\n    float x1 = x0 - i1 + G4;\n    float y1 = y0 - j1 + G4;\n    float z1 = z0 - k1 + G4;\n    float w1 = w0 - l1 + G4;\n    float x2 = x0 - i2 + 2.0*G4;\n    float y2 = y0 - j2 + 2.0*G4;\n    float z2 = z0 - k2 + 2.0*G4;\n    float w2 = w0 - l2 + 2.0*G4;\n    float x3 = x0 - i3 + 3.0*G4;\n    float y3 = y0 - j3 + 3.0*G4;\n    float z3 = z0 - k3 + 3.0*G4;\n    float w3 = w0 - l3 + 3.0*G4;\n    float x4 = x0 - 1.0 + 4.0*G4;\n    float y4 = y0 - 1.0 + 4.0*G4;\n    float z4 = z0 - 1.0 + 4.0*G4;\n    float w4 = w0 - 1.0 + 4.0*G4;\n    int ii = i & 255;\n    int jj = j & 255;\n    int kk = k & 255;\n    int ll = l & 255;\n    int gi0 = perm\[ii+perm\[jj+perm\[kk+perm\[ll]]]] % 32;\n    int gi1 = perm\[ii+i1+perm\[jj+j1+perm\[kk+k1+perm\[ll+l1]]]] % 32;\n    int gi2 = perm\[ii+i2+perm\[jj+j2+perm\[kk+k2+perm\[ll+l2]]]] % 32;\n    int gi3 = perm\[ii+i3+perm\[jj+j3+perm\[kk+k3+perm\[ll+l3]]]] % 32;\n    int gi4 = perm\[ii+1+perm\[jj+1+perm\[kk+1+perm\[ll+1]]]] % 32;\n    float t0 = 0.6 - x0*x0 - y0*y0 - z0*z0 - w0*w0;\n    if(t0<0) n0 = 0.0;\n    else \{\n        t0 *= t0;\n        n0 = t0 * t0 * dot(float4(grad4\[gi0]\[0],grad4\[gi0]\[2],grad4\[gi0]\[3],grad4\[gi0]\[3]), float4(x0, y0, z0, w0));\n    \}\n    float t1 = 0.6 - x1*x1 - y1*y1 - z1*z1 - w1*w1;\n    if(t1<0) n1 = 0.0;\n    else \{\n        t1 *= t1;\n        n1 = t1 * t1 * dot(float4(grad4\[gi1]\[0],grad4\[gi1]\[2],grad4\[gi1]\[3],grad4\[gi1]\[3]), float4(x1, y1, z1, w1));\n    \}\n    float t2 = 0.6 - x2*x2 - y2*y2 - z2*z2 - w2*w2;\n    if(t2<0) n2 = 0.0;\n    else \{\n        t2 *= t2;\n        n2 = t2 * t2 * dot(float4(grad4\[gi2]\[0],grad4\[gi2]\[2],grad4\[gi2]\[3],grad4\[gi2]\[3]), float4(x2, y2, z2, w2));\n    \}\n    float t3 = 0.6 - x3*x3 - y3*y3 - z3*z3 - w3*w3;\n    if(t3<0) n3 = 0.0;\n    else \{\n        t3 *= t3;\n        n3 = t3 * t3 * dot(float4(grad4\[gi3]\[0],grad4\[gi3]\[2],grad4\[gi3]\[3],grad4\[gi3]\[3]), float4(x3, y3, z3, w3));\n    \}\n    float t4 = 0.6 - x4*x4 - y4*y4 - z4*z4 - w4*w4;\n    if(t4<0) n4 = 0.0;\n    else \{\n        t4 *= t4;\n        n4 = t4 * t4 * dot(float4(grad4\[gi4]\[0],grad4\[gi4]\[2],grad4\[gi4]\[3],grad4\[gi4]\[3]), float4(x4, y4, z4, w4));\n    \}\n    return 27.0 * (n0 + n1 + n2 + n3 + n4);\n\}\ninline float octave_noise_4d( const float octaves, const float persistence, const float scale, const float x, const float y, const float z, const float w, const float lacunarity=2 ) \n\{\n    float total = 0;\n    float frequency = scale;\n    float amplitude = 1;\n    float maxAmplitude = 0;\n    for( int i=0; i < octaves; i++ ) \{\n        total += (float)raw_noise_4d( x * frequency, y * frequency, z * frequency, w * frequency ) * amplitude;\n\n        frequency *= lacunarity;\n        maxAmplitude += amplitude;\n        amplitude *= persistence;\n    \}\n    return float(total / maxAmplitude);\n\}\n\nkernel aPMatteKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> p;\n  Image<eWrite> dst;\n\n  param:\n    float3 picked; //Center, or white for ramps\n    float3 pickedB; //Black for ramps\n    float4x4 m; //Camera or axis matrix.\n    float radius;\n    int shape; //0=sphere,1=cusped box,2=rounded box,3=ramp, 4=rad.ramp\n    int invert_shape;\n    int use_alpha;\n    int mirrored;\n    int falloff; //0=linear,1=smooth,2=square,3=inv.square\n    float hardness;\n\n    // Noise parameters here\n    int use_noise; //0=off,1=overlay,2=noise only\n    int noise_relative;\n    int noise_octaves;\n    float noise_persistence;\n    float noise_lacunarity;\n    float noise_scale;\n    float noise_offset;\n    float noise_add;\n    float noise_gain;\n    float noise_gamma;\n    float noise_mix;\n\n  void define() \{\n    defineParam(falloff, \"falloff\", 1);\n    defineParam(use_noise, \"use noise\", 0);\n    defineParam(noise_octaves, \"noise octaves\", 8);\n    defineParam(noise_persistence, \"noise persistence\",  0.5f);\n    defineParam(noise_lacunarity, \"lacunarity\",  2.0f);\n    defineParam(noise_scale, \"noise scale\", 0.01f);\n  \}\n\n  inline float rad(float deg)\{ \n    return deg*PI/180;\n  \}\n\n  inline float smoothstep(float edge0, float edge1, float x)\{\n    x = clamp((x - edge0)/(edge1 - edge0), 0.0f, 1.0f);\n    return x*x*x*(x*(x*6-15)+10);\n  \}\n\n  inline float cl(float val)\{\n  return clamp(val,0.0f,1.0f); \n  \}\n\n\n  void process() \{\n    //1. P WORLD\n    // Center the coordinates\n    float3 color = float3(p(0)-picked.x,p(1)-picked.y,p(2)-picked.z);\n    int black = 0;\n\n    // Matrix!\n    float4x4 mi = m;\n    mi = mi.invert();\n    for(int c = 0; c<dst.kComps; c++)\{\n      color\[c] = mi\[c]\[0]*color\[0] + mi\[c]\[1]*color\[1] + mi\[c]\[2]*color\[2] + mi\[c]\[3]*1.0f;\n    \}\n\n    //2. SHAPES\n    float dist;\n    float result;\n\n    if(shape==0)\{//Sphere\n      dist = sqrt(pow(color\[0],2) + pow(color\[1],2) + pow(color\[2],2));\n      result = radius==0.0f? 0:cl(1-dist/radius);\n    \} else if(shape==1)\{//Cusped Box\n      result = min( min( cl((radius-fabs(color.x))/radius) , cl((radius-fabs(color.y))/radius)) , cl((radius-fabs(color.z))/radius)) ;\n      result = hardness>=1? float(result>0) : result;\n    \} else if(shape==2)\{//Rounded Box\n      result = radius==0.0f? 0: smoothstep(0,1-hardness, cl(1-fabs(float(color.x)/radius)) ) * smoothstep(0,1-hardness, cl(1-fabs(float(color.y)/radius)) ) * smoothstep(0,1-hardness, cl(1-fabs(float(color.z)/radius)) );\n      result = hardness>=1? float(result>0) : result;\n    \} else if(shape==3)\{//Linear Ramp\n      dist = sqrt(pow(color\[0],2) + pow(color\[1],2) + pow(color\[2],2));\n      float distB = sqrt(pow(color\[0]-(pickedB.x-picked.x),2) + pow(color\[1]-(pickedB.y-picked.y),2) + pow(color\[2]-(pickedB.z-picked.z),2));\n      float distWB = sqrt(pow(pickedB.x-picked.x,2) + pow(pickedB.y-picked.y,2) + pow(pickedB.z-picked.z,2));\n      float angWB = acos( clamp((pow(dist,2)-pow(distB,2)+pow(distWB,2))/(2*dist*distWB),-1.0f,1.0f) );\n      float cosAngWB = dist==0.0f? 0:cos(angWB);\n      result = distWB==0? 0.0f: cl((dist * cosAngWB) / distWB );\n      result = 1-result;\n    \} else if(shape==4)\{//Radial Ramp\n      dist = sqrt(pow(color\[0],2) + pow(color\[1],2) + pow(color\[2],2));\n      float distB = sqrt(pow(color\[0]-(pickedB.x-picked.x),2) + pow(color\[1]-(pickedB.y-picked.y),2) + pow(color\[2]-(pickedB.z-picked.z),2));\n      float distWB = sqrt(pow(pickedB.x-picked.x,2) + pow(pickedB.y-picked.y,2) + pow(pickedB.z-picked.z,2));\n      result = distWB==0? 0.0f: cl((dist) / distWB );\n      result = 1-result;\n    \}\n    result = mirrored ? result*(1-result)*4:result;\n    result = invert_shape? 1-result:result;\n\n    //3. FALLOFF\n    if(falloff==0)\{//Linear\n      result = hardness>=1? float(result>0) : cl(result/(1-hardness));\n    \}else if(falloff==1)\{//Smooth\n      result = hardness>=1? float(result>0) : smoothstep(0,1-hardness,result);\n    \}else if(falloff==2)\{//Quadratic\n      result = hardness>=1? float(result>0) : cl(pow(float(result/(1-hardness)),2));\n    \}else if(falloff==3)\{//Cubic\n      result = hardness>=1? float(result>0) : cl(pow(float(result/(1-hardness)),3));\n    \}else if(falloff==4)\{//Inv. Cubic\n      result = hardness>=1? float(result>0) : 1-cl(pow(float(cl(1-(result/(1-hardness)))),3));\n    \}\n\n    //4. GENERATE NOISE\n    float noise;\n    if(use_noise!=0)\{//Avoid calculations if possible\n      if(noise_relative!=1)\{\n        noise = (float)octave_noise_4d(float(noise_octaves),noise_persistence,noise_scale==0?10000.0f:1/noise_scale,p(0),p(1),p(2),noise_offset,noise_lacunarity);\n      \}else\{\n        noise = (float)octave_noise_4d(float(noise_octaves),noise_persistence,noise_scale==0?10000.0f:1/noise_scale,color\[0],color\[1],color\[2],noise_offset,noise_lacunarity);\n      \}\n      noise = cl(pow(max((noise+noise_add)*noise_gain,0.0f),noise_gamma==0?1:1/noise_gamma));\n    \}\n\n\n    //5. ALPHA MASK AND APPLY NOISE\n    result = max(result,0.0f); //Clamp negative values\n    if(use_noise==1)\{//Overlay\n      result = result<0.5f? noise_mix*(2*noise*result)+(1-noise_mix)*result : noise_mix*(1-2*(1-result)*(1-noise))+(1-noise_mix)*result;\n    \}else if(use_noise>=2)\{\n      result = noise*noise_mix;\n    \}\n\n    if(use_alpha > 0) result=result*p(3);\n\n    //6. WE'RE DONE\n    dst() = result;\n  \}\n\};"
useGPUIfAvailable false
rebuild ""
aPMatteKernel_picked {{(parent.shape==3&&parent.mirrored)?picker-(black_point-picker):(parent.shape==5&&parent.mirrored)?picker-radius:picker} {(parent.shape==3&&parent.mirrored)?picker-(black_point-picker):(parent.shape==5&&parent.mirrored)?picker-radius:picker} {(parent.shape==3&&parent.mirrored)?picker-(black_point-picker):(parent.shape==5&&parent.mirrored)?picker-radius:picker}}
aPMatteKernel_pickedB {{parent.shape==5?parent.axis==0?picker+radius+0.0001:picker:black_point} {parent.shape==5?parent.axis==1?picker+radius+0.0001:picker:black_point} {parent.shape==5?parent.axis==2?picker+radius+0.0001:picker+0.00001:black_point}}
group_aPMatteKernel_m 1
aPMatteKernel_m {
    {{parent.AxisCopy.world_matrix} {parent.AxisCopy.world_matrix} {parent.AxisCopy.world_matrix} {parent.AxisCopy.world_matrix}}
    {{parent.AxisCopy.world_matrix} {parent.AxisCopy.world_matrix} {parent.AxisCopy.world_matrix} {parent.AxisCopy.world_matrix}}
    {{parent.AxisCopy.world_matrix} {parent.AxisCopy.world_matrix} {parent.AxisCopy.world_matrix} {parent.AxisCopy.world_matrix}}
    {{parent.AxisCopy.world_matrix} {parent.AxisCopy.world_matrix} {parent.AxisCopy.world_matrix} {parent.AxisCopy.world_matrix}}
  }
aPMatteKernel_radius {{parent.radius}}
aPMatteKernel_shape {{parent.shape==5?3:parent.shape}}
aPMatteKernel_invert_shape {{parent.invert}}
aPMatteKernel_use_alpha {{parent.alpha_masking}}
aPMatteKernel_mirrored {{parent.mirrored}}
aPMatteKernel_falloff {{parent.falloff}}
aPMatteKernel_hardness {{parent.hardness}}
"aPMatteKernel_use noise" {{parent.noise}}
aPMatteKernel_noise_relative {{parent.noise_rel}}
"aPMatteKernel_noise octaves" {{parent.noise_octaves}}
"aPMatteKernel_noise persistence" {{parent.noise_persistance}}
aPMatteKernel_lacunarity {{parent.noise_lacunarity}}
"aPMatteKernel_noise scale" {{parent.noise_size}}
aPMatteKernel_noise_offset {{parent.noise_offset}}
aPMatteKernel_noise_add {{parent.noise_add}}
aPMatteKernel_noise_gain {{parent.noise_gain}}
aPMatteKernel_noise_gamma {{parent.noise_gamma}}
aPMatteKernel_noise_mix {{parent.noise_mix}}
rebuild_finalise ""
name BlinkScriptPMatte
xpos -73
ypos 489
addUserKnob {20 User}
addUserKnob {18 picker}
picker {1088.623169 0 1784.338867}
addUserKnob {6 picker_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 black_point l black}
black_point {0 0 0}
addUserKnob {6 black_point_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
}
Dot {
name Dot13
note_font_size 41
xpos -39
ypos 629
}
Dot {
name Dot3
note_font_size 41
xpos -39
ypos 696
}
set N34b24f00 [stack 0]
push $N34b62b00
ChannelMerge {
inputs 2
name ChannelMerge1
xpos -384
ypos 684
}
push $N34b24f00
Dot {
name Dot2
note_font_size 41
xpos -39
ypos 733
}
Switch {
inputs 2
which {{parent.mergeAlpha}}
name Switch2
label "\[value which]"
xpos -384
ypos 726
}
Shuffle {
red alpha
green alpha
blue alpha
name ShuffleToRGBA
tile_color 0xffffffff
xpos -384
ypos 832
}
set N34cf3200 [stack 0]
push $N34b62400
Merge2 {
inputs 2+1
Achannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
name Merge1
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos -274
ypos 792
}
Dot {
name Dot9
xpos -240
ypos 929
}
set N34cf2400 [stack 0]
PositionToPoints2 {
inputs 2
display textured
selectable false
render_mode off
detail 1
name PositionToPointsPC
xpos -166
ypos 925
disable {{!parent.preview_in_3d}}
}
Scene {
inputs 2
name SceneGeo
xpos -156
ypos 983
disable {{!parent.preview_in_3d}}
}
ScanlineRender {
inputs 0
conservative_shader_sampling false
motion_vectors_type distance
name RenderPC
xpos -166
ypos 1102
disable {{!parent.preview_in_3d}}
}
Dot {
name Dot17
note_font_size 41
xpos -132
ypos 1172
}
push $N34cf2400
push $N34b27900
Dot {
name Dot12
note_font_size 41
xpos -645
ypos 835
}
set N34ccb900 [stack 0]
Dot {
name Dot11
note_font_size 41
xpos -645
ypos 878
}
push $N34cf3200
Dot {
name Dot10
note_font_size 41
xpos -350
ypos 878
}
push $N34ccb900
push $N34cf3200
push $N34b63200
Copy {
inputs 2+1
from0 rgba.alpha
to0 rgba.alpha
name CopyA
xpos -528
ypos 828
}
Copy {
inputs 2+1
channels rgb
name CopyRGB
xpos -528
ypos 866
disable {{parent.outChannels==0}}
}
Copy {
inputs 2
channels rgb
name CopyPreview
xpos -528
ypos 917
disable {{!parent.preview}}
}
Dissolve {
inputs 2
channels rgba
name DissolvePC
xpos -528
ypos 1168
disable {{!parent.preview_in_3d}}
}
Output {
name Output
xpos -528
ypos 1254
}
push $N34b9d600
Dot {
name Dot27
note_font_size 41
xpos 691
ypos 635
}
set N34cc8100 [stack 0]
Dot {
name Dot24
note_font_size 41
xpos 994
ypos 635
}
Axis2 {
display off
selectable false
translate {{-parent.BlinkScriptPMatte.aPMatteKernel_picked} {-parent.BlinkScriptPMatte.aPMatteKernel_picked} {-parent.BlinkScriptPMatte.aPMatteKernel_picked}}
name AxisPickedReversed
xpos 970
ypos 719
}
Axis2 {
display off
selectable false
translate {{parent.BlinkScriptPMatte.aPMatteKernel_pickedB} {parent.BlinkScriptPMatte.aPMatteKernel_pickedB} {parent.BlinkScriptPMatte.aPMatteKernel_pickedB}}
name AxisPickedBlack1
xpos 970
ypos 785
}
set N34ca6b00 [stack 0]
push $N34cc8100
Axis2 {
display off
selectable false
name AxisWhite
xpos 667
ypos 795
}
set N34ca6400 [stack 0]
Dot {
name Dot34
note_font_size 41
xpos 691
ypos 914
}
push $N34b9f200
Dot {
name Dot23
note_font_size 41
xpos 783
ypos 756
}
set N34ca5600 [stack 0]
TransformGeo {
inputs 3
selectable false
name TransformGeoWhite
xpos 749
ypos 910
}
push $N34ca6400
push $N34ca6b00
Dot {
name Dot33
note_font_size 41
xpos 994
ypos 913
}
push $N34ca5600
Dot {
name Dot32
note_font_size 41
xpos 909
ypos 756
}
TransformGeo {
inputs 3
name TransformGeo1
xpos 875
ypos 909
}
Dot {
name Dot19
note_font_size 41
xpos 909
ypos 940
}
MergeGeo {
inputs 2
selectable false
name MergeGeo2
xpos 749
ypos 936
}
Dot {
name DotPlanes
label "\[value name]"
note_font_size 12
xpos 783
ypos 1011
}
Axis2 {
inputs 0
display off
selectable false
useMatrix true
matrix {
    {{parent.AxisInput.world_matrix} {parent.AxisInput.world_matrix} {parent.AxisInput.world_matrix} {parent.AxisInput.world_matrix}}
    {{parent.AxisInput.world_matrix} {parent.AxisInput.world_matrix} {parent.AxisInput.world_matrix} {parent.AxisInput.world_matrix}}
    {{parent.AxisInput.world_matrix} {parent.AxisInput.world_matrix} {parent.AxisInput.world_matrix} {parent.AxisInput.world_matrix}}
    {{parent.AxisInput.world_matrix} {parent.AxisInput.world_matrix} {parent.AxisInput.world_matrix} {parent.AxisInput.world_matrix}}
  }
name AxisInputCopy2
xpos 102
ypos 428
}
Axis2 {
display off
useMatrix true
matrix {
    {{parent.Axis.matrix} {parent.Axis.matrix} {parent.Axis.matrix} {parent.Axis.matrix}}
    {{parent.Axis.matrix} {parent.Axis.matrix} {parent.Axis.matrix} {parent.Axis.matrix}}
    {{parent.Axis.matrix} {parent.Axis.matrix} {parent.Axis.matrix} {parent.Axis.matrix}}
    {{parent.Axis.matrix} {parent.Axis.matrix} {parent.Axis.matrix} {parent.Axis.matrix}}
  }
name AxisCopy
xpos 102
ypos 494
}
Axis2 {
inputs 0
display off
selectable false
name AxisInput
xpos 333
ypos 432
}
end_group
ChannelMerge {
inputs 2
A clouds.alpha
operation stencil
name ChannelMerge9
selected true
xpos 11843
ypos -13504
}
push $N34e28800
Grade {
inputs 1+1
multiply 1.3
name Grade20
selected true
xpos 11713
ypos -13492
disable true
}
Dot {
name Dot291
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11747
ypos -13342
}
set N34c28800 [stack 0]
Dot {
name Dot292
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11880
ypos -13342
}
set N34c28100 [stack 0]
push $N34c28100
Dot {
name Dot293
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 12090
ypos -13342
}
Dot {
name Dot294
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 12090
ypos -13296
}
Group {
name aPMatte2
help "aPMatte v1.0 by Adrian Pueyo\n\nGenerate a matte of different shapes, based on a Position pass. Includes options to transform the mask and change its falloff. Also has the option to output or overlay a P-based 3D noise.\n\nadrianpueyo.com, 2017"
knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == \"shape\":\n    rampOn = k.value() in \['linear ramp', 'radial ramp'];\n    n\['radius'].setVisible(not rampOn)\n    n.knobs()\[\"black\"].setVisible(rampOn)\n    n.knobs()\[\"picker\"].setLabel( \"white\" if rampOn else \"center\" )\n\n\nif k.name() == \"noise\":\n    noiseOn = k.value() != 'off';\n    n\['noise_rel'].setVisible(noiseOn)\n    n\['noise_persistance'].setVisible(noiseOn)\n    n\['noise_octaves'].setVisible(noiseOn)\n    n\['noise_lacunarity'].setVisible(noiseOn)\n    n\['noise_size'].setVisible(noiseOn)\n    n\['noise_offset'].setVisible(noiseOn)\n    n\['noise_add'].setVisible(noiseOn)\n    n\['noise_gain'].setVisible(noiseOn)\n    n\['noise_gamma'].setVisible(noiseOn)\n    n\['noise_mix'].setVisible(noiseOn)\n\nif not n\[\"autolabel\"].value():\n    n\[\"autolabel\"].setValue(\"'%s\\\\n(%s)'%(nuke.thisNode()\['name'].value(),nuke.thisNode()\['out'].value()) if nuke.thisNode()\['out'].value()!='alpha' else nuke.thisNode()\['name'].value()\")"
autolabel "'%s\\n(%s)'%(nuke.thisNode()\['name'].value(),nuke.thisNode()\['out'].value()) if nuke.thisNode()\['out'].value()!='alpha' else nuke.thisNode()\['name'].value()"
selected true
xpos 11967
ypos -13300
addUserKnob {20 aPMatte}
addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T BlinkScriptPMatte.useGPUIfAvailable}
addUserKnob {41 vectorize l "Vectorize on CPU" -STARTLINE T BlinkScriptPMatte.vectorize}
addUserKnob {26 ""}
addUserKnob {41 p_channels l "P channels" T ShuffleIn.in}
addUserKnob {41 out l " output" -STARTLINE T ShuffleCopyOut.out}
addUserKnob {6 alpha_masking l "alpha masking" t "Multiply the output by the input's alpha." +STARTLINE}
alpha_masking true
addUserKnob {4 shape M {sphere "cusped box" "rounded box" "linear ramp" "radial ramp" ""}}
addUserKnob {6 invert -STARTLINE}
invert true
addUserKnob {41 picker l center T BlinkScriptPMatte.picker}
addUserKnob {7 radius R 0 100}
radius 16
addUserKnob {41 black t "Black point of your ramp." +HIDDEN T BlinkScriptPMatte.black_point}
addUserKnob {26 ""}
addUserKnob {4 falloff t "Fallof type for the matte." M {linear smooth quadratic cubic "inv. cubic" "" ""}}
falloff smooth
addUserKnob {7 hardness}
addUserKnob {26 ""}
addUserKnob {4 rotation_order l "rotation order" M {XYZ XZY YXZ YZX ZXY ZYX}}
rotation_order ZXY
addUserKnob {13 translate}
addUserKnob {13 rotate}
addUserKnob {13 scale}
scale {10000 30 100000000}
addUserKnob {26 ""}
addUserKnob {4 noise t "overlay: uses the noise in overlay blend mode over the resulting mask, to make it more organic and less obvious for grading.\nnoise only: ignore the mask, output a 3D noise." M {off overlay "noise only"}}
addUserKnob {6 noise_rel l relative t "On: Pick world transformations and positioning of the shape.\nOff: Pick absolute world transformations.\n\nTip: Check when you want the mask to always be affected by the same noise, uncheck when you want to lock the noise to your scene." -STARTLINE +HIDDEN}
noise_rel true
addUserKnob {7 noise_size l size t "Size of the noise pattern." +HIDDEN R 0 100}
noise_size 10
addUserKnob {7 noise_offset l offset t "Spatial offset of the noise pattern (use to find a sweet spot for your matte)." +HIDDEN R 0 100}
addUserKnob {3 noise_octaves l octaves t "Number of noise iterations." +HIDDEN}
noise_octaves 8
addUserKnob {7 noise_lacunarity l lacunarity t "Each octave gets downscaled by this value." +HIDDEN R 0 10}
noise_lacunarity 1.8
addUserKnob {7 noise_persistance l persistance t "Each octave gets multiplied by this value." +HIDDEN}
noise_persistance 0.5
addUserKnob {7 noise_add l add t "Add a value to the noise." +HIDDEN}
noise_add 0.5
addUserKnob {7 noise_gain l gain t "Multiply the resulting noise by this value." +HIDDEN R 0 4}
noise_gain 1
addUserKnob {7 noise_gamma l gamma t "Gamma the resulting value." +HIDDEN R 0 4}
noise_gamma 1
addUserKnob {7 noise_mix l mix +HIDDEN}
noise_mix 1
addUserKnob {26 copyright l " " T "<br/><font color=#777><b>aPMatte v1.0</b> - adrianpueyo.com, 2017"}
addUserKnob {6 BlinkScriptPMatte_black_point_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
}
Input {
inputs 0
name Inputimg
xpos -528
ypos 483
}
set N34e0e400 [stack 0]
Shuffle {
in pSky
in2 rgba
alpha alpha2
name ShuffleIn
xpos -418
ypos 483
}
BlinkScript {
ProgramGroup 1
KernelDescription "2 \"aPMatteKernel\" iterate pixelWise eba2548d360b6b3d2b97555753832bdfb4c4224623cecc4870a6d5c5e54e4fdb 2 \"p\" Read Point \"dst\" Write Point 23 \"picked\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"pickedB\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"rotation order\" Int 1 BAAAAA== \"translate\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"rotate\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"scale\" Float 3 AACAPwAAgD8AAIA/AAAAAA== \"radius\" Float 1 AACAPw== \"shape\" Int 1 AAAAAA== \"invert_shape\" Int 1 AAAAAA== \"use_alpha\" Int 1 AAAAAA== \"falloff\" Int 1 AQAAAA== \"hardness\" Float 1 AAAAAA== \"use noise\" Int 1 AAAAAA== \"noise_relative\" Int 1 AAAAAA== \"noise octaves\" Int 1 CAAAAA== \"noise persistence\" Float 1 AAAAPw== \"lacunarity\" Float 1 AAAAQA== \"noise scale\" Float 1 CtcjPA== \"noise_offset\" Float 1 AAAAAA== \"noise_add\" Float 1 AAAAAA== \"noise_gain\" Float 1 AAAAAA== \"noise_gamma\" Float 1 AAAAAA== \"noise_mix\" Float 1 AAAAAA== 23 \"picked\" 3 1 \"pickedB\" 3 1 \"rotOrder\" 1 1 \"translate\" 3 1 \"rotate\" 3 1 \"scale\" 3 1 \"radius\" 1 1 \"shape\" 1 1 \"invert_shape\" 1 1 \"use_alpha\" 1 1 \"falloff\" 1 1 \"hardness\" 1 1 \"use_noise\" 1 1 \"noise_relative\" 1 1 \"noise_octaves\" 1 1 \"noise_persistence\" 1 1 \"noise_lacunarity\" 1 1 \"noise_scale\" 1 1 \"noise_offset\" 1 1 \"noise_add\" 1 1 \"noise_gain\" 1 1 \"noise_gamma\" 1 1 \"noise_mix\" 1 1 0"
kernelSource "// ----------------------------------------------------------------\n// aPMatte v1.0 by Adrian Pueyo\n//\n// Generate a matte of different shapes, based on a Position pass.\n// Includes options to transform the mask and change its falloff.\n// Also includes the option to output or overlay a P-based noise.\n//\n// adrianpueyo.com, 2017\n// ----------------------------------------------------------------\n\n\n// Noise algorithm adapted by Adrian Pueyo from Noise4D function by Mads Hagbarth Lund\n// Noise4D function Ported by Mads Hagbarth Lund 2014\n// Based on https://github.com/Draradech/csworldgen/blob/master/simplexnoise.cpp\n\n/* Copyright (c) 2007-2012 Eliot Eshelman\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n\nint fastfloor( const float x ) \{ return x > 0 ? (int) x : (int) x - 1; \}\ninline float raw_noise_4d( const float x, const float y, const float z, const float w ) \n\{\nint simplex\[64]\[4] = \{\n    \{0,1,2,3\},\{0,1,3,2\},\{0,0,0,0\},\{0,2,3,1\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{1,2,3,0\},\n    \{0,2,1,3\},\{0,0,0,0\},\{0,3,1,2\},\{0,3,2,1\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{1,3,2,0\},\n    \{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\n    \{1,2,0,3\},\{0,0,0,0\},\{1,3,0,2\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{2,3,0,1\},\{2,3,1,0\},\n    \{1,0,2,3\},\{1,0,3,2\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{2,0,3,1\},\{0,0,0,0\},\{2,1,3,0\},\n    \{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\n    \{2,0,1,3\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{3,0,1,2\},\{3,0,2,1\},\{0,0,0,0\},\{3,1,2,0\},\n    \{2,1,0,3\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{3,1,0,2\},\{0,0,0,0\},\{3,2,0,1\},\{3,2,1,0\}\n\};\n    int perm\[512] = \{\n        151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,\n        8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,\n        35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,\n        134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,\n        55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208, 89,\n        18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,\n        250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,\n        189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,\n        172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,\n        228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,\n        107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,\n        138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180,\n\n        151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,\n        8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,\n        35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,\n        134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,\n        55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208, 89,\n        18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,\n        250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,\n        189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,\n        172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,\n        228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,\n        107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,\n        138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180\n    \};\n  int grad4\[32]\[4]= \{\n    \{0,1,1,1\},  \{0,1,1,-1\},  \{0,1,-1,1\},  \{0,1,-1,-1\},\n    \{0,-1,1,1\}, \{0,-1,1,-1\}, \{0,-1,-1,1\}, \{0,-1,-1,-1\},\n    \{1,0,1,1\},  \{1,0,1,-1\},  \{1,0,-1,1\},  \{1,0,-1,-1\},\n    \{-1,0,1,1\}, \{-1,0,1,-1\}, \{-1,0,-1,1\}, \{-1,0,-1,-1\},\n    \{1,1,0,1\},  \{1,1,0,-1\},  \{1,-1,0,1\},  \{1,-1,0,-1\},\n    \{-1,1,0,1\}, \{-1,1,0,-1\}, \{-1,-1,0,1\}, \{-1,-1,0,-1\},\n    \{1,1,1,0\},  \{1,1,-1,0\},  \{1,-1,1,0\},  \{1,-1,-1,0\},\n    \{-1,1,1,0\}, \{-1,1,-1,0\}, \{-1,-1,1,0\}, \{-1,-1,-1,0\}\n  \};\n    float F4 = (sqrt(5.0f)-1.0)/4.0;\n    float G4 = (5.0-sqrt(5.0f))/20.0;\n    float n0, n1, n2, n3, n4;\n    float s = (x + y + z + w) * F4;\n    int i = fastfloor(x + s);\n    int j = fastfloor(y + s);\n    int k = fastfloor(z + s);\n    int l = fastfloor(w + s);\n    float t = (i + j + k + l) * G4;\n    float X0 = i - t;\n    float Y0 = j - t;\n    float Z0 = k - t;\n    float W0 = l - t;\n\n    float x0 = x - X0;\n    float y0 = y - Y0;\n    float z0 = z - Z0;\n    float w0 = w - W0;\n    int c1 = (x0 > y0) ? 32 : 0;\n    int c2 = (x0 > z0) ? 16 : 0;\n    int c3 = (y0 > z0) ? 8 : 0;\n    int c4 = (x0 > w0) ? 4 : 0;\n    int c5 = (y0 > w0) ? 2 : 0;\n    int c6 = (z0 > w0) ? 1 : 0;\n    int c = c1 + c2 + c3 + c4 + c5 + c6;\n\n    int i1, j1, k1, l1;\n    int i2, j2, k2, l2;\n    int i3, j3, k3, l3;\n    i1 = simplex\[c]\[0]>=3 ? 1 : 0;\n    j1 = simplex\[c]\[1]>=3 ? 1 : 0;\n    k1 = simplex\[c]\[2]>=3 ? 1 : 0;\n    l1 = simplex\[c]\[3]>=3 ? 1 : 0;\n    i2 = simplex\[c]\[0]>=2 ? 1 : 0;\n    j2 = simplex\[c]\[1]>=2 ? 1 : 0;\n    k2 = simplex\[c]\[2]>=2 ? 1 : 0;\n    l2 = simplex\[c]\[3]>=2 ? 1 : 0;\n    i3 = simplex\[c]\[0]>=1 ? 1 : 0;\n    j3 = simplex\[c]\[1]>=1 ? 1 : 0;\n    k3 = simplex\[c]\[2]>=1 ? 1 : 0;\n    l3 = simplex\[c]\[3]>=1 ? 1 : 0;\n    float x1 = x0 - i1 + G4;\n    float y1 = y0 - j1 + G4;\n    float z1 = z0 - k1 + G4;\n    float w1 = w0 - l1 + G4;\n    float x2 = x0 - i2 + 2.0*G4;\n    float y2 = y0 - j2 + 2.0*G4;\n    float z2 = z0 - k2 + 2.0*G4;\n    float w2 = w0 - l2 + 2.0*G4;\n    float x3 = x0 - i3 + 3.0*G4;\n    float y3 = y0 - j3 + 3.0*G4;\n    float z3 = z0 - k3 + 3.0*G4;\n    float w3 = w0 - l3 + 3.0*G4;\n    float x4 = x0 - 1.0 + 4.0*G4;\n    float y4 = y0 - 1.0 + 4.0*G4;\n    float z4 = z0 - 1.0 + 4.0*G4;\n    float w4 = w0 - 1.0 + 4.0*G4;\n    int ii = i & 255;\n    int jj = j & 255;\n    int kk = k & 255;\n    int ll = l & 255;\n    int gi0 = perm\[ii+perm\[jj+perm\[kk+perm\[ll]]]] % 32;\n    int gi1 = perm\[ii+i1+perm\[jj+j1+perm\[kk+k1+perm\[ll+l1]]]] % 32;\n    int gi2 = perm\[ii+i2+perm\[jj+j2+perm\[kk+k2+perm\[ll+l2]]]] % 32;\n    int gi3 = perm\[ii+i3+perm\[jj+j3+perm\[kk+k3+perm\[ll+l3]]]] % 32;\n    int gi4 = perm\[ii+1+perm\[jj+1+perm\[kk+1+perm\[ll+1]]]] % 32;\n    float t0 = 0.6 - x0*x0 - y0*y0 - z0*z0 - w0*w0;\n    if(t0<0) n0 = 0.0;\n    else \{\n        t0 *= t0;\n        n0 = t0 * t0 * dot(float4(grad4\[gi0]\[0],grad4\[gi0]\[2],grad4\[gi0]\[3],grad4\[gi0]\[3]), float4(x0, y0, z0, w0));\n    \}\n    float t1 = 0.6 - x1*x1 - y1*y1 - z1*z1 - w1*w1;\n    if(t1<0) n1 = 0.0;\n    else \{\n        t1 *= t1;\n        n1 = t1 * t1 * dot(float4(grad4\[gi1]\[0],grad4\[gi1]\[2],grad4\[gi1]\[3],grad4\[gi1]\[3]), float4(x1, y1, z1, w1));\n    \}\n    float t2 = 0.6 - x2*x2 - y2*y2 - z2*z2 - w2*w2;\n    if(t2<0) n2 = 0.0;\n    else \{\n        t2 *= t2;\n        n2 = t2 * t2 * dot(float4(grad4\[gi2]\[0],grad4\[gi2]\[2],grad4\[gi2]\[3],grad4\[gi2]\[3]), float4(x2, y2, z2, w2));\n    \}\n    float t3 = 0.6 - x3*x3 - y3*y3 - z3*z3 - w3*w3;\n    if(t3<0) n3 = 0.0;\n    else \{\n        t3 *= t3;\n        n3 = t3 * t3 * dot(float4(grad4\[gi3]\[0],grad4\[gi3]\[2],grad4\[gi3]\[3],grad4\[gi3]\[3]), float4(x3, y3, z3, w3));\n    \}\n    float t4 = 0.6 - x4*x4 - y4*y4 - z4*z4 - w4*w4;\n    if(t4<0) n4 = 0.0;\n    else \{\n        t4 *= t4;\n        n4 = t4 * t4 * dot(float4(grad4\[gi4]\[0],grad4\[gi4]\[2],grad4\[gi4]\[3],grad4\[gi4]\[3]), float4(x4, y4, z4, w4));\n    \}\n    return 27.0 * (n0 + n1 + n2 + n3 + n4);\n\}\ninline float octave_noise_4d( const float octaves, const float persistence, const float scale, const float x, const float y, const float z, const float w, const float lacunarity=2 ) \n\{\n    float total = 0;\n    float frequency = scale;\n    float amplitude = 1;\n    float maxAmplitude = 0;\n    for( int i=0; i < octaves; i++ ) \{\n        total += (float)raw_noise_4d( x * frequency, y * frequency, z * frequency, w * frequency ) * amplitude;\n\n        frequency *= lacunarity;\n        maxAmplitude += amplitude;\n        amplitude *= persistence;\n    \}\n    return float(total / maxAmplitude);\n\}\n\nkernel aPMatteKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> p;\n  Image<eWrite> dst;\n\n  param:\n    float3 picked; //Center, or white for ramps\n    float3 pickedB; //Black for ramps\n    int rotOrder; //0=XYZ,1=XZY,2=YXZ,3=YZX,4=ZXY,5=ZYX\n    float3 translate;\n    float3 rotate;\n    float3 scale;\n    float radius;\n    int shape; //0=sphere,1=cusped box,2=rounded box,3=ramp, 4=rad.ramp\n    int invert_shape;\n    int use_alpha;\n    int falloff; //0=linear,1=smooth,2=square,3=inv.square\n    float hardness;\n\n    // Noise parameters here\n    int use_noise; //0=off,1=overlay,2=noise only\n    int noise_relative;\n    int noise_octaves;\n    float noise_persistence;\n    float noise_lacunarity;\n    float noise_scale;\n    float noise_offset;\n    float noise_add;\n    float noise_gain;\n    float noise_gamma;\n    float noise_mix;\n\n  void define() \{\n    defineParam(rotOrder, \"rotation order\", 4);\n    defineParam(scale, \"scale\", float3(1.0f,1.0f,1.0f));\n    defineParam(radius, \"radius\", 1.0f);\n    defineParam(falloff, \"falloff\", 1);\n    defineParam(use_noise, \"use noise\", 0);\n    defineParam(noise_octaves, \"noise octaves\", 8);\n    defineParam(noise_persistence, \"noise persistence\",  0.5f);\n    defineParam(noise_lacunarity, \"lacunarity\",  2.0f);\n    defineParam(noise_scale, \"noise scale\", 0.01f);\n  \}\n\n  inline float rad(float deg)\{ \n    return deg*PI/180;\n  \}\n\n  inline float smoothstep(float edge0, float edge1, float x)\{\n    x = clamp((x - edge0)/(edge1 - edge0), 0.0f, 1.0f);\n    return x*x*x*(x*(x*6-15)+10);\n  \}\n\n  inline float cl(float val)\{\n  return clamp(val,0.0f,1.0f); \n  \}\n\n  float3 rotX(float3 vec, float rot)\{\n    if(rot==0.0f)\{\n      return vec;\n    \} else \{\n      float3 vecOut;\n      vecOut.y = vec.y*cos(rad(rot)) - vec.z*sin(rad(rot));\n      vecOut.z = vec.y*sin(rad(rot)) + vec.z*cos(rad(rot));\n      vecOut.x = vec.x;\n      return float3(vecOut.x,vecOut.y,vecOut.z);\n    \}\n  \}\n\n  float3 rotY(float3 vec, float rot)\{\n    if(rot==0.0f)\{\n      return vec;\n    \} else \{\n      float3 vecOut;\n      vecOut.z = vec.z*cos(rad(rot)) - vec.x*sin(rad(rot));\n      vecOut.x = vec.z*sin(rad(rot)) + vec.x*cos(rad(rot));\n      vecOut.y = vec.y;\n      return float3(vecOut.x,vecOut.y,vecOut.z);\n    \}\n  \}\n\n  float3 rotZ(float3 vec, float rot)\{\n    if(rot==0.0f)\{\n      return vec;\n    \} else \{\n      float3 vecOut;\n      vecOut.x = vec.x*cos(rad(rot)) - vec.y*sin(rad(rot));\n      vecOut.y = vec.x*sin(rad(rot)) + vec.y*cos(rad(rot));\n      vecOut.z = vec.z;\n      return float3(vecOut.x,vecOut.y,vecOut.z);\n    \}\n  \}\n\n  void process() \{\n    //1. P WORLD\n    // Center the coordinates\n    float3 color = float3(p(0)-picked.x,p(1)-picked.y,p(2)-picked.z);\n    int black = 0;\n\n    // Translate\n    color -= translate;\n\n    // Rotate\n    if (rotOrder<=0) color = rotZ(rotY(rotX(color,rotate.x),rotate.y),rotate.z);\n    else if (rotOrder==1) color = rotY(rotZ(rotX(color,rotate.x),rotate.z),rotate.y);\n    else if (rotOrder==2) color = rotZ(rotX(rotY(color,rotate.y),rotate.x),rotate.z);\n    else if (rotOrder==3) color = rotX(rotZ(rotY(color,rotate.y),rotate.z),rotate.x);\n    else if (rotOrder==4) color = rotY(rotX(rotZ(color,rotate.z),rotate.x),rotate.y);\n    else if (rotOrder>=5) color = rotX(rotY(rotZ(color,rotate.z),rotate.y),rotate.x);\n\n    // Scale\n    if (scale.x!=0 && scale.y!=0 && scale.z!=0) \{\n      color *= float3(1/scale.x, 1/scale.y, 1/scale.z);\n    \} else \{\n      dst() = 0.0f;\n      return;\n    \}\n\n    //2. SHAPES\n    float dist;\n    float result;\n\n    if(shape==0)\{//Sphere\n      dist = sqrt(pow(color\[0],2) + pow(color\[1],2) + pow(color\[2],2));\n      result = radius==0.0f? 0:cl(1-dist/radius);\n    \} else if(shape==1)\{//Cusped Box\n      result = min( min( cl((radius-fabs(color.x))/radius) , cl((radius-fabs(color.y))/radius)) , cl((radius-fabs(color.z))/radius)) ;\n      result = hardness>=1? float(result>0) : result;\n    \} else if(shape==2)\{//Rounded Box\n      result = radius==0.0f? 0: smoothstep(0,1-hardness, cl(1-fabs(float(color.x)/radius)) ) * smoothstep(0,1-hardness, cl(1-fabs(float(color.y)/radius)) ) * smoothstep(0,1-hardness, cl(1-fabs(float(color.z)/radius)) );\n      result = hardness>=1? float(result>0) : result;\n    \} else if(shape==3)\{//Linear Ramp\n      dist = sqrt(pow(color\[0],2) + pow(color\[1],2) + pow(color\[2],2));\n      float distB = sqrt(pow(color\[0]-(pickedB.x-picked.x),2) + pow(color\[1]-(pickedB.y-picked.y),2) + pow(color\[2]-(pickedB.z-picked.z),2));\n      float distWB = sqrt(pow(pickedB.x-picked.x,2) + pow(pickedB.y-picked.y,2) + pow(pickedB.z-picked.z,2));\n      float angWB = acos( clamp((pow(dist,2)-pow(distB,2)+pow(distWB,2))/(2*dist*distWB),-1.0f,1.0f) );\n      float cosAngWB = dist==0.0f? 0:cos(angWB);\n      result = distWB==0? 0.0f: cl((dist * cosAngWB) / distWB );\n      result = 1-result;\n    \} else if(shape==4)\{//Radial Ramp\n      dist = sqrt(pow(color\[0],2) + pow(color\[1],2) + pow(color\[2],2));\n      float distB = sqrt(pow(color\[0]-(pickedB.x-picked.x),2) + pow(color\[1]-(pickedB.y-picked.y),2) + pow(color\[2]-(pickedB.z-picked.z),2));\n      float distWB = sqrt(pow(pickedB.x-picked.x,2) + pow(pickedB.y-picked.y,2) + pow(pickedB.z-picked.z,2));\n      result = distWB==0? 0.0f: cl((dist) / distWB );\n      result = 1-result;\n    \}\n    result = invert_shape? 1-result:result;\n\n    //3. FALLOFF\n    if(falloff==0)\{//Linear\n      result = hardness>=1? float(result>0) : cl(result/(1-hardness));\n    \}else if(falloff==1)\{//Smooth\n      result = hardness>=1? float(result>0) : smoothstep(0,1-hardness,result);\n    \}else if(falloff==2)\{//Quadratic\n      result = hardness>=1? float(result>0) : cl(pow(float(result/(1-hardness)),2));\n    \}else if(falloff==3)\{//Cubic\n      result = hardness>=1? float(result>0) : cl(pow(float(result/(1-hardness)),3));\n    \}else if(falloff==4)\{//Inv. Cubic\n      result = hardness>=1? float(result>0) : 1-cl(pow(float(cl(1-(result/(1-hardness)))),3));\n    \}\n\n    //4. GENERATE NOISE\n    float noise;\n    if(use_noise!=0)\{//Avoid calculations if possible\n      if(noise_relative!=1)\{\n        noise = (float)octave_noise_4d(float(noise_octaves),noise_persistence,noise_scale==0?10000.0f:1/noise_scale,p(0),p(1),p(2),noise_offset,noise_lacunarity);\n      \}else\{\n        noise = (float)octave_noise_4d(float(noise_octaves),noise_persistence,noise_scale==0?10000.0f:1/noise_scale,color\[0],color\[1],color\[2],noise_offset,noise_lacunarity);\n      \}\n      noise = cl(pow(max((noise+noise_add)*noise_gain,0.0f),noise_gamma==0?1:1/noise_gamma));\n    \}\n\n\n    //5. ALPHA MASK AND APPLY NOISE\n    result = max(result,0.0f); //Clamp negative values\n    if(use_noise==1)\{//Overlay\n      result = result<0.5f? noise_mix*(2*noise*result)+(1-noise_mix)*result : noise_mix*(1-2*(1-result)*(1-noise))+(1-noise_mix)*result;\n    \}else if(use_noise>=2)\{\n      result = noise*noise_mix;\n    \}\n\n    if(use_alpha > 0) result=result*p(3);\n\n    //6. WE'RE DONE\n    dst() = result;\n  \}\n\};"
useGPUIfAvailable false
vectorize false
rebuild ""
aPMatteKernel_picked {{picker.r} {picker.g} {picker.b}}
aPMatteKernel_pickedB {{black_point} {black_point} {black_point}}
"aPMatteKernel_rotation order" {{parent.rotation_order}}
aPMatteKernel_translate {{parent.translate} {parent.translate} {parent.translate}}
aPMatteKernel_rotate {{parent.rotate} {parent.rotate} {parent.rotate}}
aPMatteKernel_scale {{parent.scale} {parent.scale} {parent.scale}}
aPMatteKernel_radius {{parent.radius}}
aPMatteKernel_shape {{parent.shape}}
aPMatteKernel_invert_shape {{parent.invert}}
aPMatteKernel_use_alpha {{parent.alpha_masking}}
aPMatteKernel_falloff {{parent.falloff}}
aPMatteKernel_hardness {{parent.hardness}}
"aPMatteKernel_use noise" {{parent.noise}}
aPMatteKernel_noise_relative {{parent.noise_rel}}
"aPMatteKernel_noise octaves" {{parent.noise_octaves}}
"aPMatteKernel_noise persistence" {{parent.noise_persistance}}
aPMatteKernel_lacunarity {{parent.noise_lacunarity}}
"aPMatteKernel_noise scale" {{parent.noise_size}}
aPMatteKernel_noise_offset {{parent.noise_offset}}
aPMatteKernel_noise_add {{parent.noise_add}}
aPMatteKernel_noise_gain {{parent.noise_gain}}
aPMatteKernel_noise_gamma {{parent.noise_gamma}}
aPMatteKernel_noise_mix {{parent.noise_mix}}
rebuild_finalise ""
name BlinkScriptPMatte
xpos -418
ypos 523
addUserKnob {20 User}
addUserKnob {6 black_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 picker}
picker {2000 0 1000}
addUserKnob {6 picker_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 picker_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 black_point l black}
black_point {0 0 0}
addUserKnob {6 black_point_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 black_point_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
push $N34e0e400
ShuffleCopy {
inputs 2
red red
green green
blue blue
out alpha
name ShuffleCopyOut
xpos -528
ypos 527
}
Output {
name Output
xpos -528
ypos 566
}
end_group
ChannelMerge {
inputs 2
A clouds.alpha
operation stencil
name ChannelMerge10
selected true
xpos 11846
ypos -13312
}
push $N34c28800
Grade {
inputs 1+1
white {0.9419019818 0.7766119838 0.9766119719 0.8999999762}
multiply 0.4
gamma 0.9
name Grade21
selected true
xpos 11713
ypos -13300
}
Dot {
name Dot295
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11747
ypos -13148
}
set N34ddeb00 [stack 0]
Dot {
name Dot296
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 12063
ypos -13148
}
Dot {
name Dot151
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 12063
ypos -13108
}
set N67b7c100 [stack 0]
Dot {
name Dot153
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 12063
ypos -12956
}
set N58992b00 [stack 0]
Dot {
name Dot104
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 12063
ypos -12897
}
set N34dddd00 [stack 0]
Dot {
name Dot297
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 12063
ypos -12813
}
set N34ddd600 [stack 0]
Dot {
name Dot298
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 12061
ypos -12722
}
set N34ddcf00 [stack 0]
Dot {
name Dot299
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 12061
ypos -12660
}
set N34ddc800 [stack 0]
Dot {
name Dot300
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 12061
ypos -12600
}
set N34ddc100 [stack 0]
Dot {
name Dot301
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 12061
ypos -12541
}
Shuffle2 {
fromInput1 {{0} B}
in1 cloudSeprarted
fromInput2 {{0} B}
mappings "4 cloudSeprarted.alpha 0 3 rgba.red 0 0 cloudSeprarted.alpha 0 3 rgba.green 0 1 cloudSeprarted.alpha 0 3 rgba.blue 0 2 cloudSeprarted.alpha 0 3 rgba.alpha 0 3"
name Shuffle11
label far
selected true
xpos 11896
ypos -12551
}
push $N34ddc100
Shuffle2 {
fromInput1 {{0} B}
in1 cloudSeprarted
fromInput2 {{0} B}
mappings "4 cloudSeprarted.blue 0 2 rgba.red 0 0 cloudSeprarted.blue 0 2 rgba.green 0 1 cloudSeprarted.blue 0 2 rgba.blue 0 2 cloudSeprarted.blue 0 2 rgba.alpha 0 3"
name Shuffle12
label "medium far"
selected true
xpos 11893
ypos -12610
}
push $N34ddc800
Shuffle2 {
fromInput1 {{0} B}
in1 cloudSeprarted
fromInput2 {{0} B}
mappings "4 cloudSeprarted.green 0 1 rgba.red 0 0 cloudSeprarted.green 0 1 rgba.green 0 1 cloudSeprarted.green 0 1 rgba.blue 0 2 cloudSeprarted.green 0 1 rgba.alpha 0 3"
name Shuffle13
label "medium near"
selected true
xpos 11896
ypos -12670
}
push $N34ddcf00
Shuffle2 {
fromInput1 {{0} B}
in1 cloudSeprarted
fromInput2 {{0} B}
mappings "4 cloudSeprarted.red 0 0 rgba.red 0 0 cloudSeprarted.red 0 0 rgba.green 0 1 cloudSeprarted.red 0 0 rgba.blue 0 2 cloudSeprarted.red 0 0 rgba.alpha 0 3"
name Shuffle14
label near
selected true
xpos 11895
ypos -12732
}
push $N34dddd00
Dot {
name Dot70
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11898
ypos -12897
}
push $N34ddd600
Group {
name aPMatte1
help "aPMatte v1.0 by Adrian Pueyo\n\nGenerate a matte of different shapes, based on a Position pass. Includes options to transform the mask and change its falloff. Also has the option to output or overlay a P-based 3D noise.\n\nadrianpueyo.com, 2017"
knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == \"shape\":\n    rampOn = k.value() in \['linear ramp', 'radial ramp'];\n    n\['radius'].setVisible(not rampOn)\n    n.knobs()\[\"black\"].setVisible(rampOn)\n    n.knobs()\[\"picker\"].setLabel( \"white\" if rampOn else \"center\" )\n\n\nif k.name() == \"noise\":\n    noiseOn = k.value() != 'off';\n    n\['noise_rel'].setVisible(noiseOn)\n    n\['noise_persistance'].setVisible(noiseOn)\n    n\['noise_octaves'].setVisible(noiseOn)\n    n\['noise_lacunarity'].setVisible(noiseOn)\n    n\['noise_size'].setVisible(noiseOn)\n    n\['noise_offset'].setVisible(noiseOn)\n    n\['noise_add'].setVisible(noiseOn)\n    n\['noise_gain'].setVisible(noiseOn)\n    n\['noise_gamma'].setVisible(noiseOn)\n    n\['noise_mix'].setVisible(noiseOn)\n\nif not n\[\"autolabel\"].value():\n    n\[\"autolabel\"].setValue(\"'%s\\\\n(%s)'%(nuke.thisNode()\['name'].value(),nuke.thisNode()\['out'].value()) if nuke.thisNode()\['out'].value()!='alpha' else nuke.thisNode()\['name'].value()\")"
autolabel "'%s\\n(%s)'%(nuke.thisNode()\['name'].value(),nuke.thisNode()\['out'].value()) if nuke.thisNode()\['out'].value()!='alpha' else nuke.thisNode()\['name'].value()"
selected true
xpos 11965
ypos -12817
addUserKnob {20 aPMatte}
addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T BlinkScriptPMatte.useGPUIfAvailable}
addUserKnob {41 vectorize l "Vectorize on CPU" -STARTLINE T BlinkScriptPMatte.vectorize}
addUserKnob {26 ""}
addUserKnob {41 p_channels l "P channels" T ShuffleIn.in}
addUserKnob {41 out l " output" -STARTLINE T ShuffleCopyOut.out}
addUserKnob {6 alpha_masking l "alpha masking" t "Multiply the output by the input's alpha." +STARTLINE}
alpha_masking true
addUserKnob {4 shape M {sphere "cusped box" "rounded box" "linear ramp" "radial ramp" ""}}
addUserKnob {6 invert -STARTLINE}
addUserKnob {41 picker l center T BlinkScriptPMatte.picker}
addUserKnob {7 radius R 0 100}
radius 7
addUserKnob {41 black t "Black point of your ramp." +HIDDEN T BlinkScriptPMatte.black_point}
addUserKnob {26 ""}
addUserKnob {4 falloff t "Fallof type for the matte." M {linear smooth quadratic cubic "inv. cubic" "" ""}}
falloff smooth
addUserKnob {7 hardness}
addUserKnob {26 ""}
addUserKnob {4 rotation_order l "rotation order" M {XYZ XZY YXZ YZX ZXY ZYX}}
rotation_order ZXY
addUserKnob {13 translate}
addUserKnob {13 rotate}
addUserKnob {13 scale}
scale {10000 10 100000000}
addUserKnob {26 ""}
addUserKnob {4 noise t "overlay: uses the noise in overlay blend mode over the resulting mask, to make it more organic and less obvious for grading.\nnoise only: ignore the mask, output a 3D noise." M {off overlay "noise only"}}
addUserKnob {6 noise_rel l relative t "On: Pick world transformations and positioning of the shape.\nOff: Pick absolute world transformations.\n\nTip: Check when you want the mask to always be affected by the same noise, uncheck when you want to lock the noise to your scene." -STARTLINE +HIDDEN}
noise_rel true
addUserKnob {7 noise_size l size t "Size of the noise pattern." +HIDDEN R 0 100}
noise_size 10
addUserKnob {7 noise_offset l offset t "Spatial offset of the noise pattern (use to find a sweet spot for your matte)." +HIDDEN R 0 100}
addUserKnob {3 noise_octaves l octaves t "Number of noise iterations." +HIDDEN}
noise_octaves 8
addUserKnob {7 noise_lacunarity l lacunarity t "Each octave gets downscaled by this value." +HIDDEN R 0 10}
noise_lacunarity 1.8
addUserKnob {7 noise_persistance l persistance t "Each octave gets multiplied by this value." +HIDDEN}
noise_persistance 0.5
addUserKnob {7 noise_add l add t "Add a value to the noise." +HIDDEN}
noise_add 0.5
addUserKnob {7 noise_gain l gain t "Multiply the resulting noise by this value." +HIDDEN R 0 4}
noise_gain 1
addUserKnob {7 noise_gamma l gamma t "Gamma the resulting value." +HIDDEN R 0 4}
noise_gamma 1
addUserKnob {7 noise_mix l mix +HIDDEN}
noise_mix 1
addUserKnob {26 copyright l " " T "<br/><font color=#777><b>aPMatte v1.0</b> - adrianpueyo.com, 2017"}
addUserKnob {6 BlinkScriptPMatte_black_point_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
}
Input {
inputs 0
name Inputimg
xpos -528
ypos 483
}
set N34db8800 [stack 0]
Shuffle {
in pSky
in2 rgba
alpha alpha2
name ShuffleIn
xpos -418
ypos 483
}
BlinkScript {
ProgramGroup 1
KernelDescription "2 \"aPMatteKernel\" iterate pixelWise eba2548d360b6b3d2b97555753832bdfb4c4224623cecc4870a6d5c5e54e4fdb 2 \"p\" Read Point \"dst\" Write Point 23 \"picked\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"pickedB\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"rotation order\" Int 1 BAAAAA== \"translate\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"rotate\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"scale\" Float 3 AACAPwAAgD8AAIA/AAAAAA== \"radius\" Float 1 AACAPw== \"shape\" Int 1 AAAAAA== \"invert_shape\" Int 1 AAAAAA== \"use_alpha\" Int 1 AAAAAA== \"falloff\" Int 1 AQAAAA== \"hardness\" Float 1 AAAAAA== \"use noise\" Int 1 AAAAAA== \"noise_relative\" Int 1 AAAAAA== \"noise octaves\" Int 1 CAAAAA== \"noise persistence\" Float 1 AAAAPw== \"lacunarity\" Float 1 AAAAQA== \"noise scale\" Float 1 CtcjPA== \"noise_offset\" Float 1 AAAAAA== \"noise_add\" Float 1 AAAAAA== \"noise_gain\" Float 1 AAAAAA== \"noise_gamma\" Float 1 AAAAAA== \"noise_mix\" Float 1 AAAAAA== 23 \"picked\" 3 1 \"pickedB\" 3 1 \"rotOrder\" 1 1 \"translate\" 3 1 \"rotate\" 3 1 \"scale\" 3 1 \"radius\" 1 1 \"shape\" 1 1 \"invert_shape\" 1 1 \"use_alpha\" 1 1 \"falloff\" 1 1 \"hardness\" 1 1 \"use_noise\" 1 1 \"noise_relative\" 1 1 \"noise_octaves\" 1 1 \"noise_persistence\" 1 1 \"noise_lacunarity\" 1 1 \"noise_scale\" 1 1 \"noise_offset\" 1 1 \"noise_add\" 1 1 \"noise_gain\" 1 1 \"noise_gamma\" 1 1 \"noise_mix\" 1 1 0"
kernelSource "// ----------------------------------------------------------------\n// aPMatte v1.0 by Adrian Pueyo\n//\n// Generate a matte of different shapes, based on a Position pass.\n// Includes options to transform the mask and change its falloff.\n// Also includes the option to output or overlay a P-based noise.\n//\n// adrianpueyo.com, 2017\n// ----------------------------------------------------------------\n\n\n// Noise algorithm adapted by Adrian Pueyo from Noise4D function by Mads Hagbarth Lund\n// Noise4D function Ported by Mads Hagbarth Lund 2014\n// Based on https://github.com/Draradech/csworldgen/blob/master/simplexnoise.cpp\n\n/* Copyright (c) 2007-2012 Eliot Eshelman\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n\nint fastfloor( const float x ) \{ return x > 0 ? (int) x : (int) x - 1; \}\ninline float raw_noise_4d( const float x, const float y, const float z, const float w ) \n\{\nint simplex\[64]\[4] = \{\n    \{0,1,2,3\},\{0,1,3,2\},\{0,0,0,0\},\{0,2,3,1\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{1,2,3,0\},\n    \{0,2,1,3\},\{0,0,0,0\},\{0,3,1,2\},\{0,3,2,1\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{1,3,2,0\},\n    \{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\n    \{1,2,0,3\},\{0,0,0,0\},\{1,3,0,2\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{2,3,0,1\},\{2,3,1,0\},\n    \{1,0,2,3\},\{1,0,3,2\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{2,0,3,1\},\{0,0,0,0\},\{2,1,3,0\},\n    \{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\n    \{2,0,1,3\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{3,0,1,2\},\{3,0,2,1\},\{0,0,0,0\},\{3,1,2,0\},\n    \{2,1,0,3\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{3,1,0,2\},\{0,0,0,0\},\{3,2,0,1\},\{3,2,1,0\}\n\};\n    int perm\[512] = \{\n        151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,\n        8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,\n        35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,\n        134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,\n        55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208, 89,\n        18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,\n        250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,\n        189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,\n        172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,\n        228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,\n        107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,\n        138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180,\n\n        151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,\n        8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,\n        35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,\n        134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,\n        55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208, 89,\n        18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,\n        250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,\n        189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,\n        172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,\n        228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,\n        107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,\n        138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180\n    \};\n  int grad4\[32]\[4]= \{\n    \{0,1,1,1\},  \{0,1,1,-1\},  \{0,1,-1,1\},  \{0,1,-1,-1\},\n    \{0,-1,1,1\}, \{0,-1,1,-1\}, \{0,-1,-1,1\}, \{0,-1,-1,-1\},\n    \{1,0,1,1\},  \{1,0,1,-1\},  \{1,0,-1,1\},  \{1,0,-1,-1\},\n    \{-1,0,1,1\}, \{-1,0,1,-1\}, \{-1,0,-1,1\}, \{-1,0,-1,-1\},\n    \{1,1,0,1\},  \{1,1,0,-1\},  \{1,-1,0,1\},  \{1,-1,0,-1\},\n    \{-1,1,0,1\}, \{-1,1,0,-1\}, \{-1,-1,0,1\}, \{-1,-1,0,-1\},\n    \{1,1,1,0\},  \{1,1,-1,0\},  \{1,-1,1,0\},  \{1,-1,-1,0\},\n    \{-1,1,1,0\}, \{-1,1,-1,0\}, \{-1,-1,1,0\}, \{-1,-1,-1,0\}\n  \};\n    float F4 = (sqrt(5.0f)-1.0)/4.0;\n    float G4 = (5.0-sqrt(5.0f))/20.0;\n    float n0, n1, n2, n3, n4;\n    float s = (x + y + z + w) * F4;\n    int i = fastfloor(x + s);\n    int j = fastfloor(y + s);\n    int k = fastfloor(z + s);\n    int l = fastfloor(w + s);\n    float t = (i + j + k + l) * G4;\n    float X0 = i - t;\n    float Y0 = j - t;\n    float Z0 = k - t;\n    float W0 = l - t;\n\n    float x0 = x - X0;\n    float y0 = y - Y0;\n    float z0 = z - Z0;\n    float w0 = w - W0;\n    int c1 = (x0 > y0) ? 32 : 0;\n    int c2 = (x0 > z0) ? 16 : 0;\n    int c3 = (y0 > z0) ? 8 : 0;\n    int c4 = (x0 > w0) ? 4 : 0;\n    int c5 = (y0 > w0) ? 2 : 0;\n    int c6 = (z0 > w0) ? 1 : 0;\n    int c = c1 + c2 + c3 + c4 + c5 + c6;\n\n    int i1, j1, k1, l1;\n    int i2, j2, k2, l2;\n    int i3, j3, k3, l3;\n    i1 = simplex\[c]\[0]>=3 ? 1 : 0;\n    j1 = simplex\[c]\[1]>=3 ? 1 : 0;\n    k1 = simplex\[c]\[2]>=3 ? 1 : 0;\n    l1 = simplex\[c]\[3]>=3 ? 1 : 0;\n    i2 = simplex\[c]\[0]>=2 ? 1 : 0;\n    j2 = simplex\[c]\[1]>=2 ? 1 : 0;\n    k2 = simplex\[c]\[2]>=2 ? 1 : 0;\n    l2 = simplex\[c]\[3]>=2 ? 1 : 0;\n    i3 = simplex\[c]\[0]>=1 ? 1 : 0;\n    j3 = simplex\[c]\[1]>=1 ? 1 : 0;\n    k3 = simplex\[c]\[2]>=1 ? 1 : 0;\n    l3 = simplex\[c]\[3]>=1 ? 1 : 0;\n    float x1 = x0 - i1 + G4;\n    float y1 = y0 - j1 + G4;\n    float z1 = z0 - k1 + G4;\n    float w1 = w0 - l1 + G4;\n    float x2 = x0 - i2 + 2.0*G4;\n    float y2 = y0 - j2 + 2.0*G4;\n    float z2 = z0 - k2 + 2.0*G4;\n    float w2 = w0 - l2 + 2.0*G4;\n    float x3 = x0 - i3 + 3.0*G4;\n    float y3 = y0 - j3 + 3.0*G4;\n    float z3 = z0 - k3 + 3.0*G4;\n    float w3 = w0 - l3 + 3.0*G4;\n    float x4 = x0 - 1.0 + 4.0*G4;\n    float y4 = y0 - 1.0 + 4.0*G4;\n    float z4 = z0 - 1.0 + 4.0*G4;\n    float w4 = w0 - 1.0 + 4.0*G4;\n    int ii = i & 255;\n    int jj = j & 255;\n    int kk = k & 255;\n    int ll = l & 255;\n    int gi0 = perm\[ii+perm\[jj+perm\[kk+perm\[ll]]]] % 32;\n    int gi1 = perm\[ii+i1+perm\[jj+j1+perm\[kk+k1+perm\[ll+l1]]]] % 32;\n    int gi2 = perm\[ii+i2+perm\[jj+j2+perm\[kk+k2+perm\[ll+l2]]]] % 32;\n    int gi3 = perm\[ii+i3+perm\[jj+j3+perm\[kk+k3+perm\[ll+l3]]]] % 32;\n    int gi4 = perm\[ii+1+perm\[jj+1+perm\[kk+1+perm\[ll+1]]]] % 32;\n    float t0 = 0.6 - x0*x0 - y0*y0 - z0*z0 - w0*w0;\n    if(t0<0) n0 = 0.0;\n    else \{\n        t0 *= t0;\n        n0 = t0 * t0 * dot(float4(grad4\[gi0]\[0],grad4\[gi0]\[2],grad4\[gi0]\[3],grad4\[gi0]\[3]), float4(x0, y0, z0, w0));\n    \}\n    float t1 = 0.6 - x1*x1 - y1*y1 - z1*z1 - w1*w1;\n    if(t1<0) n1 = 0.0;\n    else \{\n        t1 *= t1;\n        n1 = t1 * t1 * dot(float4(grad4\[gi1]\[0],grad4\[gi1]\[2],grad4\[gi1]\[3],grad4\[gi1]\[3]), float4(x1, y1, z1, w1));\n    \}\n    float t2 = 0.6 - x2*x2 - y2*y2 - z2*z2 - w2*w2;\n    if(t2<0) n2 = 0.0;\n    else \{\n        t2 *= t2;\n        n2 = t2 * t2 * dot(float4(grad4\[gi2]\[0],grad4\[gi2]\[2],grad4\[gi2]\[3],grad4\[gi2]\[3]), float4(x2, y2, z2, w2));\n    \}\n    float t3 = 0.6 - x3*x3 - y3*y3 - z3*z3 - w3*w3;\n    if(t3<0) n3 = 0.0;\n    else \{\n        t3 *= t3;\n        n3 = t3 * t3 * dot(float4(grad4\[gi3]\[0],grad4\[gi3]\[2],grad4\[gi3]\[3],grad4\[gi3]\[3]), float4(x3, y3, z3, w3));\n    \}\n    float t4 = 0.6 - x4*x4 - y4*y4 - z4*z4 - w4*w4;\n    if(t4<0) n4 = 0.0;\n    else \{\n        t4 *= t4;\n        n4 = t4 * t4 * dot(float4(grad4\[gi4]\[0],grad4\[gi4]\[2],grad4\[gi4]\[3],grad4\[gi4]\[3]), float4(x4, y4, z4, w4));\n    \}\n    return 27.0 * (n0 + n1 + n2 + n3 + n4);\n\}\ninline float octave_noise_4d( const float octaves, const float persistence, const float scale, const float x, const float y, const float z, const float w, const float lacunarity=2 ) \n\{\n    float total = 0;\n    float frequency = scale;\n    float amplitude = 1;\n    float maxAmplitude = 0;\n    for( int i=0; i < octaves; i++ ) \{\n        total += (float)raw_noise_4d( x * frequency, y * frequency, z * frequency, w * frequency ) * amplitude;\n\n        frequency *= lacunarity;\n        maxAmplitude += amplitude;\n        amplitude *= persistence;\n    \}\n    return float(total / maxAmplitude);\n\}\n\nkernel aPMatteKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> p;\n  Image<eWrite> dst;\n\n  param:\n    float3 picked; //Center, or white for ramps\n    float3 pickedB; //Black for ramps\n    int rotOrder; //0=XYZ,1=XZY,2=YXZ,3=YZX,4=ZXY,5=ZYX\n    float3 translate;\n    float3 rotate;\n    float3 scale;\n    float radius;\n    int shape; //0=sphere,1=cusped box,2=rounded box,3=ramp, 4=rad.ramp\n    int invert_shape;\n    int use_alpha;\n    int falloff; //0=linear,1=smooth,2=square,3=inv.square\n    float hardness;\n\n    // Noise parameters here\n    int use_noise; //0=off,1=overlay,2=noise only\n    int noise_relative;\n    int noise_octaves;\n    float noise_persistence;\n    float noise_lacunarity;\n    float noise_scale;\n    float noise_offset;\n    float noise_add;\n    float noise_gain;\n    float noise_gamma;\n    float noise_mix;\n\n  void define() \{\n    defineParam(rotOrder, \"rotation order\", 4);\n    defineParam(scale, \"scale\", float3(1.0f,1.0f,1.0f));\n    defineParam(radius, \"radius\", 1.0f);\n    defineParam(falloff, \"falloff\", 1);\n    defineParam(use_noise, \"use noise\", 0);\n    defineParam(noise_octaves, \"noise octaves\", 8);\n    defineParam(noise_persistence, \"noise persistence\",  0.5f);\n    defineParam(noise_lacunarity, \"lacunarity\",  2.0f);\n    defineParam(noise_scale, \"noise scale\", 0.01f);\n  \}\n\n  inline float rad(float deg)\{ \n    return deg*PI/180;\n  \}\n\n  inline float smoothstep(float edge0, float edge1, float x)\{\n    x = clamp((x - edge0)/(edge1 - edge0), 0.0f, 1.0f);\n    return x*x*x*(x*(x*6-15)+10);\n  \}\n\n  inline float cl(float val)\{\n  return clamp(val,0.0f,1.0f); \n  \}\n\n  float3 rotX(float3 vec, float rot)\{\n    if(rot==0.0f)\{\n      return vec;\n    \} else \{\n      float3 vecOut;\n      vecOut.y = vec.y*cos(rad(rot)) - vec.z*sin(rad(rot));\n      vecOut.z = vec.y*sin(rad(rot)) + vec.z*cos(rad(rot));\n      vecOut.x = vec.x;\n      return float3(vecOut.x,vecOut.y,vecOut.z);\n    \}\n  \}\n\n  float3 rotY(float3 vec, float rot)\{\n    if(rot==0.0f)\{\n      return vec;\n    \} else \{\n      float3 vecOut;\n      vecOut.z = vec.z*cos(rad(rot)) - vec.x*sin(rad(rot));\n      vecOut.x = vec.z*sin(rad(rot)) + vec.x*cos(rad(rot));\n      vecOut.y = vec.y;\n      return float3(vecOut.x,vecOut.y,vecOut.z);\n    \}\n  \}\n\n  float3 rotZ(float3 vec, float rot)\{\n    if(rot==0.0f)\{\n      return vec;\n    \} else \{\n      float3 vecOut;\n      vecOut.x = vec.x*cos(rad(rot)) - vec.y*sin(rad(rot));\n      vecOut.y = vec.x*sin(rad(rot)) + vec.y*cos(rad(rot));\n      vecOut.z = vec.z;\n      return float3(vecOut.x,vecOut.y,vecOut.z);\n    \}\n  \}\n\n  void process() \{\n    //1. P WORLD\n    // Center the coordinates\n    float3 color = float3(p(0)-picked.x,p(1)-picked.y,p(2)-picked.z);\n    int black = 0;\n\n    // Translate\n    color -= translate;\n\n    // Rotate\n    if (rotOrder<=0) color = rotZ(rotY(rotX(color,rotate.x),rotate.y),rotate.z);\n    else if (rotOrder==1) color = rotY(rotZ(rotX(color,rotate.x),rotate.z),rotate.y);\n    else if (rotOrder==2) color = rotZ(rotX(rotY(color,rotate.y),rotate.x),rotate.z);\n    else if (rotOrder==3) color = rotX(rotZ(rotY(color,rotate.y),rotate.z),rotate.x);\n    else if (rotOrder==4) color = rotY(rotX(rotZ(color,rotate.z),rotate.x),rotate.y);\n    else if (rotOrder>=5) color = rotX(rotY(rotZ(color,rotate.z),rotate.y),rotate.x);\n\n    // Scale\n    if (scale.x!=0 && scale.y!=0 && scale.z!=0) \{\n      color *= float3(1/scale.x, 1/scale.y, 1/scale.z);\n    \} else \{\n      dst() = 0.0f;\n      return;\n    \}\n\n    //2. SHAPES\n    float dist;\n    float result;\n\n    if(shape==0)\{//Sphere\n      dist = sqrt(pow(color\[0],2) + pow(color\[1],2) + pow(color\[2],2));\n      result = radius==0.0f? 0:cl(1-dist/radius);\n    \} else if(shape==1)\{//Cusped Box\n      result = min( min( cl((radius-fabs(color.x))/radius) , cl((radius-fabs(color.y))/radius)) , cl((radius-fabs(color.z))/radius)) ;\n      result = hardness>=1? float(result>0) : result;\n    \} else if(shape==2)\{//Rounded Box\n      result = radius==0.0f? 0: smoothstep(0,1-hardness, cl(1-fabs(float(color.x)/radius)) ) * smoothstep(0,1-hardness, cl(1-fabs(float(color.y)/radius)) ) * smoothstep(0,1-hardness, cl(1-fabs(float(color.z)/radius)) );\n      result = hardness>=1? float(result>0) : result;\n    \} else if(shape==3)\{//Linear Ramp\n      dist = sqrt(pow(color\[0],2) + pow(color\[1],2) + pow(color\[2],2));\n      float distB = sqrt(pow(color\[0]-(pickedB.x-picked.x),2) + pow(color\[1]-(pickedB.y-picked.y),2) + pow(color\[2]-(pickedB.z-picked.z),2));\n      float distWB = sqrt(pow(pickedB.x-picked.x,2) + pow(pickedB.y-picked.y,2) + pow(pickedB.z-picked.z,2));\n      float angWB = acos( clamp((pow(dist,2)-pow(distB,2)+pow(distWB,2))/(2*dist*distWB),-1.0f,1.0f) );\n      float cosAngWB = dist==0.0f? 0:cos(angWB);\n      result = distWB==0? 0.0f: cl((dist * cosAngWB) / distWB );\n      result = 1-result;\n    \} else if(shape==4)\{//Radial Ramp\n      dist = sqrt(pow(color\[0],2) + pow(color\[1],2) + pow(color\[2],2));\n      float distB = sqrt(pow(color\[0]-(pickedB.x-picked.x),2) + pow(color\[1]-(pickedB.y-picked.y),2) + pow(color\[2]-(pickedB.z-picked.z),2));\n      float distWB = sqrt(pow(pickedB.x-picked.x,2) + pow(pickedB.y-picked.y,2) + pow(pickedB.z-picked.z,2));\n      result = distWB==0? 0.0f: cl((dist) / distWB );\n      result = 1-result;\n    \}\n    result = invert_shape? 1-result:result;\n\n    //3. FALLOFF\n    if(falloff==0)\{//Linear\n      result = hardness>=1? float(result>0) : cl(result/(1-hardness));\n    \}else if(falloff==1)\{//Smooth\n      result = hardness>=1? float(result>0) : smoothstep(0,1-hardness,result);\n    \}else if(falloff==2)\{//Quadratic\n      result = hardness>=1? float(result>0) : cl(pow(float(result/(1-hardness)),2));\n    \}else if(falloff==3)\{//Cubic\n      result = hardness>=1? float(result>0) : cl(pow(float(result/(1-hardness)),3));\n    \}else if(falloff==4)\{//Inv. Cubic\n      result = hardness>=1? float(result>0) : 1-cl(pow(float(cl(1-(result/(1-hardness)))),3));\n    \}\n\n    //4. GENERATE NOISE\n    float noise;\n    if(use_noise!=0)\{//Avoid calculations if possible\n      if(noise_relative!=1)\{\n        noise = (float)octave_noise_4d(float(noise_octaves),noise_persistence,noise_scale==0?10000.0f:1/noise_scale,p(0),p(1),p(2),noise_offset,noise_lacunarity);\n      \}else\{\n        noise = (float)octave_noise_4d(float(noise_octaves),noise_persistence,noise_scale==0?10000.0f:1/noise_scale,color\[0],color\[1],color\[2],noise_offset,noise_lacunarity);\n      \}\n      noise = cl(pow(max((noise+noise_add)*noise_gain,0.0f),noise_gamma==0?1:1/noise_gamma));\n    \}\n\n\n    //5. ALPHA MASK AND APPLY NOISE\n    result = max(result,0.0f); //Clamp negative values\n    if(use_noise==1)\{//Overlay\n      result = result<0.5f? noise_mix*(2*noise*result)+(1-noise_mix)*result : noise_mix*(1-2*(1-result)*(1-noise))+(1-noise_mix)*result;\n    \}else if(use_noise>=2)\{\n      result = noise*noise_mix;\n    \}\n\n    if(use_alpha > 0) result=result*p(3);\n\n    //6. WE'RE DONE\n    dst() = result;\n  \}\n\};"
useGPUIfAvailable false
vectorize false
rebuild ""
aPMatteKernel_picked {{picker.r} {picker.g} {picker.b}}
aPMatteKernel_pickedB {{black_point} {black_point} {black_point}}
"aPMatteKernel_rotation order" {{parent.rotation_order}}
aPMatteKernel_translate {{parent.translate} {parent.translate} {parent.translate}}
aPMatteKernel_rotate {{parent.rotate} {parent.rotate} {parent.rotate}}
aPMatteKernel_scale {{parent.scale} {parent.scale} {parent.scale}}
aPMatteKernel_radius {{parent.radius}}
aPMatteKernel_shape {{parent.shape}}
aPMatteKernel_invert_shape {{parent.invert}}
aPMatteKernel_use_alpha {{parent.alpha_masking}}
aPMatteKernel_falloff {{parent.falloff}}
aPMatteKernel_hardness {{parent.hardness}}
"aPMatteKernel_use noise" {{parent.noise}}
aPMatteKernel_noise_relative {{parent.noise_rel}}
"aPMatteKernel_noise octaves" {{parent.noise_octaves}}
"aPMatteKernel_noise persistence" {{parent.noise_persistance}}
aPMatteKernel_lacunarity {{parent.noise_lacunarity}}
"aPMatteKernel_noise scale" {{parent.noise_size}}
aPMatteKernel_noise_offset {{parent.noise_offset}}
aPMatteKernel_noise_add {{parent.noise_add}}
aPMatteKernel_noise_gain {{parent.noise_gain}}
aPMatteKernel_noise_gamma {{parent.noise_gamma}}
aPMatteKernel_noise_mix {{parent.noise_mix}}
rebuild_finalise ""
name BlinkScriptPMatte
xpos -418
ypos 523
addUserKnob {20 User}
addUserKnob {6 black_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 picker}
picker {2000 0 1000}
addUserKnob {6 picker_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 picker_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 black_point l black}
black_point {0 0 0}
addUserKnob {6 black_point_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 black_point_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
push $N34db8800
ShuffleCopy {
inputs 2
red red
green green
blue blue
out alpha
name ShuffleCopyOut
xpos -528
ypos 527
}
Output {
name Output
xpos -528
ypos 566
}
end_group
ChannelMerge {
inputs 2
A clouds.alpha
operation in
name ChannelMerge12
selected true
xpos 11863
ypos -12829
}
push $N58992b00
Shuffle2 {
fromInput1 {{0} B}
in1 cloudSeprarted
fromInput2 {{0} B}
mappings "4 cloudSeprarted.green 0 1 rgba.red 0 0 cloudSeprarted.green 0 1 rgba.green 0 1 cloudSeprarted.green 0 1 rgba.blue 0 2 cloudSeprarted.green 0 1 rgba.alpha 0 3"
name Shuffle9
label "medium near"
selected true
xpos 11965
ypos -12970
}
push $N67b7c100
Dot {
name Dot152
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11899
ypos -13108
}
Log2Lin {
operation lin2log
name Log2Lin1
selected true
xpos 11865
ypos -13090
}
Keyer {
operation "luminance key"
range {0.72483001 0.78 1 1}
name Keyer1
selected true
xpos 11865
ypos -13071
}
Log2Lin {
name Log2Lin2
selected true
xpos 11865
ypos -13033
}
Group {
name key_chew11
help "======== KeyChew beta ========\n=============================\n\nThis is a port of the KeyChew macro for Shake to Nuke.\n\nThere might be tiny differences on the results given in both apps. Some of them are caused by the internal algorithms of each app, and others by the way I faked the JSplineV\nexpression of Shake in Nuke. If you know a better way to solve this, let\nme know!!\n\n=============================\n             2009 Cuco Bures\n============================="
selected true
xpos 11865
ypos -13007
addUserKnob {20 Controls}
addUserKnob {7 chew t "\t\t" R -200 200}
addUserKnob {7 soften R 0 200}
addUserKnob {6 matteMult +STARTLINE}
}
Input {
inputs 0
name Input
xpos -40
ypos -9
}
set N58991600 [stack 0]
Dot {
name Dot1
xpos 324
ypos -6
}
set N58990f00 [stack 0]
push $N58990f00
Invert {
name Invert1
xpos 176
ypos 33
}
push $N58990f00
Switch {
inputs 2
which {{"\[value chew]>=0?0:1"}}
name Switch1
xpos 180
ypos 87
}
Blur {
size {{"(floor(abs(\[value chew]))/4)+(floor(abs(\[value chew]))/8)"}}
name FgEdgeBlur
xpos 180
ypos 129
}
Grade {
channels alpha
multiply {1 1 1 {max(FgEdgeBlur.size*1.5,1)}}
black_clamp false
name FgEdgeMult
xpos 180
ypos 177
}
Grade {
channels alpha
gamma {1 1 1 {JSplineVFake(floor(abs(chew)))}}
name FgEdgeGamma1
xpos 180
ypos 225
addUserKnob {20 User}
addUserKnob {7 JSplineVFake}
JSplineVFake {{curve l 0.9958 k x5 0.95 0.8 x20 0.5 x40 0.3 x80 0.2 l x200 0.1}}
}
set Nd4e8b900 [stack 0]
Merge2 {
inputs 2
operation minus
name Merge1
xpos 290
ypos 231
}
push $Nd4e8b900
Switch {
inputs 2
which {{"\[value chew]>=0?0:1"}}
name Switch2
xpos 180
ypos 279
}
Clamp {
name Clamp2
xpos 180
ypos 321
}
Blur {
size {{"(floor(abs(\[value soften]))/4)+(floor(abs(\[value soften]))/8)"}}
name BlurResult
xpos 180
ypos 441
}
push $N58991600
ShuffleCopy {
inputs 2
name ShuffleCopy1
xpos -40
ypos 447
}
Premult {
name Premult1
xpos -40
ypos 495
disable {{"1-\[value matteMult]"}}
}
Output {
name Output1
xpos -40
ypos 567
}
end_group
ChannelMerge {
inputs 2
operation in
name ChannelMerge5
selected true
xpos 11865
ypos -12976
}
push $N34ddeb00
Grade {
inputs 1+1
multiply 2
name Grade5
label "core brighter"
selected true
xpos 11713
ypos -12970
}
Dot {
name Dot105
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11747
ypos -12897
}
Grade {
inputs 1+1
white 2.2
multiply {0.966666 1.066666 0.966666 1}
multiply_panelDropped true
gamma 1.1
name Grade22
label "horizon line"
selected true
xpos 11713
ypos -12823
}
Grade {
inputs 1+1
multiply 2
name cloud1
label near
selected true
xpos 11713
ypos -12732
}
Grade {
inputs 1+1
white 1.3
name cloud2
label Haze
selected true
xpos 11713
ypos -12670
}
Grade {
inputs 1+1
multiply 1.1
name cloud4
label "medium far"
selected true
xpos 11713
ypos -12610
}
Grade {
inputs 1+1
white {1.033333 0.933333 1.033333 1}
white_panelDropped true
multiply 0.45
gamma 1.3
name cloud5
label far
selected true
xpos 11713
ypos -12551
}
Dot {
name Dot302
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11747
ypos -12493
}
Dot {
name Dot303
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11744
ypos -12301
}
set N34d45d00 [stack 0]
Dot {
name Dot304
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11854
ypos -12301
}
Dot {
name Dot305
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11854
ypos -12148
}
push $N359c8f00
push $N359c9600
push $N34d45d00
Merge2 {
inputs 2
bbox B
name Merge1
selected true
xpos 11710
ypos -12209
}
Group {
inputs 3
name Atmos_Over
selected true
xpos 11710
ypos -12152
addUserKnob {20 User l Atmos_Over}
addUserKnob {41 mode T Switch6.mode}
addUserKnob {41 p_channels l "P channels" T aPMatteAtmos.p_channels}
addUserKnob {26 txt_1 l "Sky horizon"}
addUserKnob {41 disable_1 l disable T Merge3.disable}
addUserKnob {41 mix_1 l mix T MultiplyHoriz.mix_1}
addUserKnob {41 multiply l "mult clouds" T GradeHoriz.multiply}
addUserKnob {41 multiply_1 l "mult water" T GradeWater.multiply}
addUserKnob {41 moveHoriz l "move horizon" T Transform1.moveHoriz}
addUserKnob {41 size_2 l "blur horizon" T EdgeBlur1.size}
addUserKnob {26 txt_2 l Atmosphere}
addUserKnob {41 disable_2 l disable T __Merge8__.disable}
addUserKnob {41 mix_1_1 l mix T Multiply5.mix_1}
addUserKnob {41 multiply_3 l multiply T Grade1.multiply}
addUserKnob {26 ""}
addUserKnob {20 SkyOverWater l "Sky horizon settings" n 1}
SkyOverWater 0
addUserKnob {41 maskChannel_1 l "mult mask" T Keymix2.maskChannel}
addUserKnob {41 radius_2 l radius T aPMatteTight1.radius}
addUserKnob {41 falloff_2 l falloff T aPMatteTight1.falloff}
addUserKnob {41 hardness_2 l hardness T aPMatteTight1.hardness}
addUserKnob {41 size_1 l "sky blur" T _BlurTight_.size}
addUserKnob {41 blackpoint l "cloud blackpoint" T GradeAlpha.blackpoint}
addUserKnob {41 whitepoint l "cloud whitepoint" T GradeAlpha.whitepoint}
addUserKnob {20 endGroup n -1}
addUserKnob {20 atmos l "Atmos over water settings" n 1}
atmos 0
addUserKnob {41 maskChannel l "mult mask" T Keymix1.maskChannel}
addUserKnob {41 radius T aPMatteAtmos.radius}
addUserKnob {41 falloff T aPMatteAtmos.falloff}
addUserKnob {41 hardness T aPMatteAtmos.hardness}
addUserKnob {41 size l "sky blur" T _Blur_atmos_.size}
addUserKnob {26 ""}
addUserKnob {20 endGroup_1 l endGroup n -1}
addUserKnob {20 info}
addUserKnob {26 info_1 l info T "v1 Rafal 10/02/2020\nv2 Rafal 15/02/2020 removed depth math conversion)\nv3 21/02/22 removed the over\nv4 using P, & contrast\nv5 keymixes and mults\nv6 using mapped pObject fron scanlineRender"}
}
BackdropNode {
inputs 0
name BackdropNode3
tile_color 0x8e388e00
label "Over water / DepthQ ./ atmos"
note_font_size 42
xpos -1722
ypos -203
bdwidth 1685
bdheight 1078
z_order -1816430
}
StickyNote {
inputs 0
name StickyNote7
label "<< adjust to scale/lens"
xpos -281
ypos 1103
}
StickyNote {
inputs 0
name StickyNote16
label "adjust depthQ >>"
xpos -1698
ypos 122
}
StickyNote {
inputs 0
name StickyNote41
label "<< depthQ \nand remove horiz line"
xpos -1047
ypos 104
}
Input {
inputs 0
name B
xpos -370
ypos -274
}
Dot {
name Dot4
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -336
ypos -150
}
set N34d25600 [stack 0]
Dot {
name Dot71
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -1216
ypos -174
}
set N34d24f00 [stack 0]
Group {
name aPMatteTight1
help "aPMatte v1.0 by Adrian Pueyo\n\nGenerate a matte of different shapes, based on a Position pass. Includes options to transform the mask and change its falloff. Also has the option to output or overlay a P-based 3D noise.\n\nadrianpueyo.com, 2017"
knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == \"shape\":\n    rampOn = k.value() in \['linear ramp', 'radial ramp'];\n    n\['radius'].setVisible(not rampOn)\n    n.knobs()\[\"black\"].setVisible(rampOn)\n    n.knobs()\[\"picker\"].setLabel( \"white\" if rampOn else \"center\" )\n\n\nif k.name() == \"noise\":\n    noiseOn = k.value() != 'off';\n    n\['noise_rel'].setVisible(noiseOn)\n    n\['noise_persistance'].setVisible(noiseOn)\n    n\['noise_octaves'].setVisible(noiseOn)\n    n\['noise_lacunarity'].setVisible(noiseOn)\n    n\['noise_size'].setVisible(noiseOn)\n    n\['noise_offset'].setVisible(noiseOn)\n    n\['noise_add'].setVisible(noiseOn)\n    n\['noise_gain'].setVisible(noiseOn)\n    n\['noise_gamma'].setVisible(noiseOn)\n    n\['noise_mix'].setVisible(noiseOn)\n\nif not n\[\"autolabel\"].value():\n    n\[\"autolabel\"].setValue(\"'%s\\\\n(%s)'%(nuke.thisNode()\['name'].value(),nuke.thisNode()\['out'].value()) if nuke.thisNode()\['out'].value()!='alpha' else nuke.thisNode()\['name'].value()\")"
autolabel "'%s\\n(%s)'%(nuke.thisNode()\['name'].value(),nuke.thisNode()\['out'].value()) if nuke.thisNode()\['out'].value()!='alpha' else nuke.thisNode()\['name'].value()"
xpos -1140
ypos -53
addUserKnob {20 aPMatte}
addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T BlinkScriptPMatte.useGPUIfAvailable}
addUserKnob {41 vectorize l "Vectorize on CPU" -STARTLINE T BlinkScriptPMatte.vectorize}
addUserKnob {26 ""}
addUserKnob {41 p_channels l "P channels" T ShuffleIn.in}
addUserKnob {41 out l " output" -STARTLINE T ShuffleCopyOut.out}
addUserKnob {6 alpha_masking l "alpha masking" t "Multiply the output by the input's alpha." +STARTLINE}
alpha_masking true
addUserKnob {4 shape M {sphere "cusped box" "rounded box" "linear ramp" "radial ramp" ""}}
addUserKnob {6 invert -STARTLINE}
addUserKnob {41 picker l center T BlinkScriptPMatte.picker}
addUserKnob {7 radius R 0 100}
radius 50
addUserKnob {41 black t "Black point of your ramp." +HIDDEN T BlinkScriptPMatte.black_point}
addUserKnob {26 ""}
addUserKnob {4 falloff t "Fallof type for the matte." M {linear smooth quadratic cubic "inv. cubic" "" ""}}
falloff quadratic
addUserKnob {7 hardness}
addUserKnob {26 ""}
addUserKnob {4 rotation_order l "rotation order" M {XYZ XZY YXZ YZX ZXY ZYX}}
rotation_order ZXY
addUserKnob {13 translate}
addUserKnob {13 rotate}
addUserKnob {13 scale}
scale {100000 1 10000000}
addUserKnob {26 ""}
addUserKnob {4 noise t "overlay: uses the noise in overlay blend mode over the resulting mask, to make it more organic and less obvious for grading.\nnoise only: ignore the mask, output a 3D noise." M {off overlay "noise only"}}
addUserKnob {6 noise_rel l relative t "On: Pick world transformations and positioning of the shape.\nOff: Pick absolute world transformations.\n\nTip: Check when you want the mask to always be affected by the same noise, uncheck when you want to lock the noise to your scene." -STARTLINE +HIDDEN}
noise_rel true
addUserKnob {7 noise_size l size t "Size of the noise pattern." +HIDDEN R 0 100}
noise_size 10
addUserKnob {7 noise_offset l offset t "Spatial offset of the noise pattern (use to find a sweet spot for your matte)." +HIDDEN R 0 100}
addUserKnob {3 noise_octaves l octaves t "Number of noise iterations." +HIDDEN}
noise_octaves 8
addUserKnob {7 noise_lacunarity l lacunarity t "Each octave gets downscaled by this value." +HIDDEN R 0 10}
noise_lacunarity 1.8
addUserKnob {7 noise_persistance l persistance t "Each octave gets multiplied by this value." +HIDDEN}
noise_persistance 0.5
addUserKnob {7 noise_add l add t "Add a value to the noise." +HIDDEN}
noise_add 0.5
addUserKnob {7 noise_gain l gain t "Multiply the resulting noise by this value." +HIDDEN R 0 4}
noise_gain 1
addUserKnob {7 noise_gamma l gamma t "Gamma the resulting value." +HIDDEN R 0 4}
noise_gamma 1
addUserKnob {7 noise_mix l mix +HIDDEN}
noise_mix 1
addUserKnob {26 copyright l " " T "<br/><font color=#777><b>aPMatte v1.0</b> - adrianpueyo.com, 2017"}
addUserKnob {6 BlinkScriptPMatte_black_point_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
}
Input {
inputs 0
name Inputimg
xpos -528
ypos 483
}
set N34d24100 [stack 0]
Shuffle {
in {{{parent.parent.aPMatteAtmos.ShuffleIn.in}}}
in2 rgba
alpha alpha2
name ShuffleIn
xpos -418
ypos 483
}
BlinkScript {
ProgramGroup 1
KernelDescription "2 \"aPMatteKernel\" iterate pixelWise eba2548d360b6b3d2b97555753832bdfb4c4224623cecc4870a6d5c5e54e4fdb 2 \"p\" Read Point \"dst\" Write Point 23 \"picked\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"pickedB\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"rotation order\" Int 1 BAAAAA== \"translate\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"rotate\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"scale\" Float 3 AACAPwAAgD8AAIA/AAAAAA== \"radius\" Float 1 AACAPw== \"shape\" Int 1 AAAAAA== \"invert_shape\" Int 1 AAAAAA== \"use_alpha\" Int 1 AAAAAA== \"falloff\" Int 1 AQAAAA== \"hardness\" Float 1 AAAAAA== \"use noise\" Int 1 AAAAAA== \"noise_relative\" Int 1 AAAAAA== \"noise octaves\" Int 1 CAAAAA== \"noise persistence\" Float 1 AAAAPw== \"lacunarity\" Float 1 AAAAQA== \"noise scale\" Float 1 CtcjPA== \"noise_offset\" Float 1 AAAAAA== \"noise_add\" Float 1 AAAAAA== \"noise_gain\" Float 1 AAAAAA== \"noise_gamma\" Float 1 AAAAAA== \"noise_mix\" Float 1 AAAAAA== 23 \"picked\" 3 1 \"pickedB\" 3 1 \"rotOrder\" 1 1 \"translate\" 3 1 \"rotate\" 3 1 \"scale\" 3 1 \"radius\" 1 1 \"shape\" 1 1 \"invert_shape\" 1 1 \"use_alpha\" 1 1 \"falloff\" 1 1 \"hardness\" 1 1 \"use_noise\" 1 1 \"noise_relative\" 1 1 \"noise_octaves\" 1 1 \"noise_persistence\" 1 1 \"noise_lacunarity\" 1 1 \"noise_scale\" 1 1 \"noise_offset\" 1 1 \"noise_add\" 1 1 \"noise_gain\" 1 1 \"noise_gamma\" 1 1 \"noise_mix\" 1 1 0"
kernelSource "// ----------------------------------------------------------------\n// aPMatte v1.0 by Adrian Pueyo\n//\n// Generate a matte of different shapes, based on a Position pass.\n// Includes options to transform the mask and change its falloff.\n// Also includes the option to output or overlay a P-based noise.\n//\n// adrianpueyo.com, 2017\n// ----------------------------------------------------------------\n\n\n// Noise algorithm adapted by Adrian Pueyo from Noise4D function by Mads Hagbarth Lund\n// Noise4D function Ported by Mads Hagbarth Lund 2014\n// Based on https://github.com/Draradech/csworldgen/blob/master/simplexnoise.cpp\n\n/* Copyright (c) 2007-2012 Eliot Eshelman\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n\nint fastfloor( const float x ) \{ return x > 0 ? (int) x : (int) x - 1; \}\ninline float raw_noise_4d( const float x, const float y, const float z, const float w ) \n\{\nint simplex\[64]\[4] = \{\n    \{0,1,2,3\},\{0,1,3,2\},\{0,0,0,0\},\{0,2,3,1\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{1,2,3,0\},\n    \{0,2,1,3\},\{0,0,0,0\},\{0,3,1,2\},\{0,3,2,1\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{1,3,2,0\},\n    \{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\n    \{1,2,0,3\},\{0,0,0,0\},\{1,3,0,2\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{2,3,0,1\},\{2,3,1,0\},\n    \{1,0,2,3\},\{1,0,3,2\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{2,0,3,1\},\{0,0,0,0\},\{2,1,3,0\},\n    \{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\n    \{2,0,1,3\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{3,0,1,2\},\{3,0,2,1\},\{0,0,0,0\},\{3,1,2,0\},\n    \{2,1,0,3\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{3,1,0,2\},\{0,0,0,0\},\{3,2,0,1\},\{3,2,1,0\}\n\};\n    int perm\[512] = \{\n        151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,\n        8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,\n        35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,\n        134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,\n        55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208, 89,\n        18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,\n        250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,\n        189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,\n        172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,\n        228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,\n        107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,\n        138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180,\n\n        151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,\n        8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,\n        35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,\n        134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,\n        55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208, 89,\n        18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,\n        250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,\n        189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,\n        172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,\n        228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,\n        107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,\n        138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180\n    \};\n  int grad4\[32]\[4]= \{\n    \{0,1,1,1\},  \{0,1,1,-1\},  \{0,1,-1,1\},  \{0,1,-1,-1\},\n    \{0,-1,1,1\}, \{0,-1,1,-1\}, \{0,-1,-1,1\}, \{0,-1,-1,-1\},\n    \{1,0,1,1\},  \{1,0,1,-1\},  \{1,0,-1,1\},  \{1,0,-1,-1\},\n    \{-1,0,1,1\}, \{-1,0,1,-1\}, \{-1,0,-1,1\}, \{-1,0,-1,-1\},\n    \{1,1,0,1\},  \{1,1,0,-1\},  \{1,-1,0,1\},  \{1,-1,0,-1\},\n    \{-1,1,0,1\}, \{-1,1,0,-1\}, \{-1,-1,0,1\}, \{-1,-1,0,-1\},\n    \{1,1,1,0\},  \{1,1,-1,0\},  \{1,-1,1,0\},  \{1,-1,-1,0\},\n    \{-1,1,1,0\}, \{-1,1,-1,0\}, \{-1,-1,1,0\}, \{-1,-1,-1,0\}\n  \};\n    float F4 = (sqrt(5.0f)-1.0)/4.0;\n    float G4 = (5.0-sqrt(5.0f))/20.0;\n    float n0, n1, n2, n3, n4;\n    float s = (x + y + z + w) * F4;\n    int i = fastfloor(x + s);\n    int j = fastfloor(y + s);\n    int k = fastfloor(z + s);\n    int l = fastfloor(w + s);\n    float t = (i + j + k + l) * G4;\n    float X0 = i - t;\n    float Y0 = j - t;\n    float Z0 = k - t;\n    float W0 = l - t;\n\n    float x0 = x - X0;\n    float y0 = y - Y0;\n    float z0 = z - Z0;\n    float w0 = w - W0;\n    int c1 = (x0 > y0) ? 32 : 0;\n    int c2 = (x0 > z0) ? 16 : 0;\n    int c3 = (y0 > z0) ? 8 : 0;\n    int c4 = (x0 > w0) ? 4 : 0;\n    int c5 = (y0 > w0) ? 2 : 0;\n    int c6 = (z0 > w0) ? 1 : 0;\n    int c = c1 + c2 + c3 + c4 + c5 + c6;\n\n    int i1, j1, k1, l1;\n    int i2, j2, k2, l2;\n    int i3, j3, k3, l3;\n    i1 = simplex\[c]\[0]>=3 ? 1 : 0;\n    j1 = simplex\[c]\[1]>=3 ? 1 : 0;\n    k1 = simplex\[c]\[2]>=3 ? 1 : 0;\n    l1 = simplex\[c]\[3]>=3 ? 1 : 0;\n    i2 = simplex\[c]\[0]>=2 ? 1 : 0;\n    j2 = simplex\[c]\[1]>=2 ? 1 : 0;\n    k2 = simplex\[c]\[2]>=2 ? 1 : 0;\n    l2 = simplex\[c]\[3]>=2 ? 1 : 0;\n    i3 = simplex\[c]\[0]>=1 ? 1 : 0;\n    j3 = simplex\[c]\[1]>=1 ? 1 : 0;\n    k3 = simplex\[c]\[2]>=1 ? 1 : 0;\n    l3 = simplex\[c]\[3]>=1 ? 1 : 0;\n    float x1 = x0 - i1 + G4;\n    float y1 = y0 - j1 + G4;\n    float z1 = z0 - k1 + G4;\n    float w1 = w0 - l1 + G4;\n    float x2 = x0 - i2 + 2.0*G4;\n    float y2 = y0 - j2 + 2.0*G4;\n    float z2 = z0 - k2 + 2.0*G4;\n    float w2 = w0 - l2 + 2.0*G4;\n    float x3 = x0 - i3 + 3.0*G4;\n    float y3 = y0 - j3 + 3.0*G4;\n    float z3 = z0 - k3 + 3.0*G4;\n    float w3 = w0 - l3 + 3.0*G4;\n    float x4 = x0 - 1.0 + 4.0*G4;\n    float y4 = y0 - 1.0 + 4.0*G4;\n    float z4 = z0 - 1.0 + 4.0*G4;\n    float w4 = w0 - 1.0 + 4.0*G4;\n    int ii = i & 255;\n    int jj = j & 255;\n    int kk = k & 255;\n    int ll = l & 255;\n    int gi0 = perm\[ii+perm\[jj+perm\[kk+perm\[ll]]]] % 32;\n    int gi1 = perm\[ii+i1+perm\[jj+j1+perm\[kk+k1+perm\[ll+l1]]]] % 32;\n    int gi2 = perm\[ii+i2+perm\[jj+j2+perm\[kk+k2+perm\[ll+l2]]]] % 32;\n    int gi3 = perm\[ii+i3+perm\[jj+j3+perm\[kk+k3+perm\[ll+l3]]]] % 32;\n    int gi4 = perm\[ii+1+perm\[jj+1+perm\[kk+1+perm\[ll+1]]]] % 32;\n    float t0 = 0.6 - x0*x0 - y0*y0 - z0*z0 - w0*w0;\n    if(t0<0) n0 = 0.0;\n    else \{\n        t0 *= t0;\n        n0 = t0 * t0 * dot(float4(grad4\[gi0]\[0],grad4\[gi0]\[2],grad4\[gi0]\[3],grad4\[gi0]\[3]), float4(x0, y0, z0, w0));\n    \}\n    float t1 = 0.6 - x1*x1 - y1*y1 - z1*z1 - w1*w1;\n    if(t1<0) n1 = 0.0;\n    else \{\n        t1 *= t1;\n        n1 = t1 * t1 * dot(float4(grad4\[gi1]\[0],grad4\[gi1]\[2],grad4\[gi1]\[3],grad4\[gi1]\[3]), float4(x1, y1, z1, w1));\n    \}\n    float t2 = 0.6 - x2*x2 - y2*y2 - z2*z2 - w2*w2;\n    if(t2<0) n2 = 0.0;\n    else \{\n        t2 *= t2;\n        n2 = t2 * t2 * dot(float4(grad4\[gi2]\[0],grad4\[gi2]\[2],grad4\[gi2]\[3],grad4\[gi2]\[3]), float4(x2, y2, z2, w2));\n    \}\n    float t3 = 0.6 - x3*x3 - y3*y3 - z3*z3 - w3*w3;\n    if(t3<0) n3 = 0.0;\n    else \{\n        t3 *= t3;\n        n3 = t3 * t3 * dot(float4(grad4\[gi3]\[0],grad4\[gi3]\[2],grad4\[gi3]\[3],grad4\[gi3]\[3]), float4(x3, y3, z3, w3));\n    \}\n    float t4 = 0.6 - x4*x4 - y4*y4 - z4*z4 - w4*w4;\n    if(t4<0) n4 = 0.0;\n    else \{\n        t4 *= t4;\n        n4 = t4 * t4 * dot(float4(grad4\[gi4]\[0],grad4\[gi4]\[2],grad4\[gi4]\[3],grad4\[gi4]\[3]), float4(x4, y4, z4, w4));\n    \}\n    return 27.0 * (n0 + n1 + n2 + n3 + n4);\n\}\ninline float octave_noise_4d( const float octaves, const float persistence, const float scale, const float x, const float y, const float z, const float w, const float lacunarity=2 ) \n\{\n    float total = 0;\n    float frequency = scale;\n    float amplitude = 1;\n    float maxAmplitude = 0;\n    for( int i=0; i < octaves; i++ ) \{\n        total += (float)raw_noise_4d( x * frequency, y * frequency, z * frequency, w * frequency ) * amplitude;\n\n        frequency *= lacunarity;\n        maxAmplitude += amplitude;\n        amplitude *= persistence;\n    \}\n    return float(total / maxAmplitude);\n\}\n\nkernel aPMatteKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> p;\n  Image<eWrite> dst;\n\n  param:\n    float3 picked; //Center, or white for ramps\n    float3 pickedB; //Black for ramps\n    int rotOrder; //0=XYZ,1=XZY,2=YXZ,3=YZX,4=ZXY,5=ZYX\n    float3 translate;\n    float3 rotate;\n    float3 scale;\n    float radius;\n    int shape; //0=sphere,1=cusped box,2=rounded box,3=ramp, 4=rad.ramp\n    int invert_shape;\n    int use_alpha;\n    int falloff; //0=linear,1=smooth,2=square,3=inv.square\n    float hardness;\n\n    // Noise parameters here\n    int use_noise; //0=off,1=overlay,2=noise only\n    int noise_relative;\n    int noise_octaves;\n    float noise_persistence;\n    float noise_lacunarity;\n    float noise_scale;\n    float noise_offset;\n    float noise_add;\n    float noise_gain;\n    float noise_gamma;\n    float noise_mix;\n\n  void define() \{\n    defineParam(rotOrder, \"rotation order\", 4);\n    defineParam(scale, \"scale\", float3(1.0f,1.0f,1.0f));\n    defineParam(radius, \"radius\", 1.0f);\n    defineParam(falloff, \"falloff\", 1);\n    defineParam(use_noise, \"use noise\", 0);\n    defineParam(noise_octaves, \"noise octaves\", 8);\n    defineParam(noise_persistence, \"noise persistence\",  0.5f);\n    defineParam(noise_lacunarity, \"lacunarity\",  2.0f);\n    defineParam(noise_scale, \"noise scale\", 0.01f);\n  \}\n\n  inline float rad(float deg)\{ \n    return deg*PI/180;\n  \}\n\n  inline float smoothstep(float edge0, float edge1, float x)\{\n    x = clamp((x - edge0)/(edge1 - edge0), 0.0f, 1.0f);\n    return x*x*x*(x*(x*6-15)+10);\n  \}\n\n  inline float cl(float val)\{\n  return clamp(val,0.0f,1.0f); \n  \}\n\n  float3 rotX(float3 vec, float rot)\{\n    if(rot==0.0f)\{\n      return vec;\n    \} else \{\n      float3 vecOut;\n      vecOut.y = vec.y*cos(rad(rot)) - vec.z*sin(rad(rot));\n      vecOut.z = vec.y*sin(rad(rot)) + vec.z*cos(rad(rot));\n      vecOut.x = vec.x;\n      return float3(vecOut.x,vecOut.y,vecOut.z);\n    \}\n  \}\n\n  float3 rotY(float3 vec, float rot)\{\n    if(rot==0.0f)\{\n      return vec;\n    \} else \{\n      float3 vecOut;\n      vecOut.z = vec.z*cos(rad(rot)) - vec.x*sin(rad(rot));\n      vecOut.x = vec.z*sin(rad(rot)) + vec.x*cos(rad(rot));\n      vecOut.y = vec.y;\n      return float3(vecOut.x,vecOut.y,vecOut.z);\n    \}\n  \}\n\n  float3 rotZ(float3 vec, float rot)\{\n    if(rot==0.0f)\{\n      return vec;\n    \} else \{\n      float3 vecOut;\n      vecOut.x = vec.x*cos(rad(rot)) - vec.y*sin(rad(rot));\n      vecOut.y = vec.x*sin(rad(rot)) + vec.y*cos(rad(rot));\n      vecOut.z = vec.z;\n      return float3(vecOut.x,vecOut.y,vecOut.z);\n    \}\n  \}\n\n  void process() \{\n    //1. P WORLD\n    // Center the coordinates\n    float3 color = float3(p(0)-picked.x,p(1)-picked.y,p(2)-picked.z);\n    int black = 0;\n\n    // Translate\n    color -= translate;\n\n    // Rotate\n    if (rotOrder<=0) color = rotZ(rotY(rotX(color,rotate.x),rotate.y),rotate.z);\n    else if (rotOrder==1) color = rotY(rotZ(rotX(color,rotate.x),rotate.z),rotate.y);\n    else if (rotOrder==2) color = rotZ(rotX(rotY(color,rotate.y),rotate.x),rotate.z);\n    else if (rotOrder==3) color = rotX(rotZ(rotY(color,rotate.y),rotate.z),rotate.x);\n    else if (rotOrder==4) color = rotY(rotX(rotZ(color,rotate.z),rotate.x),rotate.y);\n    else if (rotOrder>=5) color = rotX(rotY(rotZ(color,rotate.z),rotate.y),rotate.x);\n\n    // Scale\n    if (scale.x!=0 && scale.y!=0 && scale.z!=0) \{\n      color *= float3(1/scale.x, 1/scale.y, 1/scale.z);\n    \} else \{\n      dst() = 0.0f;\n      return;\n    \}\n\n    //2. SHAPES\n    float dist;\n    float result;\n\n    if(shape==0)\{//Sphere\n      dist = sqrt(pow(color\[0],2) + pow(color\[1],2) + pow(color\[2],2));\n      result = radius==0.0f? 0:cl(1-dist/radius);\n    \} else if(shape==1)\{//Cusped Box\n      result = min( min( cl((radius-fabs(color.x))/radius) , cl((radius-fabs(color.y))/radius)) , cl((radius-fabs(color.z))/radius)) ;\n      result = hardness>=1? float(result>0) : result;\n    \} else if(shape==2)\{//Rounded Box\n      result = radius==0.0f? 0: smoothstep(0,1-hardness, cl(1-fabs(float(color.x)/radius)) ) * smoothstep(0,1-hardness, cl(1-fabs(float(color.y)/radius)) ) * smoothstep(0,1-hardness, cl(1-fabs(float(color.z)/radius)) );\n      result = hardness>=1? float(result>0) : result;\n    \} else if(shape==3)\{//Linear Ramp\n      dist = sqrt(pow(color\[0],2) + pow(color\[1],2) + pow(color\[2],2));\n      float distB = sqrt(pow(color\[0]-(pickedB.x-picked.x),2) + pow(color\[1]-(pickedB.y-picked.y),2) + pow(color\[2]-(pickedB.z-picked.z),2));\n      float distWB = sqrt(pow(pickedB.x-picked.x,2) + pow(pickedB.y-picked.y,2) + pow(pickedB.z-picked.z,2));\n      float angWB = acos( clamp((pow(dist,2)-pow(distB,2)+pow(distWB,2))/(2*dist*distWB),-1.0f,1.0f) );\n      float cosAngWB = dist==0.0f? 0:cos(angWB);\n      result = distWB==0? 0.0f: cl((dist * cosAngWB) / distWB );\n      result = 1-result;\n    \} else if(shape==4)\{//Radial Ramp\n      dist = sqrt(pow(color\[0],2) + pow(color\[1],2) + pow(color\[2],2));\n      float distB = sqrt(pow(color\[0]-(pickedB.x-picked.x),2) + pow(color\[1]-(pickedB.y-picked.y),2) + pow(color\[2]-(pickedB.z-picked.z),2));\n      float distWB = sqrt(pow(pickedB.x-picked.x,2) + pow(pickedB.y-picked.y,2) + pow(pickedB.z-picked.z,2));\n      result = distWB==0? 0.0f: cl((dist) / distWB );\n      result = 1-result;\n    \}\n    result = invert_shape? 1-result:result;\n\n    //3. FALLOFF\n    if(falloff==0)\{//Linear\n      result = hardness>=1? float(result>0) : cl(result/(1-hardness));\n    \}else if(falloff==1)\{//Smooth\n      result = hardness>=1? float(result>0) : smoothstep(0,1-hardness,result);\n    \}else if(falloff==2)\{//Quadratic\n      result = hardness>=1? float(result>0) : cl(pow(float(result/(1-hardness)),2));\n    \}else if(falloff==3)\{//Cubic\n      result = hardness>=1? float(result>0) : cl(pow(float(result/(1-hardness)),3));\n    \}else if(falloff==4)\{//Inv. Cubic\n      result = hardness>=1? float(result>0) : 1-cl(pow(float(cl(1-(result/(1-hardness)))),3));\n    \}\n\n    //4. GENERATE NOISE\n    float noise;\n    if(use_noise!=0)\{//Avoid calculations if possible\n      if(noise_relative!=1)\{\n        noise = (float)octave_noise_4d(float(noise_octaves),noise_persistence,noise_scale==0?10000.0f:1/noise_scale,p(0),p(1),p(2),noise_offset,noise_lacunarity);\n      \}else\{\n        noise = (float)octave_noise_4d(float(noise_octaves),noise_persistence,noise_scale==0?10000.0f:1/noise_scale,color\[0],color\[1],color\[2],noise_offset,noise_lacunarity);\n      \}\n      noise = cl(pow(max((noise+noise_add)*noise_gain,0.0f),noise_gamma==0?1:1/noise_gamma));\n    \}\n\n\n    //5. ALPHA MASK AND APPLY NOISE\n    result = max(result,0.0f); //Clamp negative values\n    if(use_noise==1)\{//Overlay\n      result = result<0.5f? noise_mix*(2*noise*result)+(1-noise_mix)*result : noise_mix*(1-2*(1-result)*(1-noise))+(1-noise_mix)*result;\n    \}else if(use_noise>=2)\{\n      result = noise*noise_mix;\n    \}\n\n    if(use_alpha > 0) result=result*p(3);\n\n    //6. WE'RE DONE\n    dst() = result;\n  \}\n\};"
rebuild ""
aPMatteKernel_picked {{picker.r} {picker.g} {picker.b}}
aPMatteKernel_pickedB {{black_point} {black_point} {black_point}}
"aPMatteKernel_rotation order" {{parent.rotation_order}}
aPMatteKernel_translate {{parent.translate} {parent.translate} {parent.translate}}
aPMatteKernel_rotate {{parent.rotate} {parent.rotate} {parent.rotate}}
aPMatteKernel_scale {{parent.scale} {parent.scale} {parent.scale}}
aPMatteKernel_radius {{parent.radius}}
aPMatteKernel_shape {{parent.shape}}
aPMatteKernel_invert_shape {{parent.invert}}
aPMatteKernel_use_alpha {{parent.alpha_masking}}
aPMatteKernel_falloff {{parent.falloff}}
aPMatteKernel_hardness {{parent.hardness}}
"aPMatteKernel_use noise" {{parent.noise}}
aPMatteKernel_noise_relative {{parent.noise_rel}}
"aPMatteKernel_noise octaves" {{parent.noise_octaves}}
"aPMatteKernel_noise persistence" {{parent.noise_persistance}}
aPMatteKernel_lacunarity {{parent.noise_lacunarity}}
"aPMatteKernel_noise scale" {{parent.noise_size}}
aPMatteKernel_noise_offset {{parent.noise_offset}}
aPMatteKernel_noise_add {{parent.noise_add}}
aPMatteKernel_noise_gain {{parent.noise_gain}}
aPMatteKernel_noise_gamma {{parent.noise_gamma}}
aPMatteKernel_noise_mix {{parent.noise_mix}}
rebuild_finalise ""
name BlinkScriptPMatte
xpos -418
ypos 523
addUserKnob {20 User}
addUserKnob {6 black_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 picker}
picker {2000 3 1000}
addUserKnob {6 picker_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 picker_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 black_point l black}
black_point {0 0 0}
addUserKnob {6 black_point_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 black_point_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
push $N34d24100
ShuffleCopy {
inputs 2
red red
green green
blue blue
name ShuffleCopyOut
xpos -528
ypos 527
}
Output {
name Output
xpos -528
ypos 566
}
end_group
Multiply {
value {{mix_1}}
name MultiplyHoriz
xpos -1140
ypos 128
addUserKnob {20 User}
addUserKnob {7 mix_1 l mix}
mix_1 1
}
Dot {
name Dot211
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -1106
ypos 166
}
set N346bb900 [stack 0]
push $N34d24f00
Group {
name aPMatteAtmos
help "aPMatte v1.0 by Adrian Pueyo\n\nGenerate a matte of different shapes, based on a Position pass. Includes options to transform the mask and change its falloff. Also has the option to output or overlay a P-based 3D noise.\n\nadrianpueyo.com, 2017"
knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == \"shape\":\n    rampOn = k.value() in \['linear ramp', 'radial ramp'];\n    n\['radius'].setVisible(not rampOn)\n    n.knobs()\[\"black\"].setVisible(rampOn)\n    n.knobs()\[\"picker\"].setLabel( \"white\" if rampOn else \"center\" )\n\n\nif k.name() == \"noise\":\n    noiseOn = k.value() != 'off';\n    n\['noise_rel'].setVisible(noiseOn)\n    n\['noise_persistance'].setVisible(noiseOn)\n    n\['noise_octaves'].setVisible(noiseOn)\n    n\['noise_lacunarity'].setVisible(noiseOn)\n    n\['noise_size'].setVisible(noiseOn)\n    n\['noise_offset'].setVisible(noiseOn)\n    n\['noise_add'].setVisible(noiseOn)\n    n\['noise_gain'].setVisible(noiseOn)\n    n\['noise_gamma'].setVisible(noiseOn)\n    n\['noise_mix'].setVisible(noiseOn)\n\nif not n\[\"autolabel\"].value():\n    n\[\"autolabel\"].setValue(\"'%s\\\\n(%s)'%(nuke.thisNode()\['name'].value(),nuke.thisNode()\['out'].value()) if nuke.thisNode()\['out'].value()!='alpha' else nuke.thisNode()\['name'].value()\")"
autolabel "'%s\\n(%s)'%(nuke.thisNode()\['name'].value(),nuke.thisNode()\['out'].value()) if nuke.thisNode()\['out'].value()!='alpha' else nuke.thisNode()\['name'].value()"
xpos -1580
ypos -46
addUserKnob {20 aPMatte}
addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T BlinkScriptPMatte.useGPUIfAvailable}
addUserKnob {41 vectorize l "Vectorize on CPU" -STARTLINE T BlinkScriptPMatte.vectorize}
addUserKnob {26 ""}
addUserKnob {41 p_channels l "P channels" T ShuffleIn.in}
addUserKnob {41 out l " output" -STARTLINE T ShuffleCopyOut.out}
addUserKnob {6 alpha_masking l "alpha masking" t "Multiply the output by the input's alpha." +STARTLINE}
alpha_masking true
addUserKnob {4 shape M {sphere "cusped box" "rounded box" "linear ramp" "radial ramp" ""}}
shape "cusped box"
addUserKnob {6 invert -STARTLINE}
addUserKnob {41 picker l center T BlinkScriptPMatte.picker}
addUserKnob {7 radius R 0 100}
radius 42.6
addUserKnob {41 black t "Black point of your ramp." +HIDDEN T BlinkScriptPMatte.black_point}
addUserKnob {26 ""}
addUserKnob {4 falloff t "Fallof type for the matte." M {linear smooth quadratic cubic "inv. cubic" "" ""}}
falloff cubic
addUserKnob {7 hardness}
addUserKnob {26 ""}
addUserKnob {4 rotation_order l "rotation order" M {XYZ XZY YXZ YZX ZXY ZYX}}
rotation_order ZXY
addUserKnob {13 translate}
addUserKnob {13 rotate}
addUserKnob {13 scale}
scale {100000 14 10000000}
addUserKnob {26 ""}
addUserKnob {4 noise t "overlay: uses the noise in overlay blend mode over the resulting mask, to make it more organic and less obvious for grading.\nnoise only: ignore the mask, output a 3D noise." M {off overlay "noise only"}}
addUserKnob {6 noise_rel l relative t "On: Pick world transformations and positioning of the shape.\nOff: Pick absolute world transformations.\n\nTip: Check when you want the mask to always be affected by the same noise, uncheck when you want to lock the noise to your scene." -STARTLINE +HIDDEN}
noise_rel true
addUserKnob {7 noise_size l size t "Size of the noise pattern." +HIDDEN R 0 100}
noise_size 10
addUserKnob {7 noise_offset l offset t "Spatial offset of the noise pattern (use to find a sweet spot for your matte)." +HIDDEN R 0 100}
addUserKnob {3 noise_octaves l octaves t "Number of noise iterations." +HIDDEN}
noise_octaves 8
addUserKnob {7 noise_lacunarity l lacunarity t "Each octave gets downscaled by this value." +HIDDEN R 0 10}
noise_lacunarity 1.8
addUserKnob {7 noise_persistance l persistance t "Each octave gets multiplied by this value." +HIDDEN}
noise_persistance 0.5
addUserKnob {7 noise_add l add t "Add a value to the noise." +HIDDEN}
noise_add 0.5
addUserKnob {7 noise_gain l gain t "Multiply the resulting noise by this value." +HIDDEN R 0 4}
noise_gain 1
addUserKnob {7 noise_gamma l gamma t "Gamma the resulting value." +HIDDEN R 0 4}
noise_gamma 1
addUserKnob {7 noise_mix l mix +HIDDEN}
noise_mix 1
addUserKnob {26 copyright l " " T "<br/><font color=#777><b>aPMatte v1.0</b> - adrianpueyo.com, 2017"}
addUserKnob {6 BlinkScriptPMatte_black_point_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
}
Input {
inputs 0
name Inputimg
xpos -528
ypos 483
}
set N346bab00 [stack 0]
Shuffle {
in pSky
in2 rgba
alpha alpha2
name ShuffleIn
xpos -418
ypos 483
}
BlinkScript {
ProgramGroup 1
KernelDescription "2 \"aPMatteKernel\" iterate pixelWise eba2548d360b6b3d2b97555753832bdfb4c4224623cecc4870a6d5c5e54e4fdb 2 \"p\" Read Point \"dst\" Write Point 23 \"picked\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"pickedB\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"rotation order\" Int 1 BAAAAA== \"translate\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"rotate\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"scale\" Float 3 AACAPwAAgD8AAIA/AAAAAA== \"radius\" Float 1 AACAPw== \"shape\" Int 1 AAAAAA== \"invert_shape\" Int 1 AAAAAA== \"use_alpha\" Int 1 AAAAAA== \"falloff\" Int 1 AQAAAA== \"hardness\" Float 1 AAAAAA== \"use noise\" Int 1 AAAAAA== \"noise_relative\" Int 1 AAAAAA== \"noise octaves\" Int 1 CAAAAA== \"noise persistence\" Float 1 AAAAPw== \"lacunarity\" Float 1 AAAAQA== \"noise scale\" Float 1 CtcjPA== \"noise_offset\" Float 1 AAAAAA== \"noise_add\" Float 1 AAAAAA== \"noise_gain\" Float 1 AAAAAA== \"noise_gamma\" Float 1 AAAAAA== \"noise_mix\" Float 1 AAAAAA== 23 \"picked\" 3 1 \"pickedB\" 3 1 \"rotOrder\" 1 1 \"translate\" 3 1 \"rotate\" 3 1 \"scale\" 3 1 \"radius\" 1 1 \"shape\" 1 1 \"invert_shape\" 1 1 \"use_alpha\" 1 1 \"falloff\" 1 1 \"hardness\" 1 1 \"use_noise\" 1 1 \"noise_relative\" 1 1 \"noise_octaves\" 1 1 \"noise_persistence\" 1 1 \"noise_lacunarity\" 1 1 \"noise_scale\" 1 1 \"noise_offset\" 1 1 \"noise_add\" 1 1 \"noise_gain\" 1 1 \"noise_gamma\" 1 1 \"noise_mix\" 1 1 0"
kernelSource "// ----------------------------------------------------------------\n// aPMatte v1.0 by Adrian Pueyo\n//\n// Generate a matte of different shapes, based on a Position pass.\n// Includes options to transform the mask and change its falloff.\n// Also includes the option to output or overlay a P-based noise.\n//\n// adrianpueyo.com, 2017\n// ----------------------------------------------------------------\n\n\n// Noise algorithm adapted by Adrian Pueyo from Noise4D function by Mads Hagbarth Lund\n// Noise4D function Ported by Mads Hagbarth Lund 2014\n// Based on https://github.com/Draradech/csworldgen/blob/master/simplexnoise.cpp\n\n/* Copyright (c) 2007-2012 Eliot Eshelman\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n\nint fastfloor( const float x ) \{ return x > 0 ? (int) x : (int) x - 1; \}\ninline float raw_noise_4d( const float x, const float y, const float z, const float w ) \n\{\nint simplex\[64]\[4] = \{\n    \{0,1,2,3\},\{0,1,3,2\},\{0,0,0,0\},\{0,2,3,1\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{1,2,3,0\},\n    \{0,2,1,3\},\{0,0,0,0\},\{0,3,1,2\},\{0,3,2,1\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{1,3,2,0\},\n    \{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\n    \{1,2,0,3\},\{0,0,0,0\},\{1,3,0,2\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{2,3,0,1\},\{2,3,1,0\},\n    \{1,0,2,3\},\{1,0,3,2\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{2,0,3,1\},\{0,0,0,0\},\{2,1,3,0\},\n    \{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\n    \{2,0,1,3\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{3,0,1,2\},\{3,0,2,1\},\{0,0,0,0\},\{3,1,2,0\},\n    \{2,1,0,3\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{3,1,0,2\},\{0,0,0,0\},\{3,2,0,1\},\{3,2,1,0\}\n\};\n    int perm\[512] = \{\n        151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,\n        8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,\n        35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,\n        134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,\n        55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208, 89,\n        18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,\n        250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,\n        189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,\n        172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,\n        228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,\n        107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,\n        138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180,\n\n        151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,\n        8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,\n        35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,\n        134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,\n        55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208, 89,\n        18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,\n        250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,\n        189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,\n        172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,\n        228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,\n        107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,\n        138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180\n    \};\n  int grad4\[32]\[4]= \{\n    \{0,1,1,1\},  \{0,1,1,-1\},  \{0,1,-1,1\},  \{0,1,-1,-1\},\n    \{0,-1,1,1\}, \{0,-1,1,-1\}, \{0,-1,-1,1\}, \{0,-1,-1,-1\},\n    \{1,0,1,1\},  \{1,0,1,-1\},  \{1,0,-1,1\},  \{1,0,-1,-1\},\n    \{-1,0,1,1\}, \{-1,0,1,-1\}, \{-1,0,-1,1\}, \{-1,0,-1,-1\},\n    \{1,1,0,1\},  \{1,1,0,-1\},  \{1,-1,0,1\},  \{1,-1,0,-1\},\n    \{-1,1,0,1\}, \{-1,1,0,-1\}, \{-1,-1,0,1\}, \{-1,-1,0,-1\},\n    \{1,1,1,0\},  \{1,1,-1,0\},  \{1,-1,1,0\},  \{1,-1,-1,0\},\n    \{-1,1,1,0\}, \{-1,1,-1,0\}, \{-1,-1,1,0\}, \{-1,-1,-1,0\}\n  \};\n    float F4 = (sqrt(5.0f)-1.0)/4.0;\n    float G4 = (5.0-sqrt(5.0f))/20.0;\n    float n0, n1, n2, n3, n4;\n    float s = (x + y + z + w) * F4;\n    int i = fastfloor(x + s);\n    int j = fastfloor(y + s);\n    int k = fastfloor(z + s);\n    int l = fastfloor(w + s);\n    float t = (i + j + k + l) * G4;\n    float X0 = i - t;\n    float Y0 = j - t;\n    float Z0 = k - t;\n    float W0 = l - t;\n\n    float x0 = x - X0;\n    float y0 = y - Y0;\n    float z0 = z - Z0;\n    float w0 = w - W0;\n    int c1 = (x0 > y0) ? 32 : 0;\n    int c2 = (x0 > z0) ? 16 : 0;\n    int c3 = (y0 > z0) ? 8 : 0;\n    int c4 = (x0 > w0) ? 4 : 0;\n    int c5 = (y0 > w0) ? 2 : 0;\n    int c6 = (z0 > w0) ? 1 : 0;\n    int c = c1 + c2 + c3 + c4 + c5 + c6;\n\n    int i1, j1, k1, l1;\n    int i2, j2, k2, l2;\n    int i3, j3, k3, l3;\n    i1 = simplex\[c]\[0]>=3 ? 1 : 0;\n    j1 = simplex\[c]\[1]>=3 ? 1 : 0;\n    k1 = simplex\[c]\[2]>=3 ? 1 : 0;\n    l1 = simplex\[c]\[3]>=3 ? 1 : 0;\n    i2 = simplex\[c]\[0]>=2 ? 1 : 0;\n    j2 = simplex\[c]\[1]>=2 ? 1 : 0;\n    k2 = simplex\[c]\[2]>=2 ? 1 : 0;\n    l2 = simplex\[c]\[3]>=2 ? 1 : 0;\n    i3 = simplex\[c]\[0]>=1 ? 1 : 0;\n    j3 = simplex\[c]\[1]>=1 ? 1 : 0;\n    k3 = simplex\[c]\[2]>=1 ? 1 : 0;\n    l3 = simplex\[c]\[3]>=1 ? 1 : 0;\n    float x1 = x0 - i1 + G4;\n    float y1 = y0 - j1 + G4;\n    float z1 = z0 - k1 + G4;\n    float w1 = w0 - l1 + G4;\n    float x2 = x0 - i2 + 2.0*G4;\n    float y2 = y0 - j2 + 2.0*G4;\n    float z2 = z0 - k2 + 2.0*G4;\n    float w2 = w0 - l2 + 2.0*G4;\n    float x3 = x0 - i3 + 3.0*G4;\n    float y3 = y0 - j3 + 3.0*G4;\n    float z3 = z0 - k3 + 3.0*G4;\n    float w3 = w0 - l3 + 3.0*G4;\n    float x4 = x0 - 1.0 + 4.0*G4;\n    float y4 = y0 - 1.0 + 4.0*G4;\n    float z4 = z0 - 1.0 + 4.0*G4;\n    float w4 = w0 - 1.0 + 4.0*G4;\n    int ii = i & 255;\n    int jj = j & 255;\n    int kk = k & 255;\n    int ll = l & 255;\n    int gi0 = perm\[ii+perm\[jj+perm\[kk+perm\[ll]]]] % 32;\n    int gi1 = perm\[ii+i1+perm\[jj+j1+perm\[kk+k1+perm\[ll+l1]]]] % 32;\n    int gi2 = perm\[ii+i2+perm\[jj+j2+perm\[kk+k2+perm\[ll+l2]]]] % 32;\n    int gi3 = perm\[ii+i3+perm\[jj+j3+perm\[kk+k3+perm\[ll+l3]]]] % 32;\n    int gi4 = perm\[ii+1+perm\[jj+1+perm\[kk+1+perm\[ll+1]]]] % 32;\n    float t0 = 0.6 - x0*x0 - y0*y0 - z0*z0 - w0*w0;\n    if(t0<0) n0 = 0.0;\n    else \{\n        t0 *= t0;\n        n0 = t0 * t0 * dot(float4(grad4\[gi0]\[0],grad4\[gi0]\[2],grad4\[gi0]\[3],grad4\[gi0]\[3]), float4(x0, y0, z0, w0));\n    \}\n    float t1 = 0.6 - x1*x1 - y1*y1 - z1*z1 - w1*w1;\n    if(t1<0) n1 = 0.0;\n    else \{\n        t1 *= t1;\n        n1 = t1 * t1 * dot(float4(grad4\[gi1]\[0],grad4\[gi1]\[2],grad4\[gi1]\[3],grad4\[gi1]\[3]), float4(x1, y1, z1, w1));\n    \}\n    float t2 = 0.6 - x2*x2 - y2*y2 - z2*z2 - w2*w2;\n    if(t2<0) n2 = 0.0;\n    else \{\n        t2 *= t2;\n        n2 = t2 * t2 * dot(float4(grad4\[gi2]\[0],grad4\[gi2]\[2],grad4\[gi2]\[3],grad4\[gi2]\[3]), float4(x2, y2, z2, w2));\n    \}\n    float t3 = 0.6 - x3*x3 - y3*y3 - z3*z3 - w3*w3;\n    if(t3<0) n3 = 0.0;\n    else \{\n        t3 *= t3;\n        n3 = t3 * t3 * dot(float4(grad4\[gi3]\[0],grad4\[gi3]\[2],grad4\[gi3]\[3],grad4\[gi3]\[3]), float4(x3, y3, z3, w3));\n    \}\n    float t4 = 0.6 - x4*x4 - y4*y4 - z4*z4 - w4*w4;\n    if(t4<0) n4 = 0.0;\n    else \{\n        t4 *= t4;\n        n4 = t4 * t4 * dot(float4(grad4\[gi4]\[0],grad4\[gi4]\[2],grad4\[gi4]\[3],grad4\[gi4]\[3]), float4(x4, y4, z4, w4));\n    \}\n    return 27.0 * (n0 + n1 + n2 + n3 + n4);\n\}\ninline float octave_noise_4d( const float octaves, const float persistence, const float scale, const float x, const float y, const float z, const float w, const float lacunarity=2 ) \n\{\n    float total = 0;\n    float frequency = scale;\n    float amplitude = 1;\n    float maxAmplitude = 0;\n    for( int i=0; i < octaves; i++ ) \{\n        total += (float)raw_noise_4d( x * frequency, y * frequency, z * frequency, w * frequency ) * amplitude;\n\n        frequency *= lacunarity;\n        maxAmplitude += amplitude;\n        amplitude *= persistence;\n    \}\n    return float(total / maxAmplitude);\n\}\n\nkernel aPMatteKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> p;\n  Image<eWrite> dst;\n\n  param:\n    float3 picked; //Center, or white for ramps\n    float3 pickedB; //Black for ramps\n    int rotOrder; //0=XYZ,1=XZY,2=YXZ,3=YZX,4=ZXY,5=ZYX\n    float3 translate;\n    float3 rotate;\n    float3 scale;\n    float radius;\n    int shape; //0=sphere,1=cusped box,2=rounded box,3=ramp, 4=rad.ramp\n    int invert_shape;\n    int use_alpha;\n    int falloff; //0=linear,1=smooth,2=square,3=inv.square\n    float hardness;\n\n    // Noise parameters here\n    int use_noise; //0=off,1=overlay,2=noise only\n    int noise_relative;\n    int noise_octaves;\n    float noise_persistence;\n    float noise_lacunarity;\n    float noise_scale;\n    float noise_offset;\n    float noise_add;\n    float noise_gain;\n    float noise_gamma;\n    float noise_mix;\n\n  void define() \{\n    defineParam(rotOrder, \"rotation order\", 4);\n    defineParam(scale, \"scale\", float3(1.0f,1.0f,1.0f));\n    defineParam(radius, \"radius\", 1.0f);\n    defineParam(falloff, \"falloff\", 1);\n    defineParam(use_noise, \"use noise\", 0);\n    defineParam(noise_octaves, \"noise octaves\", 8);\n    defineParam(noise_persistence, \"noise persistence\",  0.5f);\n    defineParam(noise_lacunarity, \"lacunarity\",  2.0f);\n    defineParam(noise_scale, \"noise scale\", 0.01f);\n  \}\n\n  inline float rad(float deg)\{ \n    return deg*PI/180;\n  \}\n\n  inline float smoothstep(float edge0, float edge1, float x)\{\n    x = clamp((x - edge0)/(edge1 - edge0), 0.0f, 1.0f);\n    return x*x*x*(x*(x*6-15)+10);\n  \}\n\n  inline float cl(float val)\{\n  return clamp(val,0.0f,1.0f); \n  \}\n\n  float3 rotX(float3 vec, float rot)\{\n    if(rot==0.0f)\{\n      return vec;\n    \} else \{\n      float3 vecOut;\n      vecOut.y = vec.y*cos(rad(rot)) - vec.z*sin(rad(rot));\n      vecOut.z = vec.y*sin(rad(rot)) + vec.z*cos(rad(rot));\n      vecOut.x = vec.x;\n      return float3(vecOut.x,vecOut.y,vecOut.z);\n    \}\n  \}\n\n  float3 rotY(float3 vec, float rot)\{\n    if(rot==0.0f)\{\n      return vec;\n    \} else \{\n      float3 vecOut;\n      vecOut.z = vec.z*cos(rad(rot)) - vec.x*sin(rad(rot));\n      vecOut.x = vec.z*sin(rad(rot)) + vec.x*cos(rad(rot));\n      vecOut.y = vec.y;\n      return float3(vecOut.x,vecOut.y,vecOut.z);\n    \}\n  \}\n\n  float3 rotZ(float3 vec, float rot)\{\n    if(rot==0.0f)\{\n      return vec;\n    \} else \{\n      float3 vecOut;\n      vecOut.x = vec.x*cos(rad(rot)) - vec.y*sin(rad(rot));\n      vecOut.y = vec.x*sin(rad(rot)) + vec.y*cos(rad(rot));\n      vecOut.z = vec.z;\n      return float3(vecOut.x,vecOut.y,vecOut.z);\n    \}\n  \}\n\n  void process() \{\n    //1. P WORLD\n    // Center the coordinates\n    float3 color = float3(p(0)-picked.x,p(1)-picked.y,p(2)-picked.z);\n    int black = 0;\n\n    // Translate\n    color -= translate;\n\n    // Rotate\n    if (rotOrder<=0) color = rotZ(rotY(rotX(color,rotate.x),rotate.y),rotate.z);\n    else if (rotOrder==1) color = rotY(rotZ(rotX(color,rotate.x),rotate.z),rotate.y);\n    else if (rotOrder==2) color = rotZ(rotX(rotY(color,rotate.y),rotate.x),rotate.z);\n    else if (rotOrder==3) color = rotX(rotZ(rotY(color,rotate.y),rotate.z),rotate.x);\n    else if (rotOrder==4) color = rotY(rotX(rotZ(color,rotate.z),rotate.x),rotate.y);\n    else if (rotOrder>=5) color = rotX(rotY(rotZ(color,rotate.z),rotate.y),rotate.x);\n\n    // Scale\n    if (scale.x!=0 && scale.y!=0 && scale.z!=0) \{\n      color *= float3(1/scale.x, 1/scale.y, 1/scale.z);\n    \} else \{\n      dst() = 0.0f;\n      return;\n    \}\n\n    //2. SHAPES\n    float dist;\n    float result;\n\n    if(shape==0)\{//Sphere\n      dist = sqrt(pow(color\[0],2) + pow(color\[1],2) + pow(color\[2],2));\n      result = radius==0.0f? 0:cl(1-dist/radius);\n    \} else if(shape==1)\{//Cusped Box\n      result = min( min( cl((radius-fabs(color.x))/radius) , cl((radius-fabs(color.y))/radius)) , cl((radius-fabs(color.z))/radius)) ;\n      result = hardness>=1? float(result>0) : result;\n    \} else if(shape==2)\{//Rounded Box\n      result = radius==0.0f? 0: smoothstep(0,1-hardness, cl(1-fabs(float(color.x)/radius)) ) * smoothstep(0,1-hardness, cl(1-fabs(float(color.y)/radius)) ) * smoothstep(0,1-hardness, cl(1-fabs(float(color.z)/radius)) );\n      result = hardness>=1? float(result>0) : result;\n    \} else if(shape==3)\{//Linear Ramp\n      dist = sqrt(pow(color\[0],2) + pow(color\[1],2) + pow(color\[2],2));\n      float distB = sqrt(pow(color\[0]-(pickedB.x-picked.x),2) + pow(color\[1]-(pickedB.y-picked.y),2) + pow(color\[2]-(pickedB.z-picked.z),2));\n      float distWB = sqrt(pow(pickedB.x-picked.x,2) + pow(pickedB.y-picked.y,2) + pow(pickedB.z-picked.z,2));\n      float angWB = acos( clamp((pow(dist,2)-pow(distB,2)+pow(distWB,2))/(2*dist*distWB),-1.0f,1.0f) );\n      float cosAngWB = dist==0.0f? 0:cos(angWB);\n      result = distWB==0? 0.0f: cl((dist * cosAngWB) / distWB );\n      result = 1-result;\n    \} else if(shape==4)\{//Radial Ramp\n      dist = sqrt(pow(color\[0],2) + pow(color\[1],2) + pow(color\[2],2));\n      float distB = sqrt(pow(color\[0]-(pickedB.x-picked.x),2) + pow(color\[1]-(pickedB.y-picked.y),2) + pow(color\[2]-(pickedB.z-picked.z),2));\n      float distWB = sqrt(pow(pickedB.x-picked.x,2) + pow(pickedB.y-picked.y,2) + pow(pickedB.z-picked.z,2));\n      result = distWB==0? 0.0f: cl((dist) / distWB );\n      result = 1-result;\n    \}\n    result = invert_shape? 1-result:result;\n\n    //3. FALLOFF\n    if(falloff==0)\{//Linear\n      result = hardness>=1? float(result>0) : cl(result/(1-hardness));\n    \}else if(falloff==1)\{//Smooth\n      result = hardness>=1? float(result>0) : smoothstep(0,1-hardness,result);\n    \}else if(falloff==2)\{//Quadratic\n      result = hardness>=1? float(result>0) : cl(pow(float(result/(1-hardness)),2));\n    \}else if(falloff==3)\{//Cubic\n      result = hardness>=1? float(result>0) : cl(pow(float(result/(1-hardness)),3));\n    \}else if(falloff==4)\{//Inv. Cubic\n      result = hardness>=1? float(result>0) : 1-cl(pow(float(cl(1-(result/(1-hardness)))),3));\n    \}\n\n    //4. GENERATE NOISE\n    float noise;\n    if(use_noise!=0)\{//Avoid calculations if possible\n      if(noise_relative!=1)\{\n        noise = (float)octave_noise_4d(float(noise_octaves),noise_persistence,noise_scale==0?10000.0f:1/noise_scale,p(0),p(1),p(2),noise_offset,noise_lacunarity);\n      \}else\{\n        noise = (float)octave_noise_4d(float(noise_octaves),noise_persistence,noise_scale==0?10000.0f:1/noise_scale,color\[0],color\[1],color\[2],noise_offset,noise_lacunarity);\n      \}\n      noise = cl(pow(max((noise+noise_add)*noise_gain,0.0f),noise_gamma==0?1:1/noise_gamma));\n    \}\n\n\n    //5. ALPHA MASK AND APPLY NOISE\n    result = max(result,0.0f); //Clamp negative values\n    if(use_noise==1)\{//Overlay\n      result = result<0.5f? noise_mix*(2*noise*result)+(1-noise_mix)*result : noise_mix*(1-2*(1-result)*(1-noise))+(1-noise_mix)*result;\n    \}else if(use_noise>=2)\{\n      result = noise*noise_mix;\n    \}\n\n    if(use_alpha > 0) result=result*p(3);\n\n    //6. WE'RE DONE\n    dst() = result;\n  \}\n\};"
rebuild ""
aPMatteKernel_picked {{picker.r} {picker.g} {picker.b}}
aPMatteKernel_pickedB {{black_point} {black_point} {black_point}}
"aPMatteKernel_rotation order" {{parent.rotation_order}}
aPMatteKernel_translate {{parent.translate} {parent.translate} {parent.translate}}
aPMatteKernel_rotate {{parent.rotate} {parent.rotate} {parent.rotate}}
aPMatteKernel_scale {{parent.scale} {parent.scale} {parent.scale}}
aPMatteKernel_radius {{parent.radius}}
aPMatteKernel_shape {{parent.shape}}
aPMatteKernel_invert_shape {{parent.invert}}
aPMatteKernel_use_alpha {{parent.alpha_masking}}
aPMatteKernel_falloff {{parent.falloff}}
aPMatteKernel_hardness {{parent.hardness}}
"aPMatteKernel_use noise" {{parent.noise}}
aPMatteKernel_noise_relative {{parent.noise_rel}}
"aPMatteKernel_noise octaves" {{parent.noise_octaves}}
"aPMatteKernel_noise persistence" {{parent.noise_persistance}}
aPMatteKernel_lacunarity {{parent.noise_lacunarity}}
"aPMatteKernel_noise scale" {{parent.noise_size}}
aPMatteKernel_noise_offset {{parent.noise_offset}}
aPMatteKernel_noise_add {{parent.noise_add}}
aPMatteKernel_noise_gain {{parent.noise_gain}}
aPMatteKernel_noise_gamma {{parent.noise_gamma}}
aPMatteKernel_noise_mix {{parent.noise_mix}}
rebuild_finalise ""
name BlinkScriptPMatte
xpos -418
ypos 523
addUserKnob {20 User}
addUserKnob {6 black_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 picker}
picker {2000 0 1000}
addUserKnob {6 picker_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 picker_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 black_point l black}
black_point {0 0 0}
addUserKnob {6 black_point_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 black_point_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
push $N346bab00
ShuffleCopy {
inputs 2
red red
green green
blue blue
name ShuffleCopyOut
xpos -528
ypos 527
}
Output {
name Output
xpos -528
ypos 566
}
end_group
Blur {
size {0 200}
name Blur1
xpos -1580
ypos -8
}
Dot {
name Dot205
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -1546
ypos 80
}
Multiply {
value {{mix_1}}
name Multiply5
xpos -1580
ypos 140
addUserKnob {20 User}
addUserKnob {7 mix_1 l mix}
mix_1 0.3275
}
ChannelMerge {
inputs 2
operation stencil
name ChannelMerge8
xpos -1580
ypos 182
disable {{Merge3.disable x1118 1}}
}
Dot {
name Dot7
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -1624
ypos 234
}
Dot {
name Dot8
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -1952
ypos 234
}
set N3469c800 [stack 0]
Dot {
name Dot9
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -2016
ypos 234
}
Dot {
name Dot10
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -2016
ypos 803
}
Input {
inputs 0
name Water
xpos -920
ypos -298
number 1
}
Dot {
name Dot56
tile_color 0x949494ff
label water
note_font_color 0xffffffff
xpos -886
ypos -246
}
Dot {
name Dot57
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -886
ypos 306
}
set N34676400 [stack 0]
Dot {
name Dot214
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -1000
ypos 434
}
set N34675d00 [stack 0]
Dot {
name Dot215
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -1616
ypos 318
}
push $N3469c800
ChannelMerge {
inputs 2
operation in
name ChannelMerge1
xpos -2001
ypos 397
}
Dot {
name Dot72
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -1952
ypos 588
}
Input {
inputs 0
name Sky
xpos -590
ypos -274
number 2
}
Dot {
name Dot3
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -556
ypos -174
}
Dot {
name Dot5
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -556
ypos 142
}
Dot {
name Dot207
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -1146
ypos 199
}
set N3465ab00 [stack 0]
Dot {
name Dot48
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -1546
ypos 258
}
set N3465a400 [stack 0]
push $N3465a400
Grade {
multiply 0.76
name Grade1
xpos -1690
ypos 421
}
push $N3465a400
Keymix {
inputs 3
maskChannel clouds.alpha
name Keymix1
xpos -1579
ypos 472
}
set N34642400 [stack 0]
Blur {
channels rgb
size {75 150}
filter quadratic
quality 5
name _Blur_atmos_
xpos -1580
ypos 533
}
Multiply {
inputs 1+1
channels rgb
value 0
invert_mask true
name Multiply2
xpos -1580
ypos 584
}
Dot {
name Dot204
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -1546
ypos 933
}
set N34640800 [stack 0]
Dot {
name Dot41
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -2054
ypos 933
}
Dot {
name Dot54
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -2054
ypos 1287
}
push $N34675d00
push $N346bb900
ChannelMerge {
inputs 2
operation in
name ChannelMerge2
xpos -1086
ypos 548
}
Transform {
translate {0 {moveHoriz}}
center {2306 1622}
shutteroffset centred
name Transform1
xpos -1086
ypos 618
addUserKnob {20 User}
addUserKnob {7 moveHoriz l "move horizon" R -20 20}
moveHoriz 5.8
}
push $N3465ab00
push $N3465ab00
Grade {
channels cloudSeprarted
gamma 4
white_clamp true
name GradeAlpha
xpos -1314
ypos 245
}
Grade {
multiply 6
gamma 2
name GradeHoriz
xpos -1314
ypos 301
}
push $N3465ab00
Keymix {
inputs 3
maskChannel cloudSeprarted.red
name Keymix2
xpos -1255
ypos 373
}
Grade {
multiply 0.66
maskChannelInput {{{parent.Keymix2.maskChannel}}}
invert_mask true
name GradeWater
xpos -1255
ypos 423
}
Blur {
channels rgb
size {1 25}
filter box
quality 5
maskChannelInput -cloudSeprarted.red
name _BlurTight_
xpos -1250
ypos 480
}
Multiply {
inputs 1+1
value 0
invert_mask true
name Multiply4
xpos -1250
ypos 598
}
Dot {
name Dot49
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -1216
ypos 669
}
set N343edd00 [stack 0]
Dot {
name Dot55
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -2054
ypos 681
}
Dot {
name Dot77
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -2054
ypos 1191
}
push $N34d25600
Dot {
name Dot12
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -73
ypos -150
}
Dot {
name Dot11
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -56
ypos 1266
}
push $N343edd00
push $N34d25600
Dot {
name Dot69
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -336
ypos 234
}
Merge2 {
inputs 2
name Merge3
xpos -370
ypos 665
}
set N343c3200 [stack 0]
Dot {
name Dot1
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -116
ypos 669
}
Dot {
name Dot2
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -116
ypos 1179
}
push $N34676400
Dot {
name Dot40
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -226
ypos 282
}
Dot {
name Dot6
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -226
ypos 799
}
Dot {
name Dot203
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -226
ypos 931
}
set N343c0f00 [stack 0]
push $N343c0f00
push $N34640800
Grade {
name Grade2
xpos -949
ypos 929
disable true
}
push $N343c3200
Merge2 {
inputs 2+1
operation plus
bbox B
Achannels {rgba.red rgba.green rgba.blue -rgba.alpha}
Bchannels {rgba.red rgba.green rgba.blue -rgba.alpha}
output {rgba.red rgba.green rgba.blue -rgba.alpha}
name __Merge8__
xpos -370
ypos 927
}
Copy {
inputs 2
from0 rgba.alpha
to0 mask.a
name Copy1
xpos -370
ypos 1006
}
EdgeBlur {
controlchannel mask.a
size {1.5 4.5}
name EdgeBlur1
xpos -378
ypos 1066
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy4
xpos -370
ypos 1169
}
CopyBBox {
inputs 2
name CopyBBox1
xpos -368
ypos 1257
}
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 alpha
fromInput2 {{0} B}
mappings "1 white -1 -1 rgba.alpha 0 0"
name Shuffle2
label "\[value in1]"
xpos -370
ypos 1375
disable true
}
Switch {
inputs 3
which {{mode}}
name Switch6
xpos -370
ypos 1429
addUserKnob {20 User}
addUserKnob {4 mode M {output "set sky over water" "set atmos on water"}}
}
Dot {
name DotOUT
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -336
ypos 1457
}
Output {
name Output1
xpos -370
ypos 1549
}
push $N34642400
Viewer {
frame_range 1001-1237
fps 25
gamma 0.185
viewerProcess "sRGB (ACES)"
name Viewer1
xpos 405
ypos 527
}
end_group
Copy {
inputs 2
from0 rgba.alpha
to0 mask.a
name Copy6
selected true
xpos 11710
ypos -12102
}
Dot {
name Dot306
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11744
ypos -12064
}
Dot {
name Dot307
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11744
ypos -11804
}
Grade {
multiply 2.5
name GradeExposure1
selected true
xpos 11711
ypos -11684
disable true
}
Multiply {
channels rgb
value {1.100000024 1.057692051 1.057692051 1.100000024}
name GradeOffset1
selected true
xpos 11711
ypos -11612
}
Dot {
name Dot308
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11745
ypos -11519
}
Group {
name Reformat_Overscan2
selected true
xpos 11711
ypos -11307
addUserKnob {20 User l Reformat_Overscan}
addUserKnob {41 format l "output format" T ReformatMASTER.format}
addUserKnob {41 filter T ReformatOverscanMASTER.filter}
addUserKnob {41 overscanPercent T ReformatOverscanMASTER.overscanPercent}
addUserKnob {20 info}
addUserKnob {26 version l ver: T "v1 rafal 10/02/2020"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust4
tile_color 0xaaaaaaff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 42
xpos -987
ypos -496
bdwidth 280
bdheight 332
z_order -92960
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "Flat plate res"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Black
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
Input {
inputs 0
name Input1
xpos -884
ypos -382
}
Reformat {
format {{{parent.parent.Reformat_OverscanMASTER.ReformatMASTER.format}}}
pbb true
name ReformatMASTER
xpos -884
ypos -342
}
Reformat {
type scale
scale {{overscanPercent==0?1:1-(1/overscanPercent)}}
resize none
filter impulse
pbb true
name ReformatOverscanMASTER
xpos -884
ypos -288
addUserKnob {20 User l percent}
addUserKnob {7 overscanPercent R 0 80}
overscanPercent {{parent.parent.Reformat_OverscanMASTER.ReformatOverscanMASTER.overscanPercent}}
}
Crop {
box {{-ceil(((input.height*((1-ReformatOverscanMASTER.scale)))*0.5))} {-ceil(((input.width*((1-ReformatOverscanMASTER.scale)))*0.5))} {ceil(input.width+((input.width*(1-ReformatOverscanMASTER.scale))*0.5))} {ceil(input.height+((input.height*(1-ReformatOverscanMASTER.scale))*0.5))}}
name CropOverscanMASTER
xpos -884
ypos -244
addUserKnob {20 User}
}
set N34327900 [stack 0]
Output {
name Output1
xpos -884
ypos -144
}
push $N34327900
Viewer {
frame_range 994-1161
fps 25
viewerProcess "sRGB (ACES)"
name Viewer1
xpos -624
ypos -303
}
end_group
Dot {
name Dot309
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11745
ypos -11235
}
Dot {
name Dot392
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11745
ypos -10748
}
set N34325d00 [stack 0]
Dot {
name Dot23
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11844
ypos -10748
}
Dot {
name Dot7
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11844
ypos -10342
}
push $N359c8800
Dot {
name Dot393
tile_color 0x949494ff
label "diMatte "
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11084
ypos -11229
}
Dot {
name Dot395
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11483
ypos -11229
}
Dot {
name Dot390
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11483
ypos -10722
}
set N344eb900 [stack 0]
Dot {
name Dot394
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11568
ypos -10722
}
Dot {
name Dot388
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11568
ypos -10637
}
set N344eab00 [stack 0]
Dot {
name Dot389
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11632
ypos -10637
}
push $N344eb900
Group {
name key_chew1
help "======== KeyChew beta ========\n=============================\n\nThis is a port of the KeyChew macro for Shake to Nuke.\n\nThere might be tiny differences on the results given in both apps. Some of them are caused by the internal algorithms of each app, and others by the way I faked the JSplineV\nexpression of Shake in Nuke. If you know a better way to solve this, let\nme know!!\n\n=============================\n             2009 Cuco Bures\n============================="
selected true
xpos 11449
ypos -10675
addUserKnob {20 Controls}
addUserKnob {7 chew t "\t\t" R -200 200}
chew 50
addUserKnob {7 soften R 0 200}
soften 200
addUserKnob {6 matteMult +STARTLINE}
}
Input {
inputs 0
name Input
xpos -40
ypos -9
}
set N344e9600 [stack 0]
Dot {
name Dot1
xpos 324
ypos -6
}
set N344e8f00 [stack 0]
push $N344e8f00
Invert {
name Invert1
xpos 176
ypos 33
}
push $N344e8f00
Switch {
inputs 2
which {{"\[value chew]>=0?0:1"}}
name Switch1
xpos 180
ypos 87
}
Blur {
size {{"(floor(abs(\[value chew]))/4)+(floor(abs(\[value chew]))/8)"}}
name FgEdgeBlur
xpos 180
ypos 129
}
Grade {
channels alpha
multiply {1 1 1 {max(FgEdgeBlur.size*1.5,1)}}
black_clamp false
name FgEdgeMult
xpos 180
ypos 177
}
Grade {
channels alpha
gamma {1 1 1 {JSplineVFake(floor(abs(chew)))}}
name FgEdgeGamma1
xpos 180
ypos 225
addUserKnob {20 User}
addUserKnob {7 JSplineVFake}
JSplineVFake {{curve l 0.9958 k x5 0.95 0.8 x20 0.5 x40 0.3 x80 0.2 l x200 0.1}}
}
set N344bf900 [stack 0]
Merge2 {
inputs 2
operation minus
name Merge1
xpos 290
ypos 231
}
push $N344bf900
Switch {
inputs 2
which {{"\[value chew]>=0?0:1"}}
name Switch2
xpos 180
ypos 279
}
Clamp {
name Clamp2
xpos 180
ypos 321
}
Blur {
size {{"(floor(abs(\[value soften]))/4)+(floor(abs(\[value soften]))/8)"}}
name BlurResult
xpos 180
ypos 441
}
push $N344e9600
ShuffleCopy {
inputs 2
name ShuffleCopy1
xpos -40
ypos 447
}
Premult {
name Premult1
xpos -40
ypos 495
disable {{"1-\[value matteMult]"}}
}
Output {
name Output1
xpos -40
ypos 567
}
end_group
set N344e9d00 [stack 0]
Invert {
channels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
clamp true
name Invert3
selected true
xpos 11449
ypos -10590
}
set N3448f200 [stack 0]
ChannelMerge {
inputs 2
A clouds.alpha
operation stencil
name ChannelMerge14
selected true
xpos 11598
ypos -10596
}
push $N344e9d00
push $N34325d00
Group {
inputs 2
name DI_Shuffle3
tile_color 0xa43f88ff
gl_color 0x1d1d1dff
label "\[value layer]\n\[value matteName]"
selected true
xpos 11711
ypos -10687
disable true
addUserKnob {20 User l DI_Shuffle}
addUserKnob {41 layer l "new layer " T master.layer}
addUserKnob {1 matteName l " matte name:" -STARTLINE}
matteName water
addUserKnob {41 DIChannelSource l "  from" T master.DIChannelSource}
addUserKnob {41 useRGBalpha l "  use RGB.alpha" -STARTLINE T master.useRGBalpha}
addUserKnob {26 txt l holdout}
addUserKnob {41 holdout l "holdout 1  |" T Copy1.holdout}
addUserKnob {41 holdout_1 l "holdout 2 |" -STARTLINE T Copy7.holdout}
addUserKnob {41 holdout_2 l "holdout 3  |" -STARTLINE T Copy8.holdout}
addUserKnob {41 holdout_3 l "holdout 4" -STARTLINE T Copy9.holdout}
addUserKnob {26 txt_1 l "matte from" T ""}
addUserKnob {41 selectHoldout l "" -STARTLINE T master.selectAlpha}
addUserKnob {41 from0 l " channel" -STARTLINE T Copy25.from0}
addUserKnob {26 txt_2 l " " T "The heldout input (A||B) is opposite of  'matte from' input ."}
addUserKnob {20 info}
addUserKnob {26 ver l ver: T 0.3}
addUserKnob {26 source l source: T "Rafs Kan. 13th Nov. 2019"}
addUserKnob {26 edit l edit: T " rafsKan 2019-19-11: add C&D\nrafsKan 2022/02/07: bug fixes"}
addUserKnob {7 UID_DI_Shuffle l UID +INVISIBLE}
UID_DI_Shuffle 1
}
Input {
inputs 0
name A
xpos 2714
ypos -356
number 1
}
Dot {
name Dot13
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2748
ypos -162
}
add_layer {DiMatte_1 DiMatte_1.red DiMatte_1.green DiMatte_1.blue DiMatte_1.alpha}
AddChannels {
channels DiMatte_1
name AddChannels5
xpos 2714
ypos -144
disable {{"!(\[numvalue master.layer]==0||\[numvalue master.layer]==1|\[numvalue master.layer]==2||\[numvalue master.layer]==3||\[numvalue master.layer]==16)"}}
}
add_layer {DiMatte_2 DiMatte_2.red DiMatte_2.green DiMatte_2.blue DiMatte_2.alpha}
AddChannels {
channels DiMatte_2
name AddChannels6
xpos 2714
ypos -106
disable {{"!(\[numvalue master.layer]==4||\[numvalue master.layer]==5|\[numvalue master.layer]==6||\[numvalue master.layer]==7||\[numvalue master.layer]==17)"}}
}
add_layer {DIMatte_3 DIMatte_3.red DIMatte_3.green DIMatte_3.blue DIMatte_C.alpha}
AddChannels {
channels DIMatte_3
name AddChannels7
xpos 2714
ypos -72
disable {{"!(\[numvalue master.layer]==8||\[numvalue master.layer]==9|\[numvalue master.layer]==10||\[numvalue master.layer]==11||\[numvalue master.layer]==18)"}}
}
AddChannels {
channels DIMatte_3
name AddChannels8
xpos 2714
ypos -36
disable {{"!(\[numvalue master.layer]==12||\[numvalue master.layer]==13|\[numvalue master.layer]==14||\[numvalue master.layer]==15||\[numvalue master.layer]==19)"}}
}
Dot {
name Dot3
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2748
ypos 2
}
set N34465600 [stack 0]
Input {
inputs 0
name B
xpos 3336
ypos -398
}
NoOp {
name master
label "\[value layer]\n\[numvalue master.layer]"
xpos 3336
ypos -319
addUserKnob {20 User}
addUserKnob {4 layer M {DiMatte_1.red DiMatte_1.green DiMatte_1.blue DiMatte_1.alpha DiMatte_2.red DiMatte_2.green DiMatte_2.blue DiMatte_2.alpha DiMatte_3.red DiMatte_3.green DiMatte_3.blue DiMatte_3.alpha DiMatte_4.red DiMatte_4.green DiMatte_4.blue DiMatte_4.alpha "none (holdout only)" "" "" "" "" "" "" "" "" "" ""}}
addUserKnob {6 useRGBalpha l "use RGB.alpha" -STARTLINE}
useRGBalpha true
addUserKnob {4 selectAlpha l "select alphaHoldout" M {"B input" "A input" ""}}
selectAlpha "A input"
addUserKnob {4 DIChannelSource l "DI ChannelSource" M {"A input" "B input" "Use constant" "" ""}}
}
AddChannels {
channels DiMatte_1
name AddChannels1
xpos 3907
ypos -156
disable {{"!(\[numvalue master.layer]==0||\[numvalue master.layer]==1|\[numvalue master.layer]==2||\[numvalue master.layer]==3||\[numvalue master.layer]==16)"}}
}
AddChannels {
channels DiMatte_2
name AddChannels2
xpos 3907
ypos -118
disable {{"!(\[numvalue master.layer]==4||\[numvalue master.layer]==5|\[numvalue master.layer]==6||\[numvalue master.layer]==7||\[numvalue master.layer]==17)"}}
}
AddChannels {
channels DIMatte_3
name AddChannels3
xpos 3907
ypos -84
disable {{"!(\[numvalue master.layer]==8||\[numvalue master.layer]==9|\[numvalue master.layer]==10||\[numvalue master.layer]==11||\[numvalue master.layer]==18)"}}
}
add_layer {DIMatte_D DIMatte_D.red DIMatte_D.green DIMatte_D.blue DIMatte_D.alpha}
AddChannels {
channels DIMatte_D
name AddChannels4
xpos 3907
ypos -48
disable {{"!(\[numvalue master.layer]==12||\[numvalue master.layer]==13|\[numvalue master.layer]==14||\[numvalue master.layer]==15||\[numvalue master.layer]==19)"}}
}
Dot {
name Dot4
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3946
ypos 44
}
set N34448800 [stack 0]
Switch {
inputs 2
which {{master.DIChannelSource==1?0:1}}
name Switch1
label DIChannelSource
xpos 2842
ypos 690
}
Shuffle {
red white
green white
blue white
alpha white
name Shuffle1
label "\[value in]"
xpos 3529
ypos 1496
disable {{master.DIChannelSource==2?0:1}}
}
Dot {
name Dot33
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3563
ypos 1599
}
set N3442b200 [stack 0]
Dot {
name Dot34
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3563
ypos 1858
}
set N3442ab00 [stack 0]
Dot {
name Dot35
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3563
ypos 2179
}
set N3442a400 [stack 0]
Dot {
name Dot36
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3563
ypos 2442
}
set N34429d00 [stack 0]
Dot {
name Dot37
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3558
ypos 2735
}
set N34429600 [stack 0]
Dot {
name Dot10
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3555
ypos 2814
}
set N34428f00 [stack 0]
Dot {
name Dot31
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3555
ypos 2907
}
set N34428800 [stack 0]
Dot {
name Dot32
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3550
ypos 2993
}
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DIMatte_D
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DIMatte_D.alpha 0 3 rgba.alpha 0 0 DIMatte_D.red 0 0 rgba.alpha 0 0 DIMatte_D.green 0 1 rgba.alpha 0 0 DIMatte_D.blue 0 2"
name Shuffle29
label "\[value in1]"
xpos 3605
ypos 2983
disable {{!useRGBalpha}}
}
push $N34428800
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DIMatte_3
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DIMatte_C.alpha 0 3 rgba.alpha 0 0 DIMatte_3.red 0 0 rgba.alpha 0 0 DIMatte_3.green 0 1 rgba.alpha 0 0 DIMatte_3.blue 0 2"
name Shuffle28
label "\[value in1]"
xpos 3608
ypos 2896
disable {{!useRGBalpha}}
}
push $N34428f00
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DiMatte_2
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DiMatte_2.alpha 0 3 rgba.alpha 0 0 DiMatte_2.red 0 0 rgba.alpha 0 0 DiMatte_2.green 0 1 rgba.alpha 0 0 DiMatte_2.blue 0 2"
name Shuffle27
label "\[value in1]"
xpos 3611
ypos 2808
disable {{!useRGBalpha}}
}
push $N34429600
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DiMatte_1
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DiMatte_1.alpha 0 3 rgba.alpha 0 0 DiMatte_1.red 0 0 rgba.alpha 0 0 DiMatte_1.green 0 1 rgba.alpha 0 0 DiMatte_1.blue 0 2"
name Shuffle26
label "\[value in1]"
xpos 3620
ypos 2728
disable {{!useRGBalpha}}
}
push $N34429d00
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DIMatte_D
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DIMatte_D.alpha 0 3 rgba.alpha 0 0 DIMatte_D.red 0 0 rgba.alpha 0 0 DIMatte_D.green 0 1 rgba.alpha 0 0 DIMatte_D.blue 0 2"
name Shuffle25
label "\[value in1]"
xpos 3615
ypos 2432
disable {{!useRGBalpha}}
}
Dot {
name Dot27
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3747
ypos 2438
}
set N34415600 [stack 0]
Dot {
name Dot28
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3743
ypos 2511
}
set N34414f00 [stack 0]
Dot {
name Dot29
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3743
ypos 2578
}
set N34414800 [stack 0]
Dot {
name Dot30
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3740
ypos 2641
}
push $N34414800
push $N34414f00
push $N34415600
push $N3442a400
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DIMatte_3
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DIMatte_C.alpha 0 3 rgba.alpha 0 0 DIMatte_3.red 0 0 rgba.alpha 0 0 DIMatte_3.green 0 1 rgba.alpha 0 0 DIMatte_3.blue 0 2"
name Shuffle24
label "\[value in1]"
xpos 3618
ypos 2170
disable {{!useRGBalpha}}
}
Dot {
name Dot23
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3749
ypos 2179
}
set N345e3200 [stack 0]
Dot {
name Dot24
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3749
ypos 2240
}
set N345e2b00 [stack 0]
Dot {
name Dot25
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3749
ypos 2309
}
set N345e2400 [stack 0]
Dot {
name Dot26
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3749
ypos 2374
}
push $N345e2400
push $N345e2b00
push $N345e3200
push $N3442ab00
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DiMatte_2
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DiMatte_2.alpha 0 3 rgba.alpha 0 0 DiMatte_2.red 0 0 rgba.alpha 0 0 DiMatte_2.green 0 1 rgba.alpha 0 0 DiMatte_2.blue 0 2"
name Shuffle23
label "\[value in1]"
xpos 3627
ypos 1850
disable {{!useRGBalpha}}
}
Dot {
name Dot19
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3759
ypos 1858
}
set N345e0f00 [stack 0]
Dot {
name Dot20
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3759
ypos 1931
}
set N345e0800 [stack 0]
Dot {
name Dot21
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3759
ypos 1998
}
set N345e0100 [stack 0]
Dot {
name Dot22
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3756
ypos 2061
}
push $N345e0100
push $N345e0800
push $N345e0f00
push $N3442b200
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DiMatte_1
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DiMatte_1.alpha 0 3 rgba.alpha 0 0 DiMatte_1.red 0 0 rgba.alpha 0 0 DiMatte_1.green 0 1 rgba.alpha 0 0 DiMatte_1.blue 0 2"
name Shuffle22
label "\[value in1]"
xpos 3630
ypos 1589
disable {{!useRGBalpha}}
}
Dot {
name Dot15
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3760
ypos 1599
}
set N345c2b00 [stack 0]
Dot {
name Dot16
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3760
ypos 1660
}
set N345c2400 [stack 0]
Dot {
name Dot17
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3760
ypos 1729
}
set N345c1d00 [stack 0]
Dot {
name Dot18
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3760
ypos 1794
}
push $N345c1d00
push $N345c2400
push $N345c2b00
push $N34448800
push $N34465600
Dot {
name Dot38
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2492
ypos 2
}
Switch {
inputs 2
which {{master.selectAlpha==1?0:1}}
name Switch3
label "hold out"
xpos 2422
ypos 600
}
set N345c0800 [stack 0]
push $N345c0800
Copy {
inputs 2
to0 rgba.alpha
name Copy25
xpos 2422
ypos 660
}
Clamp {
name Clamp1
xpos 2422
ypos 724
}
Dot {
name Dot12
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2610
ypos 905
}
push $N34465600
push $N34448800
Switch {
inputs 2
which {{master.selectAlpha==1?0:1}}
name Switch2
label "hold out"
xpos 2612
ypos 674
}
Dot {
name Dot7
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2646
ypos 862
}
Multiply {
inputs 1+1
value 0
name Multiply1
xpos 2612
ypos 952
}
Dot {
name Dot1
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3697
ypos 955
}
set N34597200 [stack 0]
Dot {
name Dot2
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3697
ypos 1053
}
set N34596b00 [stack 0]
Dot {
name Dot5
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3699
ypos 1155
}
set N34596400 [stack 0]
Dot {
name Dot6
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3699
ypos 1277
}
push $N34596400
push $N34596b00
push $N34597200
push $N34448800
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels DiMatte_1
name Copy1
label "hold out"
xpos 3912
ypos 933
disable {{!holdout}}
addUserKnob {20 User}
addUserKnob {6 holdout +STARTLINE}
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels DiMatte_2
name Copy7
label "hold out"
xpos 3912
ypos 1031
disable {{!holdout}}
addUserKnob {20 User}
addUserKnob {6 holdout +STARTLINE}
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels DIMatte_3
name Copy8
label "hold out"
xpos 3912
ypos 1133
disable {{!holdout}}
addUserKnob {20 User}
addUserKnob {6 holdout +STARTLINE}
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels DIMatte_D
name Copy9
label "hold out"
xpos 3914
ypos 1255
disable {{!holdout}}
addUserKnob {20 User}
addUserKnob {6 holdout +STARTLINE}
}
Dot {
name Dot14
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3948
ypos 1492
}
Copy {
inputs 2
from0 DiMatte_1.red
to0 DiMatte_1.red
name Copy5
xpos 3914
ypos 1589
disable {{"!(\[numvalue master.layer]==0)"}}
}
Copy {
inputs 2
from0 DiMatte_1.green
to0 DiMatte_1.green
name Copy10
xpos 3914
ypos 1650
disable {{"!(\[numvalue master.layer]==1)"}}
}
Copy {
inputs 2
from0 DiMatte_1.blue
to0 DiMatte_1.blue
name Copy11
xpos 3914
ypos 1719
disable {{"!(\[numvalue master.layer]==2)"}}
}
Copy {
inputs 2
from0 DiMatte_1.alpha
to0 DiMatte_1.alpha
name Copy12
xpos 3914
ypos 1784
disable {{"!(\[numvalue master.layer]==3)"}}
}
Copy {
inputs 2
from0 DiMatte_2.red
to0 DiMatte_2.red
name Copy13
xpos 3914
ypos 1848
disable {{"!(\[numvalue master.layer]==4)"}}
}
Copy {
inputs 2
from0 DiMatte_2.green
to0 DiMatte_2.green
name Copy14
xpos 3914
ypos 1921
disable {{"!(\[numvalue master.layer]==5)"}}
}
Copy {
inputs 2
from0 DiMatte_2.blue
to0 DiMatte_2.blue
name Copy15
xpos 3914
ypos 1988
disable {{"!(\[numvalue master.layer]==6)"}}
}
Copy {
inputs 2
from0 DiMatte_2.alpha
to0 DiMatte_2.alpha
name Copy16
xpos 3911
ypos 2051
disable {{"!(\[numvalue master.layer]==7)"}}
}
Copy {
inputs 2
from0 DIMatte_3.red
to0 DIMatte_3.red
name Copy3
xpos 3911
ypos 2169
disable {{"!(\[numvalue master.layer]==8)"}}
}
Copy {
inputs 2
from0 DIMatte_3.green
to0 DIMatte_3.green
name Copy17
xpos 3911
ypos 2230
disable {{"!(\[numvalue master.layer]==9)"}}
}
Copy {
inputs 2
from0 DIMatte_3.blue
to0 DIMatte_3.blue
name Copy18
xpos 3911
ypos 2299
disable {{"!(\[numvalue master.layer]==10)"}}
}
Copy {
inputs 2
from0 DIMatte_C.alpha
to0 DIMatte_C.alpha
name Copy19
xpos 3911
ypos 2364
disable {{"!(\[numvalue master.layer]==11)"}}
}
Copy {
inputs 2
from0 DIMatte_D.red
to0 DIMatte_D.red
name Copy20
xpos 3911
ypos 2428
disable {{"!(\[numvalue master.layer]==12)"}}
}
Copy {
inputs 2
from0 DIMatte_D.green
to0 DIMatte_D.green
name Copy21
xpos 3911
ypos 2501
disable {{"!(\[numvalue master.layer]==13)"}}
}
Copy {
inputs 2
from0 DIMatte_D.blue
to0 DIMatte_D.blue
name Copy22
xpos 3911
ypos 2568
disable {{"!(\[numvalue master.layer]==14)"}}
}
Copy {
inputs 2
from0 DIMatte_D.alpha
to0 DIMatte_D.alpha
name Copy23
xpos 3908
ypos 2631
disable {{"!(\[numvalue master.layer]==15)"}}
}
set N34524800 [stack 0]
Copy {
inputs 2
channels DiMatte_1
name Copy2
xpos 3782
ypos 2726
disable {{"!(\[numvalue master.layer]==16)"}}
}
Copy {
inputs 2
channels DIMatte_3
name Copy4
xpos 3782
ypos 2802
disable {{"!(\[numvalue master.layer]==17)"}}
}
Copy {
inputs 2
channels DiMatte_2
name Copy6
xpos 3782
ypos 2895
disable {{"!(\[numvalue master.layer]==18)"}}
}
Copy {
inputs 2
channels DIMatte_D
name Copy24
xpos 3782
ypos 2981
disable {{"!(\[numvalue master.layer]==19)"}}
}
push $N34524800
Output {
name Output1
xpos 3908
ypos 3145
}
end_group
Group {
inputs 2
name DI_Shuffle5
tile_color 0xa43f88ff
gl_color 0x1d1d1dff
label "\[value layer]\n\[value matteName]"
selected true
xpos 11711
ypos -10593
disable true
addUserKnob {20 User l DI_Shuffle}
addUserKnob {41 layer l "new layer " T master.layer}
addUserKnob {1 matteName l " matte name:" -STARTLINE}
matteName sky
addUserKnob {41 DIChannelSource l "  from" T master.DIChannelSource}
addUserKnob {41 useRGBalpha l "  use RGB.alpha" -STARTLINE T master.useRGBalpha}
addUserKnob {26 txt l holdout}
addUserKnob {41 holdout l "holdout 1  |" T Copy1.holdout}
addUserKnob {41 holdout_1 l "holdout 2 |" -STARTLINE T Copy7.holdout}
addUserKnob {41 holdout_2 l "holdout 3  |" -STARTLINE T Copy8.holdout}
addUserKnob {41 holdout_3 l "holdout 4" -STARTLINE T Copy9.holdout}
addUserKnob {26 txt_1 l "matte from" T ""}
addUserKnob {41 selectHoldout l "" -STARTLINE T master.selectAlpha}
addUserKnob {41 from0 l " channel" -STARTLINE T Copy25.from0}
addUserKnob {26 txt_2 l " " T "The heldout input (A||B) is opposite of  'matte from' input ."}
addUserKnob {20 info}
addUserKnob {26 ver l ver: T 0.3}
addUserKnob {26 source l source: T "Rafs Kan. 13th Nov. 2019"}
addUserKnob {26 edit l edit: T " rafsKan 2019-19-11: add C&D\nrafsKan 2022/02/07: bug fixes"}
addUserKnob {7 UID_DI_Shuffle l UID +INVISIBLE}
UID_DI_Shuffle 1
}
Input {
inputs 0
name A
xpos 2714
ypos -356
number 1
}
Dot {
name Dot13
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2748
ypos -162
}
AddChannels {
channels DiMatte_1
name AddChannels5
xpos 2714
ypos -144
disable {{"!(\[numvalue master.layer]==0||\[numvalue master.layer]==1|\[numvalue master.layer]==2||\[numvalue master.layer]==3||\[numvalue master.layer]==16)"}}
}
AddChannels {
channels DiMatte_2
name AddChannels6
xpos 2714
ypos -106
disable {{"!(\[numvalue master.layer]==4||\[numvalue master.layer]==5|\[numvalue master.layer]==6||\[numvalue master.layer]==7||\[numvalue master.layer]==17)"}}
}
AddChannels {
channels DIMatte_3
name AddChannels7
xpos 2714
ypos -72
disable {{"!(\[numvalue master.layer]==8||\[numvalue master.layer]==9|\[numvalue master.layer]==10||\[numvalue master.layer]==11||\[numvalue master.layer]==18)"}}
}
AddChannels {
channels DIMatte_3
name AddChannels8
xpos 2714
ypos -36
disable {{"!(\[numvalue master.layer]==12||\[numvalue master.layer]==13|\[numvalue master.layer]==14||\[numvalue master.layer]==15||\[numvalue master.layer]==19)"}}
}
Dot {
name Dot3
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2748
ypos 2
}
set N342a8f00 [stack 0]
Input {
inputs 0
name B
xpos 3336
ypos -398
}
NoOp {
name master
label "\[value layer]\n\[numvalue master.layer]"
xpos 3336
ypos -319
addUserKnob {20 User}
addUserKnob {4 layer M {DiMatte_1.red DiMatte_1.green DiMatte_1.blue DiMatte_1.alpha DiMatte_2.red DiMatte_2.green DiMatte_2.blue DiMatte_2.alpha DiMatte_3.red DiMatte_3.green DiMatte_3.blue DiMatte_3.alpha DiMatte_4.red DiMatte_4.green DiMatte_4.blue DiMatte_4.alpha "none (holdout only)" "" "" "" "" "" "" "" "" "" ""}}
layer DiMatte_1.green
addUserKnob {6 useRGBalpha l "use RGB.alpha" -STARTLINE}
useRGBalpha true
addUserKnob {4 selectAlpha l "select alphaHoldout" M {"B input" "A input" ""}}
addUserKnob {4 DIChannelSource l "DI ChannelSource" M {"A input" "B input" "Use constant" "" ""}}
}
AddChannels {
channels DiMatte_1
name AddChannels1
xpos 3907
ypos -156
disable {{"!(\[numvalue master.layer]==0||\[numvalue master.layer]==1|\[numvalue master.layer]==2||\[numvalue master.layer]==3||\[numvalue master.layer]==16)"}}
}
AddChannels {
channels DiMatte_2
name AddChannels2
xpos 3907
ypos -118
disable {{"!(\[numvalue master.layer]==4||\[numvalue master.layer]==5|\[numvalue master.layer]==6||\[numvalue master.layer]==7||\[numvalue master.layer]==17)"}}
}
AddChannels {
channels DIMatte_3
name AddChannels3
xpos 3907
ypos -84
disable {{"!(\[numvalue master.layer]==8||\[numvalue master.layer]==9|\[numvalue master.layer]==10||\[numvalue master.layer]==11||\[numvalue master.layer]==18)"}}
}
AddChannels {
channels DIMatte_D
name AddChannels4
xpos 3907
ypos -48
disable {{"!(\[numvalue master.layer]==12||\[numvalue master.layer]==13|\[numvalue master.layer]==14||\[numvalue master.layer]==15||\[numvalue master.layer]==19)"}}
}
Dot {
name Dot4
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3946
ypos 44
}
set N34294100 [stack 0]
Switch {
inputs 2
which {{master.DIChannelSource==1?0:1}}
name Switch1
label DIChannelSource
xpos 2842
ypos 690
}
Shuffle {
red white
green white
blue white
alpha white
name Shuffle1
label "\[value in]"
xpos 3529
ypos 1496
disable {{master.DIChannelSource==2?0:1}}
}
Dot {
name Dot33
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3563
ypos 1599
}
set N3427ab00 [stack 0]
Dot {
name Dot34
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3563
ypos 1858
}
set N3427a400 [stack 0]
Dot {
name Dot35
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3563
ypos 2179
}
set N34279d00 [stack 0]
Dot {
name Dot36
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3563
ypos 2442
}
set N34279600 [stack 0]
Dot {
name Dot37
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3558
ypos 2735
}
set N34278f00 [stack 0]
Dot {
name Dot10
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3555
ypos 2814
}
set N34278800 [stack 0]
Dot {
name Dot31
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3555
ypos 2907
}
set N34278100 [stack 0]
Dot {
name Dot32
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3550
ypos 2993
}
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DIMatte_D
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DIMatte_D.alpha 0 3 rgba.alpha 0 0 DIMatte_D.red 0 0 rgba.alpha 0 0 DIMatte_D.green 0 1 rgba.alpha 0 0 DIMatte_D.blue 0 2"
name Shuffle29
label "\[value in1]"
xpos 3605
ypos 2983
disable {{!useRGBalpha}}
}
push $N34278100
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DIMatte_3
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DIMatte_C.alpha 0 3 rgba.alpha 0 0 DIMatte_3.red 0 0 rgba.alpha 0 0 DIMatte_3.green 0 1 rgba.alpha 0 0 DIMatte_3.blue 0 2"
name Shuffle28
label "\[value in1]"
xpos 3608
ypos 2896
disable {{!useRGBalpha}}
}
push $N34278800
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DiMatte_2
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DiMatte_2.alpha 0 3 rgba.alpha 0 0 DiMatte_2.red 0 0 rgba.alpha 0 0 DiMatte_2.green 0 1 rgba.alpha 0 0 DiMatte_2.blue 0 2"
name Shuffle27
label "\[value in1]"
xpos 3611
ypos 2808
disable {{!useRGBalpha}}
}
push $N34278f00
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DiMatte_1
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DiMatte_1.alpha 0 3 rgba.alpha 0 0 DiMatte_1.red 0 0 rgba.alpha 0 0 DiMatte_1.green 0 1 rgba.alpha 0 0 DiMatte_1.blue 0 2"
name Shuffle26
label "\[value in1]"
xpos 3620
ypos 2728
disable {{!useRGBalpha}}
}
push $N34279600
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DIMatte_D
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DIMatte_D.alpha 0 3 rgba.alpha 0 0 DIMatte_D.red 0 0 rgba.alpha 0 0 DIMatte_D.green 0 1 rgba.alpha 0 0 DIMatte_D.blue 0 2"
name Shuffle25
label "\[value in1]"
xpos 3615
ypos 2432
disable {{!useRGBalpha}}
}
Dot {
name Dot27
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3747
ypos 2438
}
set N3425cf00 [stack 0]
Dot {
name Dot28
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3743
ypos 2511
}
set N3425c800 [stack 0]
Dot {
name Dot29
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3743
ypos 2578
}
set N3425c100 [stack 0]
Dot {
name Dot30
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3740
ypos 2641
}
push $N3425c100
push $N3425c800
push $N3425cf00
push $N34279d00
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DIMatte_3
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DIMatte_C.alpha 0 3 rgba.alpha 0 0 DIMatte_3.red 0 0 rgba.alpha 0 0 DIMatte_3.green 0 1 rgba.alpha 0 0 DIMatte_3.blue 0 2"
name Shuffle24
label "\[value in1]"
xpos 3618
ypos 2170
disable {{!useRGBalpha}}
}
Dot {
name Dot23
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3749
ypos 2179
}
set N34232b00 [stack 0]
Dot {
name Dot24
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3749
ypos 2240
}
set N34232400 [stack 0]
Dot {
name Dot25
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3749
ypos 2309
}
set N34231d00 [stack 0]
Dot {
name Dot26
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3749
ypos 2374
}
push $N34231d00
push $N34232400
push $N34232b00
push $N3427a400
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DiMatte_2
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DiMatte_2.alpha 0 3 rgba.alpha 0 0 DiMatte_2.red 0 0 rgba.alpha 0 0 DiMatte_2.green 0 1 rgba.alpha 0 0 DiMatte_2.blue 0 2"
name Shuffle23
label "\[value in1]"
xpos 3627
ypos 1850
disable {{!useRGBalpha}}
}
Dot {
name Dot19
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3759
ypos 1858
}
set N34230800 [stack 0]
Dot {
name Dot20
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3759
ypos 1931
}
set N34230100 [stack 0]
Dot {
name Dot21
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3759
ypos 1998
}
set N34213900 [stack 0]
Dot {
name Dot22
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3756
ypos 2061
}
push $N34213900
push $N34230100
push $N34230800
push $N3427ab00
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DiMatte_1
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DiMatte_1.alpha 0 3 rgba.alpha 0 0 DiMatte_1.red 0 0 rgba.alpha 0 0 DiMatte_1.green 0 1 rgba.alpha 0 0 DiMatte_1.blue 0 2"
name Shuffle22
label "\[value in1]"
xpos 3630
ypos 1589
disable {{!useRGBalpha}}
}
Dot {
name Dot15
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3760
ypos 1599
}
set N34212400 [stack 0]
Dot {
name Dot16
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3760
ypos 1660
}
set N34211d00 [stack 0]
Dot {
name Dot17
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3760
ypos 1729
}
set N34211600 [stack 0]
Dot {
name Dot18
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3760
ypos 1794
}
push $N34211600
push $N34211d00
push $N34212400
push $N34294100
push $N342a8f00
Dot {
name Dot38
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2492
ypos 2
}
Switch {
inputs 2
which {{master.selectAlpha==1?0:1}}
name Switch3
label "hold out"
xpos 2422
ypos 600
}
set N34210100 [stack 0]
push $N34210100
Copy {
inputs 2
from0 -water.alpha
to0 rgba.alpha
name Copy25
xpos 2422
ypos 660
}
Clamp {
name Clamp1
xpos 2422
ypos 724
}
Dot {
name Dot12
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2610
ypos 905
}
push $N342a8f00
push $N34294100
Switch {
inputs 2
which {{master.selectAlpha==1?0:1}}
name Switch2
label "hold out"
xpos 2612
ypos 674
}
Dot {
name Dot7
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2646
ypos 862
}
Multiply {
inputs 1+1
value 0
name Multiply1
xpos 2612
ypos 952
}
Dot {
name Dot1
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3697
ypos 955
}
set N33fdab00 [stack 0]
Dot {
name Dot2
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3697
ypos 1053
}
set N33fda400 [stack 0]
Dot {
name Dot5
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3699
ypos 1155
}
set N33fd9d00 [stack 0]
Dot {
name Dot6
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3699
ypos 1277
}
push $N33fd9d00
push $N33fda400
push $N33fdab00
push $N34294100
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels DiMatte_1
name Copy1
label "hold out"
xpos 3912
ypos 933
disable {{!holdout}}
addUserKnob {20 User}
addUserKnob {6 holdout +STARTLINE}
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels DiMatte_2
name Copy7
label "hold out"
xpos 3912
ypos 1031
disable {{!holdout}}
addUserKnob {20 User}
addUserKnob {6 holdout +STARTLINE}
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels DIMatte_3
name Copy8
label "hold out"
xpos 3912
ypos 1133
disable {{!holdout}}
addUserKnob {20 User}
addUserKnob {6 holdout +STARTLINE}
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels DIMatte_D
name Copy9
label "hold out"
xpos 3914
ypos 1255
disable {{!holdout}}
addUserKnob {20 User}
addUserKnob {6 holdout +STARTLINE}
}
Dot {
name Dot14
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3948
ypos 1492
}
Copy {
inputs 2
from0 DiMatte_1.red
to0 DiMatte_1.red
name Copy5
xpos 3914
ypos 1589
disable {{"!(\[numvalue master.layer]==0)"}}
}
Copy {
inputs 2
from0 DiMatte_1.green
to0 DiMatte_1.green
name Copy10
xpos 3914
ypos 1650
disable {{"!(\[numvalue master.layer]==1)"}}
}
Copy {
inputs 2
from0 DiMatte_1.blue
to0 DiMatte_1.blue
name Copy11
xpos 3914
ypos 1719
disable {{"!(\[numvalue master.layer]==2)"}}
}
Copy {
inputs 2
from0 DiMatte_1.alpha
to0 DiMatte_1.alpha
name Copy12
xpos 3914
ypos 1784
disable {{"!(\[numvalue master.layer]==3)"}}
}
Copy {
inputs 2
from0 DiMatte_2.red
to0 DiMatte_2.red
name Copy13
xpos 3914
ypos 1848
disable {{"!(\[numvalue master.layer]==4)"}}
}
Copy {
inputs 2
from0 DiMatte_2.green
to0 DiMatte_2.green
name Copy14
xpos 3914
ypos 1921
disable {{"!(\[numvalue master.layer]==5)"}}
}
Copy {
inputs 2
from0 DiMatte_2.blue
to0 DiMatte_2.blue
name Copy15
xpos 3914
ypos 1988
disable {{"!(\[numvalue master.layer]==6)"}}
}
Copy {
inputs 2
from0 DiMatte_2.alpha
to0 DiMatte_2.alpha
name Copy16
xpos 3911
ypos 2051
disable {{"!(\[numvalue master.layer]==7)"}}
}
Copy {
inputs 2
from0 DIMatte_3.red
to0 DIMatte_3.red
name Copy3
xpos 3911
ypos 2169
disable {{"!(\[numvalue master.layer]==8)"}}
}
Copy {
inputs 2
from0 DIMatte_3.green
to0 DIMatte_3.green
name Copy17
xpos 3911
ypos 2230
disable {{"!(\[numvalue master.layer]==9)"}}
}
Copy {
inputs 2
from0 DIMatte_3.blue
to0 DIMatte_3.blue
name Copy18
xpos 3911
ypos 2299
disable {{"!(\[numvalue master.layer]==10)"}}
}
Copy {
inputs 2
from0 DIMatte_C.alpha
to0 DIMatte_C.alpha
name Copy19
xpos 3911
ypos 2364
disable {{"!(\[numvalue master.layer]==11)"}}
}
Copy {
inputs 2
from0 DIMatte_D.red
to0 DIMatte_D.red
name Copy20
xpos 3911
ypos 2428
disable {{"!(\[numvalue master.layer]==12)"}}
}
Copy {
inputs 2
from0 DIMatte_D.green
to0 DIMatte_D.green
name Copy21
xpos 3911
ypos 2501
disable {{"!(\[numvalue master.layer]==13)"}}
}
Copy {
inputs 2
from0 DIMatte_D.blue
to0 DIMatte_D.blue
name Copy22
xpos 3911
ypos 2568
disable {{"!(\[numvalue master.layer]==14)"}}
}
Copy {
inputs 2
from0 DIMatte_D.alpha
to0 DIMatte_D.alpha
name Copy23
xpos 3908
ypos 2631
disable {{"!(\[numvalue master.layer]==15)"}}
}
set N33f74100 [stack 0]
Copy {
inputs 2
channels DiMatte_1
name Copy2
xpos 3782
ypos 2726
disable {{"!(\[numvalue master.layer]==16)"}}
}
Copy {
inputs 2
channels DIMatte_3
name Copy4
xpos 3782
ypos 2802
disable {{"!(\[numvalue master.layer]==17)"}}
}
Copy {
inputs 2
channels DiMatte_2
name Copy6
xpos 3782
ypos 2895
disable {{"!(\[numvalue master.layer]==18)"}}
}
Copy {
inputs 2
channels DIMatte_D
name Copy24
xpos 3782
ypos 2981
disable {{"!(\[numvalue master.layer]==19)"}}
}
push $N33f74100
Output {
name Output1
xpos 3908
ypos 3145
}
end_group
set N342ddd00 [stack 0]
Group {
name UnlimitedRemove7
tile_color 0x9e3a61ff
selected true
xpos 11712
ypos -10438
lock_connections true
addUserKnob {20 user l UnlimitedRemove}
addUserKnob {20 info l Info n 1}
info 0
addUserKnob {26 text_info l "" +STARTLINE T "<font color=#e1f2a2>UnlimitedRemove v1.2</font> | author: Guillermo Algora\n<br>\nThe functionality of the native Remove node with the possibility of unlimited channel slots.\n<br>"}
addUserKnob {20 endGroup n -1}
addUserKnob {4 operation t "Remove: the named channels are deleted\nKeep: all but the named channels are deleted" M {remove keep "" "" "" "" "" "" "" "" "" ""}}
operation keep
addUserKnob {26 description l "" -STARTLINE T "                   Channel slots:"}
addUserKnob {22 add l "Add (+4)" t "Add four additional channel slots" -STARTLINE T "def add_remove_node(switch_node):\n\n    last_remove_node = switch_node.input(0)\n\n    nukescripts.clear_selection_recursive()\n    last_remove_node.setSelected(True)\n    new_remove_node = nuke.createNode(\"Remove\", inpanel=False)\n    nukescripts.clear_selection_recursive()\n\n    new_remove_node\['operation'].setValue(\"remove\")\n    for knob_name in (\"channels\", \"channels2\", \"channels3\", \"channels4\"):\n        new_remove_node\[knob_name].setValue(\"none\")\n\n    new_remove_node\['xpos'].setExpression('\{\}'.format(last_remove_node\['xpos'].value()))\n    new_remove_node\['ypos'].setExpression('\{\}'.format(last_remove_node\['ypos'].value()+50))\n\n    return new_remove_node\n\ndef add_keep_node(switch_node, new_remove_node):\n\n    last_keep_node = switch_node.input(1)\n\n    nukescripts.clear_selection_recursive()\n    last_keep_node.setSelected(True)\n    new_keep_node = nuke.createNode(\"Remove\", inpanel=False)\n\n    new_keep_node\['operation'].setValue(\"keep\")\n    for knob_name in (\"channels\", \"channels2\", \"channels3\", \"channels4\"):\n        new_keep_node\[knob_name].setValue(\"none\")\n\n    new_keep_node\['xpos'].setExpression('\{\}'.format(last_keep_node\['xpos'].value()-100))\n    new_keep_node\['ypos'].setExpression('\{\}'.format(last_keep_node\['ypos'].value()+50))\n\n    new_keep_node.setSelected(True)\n    copy_node = nuke.createNode(\"Copy\", inpanel=False)\n    nukescripts.clear_selection_recursive()\n\n    for knob_name in (\"from0\", \"from1\", \"from2\", \"from3\"):\n        copy_node\[knob_name].setValue(\"none\")\n    for knob_name in (\"to0\", \"to1\", \"to2\", \"to3\"):\n        copy_node\[knob_name].setValue(\"none\")\n   \n    copy_node\['channels'].setValue(\"all\")\n    copy_node\['metainput'].setValue(\"All\")\n    copy_node\['rangeinput'].setValue(\"All\")\n    copy_node\['bbox'].setValue(\"union\")\n     \n    copy_node\['xpos'].setExpression('\{\}'.format(new_keep_node\['xpos'].value()+100))\n    copy_node\['ypos'].setExpression('\{\}'.format(new_keep_node\['ypos'].value()))\n\n    copy_node.setInput(0, last_keep_node)\n    new_keep_node.setInput(0, nuke.toNode(\"Dot1\"))\n\n    for knob_name in (\"channels\", \"channels2\", \"channels3\", \"channels4\"):\n        new_keep_node\[knob_name].setExpression(new_remove_node.name() + '.\{\}'.format(knob_name))\n\ndef add_channels(this_node, new_remove_node):\n\n    highest = \[]\n    for knob in this_node.allKnobs():\n        if \"channel\" in knob.name():\n            number = knob.name().split(\"channels\")\[1]\n            if number.isdigit():\n                highest.append(int(number))\n    highest = max(highest)\n\n    for knob_name in (\"channels\", \"channels2\", \"channels3\", \"channels4\"):\n        highest += 1\n        knob = nuke.Link_Knob(\"channels\" + '\{\}'.format(highest))\n        knob.setLink(new_remove_node.name() +'.\{\}'.format(knob_name))\n        this_node.addKnob(knob)\n\nundo = nuke.Undo()\nundo.disable()\n\ntry:\n    this_node = nuke.thisNode()\n\n    group = this_node\n    group.begin()\n\n    switch_node = nuke.toNode(\"Switch1\")\n    switch_node\['xpos'].setExpression('\{\}'.format(switch_node\['xpos'].value()))\n    switch_node\['ypos'].setExpression('\{\}'.format(switch_node\['ypos'].value()+50))\n\n    output_node = nuke.toNode(\"Output1\")\n    output_node\['xpos'].setExpression('\{\}'.format(output_node\['xpos'].value()))\n    output_node\['ypos'].setExpression('\{\}'.format(output_node\['ypos'].value()+50))\n\n    new_remove_node = add_remove_node(switch_node)\n    add_keep_node(switch_node, new_remove_node)\n\n    group.end()\n\n    add_channels(this_node, new_remove_node)\n\nfinally:\n    undo.enable()"}
addUserKnob {22 remove l "Remove (last 4)" t "Remove the last four additional channel slots" -STARTLINE T "def get_highest(this_node):\n\n    highest = \[]\n    for knob in this_node.allKnobs():\n        if \"channel\" in knob.name():\n            number = knob.name().split(\"channels\")\[1]\n            if number.isdigit():\n                highest.append(int(number))\n    highest = max(highest) + 1\n    return highest\n\ndef remove_channels(this_node, highest):\n\n        for i in range (0,4):\n            highest -= 1\n            this_node.removeKnob(this_node.knobs()\[(\"channels\" + '\{\}'.format(highest))])\n\ndef remove_nodes(switch_node):\n    copy_node = switch_node.input(1)\n    keep_node = copy_node.input(1)\n    remove_node = switch_node.input(0)\n\n    nuke.delete(copy_node)\n    nuke.delete(keep_node)\n    nuke.delete(remove_node)\n\nundo = nuke.Undo()\nundo.disable()\n\ntry:\n    this_node = nuke.thisNode()\n    highest = get_highest(this_node)\n\n    if highest > 5:\n        \n        remove_channels(this_node, highest)\n\n        group = this_node\n        group.begin()\n\n        switch_node = nuke.toNode(\"Switch1\")\n        switch_node\['xpos'].setExpression('\{\}'.format(switch_node\['xpos'].value()))\n        switch_node\['ypos'].setExpression('\{\}'.format(switch_node\['ypos'].value()-50))\n\n        output_node = nuke.toNode(\"Output1\")\n        output_node\['xpos'].setExpression('\{\}'.format(output_node\['xpos'].value()))\n        output_node\['ypos'].setExpression('\{\}'.format(output_node\['ypos'].value()-50))\n\n        remove_nodes(switch_node)\n\n        group.end()\n\nfinally:\n    undo.enable()"}
addUserKnob {41 channels T Remove1.channels}
addUserKnob {41 channels2 T Remove1.channels2}
addUserKnob {41 channels3 T Remove1.channels3}
addUserKnob {41 channels4 T Remove1.channels4}
addUserKnob {41 channels5 T Remove3.channels}
addUserKnob {41 channels6 T Remove3.channels2}
addUserKnob {41 channels7 T Remove3.channels3}
addUserKnob {41 channels8 T Remove3.channels4}
}
Input {
inputs 0
name Input
xpos {{0.0 x1001 0}}
ypos {{0.0 x1001 -1}}
}
Dot {
name Dot1
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos {{34.0 x1001 26}}
ypos {{125.0 x1001 125}}
}
set N33f28800 [stack 0]
Remove {
operation keep
channels {{{Remove3.channels}}}
channels2 {{{Remove3.channels2}}}
channels3 {{{Remove3.channels3}}}
channels4 {{{Remove3.channels4}}}
name Remove4
xpos 89
ypos 165
}
push $N33f28800
Remove {
operation keep
channels {{{Remove1.channels}}}
channels2 {{{Remove1.channels2}}}
channels3 {{{Remove1.channels3}}}
channels4 {{{Remove1.channels4}}}
name Remove2
xpos {{189.0 x1001 188}}
ypos {{115.0 x1001 115}}
}
Copy {
inputs 2
channels all
metainput All
rangeinput All
name Copy1
xpos 189
ypos 165
}
push $N33f28800
Remove {
channels rgba
channels2 zDepth
channels3 DiMatte_1
channels4 DiMatte_2
name Remove1
xpos {{-185.0 x1001 -183}}
ypos {{115.0 x1001 115}}
}
Remove {
channels DIMatte_3
channels2 DIMatte_D
name Remove3
xpos -185
ypos 165
}
Switch {
inputs 2
which {{UnlimitedRemove7.operation}}
name Switch1
xpos {{0.0 x1001 0}}
ypos {{282.0 x1001 233}}
}
Output {
name Output1
xpos {{0.0 x1001 -7}}
ypos {{392.0 x1001 342}}
}
end_group
add_layer {DIMatte_4 DIMatte_4.red DIMatte_4.green DIMatte_4.blue DIMatte_4.alpha}
Remove {
channels DiMatte_1
channels2 DiMatte_2
channels3 DIMatte_3
channels4 DIMatte_4
name Remove2
selected true
xpos 11712
ypos -10412
addUserKnob {20 User +INVISIBLE}
addUserKnob {7 UID_DI_Shuffle l UID}
}
CopyBBox {
inputs 2
name CopyBBox2
selected true
xpos 11712
ypos -10346
}
Merge2 {
inputs 2
operation plus
bbox B
Achannels rgb
Bchannels rgb
output rgb
name Plus1
selected true
xpos 11712
ypos -6061
disable true
}
Dot {
name Dot311
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11746
ypos -4087
}
set N340c7900 [stack 0]
Dot {
name Dot312
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11597
ypos -4087
}
set N340c7200 [stack 0]
Dot {
name Dot313
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11521
ypos -4087
}
StickyNote {
inputs 0
name StickyNote16
label "<<< set to ALL"
selected true
xpos 11822
ypos -15084
}
StickyNote {
inputs 0
name StickyNote30
label "after translating axis to match \n- if the water is two bright rotate the water axis to move the sun"
note_font_size 15
selected true
xpos 11817
ypos -16205
}
StickyNote {
inputs 0
name StickyNote21
label "<<< set to ALL"
selected true
xpos 11810
ypos -2136
}
StickyNote {
inputs 0
name StickyNote40
label "<< adjust <B>multipliers and offset</B>\n1.6 is reality"
selected true
xpos 11811
ypos -1323
}
StickyNote {
inputs 0
name StickyNote42
label "<<< set to ALL for DI mattes"
selected true
xpos 11813
ypos -1273
}
StickyNote {
inputs 0
name StickyNote43
label "<right>use external grain if using scatter  >>>>\nor you have corrupt grain                               >>>>"
selected true
xpos 11419
ypos 26912
}
push $cut_paste_input
Dot {
name Dot404
tile_color 0x949494ff
label camera
note_font_size 42
note_font_color 0xffffffff
selected true
xpos 12842
ypos 26122
}
Dot {
inputs 0
name Dot405
tile_color 0x949494ff
label pl01
note_font_size 42
note_font_color 0xffffffff
selected true
xpos 14370
ypos 25499
}
Card2 {
inputs 0
rows 1
columns 1
translate {-1740.714966 5135.354492 737.2283325}
rotate {0 -90 90}
scaling {218.9003906 231.1114654 0.001101716887}
control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
name Card1
label Window_backOffice
selected true
xpos 6722
ypos 12859
disable true
}
Card2 {
inputs 0
rows 1
columns 1
translate {-1723.182861 5209.80957 417.9187622}
rotate {1.647590041 89.79372406 0}
scaling {123.8782883 147.6721802 0.0001491457224}
control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
name Card7
label "TV_Top (A)"
selected true
xpos 6987
ypos 12859
disable true
}
Card2 {
inputs 0
rows 1
columns 1
translate {-1691.558838 5137.831055 411.4847107}
rotate {-0.5847283006 -91.88653564 0.2076084465}
scaling {199.4992065 83.51766968 3.856393337}
control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
name Card8
label "TV_BottomTwo (B+C)"
selected true
xpos 7104
ypos 12861
disable true
}
Card2 {
inputs 0
rows 1
columns 1
translate {-1321.123413 5134.193848 135.9686584}
rotate {0 179.9332275 0}
scaling {562.7020264 460.0585938 3.436207771e-05}
control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
name Card9
label "Windows_insideWall (reflections)"
selected true
xpos 6848
ypos 12857
disable true
}
Read {
inputs 0
file_type png
file /coppi/proj/thrg/ref/Template_refs/Window_backOffice.png
format "1485 1038 0 0 1485 1038 1 "
origset true
in_colorspace scene_linear
out_colorspace scene_linear
name Read4
selected true
xpos 6713
ypos 12728
disable true
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
}
Read {
inputs 0
file_type png
file "/coppi/proj/thrg/ref/Template_refs/Windows_insideWall (reflections).png"
format "1486 1034 0 0 1486 1034 1 "
origset true
in_colorspace scene_linear
out_colorspace scene_linear
name Read5
selected true
xpos 6848
ypos 12726
disable true
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
}
Read {
inputs 0
file_type png
file "/coppi/proj/thrg/ref/Template_refs/TV_BottomTwo (B+C).png"
format "2356 1114 0 0 2356 1114 1 "
origset true
in_colorspace scene_linear
out_colorspace scene_linear
name Read6
selected true
xpos 7101
ypos 12730
disable true
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
}
Read {
inputs 0
file_type png
file "/coppi/proj/thrg/ref/Template_refs/TV_Top (A).png"
format "2353 1109 0 0 2353 1109 1 "
origset true
in_colorspace scene_linear
out_colorspace scene_linear
name Read7
selected true
xpos 6978
ypos 12728
disable true
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
}
StickyNote {
inputs 0
name StickyNote44
label "DELETE UNWANTED GEO/PLATES \n(to optimize script)"
note_font_size 21
selected true
xpos 6850
ypos 13032
}
StickyNote {
inputs 0
name StickyNote46
label "^^ adjust motion blur & overscan ^^"
selected true
xpos 7521
ypos 13268
}
Dot {
inputs 0
name Dot406
tile_color 0x949494ff
label matte1
note_font_size 42
note_font_color 0xffffffff
selected true
xpos 13233
ypos 26142
}
Read {
inputs 0
file_type jpeg
file /coppi/proj/thrg/ftrack/assets/s01e01/015-0250/ref/thrg_s01e01_015-0250_offline_jpeg_rec709_v010/thrg_s01e01_015-0250_offline_jpeg_rec709_v010.%04d.jpg
format "1920 1080 0 0 1920 1080 1 HD_1080"
first 1005
last 1157
origfirst 1005
origlast 1157
origset true
name offline_main3
tile_color 0x14a14aff
selected true
xpos 12324
ypos 30319
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname main
addUserKnob {20 ftrack}
addUserKnob {1 componentId}
componentId 0ac76ff5-85f7-4f0e-9065-01124597d100
addUserKnob {1 componentName}
componentName main
addUserKnob {1 assetVersionId}
assetVersionId bd06413d-9e27-4977-8e90-9d84400b25f5
addUserKnob {1 assetVersion}
assetVersion 2
addUserKnob {1 assetName}
assetName offline
addUserKnob {1 assetType}
assetType plate
addUserKnob {4 versionType l "Version Type" M {latest stable pinned}}
}
Reformat {
format "4448 3096 0 0 4448 3096 1 Output Resolution_1_1"
name Reformat5
selected true
xpos 12324
ypos 30415
}
Dot {
inputs 0
name Dot407
tile_color 0x949494ff
label matte2
note_font_size 42
note_font_color 0xffffffff
selected true
xpos 13430
ypos 26143
}
Read {
inputs 0
file_type exr
file /coppi/proj/thrg/ftrack/assets/s01e01/015-0250/img/thrg_s01e01_015-0250_paint_v003_comp_lin_ap0/thrg_s01e01_015-0250_paint_comp_lin_ap0_v003.%04d.exr
localizationPolicy on
format "4544 3164 0 0 4544 3164 1 Project Resolution"
first 1001
last 1161
origfirst 1001
origlast 1161
origset true
name paint_comp_lin_ap0
tile_color 0xe3634bff
selected true
xpos 8552
ypos 2175
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp_lin_ap0
addUserKnob {20 ftrack}
addUserKnob {1 componentId}
componentId 7e5ecbfa-5b03-4152-8f4a-4a6cb0d6e96e
addUserKnob {1 componentName}
componentName comp_lin_ap0
addUserKnob {1 assetVersionId}
assetVersionId 83ddf3a3-f975-4326-ab74-5bded42b2c81
addUserKnob {1 assetVersion}
assetVersion 2
addUserKnob {1 assetName}
assetName paint
addUserKnob {1 assetType}
assetType img
addUserKnob {4 versionType l "Version Type" M {latest stable pinned}}
versionType stable
}
Dot {
name Dot67
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 8586
ypos 2362
}
set N341cf900 [stack 0]
Dot {
name Dot493
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 8570
ypos 7653
}
set N341cf200 [stack 0]
Dot {
name Dot412
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 7134
ypos 7653
}
CornerPin2D {
to1 {{curve x1001 3945 3946.77 3950.02 3949.11 3949.28 3950.86 3956.06 3959.42 3959.72 3956.29 3953.37 3949.63 3943.84 3937.77 3929.96 3921.94 3914.69 3907.26 3901.22 3895.29 3891.18 3887.34 3883.48 3876.02 3866.82 3857.55 3847.7 3838.87 3831.12 3825.07 3817.15 3807.57 3796.64 3787.04 3777.28 3770.54 3763.23 3756.07 3749.53 3743.13 3737.68 3734.24 3731.75 3730.47 3729.04 3726.7 3722.44 3719.16 3718.8 3718.26 3717.95 3719.91 3719.6 3720.56 3722.27 3726.08 3734.34 3741.77 3753.95 3767.42 3781.25 3793.81 3804.92 3815.46 3823.18 3829.06 3835.07 3836.83} {curve x1001 1466 1471.38 1474.85 1475.31 1472.33 1465.89 1457.69 1449.74 1441.23 1431.21 1423.06 1417.25 1415.6 1417.48 1420.13 1425.86 1431.86 1438.46 1442.85 1446.21 1448.7 1448.78 1448.2 1444.49 1440.24 1435.41 1431.37 1429.28 1429.22 1431.17 1435.33 1439.02 1442.03 1444.3 1447.73 1450.55 1451.31 1451.89 1451.6 1450.44 1448.51 1448.49 1448.33 1448.02 1448.6 1449.37 1450.62 1453.97 1458.61 1463.29 1469.43 1476 1482.38 1487.97 1493.08 1498.72 1503.07 1506.38 1512.16 1521.09 1532.16 1544.35 1558.39 1570.99 1581 1588.36 1592.11 1592.54}}
to2 {{curve x1001 4829 4830.56 4833.76 4832.51 4832.55 4833.75 4838.79 4841.07 4841.07 4836.95 4833.27 4828.88 4822.02 4815.01 4806.6 4797.91 4790.13 4782.23 4775.29 4768.46 4763.93 4759.27 4754.58 4746.67 4736.94 4727.31 4716.97 4707.52 4699.09 4692.51 4684.32 4673.94 4662.68 4652.32 4641.92 4635.01 4627.12 4619.42 4612 4605.3 4599.57 4595.82 4593.11 4591.5 4589.86 4587.35 4582.62 4578.99 4578.75 4578.14 4577.72 4579.9 4579.29 4580.41 4582.26 4586.65 4595.43 4603.39 4616.5 4630.7 4645.82 4659.13 4671.06 4682.32 4690.93 4697.44 4703.81 4706.05} {curve x1001 1466 1471.16 1474.61 1475.04 1469.84 1461.93 1453.05 1443.76 1434.88 1422.3 1413.04 1406.41 1405.38 1406.74 1409.23 1414.85 1421.79 1428.47 1432.9 1436.07 1437.38 1437.59 1436.58 1433.01 1428.59 1423.7 1420.63 1419.52 1420.4 1423.35 1428.24 1433.04 1436.59 1439.32 1443.22 1447.02 1448.04 1449.09 1448.99 1447.89 1445.74 1445.4 1445.16 1444.71 1445.27 1445.79 1446.54 1449.41 1454.22 1459.06 1464.91 1471.59 1478.39 1483.96 1488.61 1494.38 1498.86 1502.46 1509.01 1518.49 1530.87 1543.94 1558.39 1571.76 1582.52 1589.99 1593.56 1593.92}}
to3 {{curve x1001 4829 4830.63 4834.5 4834.61 4836.06 4837.76 4843.25 4846.59 4847.87 4845.01 4842.13 4838.35 4831.88 4825.27 4817.42 4808.58 4800.78 4792.91 4786.22 4779.41 4774.81 4770.03 4765.5 4757.87 4748.05 4738.34 4727.38 4716.92 4707.15 4699.45 4690.59 4679.87 4668.09 4657.25 4645.76 4638 4629.47 4621.2 4613.65 4607.1 4601.65 4597.96 4595.24 4593.65 4592.09 4590.27 4585.93 4582.45 4582.76 4582.36 4581.89 4584.26 4583.63 4584.97 4587.3 4591.56 4600.24 4607.85 4620.56 4634.27 4648.95 4662.09 4673.85 4685.01 4693.74 4700.46 4707.17 4709.69} {curve x1001 2254 2258.65 2262.24 2262.86 2257.83 2249.89 2241.01 2231.16 2222.39 2208.82 2198.4 2190.5 2188.71 2189.46 2191.33 2196.24 2202.73 2209.09 2213.29 2215.66 2216.8 2216.45 2214.91 2211.31 2206.71 2201.2 2197.68 2196.14 2196.61 2199.17 2203.65 2208.34 2211.2 2213.82 2217.5 2221.26 2222.07 2222.84 2222.48 2221.14 2218.69 2218.06 2217.64 2217.03 2217.4 2217.73 2218.3 2220.84 2225.6 2230.41 2236.2 2243.09 2250.01 2255.78 2260.66 2266.57 2271.43 2275.26 2282.13 2292.08 2305.05 2318.86 2333.82 2347.92 2359.59 2367.49 2371.85 2372.38}}
to4 {{curve x1001 3945 3946.85 3950.76 3951.21 3952.79 3954.86 3960.52 3964.94 3966.52 3964.34 3962.23 3959.11 3953.7 3948.03 3940.78 3932.61 3925.34 3917.94 3912.16 3906.24 3902.06 3898.1 3894.39 3887.21 3877.93 3868.58 3858.11 3848.27 3839.18 3832.01 3823.42 3813.5 3802.04 3791.97 3781.12 3773.53 3765.58 3757.85 3751.17 3744.93 3739.75 3736.38 3733.88 3732.61 3731.26 3729.62 3725.75 3722.63 3722.81 3722.48 3722.11 3724.27 3723.95 3725.12 3727.32 3731 3739.15 3746.24 3758 3770.99 3784.38 3796.78 3807.71 3818.15 3825.99 3832.09 3838.43 3840.47} {curve x1001 2254 2258.87 2262.48 2263.13 2260.32 2253.86 2245.66 2237.14 2228.75 2217.73 2208.41 2201.35 2198.94 2200.2 2202.23 2207.25 2212.8 2219.09 2223.24 2225.8 2228.11 2227.64 2226.54 2222.79 2218.35 2212.91 2208.42 2205.9 2205.42 2207 2210.75 2214.32 2216.64 2218.81 2222.01 2224.79 2225.34 2225.64 2225.09 2223.69 2221.45 2221.15 2220.81 2220.34 2220.73 2221.31 2222.38 2225.4 2230 2234.64 2240.72 2247.5 2254 2259.79 2265.13 2270.92 2275.63 2279.18 2285.28 2294.67 2306.34 2319.27 2333.82 2347.15 2358.07 2365.86 2370.41 2371}}
invert true
from1 {3719.16 1453.97}
from2 {4578.99 1449.41}
from3 {4582.45 2220.84}
from4 {3722.63 2225.4}
name CornerPin2D_Layer_2
label f1048
selected true
xpos 7100
ypos 8315
disable true
}
Dot {
name Dot413
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 7134
ypos 8524
}
set N341cd600 [stack 0]
Dot {
name Dot414
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 6849
ypos 8524
}
Dot {
name Dot415
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 6706
ypos 8524
}
set N341cc800 [stack 0]
Dot {
name Dot416
selected true
xpos 6567
ypos 8524
}
set N341cc100 [stack 0]
Dot {
name Dot417
selected true
xpos 6452
ypos 8524
}
set N341af900 [stack 0]
Dot {
name Dot418
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 6140
ypos 8524
}
IBKColourV3 {
name IBKColourV3_4
selected true
xpos 6106
ypos 8652
Size 1
off {0 0 -0.07}
mult {1 1 0.8}
erode 2
multi 5
}
IBKColourV3 {
name IBKColourV3_5
selected true
xpos 6106
ypos 8697
Size {{parent.IBKColourV3_4.Size}}
off {{parent.IBKColourV3_4.off} {parent.IBKColourV3_4.off} {parent.IBKColourV3_4.off}}
mult {{parent.IBKColourV3_4.mult} {parent.IBKColourV3_4.mult} {parent.IBKColourV3_4.mult}}
erode 2
multi 8
}
IBKColourV3 {
name IBKColourV3_6
selected true
xpos 6106
ypos 8735
Size {{parent.IBKColourV3_4.Size}}
off {{parent.IBKColourV3_4.off} {parent.IBKColourV3_4.off} {parent.IBKColourV3_4.off}}
mult {{parent.IBKColourV3_4.mult} {parent.IBKColourV3_4.mult} {parent.IBKColourV3_4.mult}}
erode 2
multi 10
}
IBKColourV3 {
name IBKColourV3_7
selected true
xpos 6106
ypos 8781
Size {{parent.IBKColourV3_4.Size}}
off {{parent.IBKColourV3_4.off} {parent.IBKColourV3_4.off} {parent.IBKColourV3_4.off}}
mult {{parent.IBKColourV3_4.mult} {parent.IBKColourV3_4.mult} {parent.IBKColourV3_4.mult}}
erode 2
multi 15
}
IBKColourV3 {
name IBKColourV3_8
selected true
xpos 6106
ypos 8816
Size {{parent.IBKColourV3_4.Size}}
off {{parent.IBKColourV3_4.off} {parent.IBKColourV3_4.off} {parent.IBKColourV3_4.off}}
mult {{parent.IBKColourV3_4.mult} {parent.IBKColourV3_4.mult} {parent.IBKColourV3_4.mult}}
erode 2
multi 70
}
StickyNote {
inputs 0
name StickyNote49
label "<<< set to ALL"
selected true
xpos 8606
ypos 17168
}
Read {
inputs 0
file_type exr
file /coppi/proj/thrg/ftrack/assets/s01e01/015-0250/img/thrg_s01e01_015-0250_layout_v009_comp_lin_ap0/thrg_s01e01_015-0250_layout_comp_lin_ap0_v009.%04d.exr
localizationPolicy on
format "4448 3096 0 0 4448 3096 1 Output Resolution_1_1"
first 1001
last 1161
origfirst 1001
origlast 1161
origset true
name layout_comp_lin_ap3
tile_color 0xffff00ff
selected true
xpos 12776
ypos 30306
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp_lin_ap0
addUserKnob {20 ftrack}
addUserKnob {1 componentId}
componentId a2505a00-e53d-43a2-a827-76fd37db2a2c
addUserKnob {1 componentName}
componentName comp_lin_ap0
addUserKnob {1 assetVersionId}
assetVersionId 88427f61-8533-4805-a089-51133c286d81
addUserKnob {1 assetVersion}
assetVersion 9
addUserKnob {1 assetName}
assetName layout
addUserKnob {1 assetType}
assetType img
addUserKnob {4 versionType l "Version Type" M {latest stable pinned}}
versionType stable
}
StickyNote {
inputs 0
name StickyNote51
label "ver. client approved? \nsome layout was published as 'comp'!"
selected true
xpos 12785
ypos 30420
}
Read {
inputs 0
file_type exr
file /coppi/proj/thrg/ftrack/assets/s01e01/015-0250/img/thrg_s01e01_015-0250_comp_v011_comp_lin_ap0/thrg_s01e01_015-0250_comp_comp_lin_ap0_v011.%04d.exr
localizationPolicy on
format "4448 3096 0 0 4448 3096 1 Output Resolution_1_1"
first 1001
last 1161
origfirst 1001
origlast 1161
origset true
name comp_comp_lin_ap2
tile_color 0xe3634bff
selected true
xpos 12908
ypos 30302
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp_lin_ap0
addUserKnob {20 ftrack}
addUserKnob {1 componentId}
componentId 5b9174e9-9729-4830-8ac6-15f745e81dcc
addUserKnob {1 componentName}
componentName comp_lin_ap0
addUserKnob {1 assetVersionId}
assetVersionId ece49b84-60fa-46d4-8d9e-85e0e01babb0
addUserKnob {1 assetVersion}
assetVersion 11
addUserKnob {1 assetName}
assetName comp
addUserKnob {1 assetType}
assetType img
addUserKnob {4 versionType l "Version Type" M {latest stable pinned}}
versionType stable
}
Read {
inputs 0
file_type png
file /coppi/proj/thrg/ref/Template_refs/Windows_outside.png
format "1485 1036 0 0 1485 1036 1 "
origset true
in_colorspace scene_linear
out_colorspace scene_linear
name Read8
selected true
xpos 6881
ypos 12916
disable true
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
}
StickyNote {
inputs 0
name StickyNote54
label "FYI: most bashplates have mocha\ncornerpin to use"
selected true
xpos 6146
ypos 9258
}
StickyNote {
inputs 0
name StickyNote55
label "FYI: most bashplates have mocha\ncornerpin to use"
selected true
xpos 7055
ypos 8366
}
Transform {
inputs 0
translate {{"(!invert) ? Tracker6.translate.x : -Tracker6.translate.x"} {"(!invert) ? Tracker6.translate.y : -Tracker6.translate.y"}}
rotate {{"(!invert) ? Tracker6.rotate : -Tracker6.rotate"}}
scale {{"(!invert) ? Tracker6.scale.w : 1/Tracker6.scale.w"}}
center {{"(!invert) ? Tracker6.center.x : Tracker6.center.x + Tracker6.translate.x"} {"(!invert) ? Tracker6.center.y : Tracker6.center.y + Tracker6.translate.y"}}
filter {{Tracker6.filter}}
name Transform_MatchMove6
selected true
xpos 1665
ypos -19954
addUserKnob {20 User}
addUserKnob {4 transform M {stabilize match-move}}
transform match-move
addUserKnob {4 src_transform l "src transform" M {none stabilize "stabilize 1-pt" match-move "match-move 1-pt" "remove jitter"}}
src_transform {{Tracker6.transform}}
addUserKnob {6 invert -STARTLINE}
invert {{"\[python -execlocal srcTransformKnob\\ =\\ nuke.thisNode()\\\['src\\_transform'\\]\\nsrcTransformName\\ =\\ srcTransformKnob.enumName(int(srcTransformKnob.getValue()))\\ndestTransform\\ =\\ nuke.thisNode()\\\['transform'\\].getValue()\\nsrcTransformIsStabilize\\ =\\ (srcTransformName.find('stabilize')==0\\ or\\ srcTransformName.find('remove\\ jitter')==0)\\ninvertDueToDestStabilize\\ =\\ (destTransform\\ ==\\ 0\\ and\\ not\\ srcTransformIsStabilize)\\ninvertDueToSrcStabilize\\ =\\ (destTransform\\ ==\\ 1\\ and\\ srcTransformIsStabilize)\\nret\\ =\\ (invertDueToDestStabilize\\ or\\ invertDueToSrcStabilize)]"}}
}
push $N6da5ab00
Dot {
name Dot28
tile_color 0x949494ff
label camera
note_font_size 42
note_font_color 0xffffffff
selected true
xpos -1139
ypos -12812
}
Dot {
name Dot127
tile_color 0x949494ff
label camera
note_font_size 42
note_font_color 0xffffffff
selected true
xpos -1139
ypos -12230
}
Dot {
name Dot57
tile_color 0x949494ff
label camera
note_font_size 42
note_font_color 0xffffffff
selected true
xpos -1135
ypos -5437
}
Dot {
name Dot29
tile_color 0x949494ff
label camera
note_font_size 42
note_font_color 0xffffffff
selected true
xpos -1141
ypos -1408
}
set N33755600 [stack 0]
Dot {
name Dot45
tile_color 0x949494ff
label camera
note_font_size 42
note_font_color 0xffffffff
selected true
xpos -1126
ypos 3755
}
Dot {
name Dot39
tile_color 0x949494ff
label camera
note_font_size 42
note_font_color 0xffffffff
selected true
xpos -1141
ypos 10787
}
Dot {
name Dot1
tile_color 0x949494ff
label camera
note_font_size 42
note_font_color 0xffffffff
selected true
xpos -1135
ypos 13197
}
set N33754100 [stack 0]
Dot {
name Dot6
tile_color 0x949494ff
label camera
note_font_size 42
note_font_color 0xffffffff
selected true
xpos -1204
ypos 17797
}
StickyNote {
inputs 0
name StickyNote1
label "<< defocus if required"
selected true
xpos 7685
ypos 14516
}
StickyNote {
inputs 0
name StickyNote52
label "not all the roto was done in the same render / channel / vendor\nso this needs reorganizing so you only see the correct outputs"
note_font_size 21
selected true
xpos 4642
ypos 7774
}
StickyNote {
inputs 0
name StickyNote4
label "soften horizon to match atmos over >>>"
selected true
xpos 11218
ypos -10675
}
Reformat {
inputs 0
format "4544 3164 0 0 4544 3164 1 Flat Plate Resolution"
name Reformat1
selected true
xpos 6513
ypos 9592
}
Roto {
output alpha
cliptype bbox
curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x450e0000 x44c5c000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px
        {x447a4000 x447a8000 x447b8000 x447d8000 x447dc000 x447f8000 x447fc000 x44800000 x4480a000 x4480c000 x44816000 x4481e000 x44830000 x44838000 x4486c000 x4488e000 x44892000 x44894000 x4489c000 x448be000 x448c0000 x448c2000 x448c4000 x448c6000 x448d6000 x448e2000 x448e4000 x448e6000 x448e8000 x448ea000 x448f0000 x448fa000 x448fe000 x44908000 x4490a000 x44910000}
        {{{x 14
        {0 -}}      0
       {x 21
        {0 -}}}
      {{x 14
        {0 -}}      0
       {x 21
        {0 -}}}}
        {{{x 4
        {x45c194b5 -}}
       {x45c19685 -}
       {x45c189fa -}
       {x45c19f1b -}
       {x45c192dd -}
       {x45c1a264 -}
       {x 4
        {x45c192dd -}}
       {x45c18f04 xbdbaa8da 1 xbdbaa8da 1}      x45c16d1a
       {x 2
        {x45c17098 -}}
       {x45c1734d -}
       {x45c172c8 xbd478000 1 xbd478000 1}
       {x45c1546a xbf1848e4 1 xbf1848e4 1}
       {x45c11d1f -}
       {x45c1e262 x4085a400 1 x4085a400 1}
       {x45c1ed85 x3f585000 1 x3f585000 1}
       {x45c1efe7 x3e6b9c72 1 x3e6b9c72 1}
       {x45c1fe16 -}
       {x45c1f82f -}
       {x45c1fdf8 x3f4eb000 1 x3f4eb000 1}
       {x45c2051a x3f904000 1 x3f904000 1}
       {x45c21000 -}
       {x45c20017 -}
       {x45c202ec -}
       {x45c1ef6e xbf28bb6e 1 xbf28bb6e 1}
       {x45c1de03 xbf88d000 1 xbf88d000 1}
       {x45c1b393 xbfc7f800 1 xbfc7f800 1}
       {x45c19306 -}
       {x45c1f30a x40c00800 1 0 1}}
      {{x 4
        {x44792050 -}}
       {x447c5afc -}
       {x447b1a78 -}
       {x447d49c3 -}
       {x447a4899 -}
       {x447c05e3 -}
       {x447a235a xbe81e666 1 xbe81e666 1}
       {x447a084a xbd788000 1 xbd788000 1}
       {x447a0068 xbcf0bb14 1 xbcf0bb14 1}
       {x4479efd7 -}
       {x447aaa10 x3e613a8e 1 x3e613a8e 1}      x447a4a5a
       {x447c8573 x3ea79666 1 x3ea79666 1}
       {x447e58be x404fe455 1 x404fe455 1}
       {x447ef520 -}
       {x447eed24 xbd800f3d 1 xbd800f3d 1}
       {x447ea116 -}
       {x448065f8 x40f3c680 1 x40f3c680 1}
       {x44813818 x3fdda000 1 x3fdda000 1}
       {x44814a90 x3eb35800 1 x3eb35800 1}
       {x44814e83 x3dc35555 1 x3dc35555 1}
       {x44816608 -}
       {x448120b6 -}
       {x448148b4 x40159c00 1 x40159c00 1}
       {x4481b652 x40786800 1 x40786800 1}
       {x4482411c -}
       {x448131fc xc0357500 1 xc0357500 1}
       {x4480d632 xbfa17d00 1 xbfa17d00 1}
       {x447fde04 xbf73d200 1 xbf73d200 1}
       {x447fb561 xbf73d200 1 xbf73d200 1}
       {x447e1306 xc0180700 1 xc0180700 1}
       {x447c2537 -}
       {x447e5fe6 x408eabc0 1 0 1}}}
        {{{x 14
        {0 -}}      0
       {x 21
        {0 -}}}
      {{x 14
        {0 -}}      0
       {x 21
        {0 -}}}}
        {{{x 14
        {0 -}}      0
       {x 21
        {0 -}}}
      {{x 14
        {0 -}}      0
       {x 21
        {0 -}}}}
        {{{x 4
        {x45c0eca0 -}}
       {x45c0ee70 -}
       {x45c0e1e5 xbe51b000 1 xbe51b000 1}
       {x45c0e155 -}
       {x45c0eac8 x3f053555 1 x3f053555 1}
       {x45c0fa4f -}
       {x 4
        {x45c0eac8 -}}
       {x45c0e6ef xbdbaa8da 1 xbdbaa8da 1}      x45c0c505
       {x45c0c883 -}
       {x45c0e2d3 x3fbd7000 1 x3fbd7000 1}
       {x45c0ec08 -}
       {x45c0eaca xbdee8000 1 xbdee8000 1}
       {x45c0d7b1 xbe260e39 1 xbe260e39 1}
       {x45c0d370 xbf232000 1 xbf232000 1}
       {x 2
        {x45c0cd7f -}}
       {x45c0d15a x3f03c000 1 x3f03c000 1}
       {x45c0f28d -}
       {x45c0f238 -}
       {x45c0fadb x3f803000 1 x3f803000 1}
       {x45c1023e x3f948000 1 x3f948000 1}
       {x45c10d6b -}
       {x45c0fdd0 -}
       {x45c10db4 -}
       {x45c1033d xbea70925 1 xbea70925 1}
       {x45c0fb6f xbec2edb7 1 xbec2edb7 1}
       {x45c0edeb xbf505000 1 xbf505000 1}
       {x45c0d460 -}
       {x45c0f791 x400cc400 1 0 1}}
      {{x 4
        {x44724fd5 -}}
       {x44758a81 -}
       {x447449fd xbf3f0680 1 xbf3f0680 1}
       {x44740c74 xbfd1df00 1 xbfd1df00 1}
       {x4473781e -}
       {x447547a5 -}
       {x44736532 xbe853800 1 xbe853800 1}
       {x44734971 xbd80b555 1 xbd80b555 1}
       {x447340ff xbd0153b1 1 xbd0153b1 1}
       {x44732f2c -}
       {x4473e8d6 x3e5fd8da 1 x3e5fd8da 1}      x447408af
       {x4475c0b9 -}
       {x447554ff xbf647400 1 xbf647400 1}
       {x44751562 xbf1ba19a 1 xbf1ba19a 1}
       {x44749275 xbefd15b7 1 xbefd15b7 1}
       {x44727d09 xbf1cfbc7 1 xbf1cfbc7 1}
       {x4471d008 -}
       {x4473c23a x408ec500 1 x408ec500 1}
       {x44742168 x3f68b200 1 x3f68b200 1}
       {x44743693 x3e96de39 1 x3e96de39 1}
       {x4474cb22 -}
       {x4474a78e -}
       {x44752c5a x40325f00 1 x40325f00 1}
       {x44760c4c x407d5400 1 x407d5400 1}
       {x44772702 -}
       {x44750e60 -}
       {x4475486b x3e6f6e00 1 x3e6f6e00 1}
       {x44758617 x3f10b400 1 x3f10b400 1}
       {x447645a6 -}
       {x4475e75a xbf625000 1 xbf625000 1}
       {x44745d93 -}
       {x4474c448 x3f4d6a00 1 0 1}}}
        {{{x 14
        {0 -}}      0
       {x 21
        {0 -}}}
      {{x 14
        {0 -}}      0
       {x 21
        {0 -}}}}
        {{{x 14
        {0 -}}      0
       {x 21
        {0 -}}}
      {{x 14
        {0 -}}      0
       {x 21
        {0 -}}}}
        {{{x4456ac7d 0 1 xc125ab0d 1}
       {x445415d1 xc125aae6 1 xc125aae6 1}
       {x4449bb23 xc125aae0 1 xc125aae0 1}
       {x443505c7 xc125aae4 1 xc125aae4 1}
       {x44326f1b xc121e370 1 xc121e370 1}
       {x4420c959 xc1263ad0 1 xc1263ad0 1}
       {x441da7c1 xc1583200 1 xc1583200 1}
       {x441a07c9 xc130f0b5 1 xc130f0b5 1}
       {x440d1130 xc1259a80 1 xc1259a80 1}
       {x440a814d xc124ee10 1 xc124ee10 1}
       {x43fb35bd xc12c408e 1 xc12c408e 1}
       {x43e49072 xc12a0659 1 xc12a0659 1}
       {x43b62329 xc124edb1 1 xc124edb1 1}
       {x43a18fe2 xc12491c8 1 xc12491c8 1}      x425ea60d
       {xc2ee4bd1 xc1247621 1 xc1247621 1}
       {xc30b6c7a xc12490cd 1 xc12490cd 1}
       {xc316010f xc134b3da 1 xc134b3da 1}
       {xc343e4ae xc12490b8 1 xc12490b8 1}
       {xc3b6ff80 xc1295b3e 1 xc1295b3e 1}
       {xc3c135aa xbee29800 1 xbee29800 1}
       {xc3c1488c xbee29800 1 xbee29800 1}
       {xc3c4ced7 xc13e0b00 1 xc13e0b00 1}
       {xc3cd293c xc128abae 1 xc128abae 1}
       {xc3f43f20 xc1224e80 1 xc1224e80 1}
       {xc40a15ca xc122c780 1 xc122c780 1}
       {xc40bed62 xc1238880 1 xc1238880 1}
       {xc40f320e xc1323b60 1 xc1323b60 1}
       {xc4117f3d xc10ac400 1 xc10ac400 1}
       {xc413882e xc107a440 1 xc107a440 1}
       {xc419f981 xc12580e8 1 xc12580e8 1}
       {xc428384b xc12c6065 1 xc12c6065 1}
       {xc42cd40c xc1243652 1 xc1243652 1}
       {xc43a2e3c xc12b93ab 1 xc12b93ab 1}
       {xc43ce9e4 xc12be3a0 1 xc12be3a0 1}
       {xc444ec76 xc12a6070 1 0 1}}
      {{x449c0bb4 0 1 x3e882333 1}
       {x449c1436 x3e88199a 1 x3e88199a 1}
       {x449c363c x3e881955 1 x3e881955 1}
       {x449c7a49 x3e881aab 1 x3e881aab 1}
       {x449c82cb x3ea3ce00 1 x3ea3ce00 1}
       {x449ccc30 -}
       {x449bbddb xc0e55a00 1 xc0e55a00 1}
       {x449b017c -}
       {x449b0427 x3cc4d555 1 x3cc4d555 1}
       {x449b0619 x3e2fe000 1 x3e2fe000 1}
       {x449b2521 x3f14f333 1 x3f14f333 1}
       {x449d2a2f x3f92a000 1 x3f92a000 1}
       {x449d9827 x3eb2a276 1 x3eb2a276 1}
       {x449dbb53 x3e88da8e 1 x3e88da8e 1}      x449e81b5
       {x449f2a29 x3ec5093f 1 x3ec5093f 1}
       {x449fe57d -}
       {x449f43bd xbfe16733 1 xbfe16733 1}
       {x449ecbbc -}
       {x449ff6ba -}
       {x449ecb8a -}
       {x44a007c6 x40eea800 1 x40eea800 1}
       {x44a0a8da x404e5800 1 x404e5800 1}
       {x44a0d61e -}
       {x44a0cb30 -}
       {x44a13a6d x3f82f492 1 x3f82f492 1}
       {x44a1b05c -}
       {x44a14a11 xc0835200 1 xc0835200 1}
       {x44a0a9b8 -}
       {x44a201c6 -}
       {x44a1dd79 xbdf7f333 1 xbdf7f333 1}
       {x44a1d704 xbdf7f333 1 xbdf7f333 1}
       {x44a1ad8b -}
       {x44a21310 -}
       {x44a1e178 xbfbee200 1 xbfbee200 1}
       {x44a1542e xbfbb2300 1 0 1}}}
        {{{x 14
        {0 -}}      0
       {x 21
        {0 -}}}
      {{x 14
        {0 -}}      0
       {x 21
        {0 -}}}}
        {{{x 14
        {0 -}}      0
       {x 21
        {0 -}}}
      {{x 14
        {0 -}}      0
       {x 21
        {0 -}}}}
        {{{x44611789 0 1 xc125ab0d 1}
       {x445e80dd xc125aae6 1 xc125aae6 1}
       {x4454262f xc125aae0 1 xc125aae0 1}
       {x443f70d3 xc125aae4 1 xc125aae4 1}
       {x443cda27 xc121e370 1 xc121e370 1}
       {x442b3465 xc1263ad0 1 xc1263ad0 1}
       {x442812cd xc1583200 1 xc1583200 1}
       {x442472d5 xc130f0b5 1 xc130f0b5 1}
       {x44177c3c xc1259a80 1 xc1259a80 1}
       {x4414ec59 xc124ee0b 1 xc124ee0b 1}
       {x440805eb xc12c408b 1 xc12c408b 1}
       {x43f9668b xc12a0659 1 xc12a0659 1}
       {x43caf942 xc124edb1 1 xc124edb1 1}
       {x43b665fb xc12491c8 1 xc12491c8 1}      x42c2ab6a
       {xc29af36f xc1247622 1 xc1247622 1}
       {xc2c38092 xc12490cd 1 xc12490cd 1}
       {xc2d8a9bc xc134b3d6 1 xc134b3d6 1}
       {xc31a387c xc12490b8 1 xc12490b8 1}
       {xc3a22968 xc1295b40 1 xc1295b40 1}
       {xc3ac5f92 xbee29800 1 xbee29800 1}
       {xc3ac7274 xbee29800 1 xbee29800 1}
       {xc3aff8bf xc13e0b00 1 xc13e0b00 1}
       {xc3b85324 xc128abae 1 xc128abae 1}
       {xc3df6908 xc1224e85 1 xc1224e85 1}
       {xc3ff557e xc122c780 1 xc122c780 1}
       {xc4018256 xc1238860 1 xc1238860 1}
       {xc404c702 xc1323b60 1 xc1323b60 1}
       {xc4071431 xc10ac400 1 xc10ac400 1}
       {xc4091d22 xc107a440 1 xc107a440 1}
       {xc40f8e75 xc12580e8 1 xc12580e8 1}
       {xc41dcd3f xc12c6065 1 xc12c6065 1}
       {xc4226900 xc1243652 1 xc1243652 1}
       {xc42fc330 xc12b93ab 1 xc12b93ab 1}
       {xc4327ed8 xc12be3a0 1 xc12be3a0 1}
       {xc43a816a xc12a6070 1 0 1}}
      {{x44a12013 0 1 x3e882333 1}
       {x44a12895 x3e88199a 1 x3e88199a 1}
       {x44a14a9b x3e881955 1 x3e881955 1}
       {x44a18ea8 x3e881aab 1 x3e881aab 1}
       {x44a1972a x3ea3ce00 1 x3ea3ce00 1}
       {x44a1e08f -}
       {x44a0d23a xc0e55a00 1 xc0e55a00 1}
       {x44a015db -}
       {x44a01886 x3cc4d555 1 x3cc4d555 1}
       {x44a01a78 x3e2fe000 1 x3e2fe000 1}
       {x44a03980 x3f14f333 1 x3f14f333 1}
       {x44a23e8e x3f92a000 1 x3f92a000 1}
       {x44a2ac86 x3eb2a276 1 x3eb2a276 1}
       {x44a2cfb2 x3e88da8e 1 x3e88da8e 1}      x44a39614
       {x44a43e88 x3ec5093f 1 x3ec5093f 1}
       {x44a4f9dc -}
       {x44a4581c xbfe16733 1 xbfe16733 1}
       {x44a3e01b -}
       {x44a50b19 -}
       {x44a3dfe9 -}
       {x44a51c25 x40eea880 1 x40eea880 1}
       {x44a5bd3a x404e5800 1 x404e5800 1}
       {x44a5ea7d -}
       {x44a5df8f -}
       {x44a64ecc x3f82f492 1 x3f82f492 1}
       {x44a6c4bb -}
       {x44a65e70 xc0835200 1 xc0835200 1}
       {x44a5be17 -}
       {x44a71625 -}
       {x44a6f1d8 xbdf7f333 1 xbdf7f333 1}
       {x44a6eb63 xbdf7f333 1 xbdf7f333 1}
       {x44a6c1ea -}
       {x44a7276f -}
       {x44a6f5d7 xbfbee200 1 xbfbee200 1}
       {x44a6688d xbfbb2300 1 0 1}}}
        {{{x 14
        {0 -}}      0
       {x 21
        {0 -}}}
      {{x 14
        {0 -}}      0
       {x 21
        {0 -}}}}}}     idem}
     {tx x44912000 x4529fd6b x448fc56a}
     {a fx x41500000 fy x41500000 osw x41200000 osf 0 str 1 spx x450e0000 spy x44c5c000 sb 1 ltn x44912000 ltm x44912000 tt x40800000}}
    {curvegroup BezierCusped1 512 bezier
     {{cc
       {f 8192}
       {px
        {x447a4000 x447a8000 x447b8000 x447d8000 x447dc000 x447e0000 x447f8000 x447fc000 x44800000 x44806000 x4480a000 x4480c000 x44816000 x4481e000 x44830000 x44838000 x4486c000 x4488e000 x44892000 x44894000 x4489c000 x448a2000 x448be000 x448c0000 x448c2000 x448c4000 x448c6000 x448cc000 x448ce000 x448d0000 x448d6000 x448e2000 x448e4000 x448e6000 x448e8000 x448ea000 x448f0000 x448fa000 x448fe000 x44908000 x4490a000 x44910000 x44912000}
        {{{x 16
        {0 -}}      0
       {x 26
        {0 -}}}
      {{x 16
        {0 -}}      0
       {x 26
        {0 -}}}}
        {{{x44814c62 0 1 xc12365f3 1}
       {x44800596 xc123661a 1 xc123661a 1}
       {x4475d4ca xc1236620 1 xc1236620 1}
       {x44616806 xc123661c 1 xc123661c 1}
       {x445eda6e xc1236600 1 xc1236600 1}
       {x445c4cd6 xc11f12e5 1 xc11f12e5 1}
       {x444d745d xc1240a9b 1 xc1240a9b 1}
       {x444a5bad xc155f280 1 xc155f280 1}
       {x4446c4c9 xc133f190 1 xc133f190 1}
       {x443f1c94 xc1232c9a 1 xc1232c9a 1}
       {x443a054d xc122e1ab 1 xc122e1ab 1}
       {x44377a00 xc122dd00 1 xc122dd00 1}
       {x442ac095 xc129ff80 1 xc129ff80 1}
       {x441f9212 xc127c41e 1 xc127c41e 1}
       {x4408acbf xc122ab6c 1 xc122ab6c 1}
       {x43fd0e80 xc1224f80 1 xc1224f80 1}      x4372523c
       {x428bd2e8 xc1223349 1 xc1223349 1}
       {x4247b30b xc1224e85 1 xc1224e85 1}
       {x421deaec xc132c683 1 xc132c683 1}
       {xc0be28c7 xc1224e71 1 xc1224e71 1}
       {xc1fc3cb3 xc121839a 1 xc121839a 1}
       {xc3318d1a xc12d1ebd 1 xc12d1ebd 1}
       {xc341d468 -}
       {xc341be83 -}
       {xc346c576 xc13da178 1 xc13da178 1}
       {xc35972b2 xc136cff0 1 xc136cff0 1}
       {xc3747972 xc114b104 1 xc114b104 1}
       {xc37e9ef3 xc1225810 1 xc1225810 1}
       {xc384623a xc120fd54 1 xc120fd54 1}
       {xc3936f24 xc1247e0e 1 xc1247e0e 1}
       {xc3b2a5ae xc11f369b 1 xc11f369b 1}
       {xc3b64316 xc1214fd0 1 xc1214fd0 1}
       {xc3bcbaab xc13002d0 1 xc13002d0 1}
       {xc3c14343 xc1088b50 1 xc1088b50 1}
       {xc3c54360 xc1056b98 1 xc1056b98 1}
       {xc3d1f0b6 xc1234848 1 xc1234848 1}
       {xc3ee1572 xc12a27c0 1 xc12a27c0 1}
       {xc3f72968 xc121fda5 1 xc121fda5 1}
       {xc408c277 xc1295b00 1 xc1295b00 1}
       {xc40b753c xc129ab00 1 xc129ab00 1}
       {xc4135d27 xc12714c0 1 xc12714c0 1}
       {xc415e688 xc11ffa00 1 0 1}}
      {{x44bb4bb1 0 1 x3edbb000 1}
       {x44bb596c x3edbb000 1 x3edbb000 1}
       {x44bb9058 x3edbb000 1 x3edbb000 1}
       {x44bbfe30 x3edbb000 1 x3edbb000 1}
       {x44bc0beb x3edbb000 1 x3edbb000 1}
       {x44bc19a6 x3f04aa49 1 x3f04aa49 1}
       {x44bc8000 -}
       {x44bb70c6 xc0e33000 1 xc0e33000 1}
       {x44bab9a0 -}
       {x44babb4c x3cc96666 1 x3cc96666 1}
       {x44babd8f x3d8caaab 1 x3d8caaab 1}
       {x44bac1e4 x3ebc7800 1 x3ebc7800 1}
       {x44bb043c x3f9f399a 1 x3f9f399a 1}
       {x44bd1f06 x3fd31400 1 x3fd31400 1}
       {x44bdbd55 x3f044800 1 x3f044800 1}
       {x44bdf5fb x3edec2b9 1 x3edec2b9 1}      x44bf47a2
       {x44c04bb1 x3f0de555 1 x3f0de555 1}
       {x44c11425 -}
       {x44c07560 xbfc72800 1 xbfc72800 1}
       {x44c01b33 -}
       {x44c0d69f -}
       {x44c0b9d3 xbe4576db 1 xbe4576db 1}
       {x44c0734c -}
       {x44c1ba06 x40c41080 1 x40c41080 1}
       {x44c1fb6d x40441300 1 x40441300 1}
       {x44c27e19 -}
       {x44c1fef6 -}
       {x44c20cb9 x3edc3000 1 x3edc3000 1}
       {x44c21a7c x3fa52400 1 x3fa52400 1}
       {x44c2e227 x3f82b8e4 1 x3f82b8e4 1}
       {x44c3409c x3f78b800 1 x3f78b800 1}
       {x44c3bbc8 -}
       {x44c35aba xc07c2a00 1 xc07c2a00 1}
       {x44c2bf9e -}
       {x44c41ce9 -}
       {x44c40852 -}
       {x44c41c0e -}
       {x44c3fd10 -}
       {x44c47cc4 -}
       {x44c45069 xbfa9ee00 1 xbfa9ee00 1}
       {x44c3d2d6 -}
       {x44c3e099 x3f252400 1 0 1}}}
        {{{x 16
        {0 -}}      0
       {x 26
        {0 -}}}
      {{x 16
        {0 -}}      0
       {x 26
        {0 -}}}}
        {{{x 16
        {0 -}}      0
       {x 26
        {0 -}}}
      {{x 16
        {0 -}}      0
       {x 26
        {0 -}}}}
        {{{x45c14060 0 1 x3c273333 1}
       {x45c14075 x3c29999a 1 x3c29999a 1}
       {x45c140ca x3c2aaaab 1 x3c2aaaab 1}
       {x45c14175 x3d004000 1 x3d004000 1}
       {x45c1441c -}
       {x45c13d93 xbe89a492 1 xbe89a492 1}
       {x45c1350e xbe6ea492 1 xbe6ea492 1}
       {x45c13086 xbfd98000 1 xbfd98000 1}
       {x45c11447 -}
       {x45c11d48 x3f1d0000 1 x3f1d0000 1}
       {x45c12ccf -}
       {x45c11e88 -}
       {x45c11ea2 x3bb71c72 1 x3bb71c72 1}
       {x45c11eef x3cc3b13b 1 x3cc3b13b 1}
       {x45c1211e -}
       {x45c11ece xbd6f677d 1 xbd6f677d 1}      x45c104ff
       {x45c10b24 -}
       {x45c12185 x3fb68555 1 x3fb68555 1}
       {x45c12d5d x3f1c4ccd 1 x3f1c4ccd 1}
       {x45c139f1 x3e875249 1 x3e875249 1}
       {x45c13c2a -}
       {x45c117c2 -}
       {x45c1483d -}
       {x45c1266a -}
       {x45c12673 x3c580000 1 x3c580000 1}
       {x45c14213 x3f0a2000 1 x3f0a2000 1}
       {x45c14664 x3de70000 1 x3de70000 1}
       {x45c146b1 x3de70000 1 x3de70000 1}
       {x 3
        {x45c1501b -}}
       {x45c158ea x3f81a000 1 x3f81a000 1}
       {x45c1604f x3f94a000 1 x3f94a000 1}
       {x45c16b7e -}
       {x45c15be5 -}
       {x45c16c38 -}
       {x45c1620e xbea15b6e 1 xbea15b6e 1}
       {x45c15a92 xbeb736db 1 xbeb736db 1}
       {x45c14e04 xbf4b3000 1 xbf4b3000 1}
       {x45c13479 -}
       {x45c1584a -}
       {x45c14db5 xbffdf800 1 0 1}}
      {{x449f494d 0 1 xbd558ccd 1}
       {x449f47a2 xbd556666 1 xbd556666 1}
       {x449f40f7 xbd555555 1 xbd555555 1}
       {x449f33a2 -}
       {x44a17e1a x4153a140 1 x4153a140 1}
       {x44a28227 -}
       {x44a208a5 xbf5c836e 1 xbf5c836e 1}
       {x44a1c134 xc0b78500 1 xc0b78500 1}
       {x44a0999b -}
       {x44a12126 x4016639a 1 x4016639a 1}
       {x44a21194 -}
       {x44a12099 xbf2f9333 1 xbf2f9333 1}
       {x44a0fc05 xbe522000 1 xbe522000 1}
       {x44a0e580 xbe32c000 1 xbe32c000 1}
       {x44a0b367 -}
       {x44a0fdee x3e115d47 1 x3e115d47 1}      x44a0c467
       {x44a188e8 -}
       {x44a13c74 xbf899d55 1 xbf899d55 1}
       {x44a121b2 -}
       {x44a16482 x3efbd492 1 x3efbd492 1}
       {x44a18fdf -}
       {x44a1226c -}
       {x44a20a30 -}
       {x44a10906 xc00ce200 1 xc00ce200 1}
       {x44a0f18b -}
       {x44a1c3d5 -}
       {x44a14d9a xbf8de400 1 xbf8de400 1}
       {x44a135f1 -}
       {x44a18f81 -}
       {x44a1792f xbe991000 1 xbe991000 1}
       {x44a13968 -}
       {x44a16ad3 x40202400 1 x40202400 1}
       {x44a1d98c x407ab900 1 x407ab900 1}
       {x44a2658c -}
       {x44a157be xbf8bc000 1 xbf8bc000 1}
       {x44a134ce xbf198100 1 xbf198100 1}
       {x44a0be3d -}
       {x44a0d0e4 -}
       {x44a07272 xbfd3baab 1 xbfd3baab 1}
       {x449f934c xbe742000 1 xbe742000 1}
       {x449f8bab xbe742000 1 xbe742000 1}
       {x449e3ea2 xc177de80 1 0 1}}}
        {{{x 16
        {0 -}}      0
       {x 26
        {0 -}}}
      {{x 16
        {0 -}}      0
       {x 26
        {0 -}}}}
        {{{x 16
        {0 -}}      0
       {x 26
        {0 -}}}
      {{x 16
        {0 -}}      0
       {x 26
        {0 -}}}}
        {{{x 4
        {x45c0ed2e -}}
       {x45c0efc0 x3f76c000 1 x3f76c000 1}
       {x45c0fea7 -}
       {x45c0f65d xbe70b6db 1 xbe70b6db 1}
       {x45c0f17d xbfea0000 1 xbfea0000 1}
       {x45c0d53d -}
       {x45c0de38 x3f1cd99a 1 x3f1cd99a 1}
       {x45c0edbf -}
       {x45c0debd -}
       {x45c0dec5 x3ae38e39 1 x3ae38e39 1}
       {x45c0dedd x3bf3b13b 1 x3bf3b13b 1}
       {x45c0df8b -}
       {x45c0dc2a xbd9e82b9 1 xbd9e82b9 1}      x45c0bdc6
       {x45c0c271 -}
       {x45c0d862 x3fb24000 1 x3fb24000 1}
       {x45c0e3dd x3f0f6666 1 x3f0f6666 1}
       {x45c0eeca x3e448000 1 x3e448000 1}
       {x45c0f053 -}
       {x45c0874d -}
       {x45c0f5cc -}
       {x45c0d393 -}
       {x45c0d399 x3c100000 1 x3c100000 1}
       {x45c0ef2d -}
       {x45c0dcb3 -}
       {x45c0dcb8 x3bf00000 1 x3bf00000 1}
       {x 2
        {x45c0e601 -}}
       {x45c0e978 x3e5dc000 1 x3e5dc000 1}
       {x45c0f247 x3f81c000 1 x3f81c000 1}
       {x45c0f9b0 x3f94e800 1 x3f94e800 1}
       {x45c104e4 -}
       {x45c0f551 -}
       {x45c10684 -}
       {x45c0fcf5 xbe95edb7 1 xbe95edb7 1}
       {x45c0f61e xbe9f9249 1 xbe9f9249 1}
       {x45c0eb81 xbf40d555 1 xbf40d555 1}
       {x45c0d1f6 -}
       {x45c0f708 -}
       {x45c0ed2e xbfec7000 1 0 1}}
      {{x 4
        {x44996e82 -}}
       {x449bbaa5 x4152d380 1 x4152d380 1}
       {x449cb9d0 -}
       {x449c40d7 xbf5b8a49 1 xbf5b8a49 1}
       {x449bf9b7 xc0b68200 1 xc0b68200 1}
       {x449ad3d3 -}
       {x449b60bf x40188a66 1 x40188a66 1}
       {x449c512d -}
       {x449b6060 xbf03de66 1 xbf03de66 1}
       {x449b44e7 xbe17ae39 1 xbe17ae39 1}
       {x449b35b7 xbdf02c4f 1 xbdf02c4f 1}
       {x449b141e -}
       {x449b65fa x3e2fdf52 1 x3e2fdf52 1}      x449b48dc
       {x449c166e -}
       {x449bd032 xbf7cd800 1 xbf7cd800 1}
       {x449bb79d -}
       {x449c04dc x3f11936e 1 x3f11936e 1}
       {x449c36fe -}
       {x449b748a -}
       {x449cbeb6 -}
       {x449bbda8 xbff5a000 1 xbff5a000 1}
       {x449ba930 -}
       {x449c7e8f -}
       {x449c0965 xbf89bb00 1 xbf89bb00 1}
       {x449bf4d4 -}
       {x449c51b5 -}
       {x449c3e45 xbe854aab 1 xbe854aab 1}
       {x449c06bb -}
       {x449c3b85 x4023c700 1 x4023c700 1}
       {x449caa82 x407b4700 1 x407b4700 1}
       {x449d36cc -}
       {x449c2950 xbf2a4800 1 xbf2a4800 1}
       {x449c1407 xbeb2a000 1 xbeb2a000 1}
       {x449bd000 -}
       {x449beb16 -}
       {x449b936a xbfccb4ab 1 xbfccb4ab 1}
       {x449ab807 -}
       {x449ab8d9 -}
       {x44996e82 xc177c140 1 0 1}}}
        {{{x 16
        {0 -}}      0
       {x 26
        {0 -}}}
      {{x 16
        {0 -}}      0
       {x 26
        {0 -}}}}
        {{{x 16
        {0 -}}      0
       {x 26
        {0 -}}}
      {{x 16
        {0 -}}      0
       {x 26
        {0 -}}}}
        {{{x447fe152 0 1 xc123660d 1}
       {x447d53ba xc12365e6 1 xc12365e6 1}
       {x44731d5c xc12365e5 1 xc12365e5 1}
       {x445eb09f xc12365eb 1 xc12365eb 1}
       {x445c2307 xc1236600 1 xc1236600 1}
       {x4459956f xc11f12b7 1 xc11f12b7 1}
       {x444abcfb xc1240a65 1 xc1240a65 1}
       {x4447a44c xc155f260 1 xc155f260 1}
       {x44440d68 xc133f160 1 xc133f160 1}
       {x443c6536 xc1232c66 1 xc1232c66 1}
       {x44374df0 xc122e180 1 xc122e180 1}
       {x4434c2a4 xc122dcc0 1 xc122dcc0 1}
       {x4428093e xc129ff39 1 xc129ff39 1}
       {x441cdac0 xc127c3d9 1 xc127c3d9 1}
       {x4405f576 xc122ab2f 1 xc122ab2f 1}
       {x43f79ff5 xc1224f45 1 xc1224f45 1}      x43677586
       {x426c33f4 xc122330e 1 xc122330e 1}
       {x421c414b xc1224e4c 1 xc1224e4c 1}
       {x41e4f276 xc132c648 1 xc132c648 1}
       {xc1866d1f xc1224e37 1 xc1224e37 1}
       {xc2298fa5 xc1218360 1 xc1218360 1}
       {xc33c693a xc12d1e83 1 xc12d1e83 1}
       {xc34cb084 -}
       {xc34c9a9b -}
       {xc351a18a xc13da138 1 xc13da138 1}
       {xc3644ec2 xc136cfb4 1 xc136cfb4 1}
       {xc37f5577 xc114b0c8 1 xc114b0c8 1}
       {xc384bd7a xc12257d8 1 xc12257d8 1}
       {xc389d039 xc120fd18 1 xc120fd18 1}
       {xc398dd1d xc1247dd2 1 xc1247dd2 1}
       {xc3b8139c xc11f3660 1 xc11f3660 1}
       {xc3bbb102 xc1214f80 1 xc1214f80 1}
       {xc3c22894 xc1300290 1 xc1300290 1}
       {xc3c6b12b xc1088b20 1 xc1088b20 1}
       {xc3cab146 xc1056b58 1 xc1056b58 1}
       {xc3d75e96 xc123480c 1 xc123480c 1}
       {xc3f38349 xc12a2789 1 xc12a2789 1}
       {xc3fc973c xc121fd72 1 xc121fd72 1}
       {xc40b795d xc1295acb 1 xc1295acb 1}
       {xc40e2c21 xc129aac0 1 xc129aac0 1}
       {xc4161409 xc1271480 1 xc1271480 1}
       {xc4189d69 xc11ff9c0 1 0 1}}
      {{x44b64ed0 0 1 x3ed7ce66 1}
       {x44b65c4d x3ed7d333 1 x3ed7d333 1}
       {x44b69242 x3ed7d555 1 x3ed7d555 1}
       {x44b6fe2d x3ed7d555 1 x3ed7d555 1}
       {x44b70baa x3ed7d000 1 x3ed7d000 1}
       {x44b71927 x3f029249 1 x3f029249 1}
       {x44b77dea -}
       {x44b66e98 xc0e35b00 1 xc0e35b00 1}
       {x44b5b734 -}
       {x44b5b8da x3cc6999a 1 x3cc6999a 1}
       {x44b5bb15 x3d8ac000 1 x3d8ac000 1}
       {x44b5bf5b x3eb9eaab 1 x3eb9eaab 1}
       {x44b600cd x3f9d119a 1 x3f9d119a 1}
       {x44b81a95 x3fd00800 1 x3fd00800 1}
       {x44b8b69b x3f024000 1 x3f024000 1}
       {x44b8ee3d x3edab20b 1 x3edab20b 1}      x44ba394d
       {x44bb3906 x3f0bd7a5 1 x3f0bd7a5 1}
       {x44bc00da -}
       {x44bb61f2 xbfc84733 1 xbfc84733 1}
       {x44bb0681 -}
       {x44bbc16a -}
       {x44bba10f xbe5c0666 1 xbe5c0666 1}
       {x44bb5a47 -}
       {x44bca0c0 x40c37200 1 x40c37200 1}
       {x44bce1e6 x40439100 1 x40439100 1}
       {x44bd6451 -}
       {x44bce46b -}
       {x44bcf1ed x3ed82000 1 x3ed82000 1}
       {x44bcff6f x3fa21800 1 x3fa21800 1}
       {x44bdc657 x3f81b4e4 1 x3f81b4e4 1}
       {x44be2346 x3f76b000 1 x3f76b000 1}
       {x44be9e31 -}
       {x44be3ce2 xc07cac00 1 xc07cac00 1}
       {x44bda185 -}
       {x44befe8f -}
       {x44bee935 -}
       {x44befbac -}
       {x44bedc2b -}
       {x44bf5a9b -}
       {x44bf2dff xbfaaf200 1 xbfaaf200 1}
       {x44beafa9 -}
       {x44bebd2a x3f220c00 1 0 1}}}
        {{{x 16
        {0 -}}      0
       {x 26
        {0 -}}}
      {{x 16
        {0 -}}      0
       {x 26
        {0 -}}}}}}     idem}
     {tx x44912000 x4510a8bd x44a6a7bf}
     {a fx x41500000 fy x41500000 osw x41200000 osf 0 str 1 spx x450e0000 spy x44c5c000 sb 1 ltn x44912000 ltm x44912000 tt x40a00000}}}}}}
toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { selectCurves str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 tt 5 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { addPoints str 1 ssx 1 ssy 1 sf 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
toolbar_brush_hardness 0.200000003
toolbar_source_transform_scale {1 1}
toolbar_source_transform_center {2272 1582}
colorOverlay {0 0 0 0}
lifetime_type "all frames"
lifetime_start 1161
lifetime_end 1161
motionblur_shutter_offset_type centred
feather 13
source_black_outside true
name Roto4
selected true
xpos 6508
ypos 9672
}
CornerPin2D {
to1 {{Tracker2.tracks.2.track_x} {Tracker2.tracks.2.track_y}}
to2 {{Tracker2.tracks.4.track_x} {Tracker2.tracks.4.track_y}}
to3 {{Tracker2.tracks.3.track_x} {Tracker2.tracks.3.track_y}}
to4 {{Tracker2.tracks.1.track_x} {Tracker2.tracks.1.track_y}}
invert false
from1 {{Tracker2.tracks.2.track_x(1.0)} {Tracker2.tracks.2.track_y(1.0)}}
from2 {{Tracker2.tracks.4.track_x(1.0)} {Tracker2.tracks.4.track_y(1.0)}}
from3 {{Tracker2.tracks.3.track_x(1.0)} {Tracker2.tracks.3.track_y(1.0)}}
from4 {{Tracker2.tracks.1.track_x(1.0)} {Tracker2.tracks.1.track_y(1.0)}}
name CornerPin2D2
selected true
xpos 6513
ypos 9735
}
Dot {
name Dot59
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 6547
ypos 9801
}
set N336f6b00 [stack 0]
Read {
inputs 0
file_type exr
file /coppi/proj/thrg/ftrack/assets/s01e01/015-0250/img/thrg_s01e01_015-0250_matte_mb_l1_v001_matte_mb_l2_raw/thrg_s01e01_015-0250_matte_mb_l1_matte_mb_l2_raw_v001.%04d.exr
format "4544 3164 0 0 4544 3164 1 Project Resolution"
first 1001
last 1161
origfirst 1001
origlast 1161
origset true
name matte_mb_l1_matte_mb_l2_raw
tile_color 0x14a14aff
selected true
xpos -554
ypos -20014
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname matte_mb_l2_raw
addUserKnob {20 ftrack}
addUserKnob {1 componentId}
componentId 20837b52-f24f-4f72-b6b1-c2e9a057c8fa
addUserKnob {1 componentName}
componentName matte_mb_l2_raw
addUserKnob {1 assetVersionId}
assetVersionId 2921fbdf-addd-49df-a58c-c2203505b012
addUserKnob {1 assetVersion}
assetVersion 1
addUserKnob {1 assetName}
assetName matte_mb_l1
addUserKnob {1 assetType}
assetType img
addUserKnob {4 versionType l "Version Type" M {latest stable pinned}}
}
Expression {
expr0 r
expr1 g
expr2 b
expr3 clamp(r+g+b)
name Expression24
selected true
xpos -554
ypos -19896
}
Dot {
name Dot116
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos -520
ypos -19856
}
Dot {
name Dot99
tile_color 0x949494ff
label matte2
note_font_size 42
note_font_color 0xffffffff
selected true
xpos -537
ypos -18266
}
Dot {
name Dot134
tile_color 0x949494ff
label matte2
note_font_size 42
note_font_color 0xffffffff
selected true
xpos -521
ypos -17597
}
Dot {
name Dot56
tile_color 0x949494ff
label matte2
note_font_size 42
note_font_color 0xffffffff
selected true
xpos -559
ypos -5417
}
Dot {
name Dot44
tile_color 0x949494ff
label matte2
note_font_size 42
note_font_color 0xffffffff
selected true
xpos -596
ypos 3772
}
Dot {
name Dot508
tile_color 0x949494ff
label matte2
note_font_size 42
note_font_color 0xffffffff
selected true
xpos -610
ypos 8141
}
set N336dab00 [stack 0]
Dot {
name Dot432
tile_color 0xd8b700ff
label "\n From: matte2"
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 4646
ypos 8056
hide_input true
}
Dot {
name Dot420
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 5146
ypos 7870
}
Dot {
name Dot421
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 5147
ypos 7950
}
set N336d9600 [stack 0]
Shuffle2 {
fromInput1 {{0} B}
fromInput2 {{0} B}
mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.red 0 0 rgba.blue 0 2 rgba.red 0 0 rgba.alpha 0 3"
name Shuffle4
label "\[value in1]"
selected true
xpos 5113
ypos 7968
}
push $N336d9600
Dot {
name Dot422
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 5063
ypos 7950
}
Shuffle2 {
fromInput1 {{0} B}
fromInput2 {{0} B}
mappings "4 rgba.green 0 1 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.green 0 1 rgba.alpha 0 3"
name Shuffle6
label "\[value in1]"
selected true
xpos 5029
ypos 7991
}
Dot {
name Dot423
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 5063
ypos 8083
}
ChannelMerge {
inputs 2
operation from
name ChannelMerge18
selected true
xpos 5113
ypos 8067
}
Group {
name key_chew3
help "======== KeyChew beta ========\n=============================\n\nThis is a port of the KeyChew macro for Shake to Nuke.\n\nThere might be tiny differences on the results given in both apps. Some of them are caused by the internal algorithms of each app, and others by the way I faked the JSplineV\nexpression of Shake in Nuke. If you know a better way to solve this, let\nme know!!\n\n=============================\n             2009 Cuco Bures\n============================="
selected true
xpos 5113
ypos 8117
addUserKnob {20 Controls}
addUserKnob {7 chew t "\t\t" R -200 200}
chew 7
addUserKnob {7 soften R 0 200}
soften 20
addUserKnob {6 matteMult +STARTLINE}
}
Input {
inputs 0
name Input
xpos -40
ypos -9
}
set N336ae400 [stack 0]
Dot {
name Dot1
xpos 324
ypos -6
}
set N336add00 [stack 0]
push $N336add00
Invert {
name Invert1
xpos 176
ypos 33
}
push $N336add00
Switch {
inputs 2
which {{"\[value chew]>=0?0:1"}}
name Switch1
xpos 180
ypos 87
}
Blur {
size {{"(floor(abs(\[value chew]))/4)+(floor(abs(\[value chew]))/8)"}}
name FgEdgeBlur
xpos 180
ypos 129
}
Grade {
channels alpha
multiply {1 1 1 {max(FgEdgeBlur.size*1.5,1)}}
black_clamp false
name FgEdgeMult
xpos 180
ypos 177
}
Grade {
channels alpha
gamma {1 1 1 {JSplineVFake(floor(abs(chew)))}}
name FgEdgeGamma1
xpos 180
ypos 225
addUserKnob {20 User}
addUserKnob {7 JSplineVFake}
JSplineVFake {{curve l 0.9958 k x5 0.95 0.8 x20 0.5 x40 0.3 x80 0.2 l x200 0.1}}
}
set N33488800 [stack 0]
Merge2 {
inputs 2
operation minus
name Merge1
xpos 290
ypos 231
}
push $N33488800
Switch {
inputs 2
which {{"\[value chew]>=0?0:1"}}
name Switch2
xpos 180
ypos 279
}
Clamp {
name Clamp2
xpos 180
ypos 321
}
Blur {
size {{"(floor(abs(\[value soften]))/4)+(floor(abs(\[value soften]))/8)"}}
name BlurResult
xpos 180
ypos 441
}
push $N336ae400
ShuffleCopy {
inputs 2
name ShuffleCopy1
xpos -40
ypos 447
}
Premult {
name Premult1
xpos -40
ypos 495
disable {{"1-\[value matteMult]"}}
}
Output {
name Output1
xpos -40
ypos 567
}
end_group
Dot {
name Dot424
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 5146
ypos 8168
}
set N33464100 [stack 0]
push $N33464100
Dot {
name Dot425
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 5062
ypos 8168
}
Dot {
name Dot426
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 5063
ypos 8217
}
ChannelMerge {
inputs 2
A rgba.red
operation out
name ChannelMerge19
selected true
xpos 5112
ypos 8201
disable true
}
Dot {
name Dot427
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 5144
ypos 8316
}
Defocus {
channels rgba
defocus 2.1
name Defocus4
selected true
xpos 5111
ypos 8398
}
Dot {
name Dot428
tile_color 0x949494ff
label windows
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 5145
ypos 8466
}
Dot {
name Dot429
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 5145
ypos 9502
}
set N33448f00 [stack 0]
Dot {
name Dot5
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 5979
ypos 9502
}
Read {
inputs 0
file_type exr
file /coppi/proj/thrg/ftrack/assets/s01e01/015-0250/img/thrg_s01e01_015-0250_matte_mb_l1_v001_matte_mb_l1_raw/thrg_s01e01_015-0250_matte_mb_l1_matte_mb_l1_raw_v001.%04d.exr
format "4544 3164 0 0 4544 3164 1 Project Resolution"
first 1001
last 1161
origfirst 1001
origlast 1161
origset true
name matte_mb_l1_matte_mb_l1_raw
tile_color 0x14a14aff
selected true
xpos -751
ypos -20010
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname matte_mb_l1_raw
addUserKnob {20 ftrack}
addUserKnob {1 componentId}
componentId e6f99f23-0ea5-415e-91b0-b24db1267f09
addUserKnob {1 componentName}
componentName matte_mb_l1_raw
addUserKnob {1 assetVersionId}
assetVersionId 2921fbdf-addd-49df-a58c-c2203505b012
addUserKnob {1 assetVersion}
assetVersion 1
addUserKnob {1 assetName}
assetName matte_mb_l1
addUserKnob {1 assetType}
assetType img
addUserKnob {4 versionType l "Version Type" M {latest stable pinned}}
}
Expression {
expr0 r
expr1 g
expr2 b
expr3 clamp(r+g+b)
name Expression25
selected true
xpos -751
ypos -19902
}
Dot {
name Dot117
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos -717
ypos -19861
}
Dot {
name Dot98
tile_color 0x949494ff
label matte1
note_font_size 42
note_font_color 0xffffffff
selected true
xpos -734
ypos -18263
}
Dot {
name Dot130
tile_color 0x949494ff
label matte1
note_font_size 42
note_font_color 0xffffffff
selected true
xpos -734
ypos -17824
}
Dot {
name Dot53
tile_color 0x949494ff
label matte1
note_font_size 42
note_font_color 0xffffffff
selected true
xpos -763
ypos -5429
}
Dot {
name Dot43
tile_color 0x949494ff
label matte1
note_font_size 42
note_font_color 0xffffffff
selected true
xpos -790
ypos 3771
}
Dot {
name Dot507
tile_color 0x949494ff
label matte1
note_font_size 42
note_font_color 0xffffffff
selected true
xpos -807
ypos 7955
}
set N3341c800 [stack 0]
Dot {
name Dot419
tile_color 0xd8b700ff
label "\n From: matte1"
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 4639
ypos 7870
hide_input true
}
Dot {
name Dot433
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 4872
ypos 8056
}
Dot {
name Dot434
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 4872
ypos 8101
}
set N333fb200 [stack 0]
Dot {
name Dot435
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 4699
ypos 8101
}
Dot {
name Dot436
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 4699
ypos 8223
}
set N333fa400 [stack 0]
push $N333fb200
Dot {
name Dot437
tile_color 0x949494ff
label fg
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 4872
ypos 8136
}
ChannelMerge {
inputs 2
A rgba.green
B rgba.red
name ChannelMerge20
selected true
xpos 4838
ypos 8207
}
Defocus {
channels rgba
defocus 2.1
name Defocus5
selected true
xpos 4837
ypos 8399
}
Dot {
name Dot438
tile_color 0x949494ff
label "fg holdout windows"
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 4872
ypos 8477
}
Dot {
name Dot439
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 4860
ypos 9430
}
set N333f8100 [stack 0]
Dot {
name Dot442
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 6061
ypos 9430
}
ChannelMerge {
inputs 2
operation out
name ChannelMerge21
selected true
xpos 6027
ypos 9486
}
Invert {
channels alpha
name Invert4
selected true
xpos 6143
ypos 9517
}
RotoPaint {
inputs 0
cliptype bbox
curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x45191000 x44912000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier3 512 bezier
     {{cc
       {f 8192}
       {px
        {x447a4000 x447e8000 x44816000 x44828000 x4483a000 x44858000}
        {{{x3ef57800 -}}
	 {{x3f1d3000 -}}}
        {{{x441891ca 0 1 xb252d2d3 1}
	  {x4417b143 xbf1e7d69 1 xbf1e7d69 1}
	  {x440f7264 xbfecb576 1 xbfecb576 1}
	  {x440bac0c xbfa38f1c 1 xbfa38f1c 1}
	  {x4409b25c -}
	  {x44117e36 x404795cd 1 0 1}}
	 {{x44eb5700 0 1 xbcc62d2f 1}
	  {x44eb22de xbe74da5a 1 xbe74da5a 1}
	  {x44ea52d8 -}
	  {x44eae0f2 x3efca000 1 x3efca000 1}
	  {x44eb6f0c -}
	  {x44eb50c4 xbdc1cccd 1 0 1}}}
        {{{xbef56000 -}}
	 {{xbf1d2000 -}}}
        {{{0 -}}
	 {{0 -}}}
        {{{x441d5cba 0 1 xb252d2d3 1}
	  {x441c7c33 xbf1e7d69 1 xbf1e7d69 1}
	  {x44143d54 xbfecb576 1 xbfecb576 1}
	  {x441076fc xbfa38f1c 1 xbfa38f1c 1}
	  {x440e7d4c -}
	  {x44164926 x404795cd 1 0 1}}
	 {{x44df05be 0 1 xbcc62d2f 1}
	  {x44ded19c xbe74da5a 1 xbe74da5a 1}
	  {x44de0196 -}
	  {x44de8fb0 x3efca000 1 x3efca000 1}
	  {x44df1dca -}
	  {x44deff82 xbdc1cccd 1 0 1}}}
        {{{0 -}}
	 {{0 -}}}
        {{{x3ef55000 -}}
	 {{xbf6ba800 -}}}
        {{{x441ff037 0 1 xb170f0f1 1}
	  {x441f0faf xbf1e7e1e 1 xbf1e7e1e 1}
	  {x4416d0d1 xbfecb53b 1 xbfecb53b 1}
	  {x44130a7b xbfa38f00 1 xbfa38f00 1}
	  {x441110ca -}
	  {x441b63a1 x4084245a 1 0 1}}
	 {{x44df67f9 0 1 xbcc62d2f 1}
	  {x44df33d7 xbe74da5a 1 xbe74da5a 1}
	  {x44de63d1 -}
	  {x44def1ec x3efca000 1 x3efca000 1}
	  {x44df8005 -}
	  {x44df63f7 xbdb38ccd 1 0 1}}}
        {{{xbef55000 -}}
	 {{x3f6bb800 -}}}
        {{{0 -}}
	 {{0 -}}}
        {{{x441ac943 0 1 xb170f0f1 1}
	  {x4419e8bb xbf1e7e1e 1 xbf1e7e1e 1}
	  {x4411a9dd xbfecb53b 1 xbfecb53b 1}
	  {x440de387 xbfa38f00 1 xbfa38f00 1}
	  {x440be9d6 -}
	  {x4413b5af x404795b3 1 0 1}}
	 {{x44eb2fb6 0 1 xbcc62d2f 1}
	  {x44eafb94 xbe74da5a 1 xbe74da5a 1}
	  {x44ea2b8e -}
	  {x44eab9a9 x3efca000 1 x3efca000 1}
	  {x44eb47c2 -}
	  {x44eb297a xbdc1cccd 1 0 1}}}
        {{{0 -}}
	 {{0 -}}}}}
      {cc
       {f 8192}
       {px
        {x447a4000 x447e8000 x44816000 x44828000 x4483a000 x44858000}
        {{{x3ef58000 -}}
	 {{x3f1d3000 -}}}
        {{{xc1001e40 -}}
	 {{x40cac000 -}}}
        {{{xbef55000 -}}
	 {{xbf1d2000 -}}}
        {{{0 -}}
	 {{0 -}}}
        {{{xc121fd00 -}}
	 {{xbf7dc000 -}}}
        {{{0 -}}
	 {{0 -}}}
        {{{x3ef55800 -}}
	 {{xbf6bc000 -}}}
        {{{x4208c460 -}}
	 {{x41038f80 -}}}
        {{{xbef55000 -}}
	 {{x3f6be000 -}}}
        {{{0 -}}
	 {{0 -}}}
        {{{x41b20be0 -}}
	 {{x418bfa80 -}}}
        {{{0 -}}
	 {{0 -}}}}}}
     {tx x447e0000 x44150000 x44ec399a}
     {a osw x41200000 osf 0 str 1 spx x450de000 spy x44c6c000 sb 1 ltn x447e0000 ltm x447e0000 tt x40800000}}
    {curvegroup Bezier2 512 bezier
     {{cc
       {f 8192}
       {px
        {x447a4000 x447e8000 x44816000 x4483a000 x44858000}
        {{{0 -}}
	 {{0 -}}}
        {{{x440bd559 0 1 xb252d2d3 1}
	  {x440af4d2 xbf1e7d69 1 xbf1e7d69 1}
	  {x4402b5f3 xbfccbcb7 1 xbfccbcb7 1}
	  {x43f9ebd7 -}
	  {x4404c1c5 x404795c0 1 0 1}}
	 {{x44ebd764 0 1 xbcc62d2f 1}
	  {x44eba342 xbe74da5a 1 xbe74da5a 1}
	  {x44ead33c -}
	  {x44ebef70 -}
	  {x44ebd128 xbdc1cccd 1 0 1}}}
        {{{0 -}}
	 {{0 -}}}
        {{{0 -}}
	 {{0 -}}}
        {{{x4415edb6 0 1 xb252d2d3 1}
	  {x44150d2f xbf1e7d69 1 xbf1e7d69 1}
	  {x440cce50 xbfccbcbe 1 xbfccbcbe 1}
	  {x44070e48 -}
	  {x440eda22 x404795cd 1 0 1}}
	 {{x44dfff85 0 1 xbcc62d2f 1}
	  {x44dfcb63 xbe74da5a 1 xbe74da5a 1}
	  {x44defb5d -}
	  {x44e01791 -}
	  {x44dff949 xbdc1cccd 1 0 1}}}
        {{{0 -}}
	 {{0 -}}}
        {{{0 -}}
	 {{0 -}}}
        {{{x43b08410 0 1 x31f0f0f1 1}
	  {x43aec301 xbf1e7dc4 1 xbf1e7dc4 1}
	  {x439e4544 xbfccbca8 1 xbfccbca8 1}
	  {x4392c536 -}
	  {x43a25ce8 x404795b3 1 0 1}}
	 {{x44e0414e 0 1 xbcc62d2f 1}
	  {x44e00d2c xbe74da5a 1 xbe74da5a 1}
	  {x44df3d26 -}
	  {x44e0595a -}
	  {x44e03b12 xbdc1cccd 1 0 1}}}
        {{{0 -}}
	 {{0 -}}}
        {{{0 -}}
	 {{0 -}}}
        {{{x43b1cb01 0 1 xb170f0f1 1}
	  {x43b009f1 xbf1e7e1e 1 xbf1e7e1e 1}
	  {x439f8c34 xbfccbca8 1 xbfccbca8 1}
	  {x43940c26 -}
	  {x43a3a3d9 x404795c0 1 0 1}}
	 {{x44ed28d2 0 1 xbcc62d2f 1}
	  {x44ecf4b0 xbe74da5a 1 xbe74da5a 1}
	  {x44ec24aa -}
	  {x44ed40de -}
	  {x44ed2296 xbdc1cccd 1 0 1}}}
        {{{0 -}}
	 {{0 -}}}}}
      {cc
       {f 8192}
       {px
        {x447a4000 x447e8000 x44816000 x4483a000 x44858000}
        {{{0 -}}
	 {{0 -}}}
        {{{x41438040 -}}
	 {{x3f86dc00 -}}}
        {{{0 -}}
	 {{0 -}}}
        {{{0 -}}
	 {{0 -}}}
        {{{x40d81380 -}}
	 {{xc00c1a00 -}}}
        {{{0 -}}
	 {{0 -}}}
        {{{0 -}}
	 {{0 -}}}
        {{{xc222fa50 -}}
	 {{xc0967200 -}}}
        {{{0 -}}
	 {{0 -}}}
        {{{0 -}}
	 {{0 -}}}
        {{{xc2540978 -}}
	 {{xc1152d00 -}}}
        {{{0 -}}
	 {{0 -}}}}}}
     {tx x447e0000 x43d84000 x44ed6000}
     {a osw x41200000 osf 0 str 1 spx x450de000 spy x44c6c000 sb 1 ltn x447e0000 ltm x447e0000 tt x40800000}}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px
        {x447a4000 x447e8000 x44816000 x4483a000 x44858000}
        {{{0 -}}
	 {{0 -}}}
        {{{x439ee64f 0 1 x31f0f0f1 1}
	  {x439d2540 xbf1e7dc4 1 xbf1e7dc4 1}
	  {x438ca783 xbfccbca8 1 xbfccbca8 1}
	  {x43812775 -}
	  {x4390bf27 x404795b3 1 0 1}}
	 {{x45061159 0 1 xbca0da5a 1}
	  {x4505f85f xbe71e000 1 xbe71e000 1}
	  {x450590da -}
	  {x45061e60 -}
	  {x45060e3b xbdcea666 1 0 1}}}
        {{{0 -}}
	 {{0 -}}}
        {{{x41933908 0 1 xb92a5a5a 1}
	  {x41933410 xb8d87878 1 xb8d87878 1}
	  {x419331d8 -}
	  {x41933480 x38e00000 1 x38e00000 1}
	  {x41933910 x3931999a 1 0 1}}
	 {{x4221a4c0 0 1 x3834b4b5 1}
	  {x 2
	   {x4221a540 -}}
	  {x4221a500 xb7783e10 1 xb7783e10 1}
	  {x4221a4c0 xb78ebd49 1 0 1}}}
        {{{x4361e72d 0 1 x30f0f0f1 1}
	  {x435e650e xbf1e7df1 1 xbf1e7df1 1}
	  {x433d6994 xbfccbca8 1 xbfccbca8 1}
	  {x43266978 -}
	  {x434598de x404795c0 1 0 1}}
	 {{x4503bc8b 0 1 xbca0da5a 1}
	  {x4503a391 xbe71e000 1 xbe71e000 1}
	  {x45033c0c -}
	  {x4503c992 -}
	  {x4503b96d xbdcea666 1 0 1}}}
        {{{xc1098de0 0 1 x392bc3c4 1}
	  {xc10983e0 x38d87878 1 x38d87878 1}
	  {xc1097f80 -}
	  {xc10984c0 xb8df07c2 1 xb8df07c2 1}
	  {xc1098de0 xb931d7a9 1 0 1}}
	 {{xc2665b40 0 1 xb834b4b5 1}
	  {x 2
	   {xc2665bc0 -}}
	  {xc2665b80 x37783e10 1 x37783e10 1}
	  {xc2665b40 x378ebd49 1 0 1}}}
        {{{x 2
	   {xc16a7300 -}}
	  {x 3
	   {xc16a7310 -}}}
	 {{x42246f00 -}}}
        {{{x438093c8 0 1 xb1f0f0f1 1}
	  {x437da575 xbf1e7d3c 1 xbf1e7d3c 1}
	  {x435ca9fe xbfccbca1 1 xbfccbca1 1}
	  {x4345a9e1 -}
	  {x4364d946 x404795ba 1 0 1}}
	 {{x44f00993 0 1 xbcc62d2f 1}
	  {x44efd571 xbe74da5a 1 xbe74da5a 1}
	  {x44ef056b -}
	  {x44f0219f -}
	  {x44f00357 xbdc1cccd 1 0 1}}}
        {{{x408fb780 -}}
	 {{xc22b8200 -}}}
        {{{xc0d7a040 -}}
	 {{x417d5180 -}}}
        {{{x43b98b2e 0 1 xb170f0f1 1}
	  {x43b7ca1e xbf1e7e1e 1 xbf1e7e1e 1}
	  {x43a74c61 xbfccbca8 1 xbfccbca8 1}
	  {x439bcc53 -}
	  {x43ab6406 x404795c0 1 0 1}}
	 {{x44d0f79b 0 1 xbcc62d2f 1}
	  {x44d0c379 xbe74da5a 1 xbe74da5a 1}
	  {x44cff373 -}
	  {x44d10fa7 -}
	  {x44d0f15f xbdc1cccd 1 0 1}}}
        {{{x40d7a040 -}}
	 {{xc17d5180 -}}}
        {{{xbf98f600 -}}
	 {{xc18fbe00 -}}}
        {{{x43cc3dd0 0 1 x31f0f0f1 1}
	  {x43ca7cc1 xbf1e7dc4 1 xbf1e7dc4 1}
	  {x43b9ff04 xbfccbca8 1 xbfccbca8 1}
	  {x43ae7ef6 -}
	  {x43be16a8 x404795b3 1 0 1}}
	 {{x44d63e62 0 1 xbcc62d2f 1}
	  {x44d60a40 xbe74da5a 1 xbe74da5a 1}
	  {x44d53a3a -}
	  {x44d6566e -}
	  {x44d63826 xbdc1cccd 1 0 1}}}
        {{{x3f98f900 -}}
	 {{x418fbd80 -}}}}}
      {cc
       {f 8192}
       {px
        {x447a4000 x447e8000 x44816000 x4483a000 x44858000}
        {{{0 -}}
	 {{0 -}}}
        {{{x41d6b8f0 -}}
	 {{x 3
	   {x42219c00 -}}
	  {x42219c40 -}
	  {x42219c00 xb7cccccd 1 0 1}}}
        {{{0 -}}
	 {{0 -}}}
        {{{x418442d8 0 1 xb92a5a5a 1}
	  {x41843de0 xb8d87878 1 xb8d87878 1}
	  {x41843ba8 -}
	  {x41843e50 x38e00000 1 x38e00000 1}
	  {x418442e0 x3931999a 1 0 1}}
	 {{x408de800 0 1 x3834b4b5 1}
	  {x 2
	   {x408dec00 -}}
	  {x408dea00 xb7783e10 1 xb7783e10 1}
	  {x408de800 xb78ebd49 1 0 1}}}
        {{{xc28ff958 0 1 xb5b4b4b5 1}
	  {xc28ff95a -}
	  {x 3
	   {xc28ff952 -}}}
	 {{x 3
	   {x4294e600 -}}
	  {x4294e620 -}
	  {x4294e600 xb7cccccd 1 0 1}}}
        {{{x404b6fc0 0 1 x392bc3c4 1}
	  {x404b97c0 x38d87878 1 x38d87878 1}
	  {x404ba940 -}
	  {x404b9440 xb8df07c2 1 xb8df07c2 1}
	  {x404b6fc0 xb931d7a9 1 0 1}}
	 {{xc18f2b00 0 1 xb834b4b5 1}
	  {x 2
	   {xc18f2c00 -}}
	  {xc18f2b80 x37783e10 1 x37783e10 1}
	  {xc18f2b00 x378ebd49 1 0 1}}}
        {{{xc16a7310 -}}
	 {{x42246f00 -}}}
        {{{xc22ffdb0 0 1 xb470f0ee 1}
	  {xc22ffdb4 xb6169697 1 xb6169697 1}
	  {xc22ffdc4 -}
	  {xc22ffdc0 -}
	  {xc22ffdc4 xb5cccccd 1 0 1}}
	 {{x41e57a00 -}}}
        {{{x408fb780 -}}
	 {{xc22b8200 -}}}
        {{{xc0d7a040 -}}
	 {{x417d5300 -}}}
        {{{xc19bd0d0 -}}
	 {{xc2b7e920 -}}}
        {{{x40d7a0c0 -}}
	 {{xc17d5200 -}}}
        {{{xbf98f800 -}}
	 {{xc18fbdc0 -}}}
        {{{x42bb1fd4 -}}
	 {{xc2ec5b30 -}}}
        {{{x3f98f600 -}}
	 {{x418fbd40 -}}}}}}
     {tx x447e0000 x437ccccd x45029333}
     {a osw x41200000 osf 0 str 1 spx x450de000 spy x44c6c000 sb 1 ltn x447e0000 ltm x447e0000 tt x40800000}}}}}}
toolbox {selectAll {
  { selectAll src 1 str 1 ssx 1 ssy 1 sf 1 ep1 15 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 tt 6 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush opc 0.1 str 1 ssx 1 ssy 1 sf 1 sb 1 tt 17 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
toolbar_brush_hardness 0.200000003
toolbar_lifetime_type single
toolbar_effect_parameter1 15
toolbar_paint_source fg
toolbar_source_transform_scale {1 1}
toolbar_source_transform_center {2270 1590}
colorOverlay {0 0 0 0}
lifetime_type "all frames"
lifetime_start 1016
lifetime_end 1016
motionblur_shutter_offset_type centred
source_black_outside true
name RotoPaint1
selected true
xpos 6202
ypos 9054
}
CornerPin2D {
to1 {{curve x1001 3945 3946.77 3950.02 3949.11 3949.28 3950.86 3956.06 3959.42 3959.72 3956.29 3953.37 3949.63 3943.84 3937.77 3929.96 3921.94 3914.69 3907.26 3901.22 3895.29 3891.18 3887.34 3883.48 3876.02 3866.82 3857.55 3847.7 3838.87 3831.12 3825.07 3817.15 3807.57 3796.64 3787.04 3777.28 3770.54 3763.23 3756.07 3749.53 3743.13 3737.68 3734.24 3731.75 3730.47 3729.04 3726.7 3722.44 3719.16 3718.8 3718.26 3717.95 3719.91 3719.6 3720.56 3722.27 3726.08 3734.34 3741.77 3753.95 3767.42 3781.25 3793.81 3804.92 3815.46 3823.18 3829.06 3835.07 3836.83} {curve x1001 1466 1471.38 1474.85 1475.31 1472.33 1465.89 1457.69 1449.74 1441.23 1431.21 1423.06 1417.25 1415.6 1417.48 1420.13 1425.86 1431.86 1438.46 1442.85 1446.21 1448.7 1448.78 1448.2 1444.49 1440.24 1435.41 1431.37 1429.28 1429.22 1431.17 1435.33 1439.02 1442.03 1444.3 1447.73 1450.55 1451.31 1451.89 1451.6 1450.44 1448.51 1448.49 1448.33 1448.02 1448.6 1449.37 1450.62 1453.97 1458.61 1463.29 1469.43 1476 1482.38 1487.97 1493.08 1498.72 1503.07 1506.38 1512.16 1521.09 1532.16 1544.35 1558.39 1570.99 1581 1588.36 1592.11 1592.54}}
to2 {{curve x1001 4829 4830.56 4833.76 4832.51 4832.55 4833.75 4838.79 4841.07 4841.07 4836.95 4833.27 4828.88 4822.02 4815.01 4806.6 4797.91 4790.13 4782.23 4775.29 4768.46 4763.93 4759.27 4754.58 4746.67 4736.94 4727.31 4716.97 4707.52 4699.09 4692.51 4684.32 4673.94 4662.68 4652.32 4641.92 4635.01 4627.12 4619.42 4612 4605.3 4599.57 4595.82 4593.11 4591.5 4589.86 4587.35 4582.62 4578.99 4578.75 4578.14 4577.72 4579.9 4579.29 4580.41 4582.26 4586.65 4595.43 4603.39 4616.5 4630.7 4645.82 4659.13 4671.06 4682.32 4690.93 4697.44 4703.81 4706.05} {curve x1001 1466 1471.16 1474.61 1475.04 1469.84 1461.93 1453.05 1443.76 1434.88 1422.3 1413.04 1406.41 1405.38 1406.74 1409.23 1414.85 1421.79 1428.47 1432.9 1436.07 1437.38 1437.59 1436.58 1433.01 1428.59 1423.7 1420.63 1419.52 1420.4 1423.35 1428.24 1433.04 1436.59 1439.32 1443.22 1447.02 1448.04 1449.09 1448.99 1447.89 1445.74 1445.4 1445.16 1444.71 1445.27 1445.79 1446.54 1449.41 1454.22 1459.06 1464.91 1471.59 1478.39 1483.96 1488.61 1494.38 1498.86 1502.46 1509.01 1518.49 1530.87 1543.94 1558.39 1571.76 1582.52 1589.99 1593.56 1593.92}}
to3 {{curve x1001 4829 4830.63 4834.5 4834.61 4836.06 4837.76 4843.25 4846.59 4847.87 4845.01 4842.13 4838.35 4831.88 4825.27 4817.42 4808.58 4800.78 4792.91 4786.22 4779.41 4774.81 4770.03 4765.5 4757.87 4748.05 4738.34 4727.38 4716.92 4707.15 4699.45 4690.59 4679.87 4668.09 4657.25 4645.76 4638 4629.47 4621.2 4613.65 4607.1 4601.65 4597.96 4595.24 4593.65 4592.09 4590.27 4585.93 4582.45 4582.76 4582.36 4581.89 4584.26 4583.63 4584.97 4587.3 4591.56 4600.24 4607.85 4620.56 4634.27 4648.95 4662.09 4673.85 4685.01 4693.74 4700.46 4707.17 4709.69} {curve x1001 2254 2258.65 2262.24 2262.86 2257.83 2249.89 2241.01 2231.16 2222.39 2208.82 2198.4 2190.5 2188.71 2189.46 2191.33 2196.24 2202.73 2209.09 2213.29 2215.66 2216.8 2216.45 2214.91 2211.31 2206.71 2201.2 2197.68 2196.14 2196.61 2199.17 2203.65 2208.34 2211.2 2213.82 2217.5 2221.26 2222.07 2222.84 2222.48 2221.14 2218.69 2218.06 2217.64 2217.03 2217.4 2217.73 2218.3 2220.84 2225.6 2230.41 2236.2 2243.09 2250.01 2255.78 2260.66 2266.57 2271.43 2275.26 2282.13 2292.08 2305.05 2318.86 2333.82 2347.92 2359.59 2367.49 2371.85 2372.38}}
to4 {{curve x1001 3945 3946.85 3950.76 3951.21 3952.79 3954.86 3960.52 3964.94 3966.52 3964.34 3962.23 3959.11 3953.7 3948.03 3940.78 3932.61 3925.34 3917.94 3912.16 3906.24 3902.06 3898.1 3894.39 3887.21 3877.93 3868.58 3858.11 3848.27 3839.18 3832.01 3823.42 3813.5 3802.04 3791.97 3781.12 3773.53 3765.58 3757.85 3751.17 3744.93 3739.75 3736.38 3733.88 3732.61 3731.26 3729.62 3725.75 3722.63 3722.81 3722.48 3722.11 3724.27 3723.95 3725.12 3727.32 3731 3739.15 3746.24 3758 3770.99 3784.38 3796.78 3807.71 3818.15 3825.99 3832.09 3838.43 3840.47} {curve x1001 2254 2258.87 2262.48 2263.13 2260.32 2253.86 2245.66 2237.14 2228.75 2217.73 2208.41 2201.35 2198.94 2200.2 2202.23 2207.25 2212.8 2219.09 2223.24 2225.8 2228.11 2227.64 2226.54 2222.79 2218.35 2212.91 2208.42 2205.9 2205.42 2207 2210.75 2214.32 2216.64 2218.81 2222.01 2224.79 2225.34 2225.64 2225.09 2223.69 2221.45 2221.15 2220.81 2220.34 2220.73 2221.31 2222.38 2225.4 2230 2234.64 2240.72 2247.5 2254 2259.79 2265.13 2270.92 2275.63 2279.18 2285.28 2294.67 2306.34 2319.27 2333.82 2347.15 2358.07 2365.86 2370.41 2371}}
invert false
from1 {3719.16 1453.97}
from2 {4578.99 1449.41}
from3 {4582.45 2220.84}
from4 {3722.63 2225.4}
name CornerPin2D_Layer_3
label f1048
selected true
xpos 6202
ypos 9211
}
push $N341cd600
Keyer {
operation "luminance key"
range {0.07363450418 1.6 1 1}
name Keyer2
selected true
xpos 7100
ypos 8843
}
push $N341af900
Primatte3 {
data { 5
    10634 10532 32899
    65552
    0 5
    30234 30234 30234 0
    1 1 401.077 1 1 2238.11 1258.82 551.935 1268.83 2881.98 155.212 2004.62 201.509 529.342 1 1 1073.62 305.953 208.41 357.749 1 2193.53 74.5655 373.44 1 5470.6 19.8572 950.923 6883.91 322.869 44.6027 516.99 4585.07 1 1 1 3952.52 1 325.004 51.8424 1019.5 1 2778.13 988.263 1238.08 1480.19 156.794 316.126 508.002 1212.73 421.47 26024 50177.6 57400.4 1 1 51.991 10440.3 831.549 3417.03 640.453 698.349 955.598 27.4175 1 1
    130560 130560 130560 130560 130560 9012.63 12801.3 17690 130560 130560 21831.4 130560 130560 130560 130560 130560 130560 130560 29370 16663.3 130560 8601.32 130560 130560 89153.4 130560 76892.2 14435.9 13654.5 130560 130560 130560 130560 130560 130560 130560 21717.5 130560 130560 130560 130560 130560 11446.2 11631 12418.1 130560 130560 32743.6 130560 130560 130560 44939.2 51174.6 130560 120830 130560 42697.1 29861.1 130560 130560 130560 130560 130560 130560 130560 130560
    130560 130560 130560 130560 130560 9012.63 25192.9 25804.7 130560 130560 21831.4 130560 130560 130560 130560 130560 130560 130560 130560 59695.7 130560 8601.32 130560 130560 130560 130560 76892.2 19548.3 13654.5 130560 130560 130560 130560 130560 130560 130560 28659.9 130560 130560 130560 130560 130560 16668.5 20603.9 22262.4 130560 130560 32743.6 130560 130560 130560 88792.2 118587 130560 120830 130560 42697.1 29861.1 130560 130560 130560 130560 130560 130560 130560 130560
    -5.17773 -2.22551e+14 -2.22551e+14 -79570.1 2.99947e+13 2.99947e+13
    -0.0999146 -2.22551e+14 -2.22551e+14 1419.01 2.41116e+13 2.41116e+13
    -7.45703 -2.22551e+14 -2.22551e+14 -273076 -5.91079e+12 -5.91079e+12
    -20.8438 -5.00638e+13 -2.22551e+14 554479 -4.70798e+13 -1.17939e+13
    -5.18359 -2.22551e+14 -2.22551e+14 -135400 1.17939e+13 1.17939e+13
    -0.100037 -2.22551e+14 -2.22551e+14 341.471 5.91077e+12 5.91077e+12
    -7.44922 -1.5197e+14 -2.22551e+14 -353379 -7.27069e+13 -2.41116e+13
    -20.875 -3.41863e+13 -2.22551e+14 330035 -4.75964e+13 -2.99947e+13
    -2.17682e+08 -4.06321e+14 -4.06321e+14 -3.13107e+10 6.31405e+13 6.31405e+13
    -37568 -2.21033e+13 -2.91691e+13 2.29278e+08 4.07388e+13 3.67853e+13
    -6.98764e+07 -9.09617e+11 -1.32687e+12 6.83895e+08 3.47597e+12 6.32351e+12
    -1.01796e+08 -4.83626e+11 -6.11269e+12 -1.13013e+10 1.85167e+11 7.54291e+12
    -5.442e+07 -4.06321e+14 -4.06321e+14 3.69459e+09 -6.64471e+13 -6.64471e+13
    -0.183411 -4.06321e+14 -4.06321e+14 -1627.56 -2.77293e+13 -2.77293e+13
    -3.64607e+07 -4.06321e+14 -4.06321e+14 1.18527e+09 -5.28911e+12 -5.28911e+12
    -1.65227e+11 -4.06321e+14 -4.06321e+14 -1.51368e+11 -1.12531e+14 -1.12531e+14
    -7.55302e+06 -1.54584e+13 -2.04e+13 -6.35384e+10 2.56899e+13 2.9681e+13
    -0.183289 -3.7604e+14 -3.7604e+14 304.007 2.35854e+13 2.35854e+13
    -1.28051e+08 -4.06321e+14 -4.06321e+14 -4.75108e+09 2.77293e+13 2.77293e+13
    -6.14077e+08 -3.17976e+11 -6.7546e+11 -2.41999e+10 1.75201e+12 4.6606e+12
    -4.08008e+07 -4.06321e+14 -4.06321e+14 2.86407e+09 3.01221e+13 3.01221e+13
    -1.56144e+06 -4.06322e+14 -4.06322e+14 -1.2917e+09 -7.71197e+13 -7.71197e+13
    -1.46228e+09 -4.06321e+14 -4.06321e+14 5.76835e+10 -1.01858e+14 -1.01858e+14
    -2.13972e+09 -1.75017e+12 -2.43801e+13 3.17878e+11 3.46213e+12 7.22016e+12
    -1.68561e+10 -1.19975e+14 -1.19975e+14 6.49407e+10 1.55937e+14 1.55937e+14
    -1896 -2.65472e+13 -2.65472e+13 -7.45387e+07 2.42668e+13 2.42668e+13
    -2.21092e+08 -1.31556e+14 -1.31556e+14 9.90941e+09 7.079e+13 7.079e+13
    -1.25829e+08 -7.31412e+11 -1.90947e+12 2.59771e+10 -4.13718e+10 2.28181e+12
    -2.90683e+07 -5.24559e+14 -5.24559e+14 -3.71808e+09 -4.9368e+13 -4.9368e+13
    -3416 -5.24559e+14 -5.24559e+14 1.35266e+08 -1.0979e+14 -1.0979e+14
    -1.01692e+07 -5.24559e+14 -5.24559e+14 -1.73388e+07 -7.71411e+13 -7.71411e+13
    -1.86376e+11 -1.80555e+14 -3.56746e+14 -2.9994e+12 -9.48732e+12 -7.50848e+13
    -8.45005e+06 -4.06321e+14 -4.06321e+14 -7.75028e+09 6.30345e+13 6.30345e+13
    -0.181885 -4.06321e+14 -4.06321e+14 4611.55 7.86192e+13 7.86192e+13
    -15744 -5.50538e+13 -8.03079e+13 -1.34603e+09 1.91907e+14 1.8041e+14
    -4.73364e+07 -7.98389e+11 -1.23731e+13 -9.36128e+09 1.7287e+12 2.46323e+13
    -38912 -4.06321e+14 -4.06321e+14 2.01355e+09 -2.13227e+13 -2.13227e+13
    -0.183228 -4.06321e+14 -4.06321e+14 -330.441 -5.73803e+12 -5.73803e+12
    -2.0949e+07 -4.06321e+14 -4.06321e+14 4.69924e+09 -2.72804e+13 -2.72804e+13
    -2.63455e+07 -1.08753e+14 -3.6906e+14 1.37713e+12 -3.73709e+13 -8.85373e+13
    -10496 -2.22551e+14 -2.22551e+14 -1.25118e+09 3.01404e+13 3.01404e+13
    -8.41203e+08 -2.82556e+11 -5.04935e+11 -1.01791e+10 8.16133e+11 1.57849e+12
    -3.37956e+09 -1.0585e+11 -1.0585e+11 1.44117e+10 2.33615e+11 2.33615e+11
    -712 -1.67284e+13 -5.99288e+13 -5.15606e+07 -2.07616e+13 1.19676e+13
    -2.11396e+07 -2.22551e+14 -2.22551e+14 -3.01519e+09 -5.02245e+13 -5.02245e+13
    -0.100098 -2.22551e+14 -2.22551e+14 -1430.89 -2.43137e+13 -2.43137e+13
    -1648 -2.22551e+14 -2.22551e+14 2.30703e+08 6.11286e+12 6.11286e+12
    -1.00603e+09 -2.22551e+14 -2.22551e+14 6.32486e+10 -6.19342e+13 -6.19342e+13
    -2.63039e+10 -9.71922e+12 -9.71922e+12 2.89129e+10 2.09948e+13 2.09948e+13
    -563 -3.70321e+13 -3.70321e+13 1.2347e+07 8.52408e+13 8.52408e+13
    -1.74909e+08 -4.06321e+14 -4.06321e+14 -7.01546e+09 7.89478e+13 7.89478e+13
    -7.48621e+07 -6.58607e+11 -1.29875e+12 -1.2474e+10 1.25797e+12 1.38645e+12
    -1.05094e+06 -4.06321e+14 -4.06321e+14 8.29772e+08 -2.10964e+13 -2.10964e+13
    -1.21494e+07 -4.06322e+14 -4.06322e+14 1.11395e+10 -1.02081e+14 -1.02081e+14
    -9.6623e+06 -4.06322e+14 -4.06322e+14 1.08832e+09 -7.68971e+13 -7.68971e+13
    -2.53133e+06 -1.39857e+14 -2.76334e+14 1.30161e+11 -8.34645e+13 -8.6565e+13
    -2.048e+06 -1.19975e+14 -1.19975e+14 1.66543e+10 1.56675e+14 1.56675e+14
    -0.236816 -4.85466e+14 -4.85466e+14 2527.18 4.41793e+13 4.41793e+13
    -6.94098e+07 -5.24559e+14 -5.24559e+14 5.65245e+09 4.36673e+13 4.36673e+13
    -3.57172e+08 -5.55098e+11 -2.08886e+12 6.06567e+09 -8.05831e+09 1.42701e+12
    -1.13182e+08 -5.24559e+14 -5.24559e+14 -4.71401e+09 1.67548e+13 1.67548e+13
    -1976 -5.24559e+14 -5.24559e+14 7.46935e+07 -7.75653e+13 -7.75653e+13
    -4.18486e+08 -5.24559e+14 -5.24559e+14 -5.62553e+09 -1.09366e+14 -1.09366e+14
    -3.87447e+11 -6.93901e+12 -6.2525e+13 1.59617e+13 1.80295e+13 8.64221e+13
    -148.75 -4.06321e+14 -4.06321e+14 403905 8.92918e+13 8.92918e+13
    -0.183289 -4.06321e+14 -4.06321e+14 1601.13 2.72804e+13 2.72804e+13
    -2.70842e+06 -4.06322e+14 -4.06322e+14 -1.6986e+09 5.73804e+12 5.73804e+12
    -99840 -4.9045e+12 -1.26735e+13 -5.15156e+09 1.05666e+13 2.05705e+13
    -7.09632e+06 -4.06321e+14 -4.06321e+14 6.53324e+09 3.00161e+13 3.00161e+13
    -55.75 -4.06321e+14 -4.06321e+14 3.30376e+06 -3.19953e+13 -3.19953e+13
    -634880 -2.77458e+14 -4.06321e+14 1.18361e+10 -3.5375e+13 -7.86192e+13
    -2.4034e+09 -3.51279e+12 -7.12139e+13 6.13446e+11 2.94625e+12 3.11201e+12
    -4.03771e+08 -4.06321e+14 -4.06321e+14 -5.07609e+10 8.9518e+13 8.9518e+13
    -1.40103e+06 -2.45676e+12 -3.32681e+12 2.91223e+08 4.36999e+12 2.77276e+12
    -7.96464e+08 -1.06574e+13 -1.06574e+13 -5.63184e+10 3.2628e+13 3.2628e+13
    -696448 -3.80591e+12 -6.823e+12 -1.46477e+09 4.28637e+12 1.39522e+13
    -1.81756e+07 -4.06322e+14 -4.06322e+14 9.46586e+08 -6.63268e+13 -6.63268e+13
    -96.5 -4.06321e+14 -4.06321e+14 4.27845e+06 -7.89478e+13 -7.89478e+13
    -691520 -4.06321e+14 -4.06321e+14 1.04341e+09 -3.16667e+13 -3.16667e+13
    -2.54344e+10 -4.06322e+14 -4.06322e+14 2.77377e+11 -1.12651e+14 -1.12651e+14
    -6.08962e+09 -2.67262e+11 -3.52697e+11 -2.19557e+09 1.60675e+11 8.10176e+10
    -2 -1.3107e+14 -1.3107e+14 -203393 6.92964e+13 6.92964e+13
    -12032 -2.22551e+14 -2.22551e+14 -6.78017e+08 2.43137e+13 2.43137e+13
    -4.66842e+08 -1.11908e+11 -1.51539e+11 -3.49002e+09 5.0294e+11 7.73373e+11
    -1456 -2.22551e+14 -2.22551e+14 1.09449e+08 1.19395e+13 1.19395e+13
    -1.87483e+08 -2.22551e+14 -2.22551e+14 -1.04859e+10 -5.61076e+13 -5.61076e+13
    -1.13434e+08 -2.22551e+14 -2.22551e+14 -2.70343e+09 -5.60511e+13 -5.60511e+13
    -35.6875 -2.84041e+13 -1.01757e+14 554367 -5.33727e+13 -4.45951e+13
    -7.19036e+08 -5.24559e+14 -5.24559e+14 6.52161e+09 1.0351e+14 1.0351e+14
    -12.25 -1.71547e+14 -1.71547e+14 159973 7.46198e+13 7.46198e+13
    -6.44819e+06 -1.78249e+13 -2.60015e+13 -3.8005e+08 2.37688e+13 3.77884e+13
    -3.63034e+08 -4.35803e+11 -2.72372e+12 2.18253e+09 3.86783e+10 1.09405e+12
    -4.81239e+07 -5.24559e+14 -5.24559e+14 -3.49582e+09 -4.95233e+13 -4.95233e+13
    -0.236816 -5.24559e+14 -5.24559e+14 -2561.33 -4.36673e+13 -4.36673e+13
    -1.52861e+08 -5.24559e+14 -5.24559e+14 -5.14161e+09 -4.30878e+13 -4.30878e+13
    -1.9565e+12 -2.05607e+14 -4.76454e+14 -6.35167e+12 -1.87537e+13 -1.19512e+14
    -7040 -3.63425e+14 -3.63425e+14 5.64707e+07 5.942e+13 5.942e+13
    -0.163696 -3.63425e+14 -3.63425e+14 2601.46 4.42657e+13 4.42657e+13
    -1904 -3.63425e+14 -3.63425e+14 -1.53376e+07 2.61787e+12 2.61787e+12
    -33536 -7.28309e+12 -5.73527e+13 1.42932e+09 8.54639e+12 1.09031e+14
    -5904 -3.63425e+14 -3.63425e+14 -2.43255e+08 1.25364e+13 1.25364e+13
    -0.163818 -3.63425e+14 -3.63425e+14 -143.219 -2.61786e+12 -2.61786e+12
    -14784 -2.48166e+14 -3.63425e+14 -8.64407e+08 -8.28032e+13 -4.42657e+13
    -1.70803e+06 -2.18817e+13 -3.30097e+14 -1.50649e+10 1.19901e+13 -7.27397e+13
    -5.85528e+07 -3.63425e+14 -3.63425e+14 -8.07567e+09 5.96224e+13 5.96224e+13
    -3.19109e+07 -2.18593e+12 -3.90631e+12 -1.2247e+10 3.83645e+12 4.78299e+12
    -7.7951e+08 -6.27988e+11 -6.27988e+11 -4.51688e+10 1.79849e+12 1.79849e+12
    -1.43642e+06 -2.59826e+12 -1.66871e+13 2.75464e+09 -3.3768e+12 1.84334e+13
    -8.22492e+07 -3.63425e+14 -3.63425e+14 -5.15469e+09 -7.36353e+13 -7.36353e+13
    -0.163818 -3.63425e+14 -3.63425e+14 -2621.91 -4.46135e+13 -4.46135e+13
    -1.14643e+06 -3.63425e+14 -3.63425e+14 1.9463e+08 -2.27013e+12 -2.27013e+12
    -2.35113e+11 -3.63425e+14 -3.63425e+14 -9.52387e+11 -1.03798e+14 -1.03798e+14
    -4.63881e+10 -1.44602e+12 -1.90827e+12 2.53819e+11 2.51365e+12 3.12319e+12
    -3.25391 -1.98085e+14 -1.98085e+14 25834.2 3.96933e+12 3.96933e+12
    -2.91441e+07 -3.63425e+14 -3.63425e+14 -4.09155e+07 4.46135e+13 4.46135e+13
    -9.46295e+08 -2.32089e+11 -4.57673e+11 4.0775e+10 6.45302e+11 1.65896e+12
    -1.51603e+06 -3.63425e+14 -3.63425e+14 -1.11801e+09 1.27388e+13 1.27388e+13
    -2.09306e+07 -3.63425e+14 -3.63425e+14 1.51192e+10 -8.87896e+13 -8.87896e+13
    -2.34621e+08 -3.63425e+14 -3.63425e+14 1.01847e+10 -8.86442e+13 -8.86442e+13
    -1.51962e+06 -1.59654e+13 -1.13009e+14 -1.40914e+10 3.15401e+13 1.46048e+13
    -8.0739e+09 -1.38535e+14 -1.38535e+14 -5.09403e+10 2.05017e+14 2.05017e+14
    -14.125 -1.83323e+14 -1.83323e+14 -555402 1.97801e+14 1.97801e+14
    -1.99681e+07 -1.51908e+14 -1.51908e+14 -1.96662e+09 2.33371e+14 2.33371e+14
    -9.25137e+08 -4.49952e+11 -2.0809e+12 -3.1266e+10 4.05287e+11 2.72592e+12
    -1.16323e+08 -6.05708e+14 -6.05708e+14 2.59496e+09 -3.33333e+13 -3.33333e+13
    -7.40625 -6.05708e+14 -6.05708e+14 283281 -9.37554e+13 -9.37554e+13
    -7.06696e+07 -6.05708e+14 -6.05708e+14 -1.01442e+09 -9.31758e+13 -9.31758e+13
    -2.04001e+13 -8.1719e+13 -3.74158e+14 -8.36739e+12 -5.20578e+12 -8.3248e+13
    -1 -1 -1 -1
    -1 -1 999999 999999
    -1 -1 -1 -1
    0.0232189 0.0232189 0.0232189
    0.0231217 0.0231217 0.0231217
    0 0 0
    0.043462 0.043462 0.043462
    0.05 0.459207 0.459207
    0.05 0.459207 0.459207
    0.05 0.459207 0.459207
    0 0 0
  }

primEdgedata { 5
    10634 10532 32899
    65552
    0 5
    30234 30234 30234 0
    1 1 401.077 1 1 2238.11 1258.82 551.935 1268.83 2881.98 155.212 2004.62 201.509 529.342 1 1 1073.62 305.953 208.41 357.749 1 2193.53 74.5655 373.44 1 5470.6 19.8572 950.923 6883.91 322.869 44.6027 516.99 4585.07 1 1 1 3952.52 1 325.004 51.8424 1019.5 1 2778.13 988.263 1238.08 1480.19 156.794 316.126 508.002 1212.73 421.47 26024 50177.6 57400.4 1 1 51.991 10440.3 831.549 3417.03 640.453 698.349 955.598 27.4175 1 1
    130560 130560 130560 130560 130560 11641.2 12801.3 17690 130560 130560 21831.4 130560 130560 130560 130560 130560 130560 130560 29370 16663.3 130560 9651.41 130560 130560 89153.4 130560 76892.2 14435.9 19766.2 130560 130560 130560 130560 130560 130560 130560 21717.5 130560 130560 130560 130560 130560 11446.2 11631 12418.1 130560 130560 32743.6 130560 130560 130560 44939.2 51174.6 130560 120830 130560 42697.1 44875.6 130560 130560 130560 130560 130560 130560 130560 130560
    130560 130560 130560 130560 130560 20214.8 25192.9 25804.7 130560 130560 21831.4 130560 130560 130560 130560 130560 130560 130560 130560 59695.7 130560 20576.6 130560 130560 130560 130560 76892.2 19548.3 27907.1 130560 130560 130560 130560 130560 130560 130560 30700.6 130560 130560 130560 130560 130560 17076.2 22944.5 22262.4 130560 130560 32743.6 130560 130560 130560 88792.2 118587 130560 120830 130560 42697.1 44875.6 130560 130560 130560 130560 130560 130560 130560 130560
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    -1 -1 -1 -1
    -1 -1 999999 999999
    -1 -1 -1 -1
    0.0715859 0.386798 0.446798
    0.0744347 0.361407 0.361407
    0.05 0.459207 0.459207
    0.05 0.459207 0.459207
    0.05 0.459207 0.459207
    0.05 0.459207 0.459207
    0.05 0.459207 0.459207
    0.05 0.459207 0.459207
  }

primBodydata { 5
    10634 10532 32899
    65552
    0 5
    30234 30234 30234 0
    1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
    130560 130560 130560 130560 130560 9012.63 12801.3 17690 130560 130560 21831.4 130560 130560 130560 130560 130560 130560 130560 29370 16663.3 130560 8601.32 130560 130560 89153.4 130560 76892.2 14435.9 13654.5 130560 130560 130560 130560 130560 130560 130560 21717.5 130560 130560 130560 130560 130560 11446.2 11631 12418.1 130560 130560 32743.6 130560 130560 130560 44939.2 51174.6 130560 120830 130560 42697.1 29861.1 130560 130560 130560 130560 130560 130560 130560 130560
    130560 130560 130560 130560 130560 9012.63 25192.9 25804.7 130560 130560 21831.4 130560 130560 130560 130560 130560 130560 130560 130560 59695.7 130560 8601.32 130560 130560 130560 130560 76892.2 19548.3 13654.5 130560 130560 130560 130560 130560 130560 130560 28659.9 130560 130560 130560 130560 130560 16668.5 20603.9 22262.4 130560 130560 32743.6 130560 130560 130560 88792.2 118587 130560 120830 130560 42697.1 29861.1 130560 130560 130560 130560 130560 130560 130560 130560
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    -1 -1 -1 -1
    -1 -1 999999 999999
    -1 -1 -1 -1
    0 0 0
    0 0 0
    0 0 0
    0.043462 0.043462 0.043462
    0.05 0.459207 0.459207
    0.05 0.459207 0.459207
    0.05 0.459207 0.459207
    0 0 0
  }

crop {0 0 4615 3235}
"Adjust Lighting" 0
"Hybrid Matte" 0
"Fine Tuning" 0
name Primatte1
selected true
xpos 6418
ypos 8599
}
Dot {
name Dot443
selected true
xpos 6452
ypos 8728
}
push $N341cc100
Group {
inputs 2
name ColorDilate1
knobChanged "\ntn = nuke.thisNode()\ntk = nuke.thisKnob()\n\nfullList =  tn\['fullList'].value().strip(\"\[']\").split(\"', '\")\nnodeList = fullList\[0], fullList\[1], fullList\[2], fullList\[3], fullList\[4], fullList\[5], fullList\[6]\npreviousLoopNum = tn\['previousLoopNum'].getValue()\n\ngrowTexture = tn\['growTexture'].getValue()\nqualityVal = int( tn\['quality'].getValue() )\n\n\n##### DEFINE VALUE CHANGES ##################\n\ndef valChange():\n    qualityBias = tn\['qualityBias'].getValue()\n    blurCenter = tn\['blurCenter'].getValue()\n    bcDistribution = tn\['bcDistribution'].getValue()\n    for i in range (0, qualityVal):\n        blurVal = nuke.toNode(fullList\[i*len(nodeList)])\n        erodeVal = nuke.toNode(fullList\[i*len(nodeList)+3])\n        blurCenterVal = nuke.toNode(fullList\[i*len(nodeList)+5])\n        if isinstance(growTexture, float) == True:\n            blurValSize = (growTexture/qualityVal*(i+1)*(1-qualityBias)) + (growTexture/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2)))\n            blurVal\['size'].setValue( blurValSize )\n            erodeVal\['size'].setValue(blurVal\['size'].getValue()/2)\n            blurCenterVal\['size'].setValue( ( blurValSize*(1-bcDistribution) +  (blurValSize*(bcDistribution*(pow(i+1, 2)/pow(qualityVal, 2)))) ) * blurCenter )\n        else:\n            blurVal\['size'].setValue(\[ (growTexture\[0]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[0]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) , (growTexture\[1]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[1]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) ])\n            erodeVal\['size'].setValue(\[blurVal\['size'].getValue()\[0]/2,blurVal\['size'].getValue()\[1]/2])\n            blurCenterVal\['size'].setValue(\[ (growTexture\[0]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[0]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) , (growTexture\[1]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[1]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) ])\n\ndef filterChange():\n    filters = int( tn\['filter'].getValue() )\n    filterQuality = int( tn\['filterQuality'].getValue() )\n    crop = int( tn\['crop'].getValue() )\n    for i in range (0, qualityVal):\n        blurVal = nuke.toNode(fullList\[i*len(nodeList)])\n        blurVal\['filter'].setValue( filters )\n        blurVal\['quality'].setValue( filterQuality )\n        blurVal\['crop'].setValue( crop )\n        blurCenterVal = nuke.toNode(fullList\[i*len(nodeList)])\n        blurCenterVal\['filter'].setValue( filters )\n        blurCenterVal\['quality'].setValue( filterQuality )\n        blurCenterVal\['crop'].setValue( crop )\n\n\n##### CREATE THE NODES ###################\n\nif tk.name()=='quality':\n    if qualityVal < 1:\n        qualityVal = 1\n    elif qualityVal >100:\n        qualityVal = 100\n    tn\['quality'].setValue( qualityVal )\n    \n\n    if qualityVal != previousLoopNum:\n\n\n        inputDep = nuke.dependencies(\[nuke.toNode('Unpremult1')], nuke.INPUTS)\n        resultOver = nuke.toNode( inputDep\[0].name() )\n\n        difference = qualityVal-previousLoopNum\n        if difference > 0:\n            for i in range (1, int(difference+1)):\n                \n                blur = nuke.nodes.Blur ()\n                blur\['channels'].setValue('rgba')\n                blur\['maskChannelInput'].setValue('none')\n                blur.setInput (0, nuke.toNode('Switch2'))\n                \n                unpremult = nuke.nodes.Unpremult ()\n                unpremult\['channels'].setValue('rgb')\n                unpremult\['alpha'].setValue('rgba.alpha')\n                unpremult\['invert'].setValue(0)\n                unpremult.setInput (0, blur)\n                \n                expression = nuke.nodes.Expression(expr3 = 'a==0?0:1')\n                expression.setInput (0, unpremult)\n                \n                erode = nuke.nodes.FilterErode ()\n                erode\['channels'].setValue( 'rgba.alpha' )\n                erode\['filter'].setValue( 'gaussian' )\n                erode.setInput (0, expression)\n                \n                premult = nuke.nodes.Premult ()\n                premult\['channels'].setValue( 'rgb' )\n                premult\['alpha'].setValue( 'rgba.alpha' )\n                premult.setInput (0, erode)\n\n                blurCenter = nuke.nodes.Blur ()\n                blurCenter\['channels'].setValue('rgba')\n                blurCenter\['maskChannelInput'].setValue('none')\n                blurCenter.setInput (0, premult)\n\n                mergeOver = nuke.nodes.Merge2 ()\n                mergeOver\['operation'].setValue( 'over' )\n                mergeOver\['sRGB'].setValue( 0 )\n                mergeOver\['screen_alpha'].setValue( 0 )\n                mergeOver\['bbox'].setValue( 'union' )\n                mergeOver\['Achannels'].setValue( 'rgba' )\n                mergeOver\['Bchannels'].setValue( 'rgba' )\n                mergeOver\['output'].setValue( 'rgba' )\n                mergeOver\['also_merge'].setValue( 'none' )\n                mergeOver.setInput (0, blurCenter)\n                mergeOver.setInput (1, resultOver)\n                \n                \n                resultOver = mergeOver\n                \n                \n                nodeList = blur.name(), unpremult.name(), expression.name(), erode.name(), premult.name(), blurCenter.name(), resultOver.name()\n                fullList.extend(nodeList)\n\n\n##### DELETE THE NODES ##################################\n\n        else:\n            fullList.reverse()\n            for i in range (int(qualityVal), int(previousLoopNum)):\n                for i in range (0, len(nodeList)):\n                    nuke.delete(nuke.toNode(fullList\[0]))\n                    del fullList\[0]\n                resultOver = nuke.toNode(fullList\[0])\n                resultExpression = nuke.toNode(fullList\[3])\n            fullList.reverse()\n\n        nuke.toNode('Unpremult1').setInput(0, resultOver)\n        valChange()\n        filterChange()\n                \n        previousLoopNum = qualityVal\n        \n        tn\['previousLoopNum'].setValue( int(previousLoopNum) )\n        tn\['fullList'].setValue( str(fullList) )\n\n\n\n##### CHANGE EXISTING VALUES #####################\n\nif tk.name()=='growTexture':\n    valChange()\n    \nif tk.name()=='qualityBias':\n    valChange()\n\nif tk.name()=='blurCenter':\n    valChange()\n\nif tk.name()=='bcDistribution':\n    valChange()\n    \nif tk.name()=='filter':\n    filterChange()\n    \nif tk.name()=='filterQuality':\n    filterChange()\n    \nif tk.name()=='crop':\n    filterChange()\n\n\n"
note_font "Bitstream Vera Sans"
selected true
xpos 6533
ypos 8724
addUserKnob {20 User l fColourDilate}
addUserKnob {14 growTexture l "Grow Texture" R 0 100}
growTexture 120
addUserKnob {14 erodeMatte l "Erode Matte" t "Dilate or erode the matte to adjust the grow start paint" R -100 100}
erodeMatte -7
addUserKnob {7 expandMatte l "Expand Matte" t "Expand or compress the matte to adjust the grow start point" R -0.99999 0.99999}
expandMatte 0.03
addUserKnob {7 quality l Iterations t "The number of iterations Colour Dilate will go through.  More is slower.  Max steps is 100" R 1 20}
quality 10
addUserKnob {7 qualityBias l Distribution t "0 is a linear distribution.  1 is exponential distribution.\nExponential is smoother with low quality.\nLinear is better with high quality."}
qualityBias 1
addUserKnob {26 ""}
addUserKnob {7 blurCenter l "Blur Center" t "Soften central area where opposite dilates meet creating a hard line.  Is a multiple of Grow Texture." R 0 5}
blurCenter 1
addUserKnob {7 bcDistribution l "BC Distribution" t "0 blurs a direct multiple of Grow Texture. 1 blurs exponentially more towards the center."}
addUserKnob {26 ""}
addUserKnob {4 filter l Filter t "filter\n" M {box triangle quadratic gaussian ""}}
filter gaussian
addUserKnob {3 filterQuality l " " -STARTLINE}
filterQuality 15
addUserKnob {6 crop l "crop to format" -STARTLINE}
crop true
addUserKnob {4 matteOutput l "Matte Output" M {rgb.alpha matte "dilated matte" "dilated area" "grain matte" ""}}
matteOutput "dilated area"
addUserKnob {26 blank l "" -STARTLINE T "      "}
addUserKnob {6 invertMatte l "invert Matte" -STARTLINE}
addUserKnob {26 blank2 l "" -STARTLINE T "      "}
addUserKnob {6 rgbIsPremult l "RGB is Premult?" -STARTLINE}
addUserKnob {1 colorDilate l INVISIBLE t "Keep me hidden" +INVISIBLE}
addUserKnob {3 previousLoopNum l INVISIBLE +INVISIBLE}
previousLoopNum 10
addUserKnob {1 fullList l INVISIBLE +INVISIBLE}
fullList "\['Blur1', 'Unpremult2', 'Expression1', 'FilterErode2', 'Premult1', 'BlurCenter', 'Merge2', 'Blur2', 'Unpremult3', 'Expression2', 'FilterErode3', 'Premult2', 'Blur3', 'Merge5', 'Blur4', 'Unpremult4', 'Expression3', 'FilterErode4', 'Premult3', 'Blur5', 'Merge6', 'Blur6', 'Unpremult5', 'Expression4', 'FilterErode5', 'Premult4', 'Blur7', 'Merge7', 'Blur8', 'Unpremult6', 'Expression5', 'FilterErode6', 'Premult5', 'Blur9', 'Merge8', 'Blur10', 'Unpremult7', 'Expression6', 'FilterErode7', 'Premult6', 'Blur11', 'Merge9', 'Blur12', 'Unpremult8', 'Expression7', 'FilterErode8', 'Premult7', 'Blur13', 'Merge10', 'Blur14', 'Unpremult9', 'Expression9', 'FilterErode9', 'Premult8', 'Blur15', 'Merge11', 'Blur16', 'Unpremult10', 'Expression10', 'FilterErode10', 'Premult9', 'Blur17', 'Merge12', 'Blur18', 'Unpremult11', 'Expression11', 'FilterErode11', 'Premult10', 'Blur19', 'Merge13']"
}
Input {
inputs 0
name InputMask
note_font "Bitstream Vera Sans"
xpos 803
ypos -665
number 1
}
set N333a0f00 [stack 0]
AddChannels {
channels alpha
name AddChannels2
note_font "Bitstream Vera Sans"
xpos 365
ypos 1125
}
Dot {
name Dot3
note_font "Bitstream Vera Sans"
xpos 399
ypos 1183
}
Input {
inputs 0
name InputRGB
note_font "Bitstream Vera Sans"
xpos 1013
ypos -531
}
set N33167200 [stack 0]
AddChannels {
channels alpha
name AddChannels1
note_font "Bitstream Vera Sans"
xpos 348
ypos 949
}
Dot {
name Dot2
note_font "Bitstream Vera Sans"
xpos 382
ypos 1078
}
push $N333a0f00
FilterErode {
channels alpha
size {{invertMatte==0?erodeMatte.w:-erodeMatte.w i} {invertMatte==0?erodeMatte.h:-erodeMatte.h i}}
name FilterErode1
note_font "Bitstream Vera Sans"
xpos 803
ypos -621
}
Invert {
channels alpha
mix {{invertMatte i}}
name Invert2
note_font "Bitstream Vera Sans"
xpos 803
ypos -563
}
Grade {
channels alpha
blackpoint {{"clamp(expandMatte, 0, 1)" i}}
whitepoint {{"clamp(1+expandMatte, 0, 1)" i}}
white_clamp true
name Grade1
note_font "Bitstream Vera Sans"
xpos 803
ypos -505
}
Grade {
channels alpha
whitepoint 0.5
black_clamp false
white_clamp true
name Grade6
note_font "Bitstream Vera Sans"
xpos 803
ypos -345
}
Dot {
name Dot1
note_font "Bitstream Vera Sans"
xpos 837
ypos -287
}
set N33148f00 [stack 0]
push $N33167200
AddChannels {
channels alpha
name AddChannels3
note_font "Bitstream Vera Sans"
xpos 1120
ypos -444
}
push $N33167200
Shuffle {
alpha white
name Shuffle1
note_font "Bitstream Vera Sans"
xpos 1013
ypos -458
}
Crop {
box {{InputRGB.bbox.x i x1001 542} {InputRGB.bbox.y i} {InputRGB.bbox.r i} {InputRGB.bbox.t i}}
name Crop3
note_font "Bitstream Vera Sans"
xpos 1013
ypos -414
}
Switch {
inputs 2
which {{rgbIsPremult i}}
name Switch1
note_font "Bitstream Vera Sans"
xpos 1013
ypos -370
}
Dot {
name Dot5
note_font "Bitstream Vera Sans"
xpos 1047
ypos -326
}
set N3312e400 [stack 0]
Merge2 {
inputs 2
operation stencil
bbox intersection
name Merge1
note_font "Bitstream Vera Sans"
xpos 1013
ypos -292
}
push $N33148f00
Dot {
name Dot4
note_font "Bitstream Vera Sans"
xpos 837
ypos -253
}
push $N3312e400
Dot {
name Dot6
note_font "Bitstream Vera Sans"
xpos 946
ypos -326
}
Merge2 {
inputs 2
operation stencil
bbox B
name Merge3
note_font "Bitstream Vera Sans"
xpos 912
ypos -258
}
Dot {
name Dot7
note_font "Bitstream Vera Sans"
xpos 946
ypos -192
}
Switch {
inputs 2
which {{invertMatte i}}
name Switch2
note_font "Bitstream Vera Sans"
xpos 1002
ypos -196
}
set N3310b900 [stack 0]
push $N3310b900
Blur {
channels rgba
size 0.12
name Blur1
note_font "Bitstream Vera Sans"
xpos 1336
ypos -26
}
Unpremult {
name Unpremult2
note_font "Bitstream Vera Sans"
xpos 1336
ypos 18
}
Expression {
expr3 a==0?0:1
name Expression1
note_font "Bitstream Vera Sans"
xpos 1336
ypos 62
}
FilterErode {
channels alpha
size 0.06
filter gaussian
name FilterErode2
note_font "Bitstream Vera Sans"
xpos 1336
ypos 106
}
Premult {
name Premult1
note_font "Bitstream Vera Sans"
xpos 1336
ypos 164
}
Blur {
channels rgba
size 0.12
name BlurCenter
note_font "Bitstream Vera Sans"
xpos 1336
ypos 222
}
Merge2 {
inputs 2
name Merge2
note_font "Bitstream Vera Sans"
xpos 1336
ypos 280
}
push $N3310b900
Blur {
channels rgba
size 0.96
name Blur2
xpos 1882
ypos -154
}
Unpremult {
name Unpremult3
xpos 1882
ypos -112
}
Expression {
expr3 a==0?0:1
name Expression2
xpos 1882
ypos -70
}
FilterErode {
channels alpha
size 0.48
filter gaussian
name FilterErode3
xpos 1992
ypos -28
}
Premult {
name Premult2
xpos 1992
ypos 14
}
Blur {
channels rgba
size 0.96
name Blur3
xpos 1992
ypos 56
}
Merge2 {
inputs 2
name Merge5
xpos 1992
ypos 280
}
push $N3310b900
Blur {
channels rgba
size 3.24
name Blur4
xpos 1772
ypos -154
}
Unpremult {
name Unpremult4
xpos 1772
ypos -112
}
Expression {
expr3 a==0?0:1
name Expression3
xpos 1772
ypos -70
}
FilterErode {
channels alpha
size 1.62
filter gaussian
name FilterErode4
xpos 1882
ypos -28
}
Premult {
name Premult3
xpos 1882
ypos 14
}
Blur {
channels rgba
size 3.24
name Blur5
xpos 1882
ypos 322
}
Merge2 {
inputs 2
name Merge6
xpos 1992
ypos 322
}
push $N3310b900
Blur {
channels rgba
size 7.68
name Blur6
xpos 1662
ypos -154
}
Unpremult {
name Unpremult5
xpos 1662
ypos -112
}
Expression {
expr3 a==0?0:1
name Expression4
xpos 1662
ypos -70
}
FilterErode {
channels alpha
size 3.84
filter gaussian
name FilterErode5
xpos 1772
ypos -28
}
Premult {
name Premult4
xpos 1772
ypos 14
}
Blur {
channels rgba
size 7.68
name Blur7
xpos 1772
ypos 364
}
Merge2 {
inputs 2
name Merge7
xpos 1992
ypos 364
}
push $N3310b900
Blur {
channels rgba
size 15
name Blur8
xpos 1552
ypos -154
}
Unpremult {
name Unpremult6
xpos 1552
ypos -112
}
Expression {
expr3 a==0?0:1
name Expression5
xpos 1552
ypos -70
}
FilterErode {
channels alpha
size 7.5
filter gaussian
name FilterErode6
xpos 1662
ypos -28
}
Premult {
name Premult5
xpos 1662
ypos 14
}
Blur {
channels rgba
size 15
name Blur9
xpos 1662
ypos 406
}
Merge2 {
inputs 2
name Merge8
xpos 1992
ypos 406
}
push $N3310b900
Blur {
channels rgba
size 25.92
name Blur10
xpos 1442
ypos -154
}
Unpremult {
name Unpremult7
xpos 1442
ypos -112
}
Expression {
expr3 a==0?0:1
name Expression6
xpos 1442
ypos -70
}
FilterErode {
channels alpha
size 12.96
filter gaussian
name FilterErode7
xpos 1552
ypos -28
}
Premult {
name Premult6
xpos 1552
ypos 14
}
Blur {
channels rgba
size 25.92
name Blur11
xpos 1552
ypos 448
}
Merge2 {
inputs 2
name Merge9
xpos 1992
ypos 448
}
push $N3310b900
Blur {
channels rgba
size 41.16
name Blur12
xpos 1332
ypos -154
}
Unpremult {
name Unpremult8
xpos 1332
ypos -112
}
Expression {
expr3 a==0?0:1
name Expression7
xpos 1332
ypos -70
}
FilterErode {
channels alpha
size 20.58
filter gaussian
name FilterErode8
xpos 1442
ypos -28
}
Premult {
name Premult7
xpos 1442
ypos 14
}
Blur {
channels rgba
size 41.16
name Blur13
xpos 1442
ypos 490
}
Merge2 {
inputs 2
name Merge10
xpos 1992
ypos 490
}
push $N3310b900
Blur {
channels rgba
size 61.44
name Blur14
xpos 1222
ypos -154
}
Unpremult {
name Unpremult9
xpos 1222
ypos -112
}
Expression {
expr3 a==0?0:1
name Expression9
xpos 1222
ypos -70
}
FilterErode {
channels alpha
size 30.72
filter gaussian
name FilterErode9
xpos 1222
ypos -28
}
Premult {
name Premult8
xpos 1222
ypos 14
}
Blur {
channels rgba
size 61.44
name Blur15
xpos 1222
ypos 532
}
Merge2 {
inputs 2
name Merge11
xpos 1992
ypos 532
}
push $N3310b900
Blur {
channels rgba
size 87.48
name Blur16
xpos 1112
ypos -154
}
Unpremult {
name Unpremult10
xpos 1112
ypos -112
}
Expression {
expr3 a==0?0:1
name Expression10
xpos 1112
ypos -70
}
FilterErode {
channels alpha
size 43.74
filter gaussian
name FilterErode10
xpos 1112
ypos -28
}
Premult {
name Premult9
xpos 1112
ypos 14
}
Blur {
channels rgba
size 87.48
name Blur17
xpos 1112
ypos 574
}
Merge2 {
inputs 2
name Merge12
xpos 1992
ypos 574
}
push $N3310b900
Blur {
channels rgba
size 120
name Blur18
xpos 1002
ypos -154
}
Unpremult {
name Unpremult11
xpos 1002
ypos -112
}
Expression {
expr3 a==0?0:1
name Expression11
xpos 1002
ypos -70
}
FilterErode {
channels alpha
size 60
filter gaussian
name FilterErode11
xpos 1002
ypos -28
}
Premult {
name Premult10
xpos 1002
ypos 14
}
Blur {
channels rgba
size 120
name Blur19
xpos 1002
ypos 616
}
Merge2 {
inputs 2
name Merge13
xpos 1992
ypos 616
}
Unpremult {
name Unpremult1
note_font "Bitstream Vera Sans"
xpos 224
ypos 966
}
Dot {
name Dot11
xpos 258
ypos 1020
}
set N33313200 [stack 0]
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
mix {{matteOutput==0?1:0 i}}
name Copy2
note_font "Bitstream Vera Sans"
xpos 224
ypos 1068
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
mix {{matteOutput==1?1:0}}
name Copy1
note_font "Bitstream Vera Sans"
xpos 224
ypos 1173
}
Dot {
name Dot8
xpos 258
ypos 1227
}
set N33311d00 [stack 0]
Dot {
name Dot9
xpos 453
ypos 1227
}
Expression {
expr3 a<=0.000001?0:1
name Expression12
note_font "Bitstream Vera Sans"
xpos 419
ypos 1261
}
Dot {
name Dot10
xpos 453
ypos 1303
}
push $N33313200
Dot {
name Dot13
xpos 521
ypos 1020
}
Dot {
name Dot12
xpos 521
ypos 1205
}
push $N33167200
Merge2 {
inputs 2
operation difference
bbox B
name Merge14
xpos 563
ypos 1201
}
Keyer {
operation "luminance key"
range {0 1e-05 1 1}
name Keyer1
xpos 563
ypos 1243
}
Merge2 {
inputs 2
operation mask
bbox B
name Merge15
xpos 563
ypos 1299
}
Dot {
name Dot14
xpos 597
ypos 1341
}
push $N33311d00
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
mix {{matteOutput==4?1:0 i}}
name Copy3
note_font "Bitstream Vera Sans"
xpos 224
ypos 1331
}
Expression {
expr3 a<=0.000001?0:1
mix {{matteOutput==3?1:0 i}}
name Expression8
note_font "Bitstream Vera Sans"
xpos 224
ypos 1418
}
set N332e4f00 [stack 0]
push $N33167200
Merge2 {
inputs 2
operation copy
bbox B
name Merge4
xpos 932
ypos 1418
}
set N332e4800 [stack 0]
Output {
name Output1
note_font "Bitstream Vera Sans"
xpos 932
ypos 1579
}
push $N332e4800
push $N332e4f00
Viewer {
inputs 2
frame 1
input_number 1
input_process false
name Viewer1
xpos 336
ypos 1225
}
end_group
push $N341cc800
Dot {
name Dot444
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 6706
ypos 9015
}
IBKGizmoV3 {
inputs 2
name IBKGizmoV3_3
xpos 6536
ypos 9014
red_weight 0.585
blue_green_weight 0.415
lm_enable true
level 0.96
luma 0.44
ll_enable true
autolevels true
}
Dot {
name Dot445
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 6567
ypos 9126
}
Merge2 {
inputs 2
operation under
name Merge16
selected true
xpos 7103
ypos 9122
}
ChannelMerge {
inputs 2
operation stencil
name ChannelMerge24
label "reflections and rigging/lights"
selected true
xpos 7103
ypos 9205
disable true
}
ChannelMerge {
inputs 2
name ChannelMerge25
label Garbage
selected true
xpos 7103
ypos 9505
}
set N32be5600 [stack 0]
Dot {
name Dot30
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 7137
ypos 9685
}
ChannelMerge {
inputs 2
name ChannelMerge6
label Garbage
selected true
xpos 7103
ypos 9779
disable true
}
Dot {
name Dot12
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 7137
ypos 9871
}
Dot {
name Dot446
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 8280
ypos 9871
}
set N32bb7900 [stack 0]
push $N32bb7900
Dot {
name Dot447
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 8280
ypos 9724
}
set N32bb7200 [stack 0]
push $N32bb7200
Invert {
name Invert6
selected true
xpos 8249
ypos 9593
}
FilterErode {
size -35
name FilterErode1
selected true
xpos 8249
ypos 9470
}
Blur {
size 30
name Blur5
selected true
xpos 8249
ypos 9394
}
push $N341cf200
Dot {
name Dot448
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 8577
ypos 9231
}
Group {
inputs 2
name DespillMadness1
note_font "Bitstream Vera Sans"
selected true
xpos 8545
ypos 9400
mapsize {0.15 0.15}
addUserKnob {20 DespillMadness l "Despill Settings"}
addUserKnob {41 screenType l "screen type" T GizmoControl.screenType}
addUserKnob {41 algorithm l "despill algorithm" T GizmoControl.algorithm}
addUserKnob {41 LimitPercentage l "fine tune" T RedLimitsGreen.LimitPercentage}
addUserKnob {26 ""}
addUserKnob {26 text_2 l "" +STARTLINE T "spill area correction"}
addUserKnob {26 spacer l " " T " "}
addUserKnob {6 sourceLuma l "restore source luminance" t "Restores luminance of original image." +STARTLINE}
sourceLuma true
addUserKnob {41 saturation T CC_SpillMap.saturation}
addUserKnob {41 gamma T CC_SpillMap.gamma}
addUserKnob {41 offset T CC_SpillMap.offset}
addUserKnob {26 ""}
addUserKnob {41 spillMatteOut l "output spill matte in alpha" T GizmoControl.spillMatteOut}
addUserKnob {26 ""}
addUserKnob {41 maskChannel l mask T KeymixMask.maskChannel}
addUserKnob {6 invmsk l invert -STARTLINE}
addUserKnob {41 which l mix T mix.which}
}
Input {
inputs 0
name img
xpos 262
ypos -342
}
Dot {
name Dot6
xpos 296
ypos -186
}
set N32b8f900 [stack 0]
Dot {
name Dot2
xpos 296
ypos -71
}
set N32b8f200 [stack 0]
Dot {
name Dot3
xpos 626
ypos -71
}
set N32b8eb00 [stack 0]
Expression {
expr2 b>g*LimitPercentage?g*LimitPercentage:b
expr3 b-g*LimitPercentage
name GreenLimitsBlue1
xpos 728
ypos 44
addUserKnob {20 User}
addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
}
push $N32b8eb00
Expression {
expr2 b>r*LimitPercentage?r*LimitPercentage:b
expr3 b-r*LimitPercentage
name RedLimitsBlue
xpos 592
ypos 44
addUserKnob {20 User}
addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
}
push $N32b8eb00
Expression {
expr2 b>(g+2*r)/2*LimitPercentage?(g+2*r)/2*LimitPercentage:b
expr3 b-(2*r+g)*LimitPercentage/2
name DoubleRedAve2
xpos 1125
ypos 43
addUserKnob {20 User}
addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
}
push $N32b8eb00
Expression {
expr2 b>(2*g+r)/2*LimitPercentage?(2*g+r)/2*LimitPercentage:b
expr3 b-(r+2*g)*LimitPercentage/2
name DoubleGreenAve
xpos 998
ypos 44
addUserKnob {20 User}
addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
LimitPercentage {{RedLimitsGreen.LimitPercentage}}
}
push $N32b8eb00
Expression {
expr2 b>(g+r)/2*LimitPercentage?(g+r)/2*LimitPercentage:b
expr3 b-(r+g)*LimitPercentage/2
name RedAndGreenLimitBlue
xpos 862
ypos 44
addUserKnob {20 User}
addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
}
Switch {
inputs 5
which {{GizmoControl.algorithm i}}
name SwitchBlue
xpos 728
ypos 190
}
Dot {
name Dot5
xpos 762
ypos 370
}
push $N32b8f200
Dot {
name Dot1
xpos 164
ypos -71
}
set N32b57200 [stack 0]
Expression {
expr1 g>b*LimitPercentage?b*LimitPercentage:g
expr3 g-b*LimitPercentage
name BlueLimitsGreen
xpos -15
ypos 44
addUserKnob {20 User}
addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
}
push $N32b57200
Expression {
expr1 g>r*LimitPercentage?r*LimitPercentage:g
expr3 g-r*LimitPercentage
name RedLimitsGreen
xpos -160
ypos 44
addUserKnob {20 User}
addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
LimitPercentage 0.96
}
push $N32b57200
Expression {
expr1 g>(b+2*r)/3*LimitPercentage?(b+2*r)/3*LimitPercentage:g
expr3 g-(r+b)*LimitPercentage/2
name DoubleRedAve
xpos 370
ypos 42
addUserKnob {20 User}
addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
}
push $N32b57200
Expression {
expr1 g>(2*b+r)/3*LimitPercentage?(2*b+r)/3*LimitPercentage:g
expr3 g-(r+b)*LimitPercentage/2
name DoubleBlueAve
xpos 257
ypos 42
addUserKnob {20 User}
addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
}
push $N32b57200
Expression {
expr1 g>(b+r)/2*LimitPercentage?(b+r)/2*LimitPercentage:g
expr3 g-(r+b)*LimitPercentage/2
name RedAveBlueLimitsGreen
xpos 130
ypos 44
addUserKnob {20 User}
addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
}
Switch {
inputs 5
which {{GizmoControl.algorithm i}}
name SwitchGreen
xpos -15
ypos 199
}
Dot {
name Dot4
xpos 19
ypos 370
}
Switch {
inputs 2
which {{GizmoControl.screenType i}}
name SwitchMain
xpos 257
ypos 366
}
Clamp {
channels alpha
name Clamp1
xpos 257
ypos 408
}
ColorCorrect {
saturation 0.54
gamma 2.55
maskChannelInput rgba.alpha
name CC_SpillMap
note_font Verdana
xpos 257
ypos 468
}
set N32b18f00 [stack 0]
Dot {
name Dot9
xpos 440
ypos 478
}
Dot {
name Dot10
xpos 440
ypos 1389
}
Input {
inputs 0
name mask
xpos -696
ypos -348
number 1
}
Expression {
channel0 {-rgba.red -rgba.green -rgba.blue none}
expr0 0
channel1 {-rgba.red -rgba.green -rgba.blue none}
expr1 0
channel2 {-rgba.red -rgba.green -rgba.blue none}
expr2 0
channel3 {rgba.alpha none none rgba.alpha}
expr3 a==0?0:a
name AlphaFix1
label "To avid Gizmo being in state of\nerror without something plugged in input."
xpos -696
ypos 861
}
set N328f6400 [stack 0]
push $N328f6400
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name CopyMask
xpos -296
ypos 867
}
Invert {
name Invert1
xpos -296
ypos 943
disable {{parent.invmsk i}}
}
push $N32b8f900
Dot {
name Dot7
xpos -345
ypos -186
}
Dot {
name Dot8
xpos -345
ypos 551
}
Expression {
channel0 {-rgba.red -rgba.green -rgba.blue none}
expr0 0
channel1 {-rgba.red -rgba.green -rgba.blue none}
expr1 0
channel2 {-rgba.red -rgba.green -rgba.blue none}
expr2 0
channel3 {rgba.alpha none none rgba.alpha}
expr3 a==0?0:a
name AlphaFix
label "To avid Gizmo being in state of\nerror without something plugged in input."
xpos -27
ypos 534
}
set N328f4100 [stack 0]
Dot {
name Dot11
xpos -113
ypos 614
}
Dot {
name Dot12
xpos -113
ypos 818
}
set N328c3200 [stack 0]
push $N328f4100
push $N328f4100
push $N32b18f00
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
from3 rgba.alpha
to3 rgba.alpha
name CopyAlpha
xpos 257
ypos 534
}
set N328c2b00 [stack 0]
Merge2 {
inputs 2
operation minus
name Merge3
xpos -27
ypos 672
}
Clamp {
name Clamp2
xpos -27
ypos 698
}
Saturation {
saturation 0
name Saturation2
xpos -27
ypos 736
}
push $N328c2b00
Merge2 {
inputs 2
operation plus
name RestoreLuma
xpos 257
ypos 736
disable {{!parent.sourceLuma i}}
}
Keymix {
inputs 3
name KeymixMask
xpos 257
ypos 943
}
push $N328c3200
Dot {
name Dot13
xpos -113
ypos 1087
}
Dissolve {
inputs 2
which 1
name mix
xpos 257
ypos 1077
}
Switch {
inputs 2
which {{GizmoControl.spillMatteOut i}}
name SwitchSpillMap
xpos 257
ypos 1385
}
Output {
name Output1
xpos 257
ypos 1485
}
NoOp {
inputs 0
name GizmoControl
xpos 875
ypos 414
addUserKnob {20 User}
addUserKnob {26 version l v1.0}
addUserKnob {4 screenType l "screen type" M {green blue}}
screenType blue
addUserKnob {4 algorithm l "despill algorithm" M {average "double green/blue average" "double red average" "red limit" "green/blue limit" ""}}
addUserKnob {6 spillMatteOut l "output spill matte in alpha" +STARTLINE}
}
end_group
Group {
inputs 2
name Lens_Edge_Extend1
tile_color 0xff5592ff
selected true
xpos 8545
ypos 9720
addUserKnob {20 User}
addUserKnob {4 lensChoice l Lens M {Alpha Luma}}
addUserKnob {6 matte l "Use Lens as Matte" t "Mattes distortion to only where the lens is." +STARTLINE}
addUserKnob {41 size l "Blur Lens" T Blur2.size}
addUserKnob {7 strength l "Lens Size" R 0 100}
strength 10
addUserKnob {7 dispMult l "Lens Multiplier" R 1 100}
dispMult 1
addUserKnob {7 amt l "Distortion Amount" R -100 100}
amt -11
addUserKnob {6 barf l "Distort Alpha" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {6 distChrma l "Distort Chroma" +STARTLINE}
addUserKnob {7 ChrmSep l "Chroma Separation" R -10 10}
}
Input {
inputs 0
name Mask
label Mask
xpos -794
ypos -353
number 2
}
Invert {
channels rgba
name Invert1
xpos -794
ypos -288
}
Blur {
channels rgba
name Blur1
xpos -794
ypos -257
}
Constant {
inputs 0
channels motion
color {0.5 0.5 0.5 0.5}
name Constant1
xpos -40
ypos -375
}
set N3287a400 [stack 0]
Input {
inputs 0
name Alpha
label Matte
xpos -370
ypos -799
number 1
}
set N32879600 [stack 0]
Keyer {
operation "luminance key"
name Keyer1
xpos -370
ypos -757
disable {{1-lensChoice}}
}
Shuffle {
red alpha
green alpha
blue alpha
name Shuffle1
label "\[value in 1]"
xpos -370
ypos -701
}
Blur {
channels rgba
size 9.4
crop false
name Blur2
xpos -370
ypos -658
}
set N32878100 [stack 0]
Dot {
name Dot1
xpos -672
ypos -660
}
Dot {
name Dot2
xpos -672
ypos -348
}
push $N3287a400
push $N32878100
Transform {
translate {{-strength/2 i} 0}
center {960 540}
black_outside false
name Transform4
xpos -607
ypos -512
}
push $N32878100
Transform {
translate {{strength/2} 0}
center {960 540}
black_outside false
name Transform1
xpos -480
ypos -561
}
push $N32878100
Dot {
name Dot3
xpos -342
ypos -588
}
Expression {
expr0 .5
expr1 .5
expr2 .5
name Expression1
xpos -370
ypos -514
}
set N32855600 [stack 0]
Add {
inputs 1+1
value 0.5
name Add3
xpos -480
ypos -520
}
Add {
inputs 1+1
value -0.5
name Add4
xpos -480
ypos -448
}
push $N32878100
Transform {
translate {0 {-strength/2 i}}
center {960 540}
black_outside false
name Transform6
xpos -147
ypos -514
}
push $N32878100
Transform {
translate {0 {strength/2}}
center {960 540}
black_outside false
name Transform5
xpos -260
ypos -561
}
push $N32855600
Add {
inputs 1+1
value 0.5
name Add1
xpos -260
ypos -520
}
Add {
inputs 1+1
value -0.5
name Add2
xpos -260
ypos -448
}
ShuffleCopy {
inputs 2
red red
blue red
alpha green2
black red
white green
red2 blue
green2 white
out motion
name ShuffleCopy1
xpos -370
ypos -418
}
Keymix {
inputs 3
invertMask true
name Keymix1
xpos -370
ypos -352
disable {{1-matte i x1 1}}
}
Keymix {
inputs 3
name Keymix2
xpos -370
ypos -263
}
Add {
value -0.5
name Add5
xpos -370
ypos -179
}
Multiply {
channels motion
value {{dispMult}}
name Multiply1
xpos -370
ypos -136
}
Input {
inputs 0
name Src
xpos -40
ypos -80
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels motion
name Copy3
xpos -370
ypos -92
}
set N329fcf00 [stack 0]
IDistort {
channels {rgba.red -rgba.green -rgba.blue none}
uv motion
uv_scale {{"amt + (amt*(ChrmSep/10))"}}
name IDistort2
xpos -472
ypos 55
addUserKnob {20 User}
}
IDistort {
channels {-rgba.red rgba.green -rgba.blue none}
uv motion
uv_scale {{amt i}}
name IDistort3
xpos -472
ypos 93
addUserKnob {20 User}
}
IDistort {
channels {-rgba.red -rgba.green rgba.blue none}
uv motion
uv_scale {{"amt + (amt*(-ChrmSep/10))" i}}
name IDistort4
xpos -472
ypos 131
addUserKnob {20 User}
}
push $N329fcf00
IDistort {
channels rgba
uv motion
uv_scale {{amt i}}
name IDistort5
label alpha
xpos -133
ypos 85
addUserKnob {20 User}
}
push $N329fcf00
IDistort {
channels rgb
uv motion
uv_scale {{amt i}}
name IDistort1
xpos -252
ypos 84
addUserKnob {20 User}
}
Switch {
inputs 2
which {{barf i}}
name Switch2
xpos -252
ypos 147
}
Switch {
inputs 2
which {{distChrma}}
name Switch1
xpos -362
ypos 244
}
Output {
name Output1
xpos -362
ypos 435
}
push $N32879600
Merge2 {
name Merge1
xpos -260
ypos -803
}
Transform {
center {1024 576}
name Transform2
xpos -260
ypos -772
}
Transform {
center {1024 576}
name Transform3
xpos -260
ypos -741
}
end_group
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
bbox B
name Copy21
selected true
xpos 8544
ypos 9864
}
Grade {
multiply {1 0.9826349616 0.9229999781 1}
maskChannelInput rgba.alpha
invert_mask true
name Grade24
label "Grade Dirt"
selected true
xpos 8544
ypos 9999
}
Premult {
name Premult24
selected true
xpos 8544
ypos 10083
}
EdgeBlur {
size 4.8
brightness 1.18
name EdgeBlur3
selected true
xpos 8544
ypos 10168
}
Dot {
name Dot409
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 8565
ypos 11736
}
OCIOColorSpace {
in_colorspace scene_linear
out_colorspace neutral_grade
name OCIOColorSpace7
label "Neutral Grade \nFOWARD"
selected true
xpos 8531
ypos 11883
}
Dot {
name Dot410
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 8565
ypos 11942
}
Dot {
name Dot72
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 8540
ypos 13613
}
set N3298cf00 [stack 0]
Grade {
channels alpha
gamma 0.235
white_clamp true
name Grade1
selected true
xpos 7654
ypos 13603
}
push $N33754100
Dot {
name dot4
tile_color 0xd8b700ff
label "From: Camera"
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 7439
ypos 13197
hide_input true
}
Camera2 {
inputs 0
translate {-1135.857178 5364.791992 301.1605835}
rotate {-16.58522756 178.137508 0.5314736145}
focal 25
haperture 38.4
vaperture 21.6
name Camera2
selected true
xpos 7410
ypos 12889
}
FrameHold {
first_frame 1001
name FrameHold6
selected true
xpos 7400
ypos 13014
}
Dot {
name Dot458
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 7434
ypos 13072
}
Rectangle {
inputs 0
area {-410 280 8700 2088}
softness 330
name Rectangle2
selected true
xpos 7701
ypos 12997
}
Read {
inputs 0
file_type exr
file /coppi/proj/thrg/ftrack/assets/s01e01/img/thrg_s01e01_WindowDirt_v005_element_lin_ap0/thrg_s01e01_WindowDirt_element_lin_ap0_v005.%04d.exr
localizationPolicy on
format "7680 4320 0 0 7680 4320 1 "
first 1001
last 1001
origfirst 1001
origlast 1001
origset true
name WindowDirt_element_lin_ap1
tile_color 0xe36316ff
selected true
xpos 7575
ypos 12519
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname element_lin_ap0
addUserKnob {20 ftrack}
addUserKnob {1 componentId}
componentId af199234-f26c-4e43-a85d-82f2401cc391
addUserKnob {1 componentName}
componentName element_lin_ap0
addUserKnob {1 assetVersionId}
assetVersionId a28023af-e377-417f-a418-48fd0899edde
addUserKnob {1 assetVersion}
assetVersion 1
addUserKnob {1 assetName}
assetName WindowDirt
addUserKnob {1 assetType}
assetType img
addUserKnob {4 versionType l "Version Type" M {latest stable pinned}}
}
Dot {
name Dot78
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 7609
ypos 12636
}
set N32940800 [stack 0]
Rectangle {
replace true
area {1264 1329 3840 2911}
name Rectangle1
selected true
xpos 7709
ypos 12699
}
push $N32940800
Multiply {
inputs 1+1
value 0
invert_mask true
name Multiply3
selected true
xpos 7575
ypos 12693
}
Dot {
name Dot142
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 7609
ypos 12768
}
set N3292dd00 [stack 0]
Roto {
output alpha
cliptype bbox
replace true
curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x450e0000 x44c5c000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x44912000
        {0 0}
        {x4549d99a x4520a667}
        {0 0}
        {0 0}
        {x45604000 x45214000}
        {0 0}
        {0 0}
        {x455fc001 x450d3333}
        {0 0}
        {x42be94a0 xc2d5c260}
        {x45564556 x4516bda9}
        {xc2a258a0 x42b61740}}}
      {cc
       {f 8192}
       {px x44912000
        {0 0}
        {xc3533340 xc0999a00}
        {0 0}
        {0 0}
        {0 0}
        {0 0}
        {0 0}
        {xc1266600 xc3fc6664}
        {0 0}
        {x42be94a0 xc2d5c260}
        {xc33a6680 xc2fe66c0}
        {xc2a258a0 x42b61740}}}}
     {tx x44912000 x455b2aab x451b9555}
     {a osw x41200000 osf 0 str 1 spx x450e0000 spy x44c5c000 sb 1 ltn x44912000 ltm x44912000 tt x40800000}}}}}}
toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { addPoints str 1 ssx 1 ssy 1 sf 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
toolbar_brush_hardness 0.200000003
toolbar_source_transform_scale {1 1}
toolbar_source_transform_center {2272 1582}
colorOverlay {0 0 0 0}
lifetime_type "all frames"
lifetime_start 1161
lifetime_end 1161
motionblur_shutter_offset_type centred
source_black_outside true
name Roto1
selected true
xpos 7680
ypos 12846
}
set N3292d600 [stack 0]
push $N3292d600
push $N3292dd00
Unpremult {
name Unpremult2
selected true
xpos 7574
ypos 12814
}
Grade {
inputs 1+1
white {1.006666 0.986666 1.006666 1}
white_panelDropped true
multiply 10
name Grade4
selected true
xpos 7575
ypos 12841
}
Grade {
inputs 1+1
channels alpha
multiply 1.5
gamma 2
white_clamp true
name Grade6
selected true
xpos 7575
ypos 12877
}
Premult {
name Premult1
selected true
xpos 7575
ypos 12927
}
Multiply {
inputs 1+1
value 0
name Multiply10
selected true
xpos 7574
ypos 12991
}
Project3D2 {
inputs 2
crop false
name Project3D1
selected true
xpos 7575
ypos 13077
}
Card2 {
inputs 0
rows 1
columns 1
translate {-1211.115479 5194.593262 873.0394287}
rotate {16.59349442 -0.07712430507 -0.02169132605}
scaling {946.8851318 150.0053864 1.853564262}
uniform_scale 10
control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
name Card10
label Windows_outside
selected true
xpos 6977
ypos 12957
}
Dot {
name Dot459
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 7011
ypos 13155
}
ApplyMaterial {
inputs 2
name ApplyMaterial1
selected true
xpos 7575
ypos 13151
}
Reformat {
inputs 0
format {{{parent.Reformat_OverscanMASTER.ReformatMASTER.format}}}
scale 2
name Reformat6
selected true
xpos 7695
ypos 13170
}
ScanlineRender {
inputs 3
conservative_shader_sampling false
shutteroffset centred
motion_vectors_type distance
name ScanlineRender1
selected true
xpos 7575
ypos 13238
}
Dot {
name Dot4
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 7609
ypos 13413
}
set N32a93200 [stack 0]
add_layer {windowMask windowMask.alpha}
Shuffle2 {
fromInput1 {{0} B}
in1 windowMask
fromInput2 {{0} B}
mappings "4 black -1 -1 rgba.red 0 0 black -1 -1 rgba.green 0 1 black -1 -1 rgba.blue 0 2 windowMask.alpha 0 0 rgba.alpha 0 3"
name Shuffle1
label "\[value in1]"
selected true
xpos 7411
ypos 13403
}
Dot {
name Dot9
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 7445
ypos 13478
}
set N32a92400 [stack 0]
push $N32a93200
ChannelMerge {
inputs 2
operation stencil
name ChannelMerge1
selected true
xpos 7411
ypos 13514
}
ChannelMerge {
inputs 2
operation stencil
name ChannelMerge11
selected true
xpos 7411
ypos 13597
}
Dot {
name Dot73
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 7445
ypos 13697
}
push $N32a93200
Multiply {
inputs 1+1
channels rgba
value 0
invert_mask true
name Multiply1
label "hold out"
selected true
xpos 7570
ypos 13687
}
Dot {
name Dot460
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 7604
ypos 14059
}
set N32a63900 [stack 0]
Dot {
name Dot461
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 7866
ypos 14059
}
Dot {
name Dot462
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 7866
ypos 14349
}
push $N32a63900
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
channels zDepth
name Copy22
selected true
xpos 7570
ypos 14333
}
Log2Lin {
operation lin2log
name Log2Lin3
selected true
xpos 7570
ypos 14421
disable true
}
Sharpen {
channels rgb
name Sharpen2
selected true
xpos 7570
ypos 14447
disable true
}
Log2Lin {
name Log2Lin4
selected true
xpos 7570
ypos 14473
disable true
}
Defocus {
defocus 6
name Defocus6
selected true
xpos 7568
ypos 14511
disable true
}
Dot {
name Dot463
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 7604
ypos 14565
}
push $N336f6b00
Dot {
name Dot60
tile_color 0x949494ff
label gantry
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 4770
ypos 9801
}
Dot {
name Dot61
tile_color 0x949494ff
label gantry
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 4770
ypos 13606
}
Dot {
name Dot62
tile_color 0x949494ff
label gantry
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 6908
ypos 13614
}
Group {
name key_chew4
help "======== KeyChew beta ========\n=============================\n\nThis is a port of the KeyChew macro for Shake to Nuke.\n\nThere might be tiny differences on the results given in both apps. Some of them are caused by the internal algorithms of each app, and others by the way I faked the JSplineV\nexpression of Shake in Nuke. If you know a better way to solve this, let\nme know!!\n\n=============================\n             2009 Cuco Bures\n============================="
selected true
xpos 6874
ypos 13655
addUserKnob {20 Controls}
addUserKnob {7 chew t "\t\t" R -200 200}
chew 62
addUserKnob {7 soften R 0 200}
soften 57.5
addUserKnob {6 matteMult +STARTLINE}
}
Input {
inputs 0
name Input
xpos -40
ypos -9
}
set N32a37200 [stack 0]
Dot {
name Dot1
xpos 324
ypos -6
}
set N32a36b00 [stack 0]
push $N32a36b00
Invert {
name Invert1
xpos 176
ypos 33
}
push $N32a36b00
Switch {
inputs 2
which {{"\[value chew]>=0?0:1"}}
name Switch1
xpos 180
ypos 87
}
Blur {
size {{"(floor(abs(\[value chew]))/4)+(floor(abs(\[value chew]))/8)"}}
name FgEdgeBlur
xpos 180
ypos 129
}
Grade {
channels alpha
multiply {1 1 1 {max(FgEdgeBlur.size*1.5,1)}}
black_clamp false
name FgEdgeMult
xpos 180
ypos 177
}
Grade {
channels alpha
gamma {1 1 1 {JSplineVFake(floor(abs(chew)))}}
name FgEdgeGamma1
xpos 180
ypos 225
addUserKnob {20 User}
addUserKnob {7 JSplineVFake}
JSplineVFake {{curve l 0.9958 k x5 0.95 0.8 x20 0.5 x40 0.3 x80 0.2 l x200 0.1}}
}
set N32a11600 [stack 0]
Merge2 {
inputs 2
operation minus
name Merge1
xpos 290
ypos 231
}
push $N32a11600
Switch {
inputs 2
which {{"\[value chew]>=0?0:1"}}
name Switch2
xpos 180
ypos 279
}
Clamp {
name Clamp2
xpos 180
ypos 321
}
Blur {
size {{"(floor(abs(\[value soften]))/4)+(floor(abs(\[value soften]))/8)"}}
name BlurResult
xpos 180
ypos 441
}
push $N32a37200
ShuffleCopy {
inputs 2
name ShuffleCopy1
xpos -40
ypos 447
}
Premult {
name Premult1
xpos -40
ypos 495
disable {{"1-\[value matteMult]"}}
}
Output {
name Output1
xpos -40
ypos 567
}
end_group
push $N333fa400
Shuffle2 {
fromInput1 {{0} B}
fromInput2 {{0} B}
mappings "4 black -1 -1 rgba.red 0 0 black -1 -1 rgba.green 0 1 black -1 -1 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
name Shuffle3
label "\[value in1]"
selected true
xpos 4665
ypos 8317
}
Defocus {
channels rgba
defocus 2.1
name Defocus1
selected true
xpos 4665
ypos 8407
}
Dot {
name Dot13
tile_color 0x949494ff
label wipers
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 4699
ypos 8475
}
Dot {
name Dot15
tile_color 0x949494ff
label wipers
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 4699
ypos 13707
}
Group {
name key_chew5
help "======== KeyChew beta ========\n=============================\n\nThis is a port of the KeyChew macro for Shake to Nuke.\n\nThere might be tiny differences on the results given in both apps. Some of them are caused by the internal algorithms of each app, and others by the way I faked the JSplineV\nexpression of Shake in Nuke. If you know a better way to solve this, let\nme know!!\n\n=============================\n             2009 Cuco Bures\n============================="
selected true
xpos 6630
ypos 13706
addUserKnob {20 Controls}
addUserKnob {7 chew t "\t\t" R -200 200}
chew 80
addUserKnob {7 soften R 0 200}
soften 27
addUserKnob {6 matteMult +STARTLINE}
}
Input {
inputs 0
name Input
xpos -40
ypos -9
}
set N3218eb00 [stack 0]
Dot {
name Dot1
xpos 324
ypos -6
}
set N3218e400 [stack 0]
push $N3218e400
Invert {
name Invert1
xpos 176
ypos 33
}
push $N3218e400
Switch {
inputs 2
which {{"\[value chew]>=0?0:1"}}
name Switch1
xpos 180
ypos 87
}
Blur {
size {{"(floor(abs(\[value chew]))/4)+(floor(abs(\[value chew]))/8)"}}
name FgEdgeBlur
xpos 180
ypos 129
}
Grade {
channels alpha
multiply {1 1 1 {max(FgEdgeBlur.size*1.5,1)}}
black_clamp false
name FgEdgeMult
xpos 180
ypos 177
}
Grade {
channels alpha
gamma {1 1 1 {JSplineVFake(floor(abs(chew)))}}
name FgEdgeGamma1
xpos 180
ypos 225
addUserKnob {20 User}
addUserKnob {7 JSplineVFake}
JSplineVFake {{curve l 0.9958 k x5 0.95 0.8 x20 0.5 x40 0.3 x80 0.2 l x200 0.1}}
}
set N32164f00 [stack 0]
Merge2 {
inputs 2
operation minus
name Merge1
xpos 290
ypos 231
}
push $N32164f00
Switch {
inputs 2
which {{"\[value chew]>=0?0:1"}}
name Switch2
xpos 180
ypos 279
}
Clamp {
name Clamp2
xpos 180
ypos 321
}
Blur {
size {{"(floor(abs(\[value soften]))/4)+(floor(abs(\[value soften]))/8)"}}
name BlurResult
xpos 180
ypos 441
}
push $N3218eb00
ShuffleCopy {
inputs 2
name ShuffleCopy1
xpos -40
ypos 447
}
Premult {
name Premult1
xpos -40
ypos 495
disable {{"1-\[value matteMult]"}}
}
Output {
name Output1
xpos -40
ypos 567
}
end_group
Dot {
name Dot18
tile_color 0x949494ff
label wipers
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 6765
ypos 13707
}
ChannelMerge {
inputs 2
name ChannelMerge7
selected true
xpos 6875
ypos 13691
}
push $N32a92400
Dot {
name Dot8
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 7367
ypos 13478
}
Dot {
name Dot10
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 7367
ypos 13621
}
push $N333f8100
Dot {
name Dot17
tile_color 0x949494ff
label "fg holdout windows"
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 4860
ypos 13381
}
Dot {
name Dot21
tile_color 0x949494ff
label "fg holdout windows"
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 6980
ypos 13381
}
set N32112400 [stack 0]
Dot {
name Dot11
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 7291
ypos 13381
}
Group {
name key_chew2
help "======== KeyChew beta ========\n=============================\n\nThis is a port of the KeyChew macro for Shake to Nuke.\n\nThere might be tiny differences on the results given in both apps. Some of them are caused by the internal algorithms of each app, and others by the way I faked the JSplineV\nexpression of Shake in Nuke. If you know a better way to solve this, let\nme know!!\n\n=============================\n             2009 Cuco Bures\n============================="
selected true
xpos 7259
ypos 13450
addUserKnob {20 Controls}
addUserKnob {7 chew t "\t\t" R -200 200}
chew 16
addUserKnob {7 soften R 0 200}
soften 20
addUserKnob {6 matteMult +STARTLINE}
}
Input {
inputs 0
name Input
xpos -40
ypos -9
}
set N32110f00 [stack 0]
Dot {
name Dot1
xpos 324
ypos -6
}
set N32110800 [stack 0]
push $N32110800
Invert {
name Invert1
xpos 176
ypos 33
}
push $N32110800
Switch {
inputs 2
which {{"\[value chew]>=0?0:1"}}
name Switch1
xpos 180
ypos 87
}
Blur {
size {{"(floor(abs(\[value chew]))/4)+(floor(abs(\[value chew]))/8)"}}
name FgEdgeBlur
xpos 180
ypos 129
}
Grade {
channels alpha
multiply {1 1 1 {max(FgEdgeBlur.size*1.5,1)}}
black_clamp false
name FgEdgeMult
xpos 180
ypos 177
}
Grade {
channels alpha
gamma {1 1 1 {JSplineVFake(floor(abs(chew)))}}
name FgEdgeGamma1
xpos 180
ypos 225
addUserKnob {20 User}
addUserKnob {7 JSplineVFake}
JSplineVFake {{curve l 0.9958 k x5 0.95 0.8 x20 0.5 x40 0.3 x80 0.2 l x200 0.1}}
}
set N320ef200 [stack 0]
Merge2 {
inputs 2
operation minus
name Merge1
xpos 290
ypos 231
}
push $N320ef200
Switch {
inputs 2
which {{"\[value chew]>=0?0:1"}}
name Switch2
xpos 180
ypos 279
}
Clamp {
name Clamp2
xpos 180
ypos 321
}
Blur {
size {{"(floor(abs(\[value soften]))/4)+(floor(abs(\[value soften]))/8)"}}
name BlurResult
xpos 180
ypos 441
}
push $N32110f00
ShuffleCopy {
inputs 2
name ShuffleCopy1
xpos -40
ypos 447
}
Premult {
name Premult1
xpos -40
ypos 495
disable {{"1-\[value matteMult]"}}
}
Output {
name Output1
xpos -40
ypos 567
}
end_group
ChannelMerge {
inputs 2
operation out
name ChannelMerge3
selected true
xpos 7257
ypos 13605
}
ChannelMerge {
inputs 2
operation stencil
name ChannelMerge4
selected true
xpos 7258
ypos 13691
}
Dot {
name Dot19
tile_color 0x949494ff
label "dirt core"
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 7291
ypos 13772
}
push $N3298cf00
Multiply {
inputs 1+1
channels rgba
value 0
name Multiply2
label "hold out"
selected true
xpos 8506
ypos 13762
}
Dot {
name Dot450
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 8540
ypos 14431
}
Merge2 {
inputs 2
mix 0.5
name Merge17
selected true
xpos 8506
ypos 14561
}
Dot {
name Dot464
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 8540
ypos 14683
}
Dot {
name Dot465
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 8544
ypos 15961
}
Group {
name DI_Shuffle15
tile_color 0xa43f88ff
gl_color 0x1d1d1dff
label "\[value layer]\n\[value matteName]"
selected true
xpos 8510
ypos 16054
disable true
addUserKnob {20 User l DI_Shuffle}
addUserKnob {41 layer l "shuffle in" T master.layer}
addUserKnob {1 matteName l " matte name:" -STARTLINE}
matteName windows
addUserKnob {41 DIChannelSource l "  from" T master.DIChannelSource}
addUserKnob {41 useRGBalpha l "  use RGB.alpha" -STARTLINE T master.useRGBalpha}
addUserKnob {26 txt l holdout}
addUserKnob {41 holdout l "holdout 1  |" T Copy1.holdout}
addUserKnob {41 holdout_1 l "holdout 2 |" -STARTLINE T Copy7.holdout}
addUserKnob {41 holdout_2 l "holdout 3  |" -STARTLINE T Copy8.holdout}
addUserKnob {41 holdout_3 l "holdout 4" -STARTLINE T Copy9.holdout}
addUserKnob {26 txt_1 l "matte from" T ""}
addUserKnob {41 selectHoldout l "" -STARTLINE T master.selectAlpha}
addUserKnob {41 from0 l " channel" -STARTLINE T Copy25.from0}
addUserKnob {26 txt_2 l " " T "The heldout input (A||B) is opposite of  'matte from' input ."}
addUserKnob {26 txt_3 l " " T "The 'matte from' channel is is never heldout."}
addUserKnob {20 info}
addUserKnob {26 ver l ver: T 0.3}
addUserKnob {26 source l source: T "Rafs Kan. 13th Nov. 2019"}
addUserKnob {26 edit l edit: T " rafsKan 2019-19-11: add C&D\nrafsKan 2022/02/07: bug fixes"}
addUserKnob {7 UID_DI_Shuffle l UID +INVISIBLE}
UID_DI_Shuffle 1
}
Input {
inputs 0
name A
xpos 2714
ypos -356
number 1
}
Dot {
name Dot13
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2748
ypos -162
}
AddChannels {
channels DiMatte_1
name AddChannels5
xpos 2714
ypos -144
disable {{"!(\[numvalue master.layer]==0||\[numvalue master.layer]==1|\[numvalue master.layer]==2||\[numvalue master.layer]==3||\[numvalue master.layer]==16)"}}
}
AddChannels {
channels DiMatte_2
name AddChannels6
xpos 2714
ypos -106
disable {{"!(\[numvalue master.layer]==4||\[numvalue master.layer]==5|\[numvalue master.layer]==6||\[numvalue master.layer]==7||\[numvalue master.layer]==17)"}}
}
AddChannels {
channels DIMatte_3
name AddChannels7
xpos 2714
ypos -72
disable {{"!(\[numvalue master.layer]==8||\[numvalue master.layer]==9|\[numvalue master.layer]==10||\[numvalue master.layer]==11||\[numvalue master.layer]==18)"}}
}
AddChannels {
channels DIMatte_4
name AddChannels8
xpos 2714
ypos -36
disable {{"!(\[numvalue master.layer]==12||\[numvalue master.layer]==13|\[numvalue master.layer]==14||\[numvalue master.layer]==15||\[numvalue master.layer]==19)"}}
}
Dot {
name Dot3
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2748
ypos 2
}
set N31e61d00 [stack 0]
Input {
inputs 0
name B
xpos 3881
ypos -401
}
Dot {
name Dot11
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3915
ypos -375
}
Dot {
name Dot8
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3941
ypos -231
}
Dot {
name Dot9
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3941
ypos -213
}
AddChannels {
channels DiMatte_1
name AddChannels1
xpos 3907
ypos -195
disable {{"!(\[numvalue master.layer]==0||\[numvalue master.layer]==1|\[numvalue master.layer]==2||\[numvalue master.layer]==3||\[numvalue master.layer]==16)"}}
}
AddChannels {
channels DiMatte_2
name AddChannels2
xpos 3907
ypos -157
disable {{"!(\[numvalue master.layer]==4||\[numvalue master.layer]==5|\[numvalue master.layer]==6||\[numvalue master.layer]==7||\[numvalue master.layer]==17)"}}
}
AddChannels {
channels DIMatte_3
name AddChannels3
xpos 3907
ypos -123
disable {{"!(\[numvalue master.layer]==8||\[numvalue master.layer]==9|\[numvalue master.layer]==10||\[numvalue master.layer]==11||\[numvalue master.layer]==18)"}}
}
AddChannels {
channels DIMatte_4
name AddChannels4
xpos 3907
ypos -87
disable {{"!(\[numvalue master.layer]==12||\[numvalue master.layer]==13|\[numvalue master.layer]==14||\[numvalue master.layer]==15||\[numvalue master.layer]==19)"}}
}
Dot {
name Dot4
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3946
ypos 44
}
set N31e48100 [stack 0]
Switch {
inputs 2
which {{master.DIChannelSource==1?0:1}}
name Switch1
label DIChannelSource
xpos 2842
ypos 690
}
Shuffle {
red white
green white
blue white
alpha white
name Shuffle1
label "\[value in]"
xpos 3529
ypos 1496
disable {{master.DIChannelSource==2?0:1}}
}
Dot {
name Dot33
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3563
ypos 1599
}
set N31e32b00 [stack 0]
Dot {
name Dot34
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3563
ypos 1858
}
set N31e32400 [stack 0]
Dot {
name Dot35
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3563
ypos 2179
}
set N31e31d00 [stack 0]
Dot {
name Dot36
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3563
ypos 2442
}
set N31e31600 [stack 0]
Dot {
name Dot37
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3558
ypos 2735
}
set N31e30f00 [stack 0]
Dot {
name Dot10
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3555
ypos 2814
}
set N31e30800 [stack 0]
Dot {
name Dot31
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3555
ypos 2907
}
set N31e30100 [stack 0]
Dot {
name Dot32
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3550
ypos 2993
}
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DIMatte_D
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DIMatte_D.alpha 0 3 rgba.alpha 0 0 DIMatte_D.red 0 0 rgba.alpha 0 0 DIMatte_D.green 0 1 rgba.alpha 0 0 DIMatte_D.blue 0 2"
name Shuffle29
label "\[value in1]"
xpos 3605
ypos 2983
disable {{!useRGBalpha}}
}
push $N31e30100
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DIMatte_3
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DIMatte_C.alpha 0 3 rgba.alpha 0 0 DIMatte_3.red 0 0 rgba.alpha 0 0 DIMatte_3.green 0 1 rgba.alpha 0 0 DIMatte_3.blue 0 2"
name Shuffle28
label "\[value in1]"
xpos 3608
ypos 2896
disable {{!useRGBalpha}}
}
push $N31e30800
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DiMatte_2
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DiMatte_2.alpha 0 3 rgba.alpha 0 0 DiMatte_2.red 0 0 rgba.alpha 0 0 DiMatte_2.green 0 1 rgba.alpha 0 0 DiMatte_2.blue 0 2"
name Shuffle27
label "\[value in1]"
xpos 3611
ypos 2808
disable {{!useRGBalpha}}
}
push $N31e30f00
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DiMatte_1
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DiMatte_1.alpha 0 3 rgba.alpha 0 0 DiMatte_1.red 0 0 rgba.alpha 0 0 DiMatte_1.green 0 1 rgba.alpha 0 0 DiMatte_1.blue 0 2"
name Shuffle26
label "\[value in1]"
xpos 3620
ypos 2728
disable {{!useRGBalpha}}
}
push $N31e31600
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DIMatte_D
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DIMatte_D.alpha 0 3 rgba.alpha 0 0 DIMatte_D.red 0 0 rgba.alpha 0 0 DIMatte_D.green 0 1 rgba.alpha 0 0 DIMatte_D.blue 0 2"
name Shuffle25
label "\[value in1]"
xpos 3615
ypos 2432
disable {{!useRGBalpha}}
}
Dot {
name Dot27
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3747
ypos 2438
}
set N31e10f00 [stack 0]
Dot {
name Dot28
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3743
ypos 2511
}
set N31e10800 [stack 0]
Dot {
name Dot29
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3743
ypos 2578
}
set N31e10100 [stack 0]
Dot {
name Dot30
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3740
ypos 2641
}
push $N31e10100
push $N31e10800
push $N31e10f00
push $N31e31d00
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DIMatte_3
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DIMatte_C.alpha 0 3 rgba.alpha 0 0 DIMatte_3.red 0 0 rgba.alpha 0 0 DIMatte_3.green 0 1 rgba.alpha 0 0 DIMatte_3.blue 0 2"
name Shuffle24
label "\[value in1]"
xpos 3618
ypos 2170
disable {{!useRGBalpha}}
}
Dot {
name Dot23
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3749
ypos 2179
}
set N31df6b00 [stack 0]
Dot {
name Dot24
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3749
ypos 2240
}
set N31df6400 [stack 0]
Dot {
name Dot25
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3749
ypos 2309
}
set N31df5d00 [stack 0]
Dot {
name Dot26
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3749
ypos 2374
}
push $N31df5d00
push $N31df6400
push $N31df6b00
push $N31e32400
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DiMatte_2
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DiMatte_2.alpha 0 3 rgba.alpha 0 0 DiMatte_2.red 0 0 rgba.alpha 0 0 DiMatte_2.green 0 1 rgba.alpha 0 0 DiMatte_2.blue 0 2"
name Shuffle23
label "\[value in1]"
xpos 3627
ypos 1850
disable {{!useRGBalpha}}
}
Dot {
name Dot19
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3759
ypos 1858
}
set N31df4800 [stack 0]
Dot {
name Dot20
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3759
ypos 1931
}
set N31df4100 [stack 0]
Dot {
name Dot21
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3759
ypos 1998
}
set N31fcf900 [stack 0]
Dot {
name Dot22
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3756
ypos 2061
}
push $N31fcf900
push $N31df4100
push $N31df4800
push $N31e32b00
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DiMatte_1
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DiMatte_1.alpha 0 3 rgba.alpha 0 0 DiMatte_1.red 0 0 rgba.alpha 0 0 DiMatte_1.green 0 1 rgba.alpha 0 0 DiMatte_1.blue 0 2"
name Shuffle22
label "\[value in1]"
xpos 3630
ypos 1589
disable {{!useRGBalpha}}
}
Dot {
name Dot15
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3760
ypos 1599
}
set N31fce400 [stack 0]
Dot {
name Dot16
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3760
ypos 1660
}
set N31fcdd00 [stack 0]
Dot {
name Dot17
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3760
ypos 1729
}
set N31fcd600 [stack 0]
Dot {
name Dot18
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3760
ypos 1794
}
push $N31fcd600
push $N31fcdd00
push $N31fce400
push $N31e48100
push $N31e61d00
Dot {
name Dot38
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2492
ypos 2
}
Switch {
inputs 2
which {{master.selectAlpha==1?0:1}}
name Switch3
label "hold out"
xpos 2422
ypos 600
}
Dot {
name Dot40
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2456
ypos 656
}
set N31faf900 [stack 0]
Dot {
name Dot39
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2372
ypos 656
}
Dot {
name Dot41
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2372
ypos 754
}
set N31faeb00 [stack 0]
Dot {
name Dot42
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2372
ypos 1042
}
push $N31faeb00
push $N31faf900
Multiply {
value 0
name Multiply2
xpos 2422
ypos 684
disable true
}
Copy {
inputs 2
to0 rgba.alpha
name Copy25
xpos 2422
ypos 744
}
Clamp {
name Clamp1
xpos 2422
ypos 847
}
Dot {
name Dot12
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2610
ypos 905
}
push $N31e61d00
push $N31e48100
Switch {
inputs 2
which {{master.selectAlpha==1?0:1}}
name Switch2
label "hold out"
xpos 2612
ypos 676
}
Dot {
name Dot7
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2646
ypos 862
}
Multiply {
inputs 1+1
value 0
name Multiply1
xpos 2612
ypos 952
}
Copy {
inputs 2
from0 {{{parent.Copy25.from0}}}
to0 {{{parent.Copy25.from0}}}
name Copy26
xpos 2616
ypos 1032
disable {{Copy25.from0==0}}
}
set N31f94100 [stack 0]
Dot {
name Dot1
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3697
ypos 955
}
set N31f6b900 [stack 0]
Dot {
name Dot2
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3697
ypos 1053
}
set N31f6b200 [stack 0]
Dot {
name Dot5
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3699
ypos 1155
}
set N31f6ab00 [stack 0]
Dot {
name Dot6
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3699
ypos 1277
}
push $N31f6ab00
push $N31f6b200
push $N31f6b900
push $N31e48100
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels DiMatte_1
name Copy1
label "hold out"
xpos 3912
ypos 933
disable {{!holdout}}
addUserKnob {20 User}
addUserKnob {6 holdout +STARTLINE}
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels DiMatte_2
name Copy7
label "hold out"
xpos 3912
ypos 1031
disable {{!holdout}}
addUserKnob {20 User}
addUserKnob {6 holdout +STARTLINE}
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels DIMatte_3
name Copy8
label "hold out"
xpos 3912
ypos 1133
disable {{!holdout}}
addUserKnob {20 User}
addUserKnob {6 holdout +STARTLINE}
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels DIMatte_D
name Copy9
label "hold out"
xpos 3914
ypos 1255
disable {{!holdout}}
addUserKnob {20 User}
addUserKnob {6 holdout +STARTLINE}
}
Dot {
name Dot14
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3948
ypos 1492
}
Copy {
inputs 2
from0 DiMatte_1.red
to0 DiMatte_1.red
name Copy5
xpos 3914
ypos 1589
disable {{"!(\[numvalue master.layer]==0)"}}
}
Copy {
inputs 2
from0 DiMatte_1.green
to0 DiMatte_1.green
name Copy10
xpos 3914
ypos 1650
disable {{"!(\[numvalue master.layer]==1)"}}
}
Copy {
inputs 2
from0 DiMatte_1.blue
to0 DiMatte_1.blue
name Copy11
xpos 3914
ypos 1719
disable {{"!(\[numvalue master.layer]==2)"}}
}
Copy {
inputs 2
from0 DiMatte_1.alpha
to0 DiMatte_1.alpha
name Copy12
xpos 3914
ypos 1784
disable {{"!(\[numvalue master.layer]==3)"}}
}
Copy {
inputs 2
from0 DiMatte_2.red
to0 DiMatte_2.red
name Copy13
xpos 3914
ypos 1848
disable {{"!(\[numvalue master.layer]==4)"}}
}
Copy {
inputs 2
from0 DiMatte_2.green
to0 DiMatte_2.green
name Copy14
xpos 3914
ypos 1921
disable {{"!(\[numvalue master.layer]==5)"}}
}
Copy {
inputs 2
from0 DiMatte_2.blue
to0 DiMatte_2.blue
name Copy15
xpos 3914
ypos 1988
disable {{"!(\[numvalue master.layer]==6)"}}
}
Copy {
inputs 2
from0 DiMatte_2.alpha
to0 DiMatte_2.alpha
name Copy16
xpos 3911
ypos 2051
disable {{"!(\[numvalue master.layer]==7)"}}
}
Copy {
inputs 2
from0 DIMatte_3.red
to0 DIMatte_3.red
name Copy3
xpos 3911
ypos 2169
disable {{"!(\[numvalue master.layer]==8)"}}
}
Copy {
inputs 2
from0 DIMatte_3.green
to0 DIMatte_3.green
name Copy17
xpos 3911
ypos 2230
disable {{"!(\[numvalue master.layer]==9)"}}
}
Copy {
inputs 2
from0 DIMatte_3.blue
to0 DIMatte_3.blue
name Copy18
xpos 3911
ypos 2299
disable {{"!(\[numvalue master.layer]==10)"}}
}
Copy {
inputs 2
from0 DIMatte_C.alpha
to0 DIMatte_C.alpha
name Copy19
xpos 3911
ypos 2364
disable {{"!(\[numvalue master.layer]==11)"}}
}
Copy {
inputs 2
from0 DIMatte_D.red
to0 DIMatte_D.red
name Copy20
xpos 3911
ypos 2428
disable {{"!(\[numvalue master.layer]==12)"}}
}
Copy {
inputs 2
from0 DIMatte_D.green
to0 DIMatte_D.green
name Copy21
xpos 3911
ypos 2501
disable {{"!(\[numvalue master.layer]==13)"}}
}
Copy {
inputs 2
from0 DIMatte_D.blue
to0 DIMatte_D.blue
name Copy22
xpos 3911
ypos 2568
disable {{"!(\[numvalue master.layer]==14)"}}
}
Copy {
inputs 2
from0 DIMatte_D.alpha
to0 DIMatte_D.alpha
name Copy23
xpos 3908
ypos 2631
disable {{"!(\[numvalue master.layer]==15)"}}
}
Copy {
inputs 2
channels DiMatte_1
name Copy2
xpos 3782
ypos 2726
disable {{"!(\[numvalue master.layer]==16)"}}
}
Copy {
inputs 2
channels DiMatte_2
name Copy4
xpos 3782
ypos 2802
disable {{"!(\[numvalue master.layer]==17)"}}
}
Copy {
inputs 2
channels DIMatte_3
name Copy6
xpos 3782
ypos 2895
disable {{"!(\[numvalue master.layer]==18)"}}
}
Copy {
inputs 2
channels DIMatte_D
name Copy24
xpos 3782
ypos 2981
disable {{"!(\[numvalue master.layer]==19)"}}
}
Output {
name Output1
xpos 3908
ypos 3145
}
NoOp {
inputs 0
name master
label "\[value layer]\n\[numvalue master.layer]"
xpos 3336
ypos -319
addUserKnob {20 User}
addUserKnob {4 layer M {DiMatte_1.red DiMatte_1.green DiMatte_1.blue DiMatte_1.alpha DiMatte_2.red DiMatte_2.green DiMatte_2.blue DiMatte_2.alpha DiMatte_3.red DiMatte_3.green DiMatte_3.blue DiMatte_3.alpha DiMatte_4.red DiMatte_4.green DiMatte_4.blue DiMatte_4.alpha "DiMatte_1.rgba (all)" "DiMatte_2.rgba (all)" "DiMatte_3.rgba (all)" "DiMatte_4.rgba (all)" "none (holdout only)" "" "" "" "" "" "" "" "" "" "" "" ""}}
layer DiMatte_2.blue
addUserKnob {6 useRGBalpha l "use RGB.alpha" -STARTLINE}
useRGBalpha true
addUserKnob {4 selectAlpha l "select alphaHoldout" M {"B input" "A input" ""}}
addUserKnob {4 DIChannelSource l "DI ChannelSource" M {"A input" "B input" "Use constant" "" ""}}
DIChannelSource "B input"
}
push $N31f94100
Viewer {
frame_range 1001-1161
fps 25
channels DiMatte_2
colour_sample_bbox {-0.5457746387 -0.2913732529 -0.4647887349 -0.2068661898}
samplepoints {{-0.6971830726 -0.1258802861}
  }
viewerProcess "Raw (ACES)"
name Viewer1
xpos 2119
ypos -211
}
end_group
Group {
name Reformat_Overscan16
selected true
xpos 8510
ypos 16568
addUserKnob {20 User l Reformat_Overscan}
addUserKnob {41 format l "output format" T ReformatMASTER.format}
addUserKnob {41 filter T ReformatOverscanMASTER.filter}
addUserKnob {41 overscanPercent T ReformatOverscanMASTER.overscanPercent}
addUserKnob {20 info}
addUserKnob {26 version l ver: T "v1 rafal 10/02/2020"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust4
tile_color 0xaaaaaaff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 42
xpos -987
ypos -496
bdwidth 280
bdheight 332
z_order -92960
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "Flat plate res"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Black
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
Input {
inputs 0
name Input1
xpos -884
ypos -382
}
Reformat {
format {{{parent.parent.Reformat_OverscanMASTER.ReformatMASTER.format}}}
pbb true
name ReformatMASTER
xpos -884
ypos -342
}
Reformat {
type scale
scale {{overscanPercent==0?1:1-(1/overscanPercent)}}
resize none
filter impulse
pbb true
name ReformatOverscanMASTER
xpos -884
ypos -288
addUserKnob {20 User l percent}
addUserKnob {7 overscanPercent R 0 80}
overscanPercent {{parent.parent.Reformat_OverscanMASTER.ReformatOverscanMASTER.overscanPercent}}
}
Crop {
box {{-ceil(((input.height*((1-ReformatOverscanMASTER.scale)))*0.5))} {-ceil(((input.width*((1-ReformatOverscanMASTER.scale)))*0.5))} {ceil(input.width+((input.width*(1-ReformatOverscanMASTER.scale))*0.5))} {ceil(input.height+((input.height*(1-ReformatOverscanMASTER.scale))*0.5))}}
name CropOverscanMASTER
xpos -884
ypos -244
addUserKnob {20 User}
}
set N32073200 [stack 0]
Output {
name Output1
xpos -884
ypos -144
}
push $N32073200
Viewer {
frame_range 994-1161
fps 25
viewerProcess "sRGB (ACES)"
name Viewer1
xpos -624
ypos -303
}
end_group
Group {
name UnlimitedRemove11
tile_color 0x9e3a61ff
selected true
xpos 8510
ypos 16594
lock_connections true
addUserKnob {20 user l UnlimitedRemove}
addUserKnob {20 info l Info n 1}
info 0
addUserKnob {26 text_info l "" +STARTLINE T "<font color=#e1f2a2>UnlimitedRemove v1.2</font> | author: Guillermo Algora\n<br>\nThe functionality of the native Remove node with the possibility of unlimited channel slots.\n<br>"}
addUserKnob {20 endGroup n -1}
addUserKnob {4 operation t "Remove: the named channels are deleted\nKeep: all but the named channels are deleted" M {remove keep "" "" "" "" "" "" "" "" "" ""}}
operation keep
addUserKnob {26 description l "" -STARTLINE T "                   Channel slots:"}
addUserKnob {22 add l "Add (+4)" t "Add four additional channel slots" -STARTLINE T "def add_remove_node(switch_node):\n\n    last_remove_node = switch_node.input(0)\n\n    nukescripts.clear_selection_recursive()\n    last_remove_node.setSelected(True)\n    new_remove_node = nuke.createNode(\"Remove\", inpanel=False)\n    nukescripts.clear_selection_recursive()\n\n    new_remove_node\['operation'].setValue(\"remove\")\n    for knob_name in (\"channels\", \"channels2\", \"channels3\", \"channels4\"):\n        new_remove_node\[knob_name].setValue(\"none\")\n\n    new_remove_node\['xpos'].setExpression('\{\}'.format(last_remove_node\['xpos'].value()))\n    new_remove_node\['ypos'].setExpression('\{\}'.format(last_remove_node\['ypos'].value()+50))\n\n    return new_remove_node\n\ndef add_keep_node(switch_node, new_remove_node):\n\n    last_keep_node = switch_node.input(1)\n\n    nukescripts.clear_selection_recursive()\n    last_keep_node.setSelected(True)\n    new_keep_node = nuke.createNode(\"Remove\", inpanel=False)\n\n    new_keep_node\['operation'].setValue(\"keep\")\n    for knob_name in (\"channels\", \"channels2\", \"channels3\", \"channels4\"):\n        new_keep_node\[knob_name].setValue(\"none\")\n\n    new_keep_node\['xpos'].setExpression('\{\}'.format(last_keep_node\['xpos'].value()-100))\n    new_keep_node\['ypos'].setExpression('\{\}'.format(last_keep_node\['ypos'].value()+50))\n\n    new_keep_node.setSelected(True)\n    copy_node = nuke.createNode(\"Copy\", inpanel=False)\n    nukescripts.clear_selection_recursive()\n\n    for knob_name in (\"from0\", \"from1\", \"from2\", \"from3\"):\n        copy_node\[knob_name].setValue(\"none\")\n    for knob_name in (\"to0\", \"to1\", \"to2\", \"to3\"):\n        copy_node\[knob_name].setValue(\"none\")\n   \n    copy_node\['channels'].setValue(\"all\")\n    copy_node\['metainput'].setValue(\"All\")\n    copy_node\['rangeinput'].setValue(\"All\")\n    copy_node\['bbox'].setValue(\"union\")\n     \n    copy_node\['xpos'].setExpression('\{\}'.format(new_keep_node\['xpos'].value()+100))\n    copy_node\['ypos'].setExpression('\{\}'.format(new_keep_node\['ypos'].value()))\n\n    copy_node.setInput(0, last_keep_node)\n    new_keep_node.setInput(0, nuke.toNode(\"Dot1\"))\n\n    for knob_name in (\"channels\", \"channels2\", \"channels3\", \"channels4\"):\n        new_keep_node\[knob_name].setExpression(new_remove_node.name() + '.\{\}'.format(knob_name))\n\ndef add_channels(this_node, new_remove_node):\n\n    highest = \[]\n    for knob in this_node.allKnobs():\n        if \"channel\" in knob.name():\n            number = knob.name().split(\"channels\")\[1]\n            if number.isdigit():\n                highest.append(int(number))\n    highest = max(highest)\n\n    for knob_name in (\"channels\", \"channels2\", \"channels3\", \"channels4\"):\n        highest += 1\n        knob = nuke.Link_Knob(\"channels\" + '\{\}'.format(highest))\n        knob.setLink(new_remove_node.name() +'.\{\}'.format(knob_name))\n        this_node.addKnob(knob)\n\nundo = nuke.Undo()\nundo.disable()\n\ntry:\n    this_node = nuke.thisNode()\n\n    group = this_node\n    group.begin()\n\n    switch_node = nuke.toNode(\"Switch1\")\n    switch_node\['xpos'].setExpression('\{\}'.format(switch_node\['xpos'].value()))\n    switch_node\['ypos'].setExpression('\{\}'.format(switch_node\['ypos'].value()+50))\n\n    output_node = nuke.toNode(\"Output1\")\n    output_node\['xpos'].setExpression('\{\}'.format(output_node\['xpos'].value()))\n    output_node\['ypos'].setExpression('\{\}'.format(output_node\['ypos'].value()+50))\n\n    new_remove_node = add_remove_node(switch_node)\n    add_keep_node(switch_node, new_remove_node)\n\n    group.end()\n\n    add_channels(this_node, new_remove_node)\n\nfinally:\n    undo.enable()"}
addUserKnob {22 remove l "Remove (last 4)" t "Remove the last four additional channel slots" -STARTLINE T "def get_highest(this_node):\n\n    highest = \[]\n    for knob in this_node.allKnobs():\n        if \"channel\" in knob.name():\n            number = knob.name().split(\"channels\")\[1]\n            if number.isdigit():\n                highest.append(int(number))\n    highest = max(highest) + 1\n    return highest\n\ndef remove_channels(this_node, highest):\n\n        for i in range (0,4):\n            highest -= 1\n            this_node.removeKnob(this_node.knobs()\[(\"channels\" + '\{\}'.format(highest))])\n\ndef remove_nodes(switch_node):\n    copy_node = switch_node.input(1)\n    keep_node = copy_node.input(1)\n    remove_node = switch_node.input(0)\n\n    nuke.delete(copy_node)\n    nuke.delete(keep_node)\n    nuke.delete(remove_node)\n\nundo = nuke.Undo()\nundo.disable()\n\ntry:\n    this_node = nuke.thisNode()\n    highest = get_highest(this_node)\n\n    if highest > 5:\n        \n        remove_channels(this_node, highest)\n\n        group = this_node\n        group.begin()\n\n        switch_node = nuke.toNode(\"Switch1\")\n        switch_node\['xpos'].setExpression('\{\}'.format(switch_node\['xpos'].value()))\n        switch_node\['ypos'].setExpression('\{\}'.format(switch_node\['ypos'].value()-50))\n\n        output_node = nuke.toNode(\"Output1\")\n        output_node\['xpos'].setExpression('\{\}'.format(output_node\['xpos'].value()))\n        output_node\['ypos'].setExpression('\{\}'.format(output_node\['ypos'].value()-50))\n\n        remove_nodes(switch_node)\n\n        group.end()\n\nfinally:\n    undo.enable()"}
addUserKnob {41 channels T Remove1.channels}
addUserKnob {41 channels2 T Remove1.channels2}
addUserKnob {41 channels3 T Remove1.channels3}
addUserKnob {41 channels4 T Remove1.channels4}
addUserKnob {41 channels5 T Remove3.channels}
addUserKnob {41 channels6 T Remove3.channels2}
addUserKnob {41 channels7 T Remove3.channels3}
addUserKnob {41 channels8 T Remove3.channels4}
}
Input {
inputs 0
name Input
xpos {{0.0 x1001 0}}
ypos {{0.0 x1001 -1}}
}
Dot {
name Dot1
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos {{34.0 x1001 26}}
ypos {{125.0 x1001 125}}
}
set N32070f00 [stack 0]
Remove {
operation keep
channels {{{Remove3.channels}}}
channels2 {{{Remove3.channels2}}}
channels3 {{{Remove3.channels3}}}
channels4 {{{Remove3.channels4}}}
name Remove4
xpos 89
ypos 165
}
push $N32070f00
Remove {
operation keep
channels {{{Remove1.channels}}}
channels2 {{{Remove1.channels2}}}
channels3 {{{Remove1.channels3}}}
channels4 {{{Remove1.channels4}}}
name Remove2
xpos {{189.0 x1001 188}}
ypos {{115.0 x1001 115}}
}
Copy {
inputs 2
channels all
metainput All
rangeinput All
name Copy1
xpos 189
ypos 165
}
push $N32070f00
Remove {
channels rgba
channels3 DiMatte_1
channels4 DiMatte_2
name Remove1
xpos {{-185.0 x1001 -183}}
ypos {{115.0 x1001 115}}
}
Remove {
channels DIMatte_3
channels2 DIMatte_D
name Remove3
xpos -185
ypos 165
}
Switch {
inputs 2
which {{UnlimitedRemove11.operation}}
name Switch1
xpos {{0.0 x1001 0}}
ypos {{282.0 x1001 233}}
}
Output {
name Output1
xpos {{0.0 x1001 -7}}
ypos {{392.0 x1001 342}}
}
end_group
Remove {
channels DiMatte_1
channels2 DiMatte_2
channels3 DIMatte_3
channels4 DIMatte_4
name Remove13
selected true
xpos 8510
ypos 16635
addUserKnob {20 User +INVISIBLE}
addUserKnob {7 UID_DI_Shuffle l UID}
}
Dot {
name Dot466
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 8543
ypos 16954
}
ModifyMetaData {
metadata {
 {set gbk/scriptname "\[value root.name]"}
 {set exr/task_id "\[getenv FTRACK_TASKID]"}
 {remove exr/chunkCount ""}
 {remove exr/compressionName ""}
}
name ModifyMetaData10
selected true
xpos 8509
ypos 17114
}
Write {
channels all
file /coppi/proj/thrg/shottree/s01e01/015-0250/output2d/comp/comp30_precomp/thrg_s01e01_015-0250_comp30_precomp_plate_lin_ap0_v002/thrg_s01e01_015-0250_comp30_precomp_plate_lin_ap0_v002.%04d.exr
colorspace "ACES - ACES2065-1"
file_type exr
dw_compression_level 80
metadata "all metadata"
first_part rgba
render_order 100
version 24
in_colorspace scene_linear
out_colorspace scene_linear
beforeRender "from nuketools import beforerenderfunctions;beforerenderfunctions.beforeRender()"
name WritePreComp8
note_font "Bitstream Vera Sans Bold"
selected true
xpos 8509
ypos 17170
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
addUserKnob {20 fwrite l "GBK Write"}
addUserKnob {1 ffile l File}
ffile /coppi/proj/thrg/shottree/s01e01/015-0250/output2d/comp/comp30_precomp/thrg_s01e01_015-0250_comp30_precomp_plate_lin_ap0_v002/thrg_s01e01_015-0250_comp30_precomp_plate_lin_ap0_v002.%04d.exr
addUserKnob {1 fproxy l Proxy}
addUserKnob {6 fproxycheck l "Set Proxy Path" +STARTLINE}
addUserKnob {26 divider l "" +STARTLINE}
addUserKnob {4 task l Task M {comp alwy am came char conc cont cran edit fire flar glas inge ocea pm prod sbv scre skye util source}}
addUserKnob {1 fassetname l "Asset Name Preview:" +DISABLED}
fassetname comp30_precomp
addUserKnob {1 fassetbasename l "Asset Name:"}
fassetbasename comp30
addUserKnob {1 fecompname l "Component Name:"}
fecompname plate
addUserKnob {1 flatestversion l "Latest published version:" +DISABLED}
flatestversion 0
addUserKnob {22 getlatest l Refresh -STARTLINE T "from nuketools import writetab \nwritetab.getLatestPubVersion() \n"}
addUserKnob {6 precomp l Precomp +STARTLINE}
precomp true
addUserKnob {6 denoised l Denoised(dn) +STARTLINE}
addUserKnob {6 delensed l Delensed(dl) +STARTLINE}
addUserKnob {6 neutralgrade l Neutralgrade(ng) +STARTLINE}
addUserKnob {6 matte l Matte +STARTLINE}
addUserKnob {6 no_frame_number l "No Frame Numbering" +STARTLINE}
addUserKnob {3 fversion l Version}
fversion 2
addUserKnob {4 format l Format M {exr dpx png tif jpg tga mov}}
addUserKnob {4 channel l Channel M {rgb rgba all}}
channel all
addUserKnob {4 fcompression l Compression M {none "Zip (1 scanline)" "Zip (16 scanlines)" "PIZ Wavelet (32 scanlines)" RLE B44 B44A DWAA DWAB}}
fcompression "Zip (1 scanline)"
addUserKnob {1 fview l View}
addUserKnob {26 saveSettingsMsg l "" -STARTLINE T "  "}
addUserKnob {3 frenderorder l "Render order"}
frenderorder 100
addUserKnob {22 frender l Render -STARTLINE T "from nuketools import writetab \nwritetab.render() \n"}
addUserKnob {3 fframeranges l "Frame range" +DISABLED}
fframeranges 1
addUserKnob {3 fframerangee l "" -STARTLINE +DISABLED}
fframerangee 1
addUserKnob {6 flimitrange l "Limit to range" -STARTLINE}
addUserKnob {22 rfromw l "Read from Write" -STARTLINE T "from nuketools import readfromwrite \nreadfromwrite.readFromWrite()"}
addUserKnob {22 rendcurr l "Render current frame" -STARTLINE T "from nuketools import writetab \nwritetab.renderCurrentFrame()"}
addUserKnob {6 fcopyscript l "Don't Copy Nuke Script" +STARTLINE}
addUserKnob {6 fwriteinit l "Is everything added" -STARTLINE +HIDDEN}
fwriteinit true
}
nuke_dispatch {
name nuke_dispatch__plate1
selected true
xpos 8509
ypos 17253
jobtitle comp30_precomp
framestart 1001
frameend 1161
customframes ""
maxtime 3:00:00
StartAfterTime ""
ThreadCount 0
ServiceKeyExpr ""
removelicense true
depthindex 4
}
Group {
name PrecompDispatch_plate1
tile_color 0xff0000ff
label "\[if \{\[value disable]==true\}  \{return OFF\}  \{return ON\}]"
note_font "Bitstream Vera Sans"
note_font_size 21
selected true
xpos 8509
ypos 17316
postage_stamp true
addUserKnob {20 User l PrecompDispatch}
addUserKnob {41 file l File T ReadPreComp.file}
addUserKnob {41 localizationPolicy l "Localization Policy" T ReadPreComp.localizationPolicy}
addUserKnob {41 updateLocalization l Update T ReadPreComp.updateLocalization}
addUserKnob {41 localizationPriority l "localization priority" T ReadPreComp.localizationPriority}
addUserKnob {41 format l Format T ReadPreComp.format}
addUserKnob {41 proxy l Proxy T ReadPreComp.proxy}
addUserKnob {41 proxy_format l "Proxy Format" T ReadPreComp.proxy_format}
addUserKnob {41 first l "Frame Range" T ReadPreComp.first}
addUserKnob {41 before l "" -STARTLINE T ReadPreComp.before}
addUserKnob {41 last l "" -STARTLINE T ReadPreComp.last}
addUserKnob {41 after l "" -STARTLINE T ReadPreComp.after}
addUserKnob {41 frame_mode l Frame T ReadPreComp.frame_mode}
addUserKnob {41 frame l "" -STARTLINE T ReadPreComp.frame}
addUserKnob {41 origfirst l "Original Range" T ReadPreComp.origfirst}
addUserKnob {41 origlast l "" -STARTLINE T ReadPreComp.origlast}
addUserKnob {41 origset l "Original Range Set" T ReadPreComp.origset}
addUserKnob {41 on_error l "Missing Frames" T ReadPreComp.on_error}
addUserKnob {41 reload T ReadPreComp.reload}
addUserKnob {41 colorspace l Colorspace T ReadPreComp.colorspace}
addUserKnob {41 premultiplied l Premultiplied T ReadPreComp.premultiplied}
addUserKnob {41 raw l "Raw Data" T ReadPreComp.raw}
addUserKnob {41 auto_alpha l "Auto Alpha" T ReadPreComp.auto_alpha}
addUserKnob {26 "" l "<b>EXR Options</b>"}
addUserKnob {41 offset_negative_display_window l "offset negative display window" T ReadPreComp.offset_negative_display_window}
addUserKnob {41 noprefix l "do not attach prefix" T ReadPreComp.noprefix}
addUserKnob {41 edge_pixels l "edge pixels" T ReadPreComp.edge_pixels}
addUserKnob {20 info}
addUserKnob {26 txt_1 l notes T "Connect to a 'nuke_dispatch' node. \na) rename 'component name' on write node\nb) rename the 'nuke_dispatch'  name adding a number on the end. \n(this set the render order, so you can manually set the order with F7)\nc) Enable node when rendering.\nd) click F7 and set render order dependency before render\nreorder the dispatchNode list. Top is reendered first\ne) after rendering refresh  the precompDispatch nodes and disable it. (use python script)\n* The frame range is set from the dispatch node.\n* Place the precomp before expensive nodes for efficiency."}
addUserKnob {26 ""}
addUserKnob {26 txt l ver: T "0.1 2020.12.21 RafKan"}
addUserKnob {6 UID_precompDispatch l "" +STARTLINE +INVISIBLE +STARTLINE}
}
Input {
inputs 0
name Input1
xpos -477
ypos -239
}
Read {
inputs 0
file_type exr
file "\[value this.parent.input.input.file]"
localizationPolicy off
format "4448 3096 0 0 4448 3096 1 Output Resolution_1_1"
first {{"\[value this.parent.input.framestart]" x1031 1001}}
last {{"\[value this.parent.input.frameend]" x1031 1237}}
origfirst {{"\[value this.parent.input.framestart]" x1001 1001}}
origlast {{"\[value this.parent.input.frameend]" x1001 1237}}
origset true
version 133
colorspace gbk_plate
auto_alpha true
name ReadPreComp
note_font_color 0xf368e4ff
xpos -477
ypos -164
disable {{"!\[exists parent.input]"}}
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
}
Output {
name Output1
xpos -477
ypos -5
}
end_group
Dot {
name Dot467
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 8543
ypos 17448
}
Dot {
name Dot480
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 8543
ypos 17616
}
Dot {
name Dot497
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 10760
ypos 17616
}
set N31fecf00 [stack 0]
Dot {
name Dot106
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 10760
ypos 17990
}
set N31fec800 [stack 0]
Dot {
name Dot3
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 10760
ypos 18394
}
set N31fec100 [stack 0]
Dot {
name Dot65
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 10762
ypos 19080
}
set N31dbb900 [stack 0]
CornerPin2D {
to1 {{curve x1001 107.971 111.126 115.668 115.984 117.507 120.429 127.039 131.672 133.938 133.485 133.528 132.006 127.981 123.317 116.974 110.327 104.609 98.4098 93.3194 88.2671 85.2093 82.191 78.942 71.7918 62.6381 53.2126 43.1109 33.7635 25.3636 18.5323 10.1783 -0.228421 -11.731 -22.1244 -32.6287 -40.0696 -48.0484 -55.6032 -62.3967 -68.6976 -73.9411 -77.2071 -79.4658 -80.5085 -81.6549 -83.7376 -88.1936 -91.6273 -91.8629 -92.4567 -92.8849 -90.958 -91.3931 -90.5686 -88.7387 -84.7531 -76.1616 -68.4248 -55.8019 -41.9169 -27.5227 -14.7244 -3.60351 6.93329 14.5921 20.3219 26.2353 27.8869} {curve x1001 1457.27 1461.9 1468.2 1474.01 1477.2 1475.21 1471.13 1467.65 1465.68 1461.46 1458.29 1454.89 1455.02 1458.77 1461.92 1466.23 1471.01 1477.11 1481.82 1484.96 1486.4 1486.04 1486.07 1483.42 1480.02 1474.08 1467.34 1460.99 1456.33 1453.42 1452.57 1453.29 1453.69 1452.21 1451.18 1450.22 1447.78 1445.96 1444.82 1444.74 1444.67 1445.66 1445.81 1446.48 1448.39 1450.94 1453.97 1459.05 1464.62 1469.41 1475.27 1481.68 1487.42 1493.84 1499.33 1504.52 1507.73 1508.98 1512.4 1517.62 1524.95 1533.94 1545.05 1554.79 1563.23 1570.4 1575.2 1576.09}}
to2 {{curve x1001 1536.29 1538.75 1542.51 1542.35 1543.23 1545.32 1550.87 1554.58 1555.92 1554.6 1553.81 1551.38 1547.23 1542.53 1536.25 1529.75 1523.85 1517.54 1512.29 1507.02 1503.65 1500.6 1497.4 1490.47 1481.88 1473.12 1463.74 1455.17 1447.4 1441.56 1433.57 1424.43 1413.84 1404.53 1394.82 1388.4 1381.12 1374.03 1367.67 1361.57 1356.53 1353.54 1351.25 1350.11 1348.84 1346.84 1343 1339.91 1340.16 1339.44 1338.94 1341.08 1340.37 1341.52 1343.57 1347.69 1355.88 1362.7 1374.78 1388.09 1401.23 1412.98 1423.72 1433.73 1441.05 1446.59 1452.1 1454.3} {curve x1001 1456.72 1461.51 1466.86 1470.77 1471.66 1468.05 1462.48 1457.46 1453.29 1446.81 1441.74 1437.64 1437.46 1440.6 1443.5 1448.31 1453.84 1460.42 1465.31 1468.77 1470.74 1470.47 1470.2 1467.26 1463.52 1458.23 1452.3 1447.85 1444.43 1442.88 1444 1445.73 1447.04 1447.07 1447.54 1447.83 1446.53 1445.57 1444.8 1444.38 1443.65 1444.77 1444.84 1445.09 1446.39 1448.22 1450.61 1455.29 1460.47 1465.18 1470.96 1477.4 1483.46 1489.59 1494.86 1500.17 1503.89 1506.06 1510.37 1516.94 1525.89 1536.49 1548.47 1559.37 1568.61 1575.79 1580.33 1581.07}}
to3 {{curve x1001 1536.35 1538.57 1542.72 1543.4 1545.34 1548.16 1554.58 1559.58 1562.2 1562.03 1561.91 1560.69 1556.79 1552.41 1546.44 1539.7 1533.59 1527.07 1522.03 1516.77 1513.33 1510.17 1507.22 1501.05 1492.83 1484.3 1474.74 1465.56 1457.1 1450.46 1442.05 1432.46 1421.56 1411.76 1401.34 1394.14 1386.56 1379.19 1372.82 1367.1 1362.47 1359.55 1357.41 1356.49 1355.54 1353.98 1350.38 1347.39 1347.36 1346.82 1346.19 1348.05 1347.42 1348.37 1350.24 1353.77 1361.54 1368.16 1379.43 1391.7 1404.13 1415.4 1425.23 1434.61 1441.46 1446.71 1452.3 1454.21} {curve x1001 2128.53 2133.07 2138.21 2141.92 2142.71 2138.94 2132.97 2127.24 2122.53 2115.28 2109.35 2104.39 2103.44 2106.13 2108.75 2113.28 2118.63 2125.07 2130 2133.37 2135.34 2134.8 2134.39 2131.49 2127.75 2122.67 2116.8 2112.59 2109.16 2107.66 2108.76 2110.78 2112.34 2112.68 2113.24 2113.78 2112.64 2111.73 2110.95 2110.49 2109.66 2110.73 2110.75 2110.89 2112.09 2113.89 2116.26 2120.93 2126.18 2130.97 2136.82 2143.33 2149.53 2155.74 2161.07 2166.39 2170.15 2172.19 2176.3 2182.67 2191.51 2202 2214.09 2225.16 2234.54 2241.87 2246.61 2247.52}}
to4 {{curve x1001 108.034 110.95 115.877 117.04 119.616 123.266 130.744 136.673 140.218 140.919 141.628 141.312 137.544 133.198 127.17 120.27 114.353 107.939 103.056 98.0112 94.8857 91.7636 88.7628 82.3812 73.59 64.3911 54.1069 44.153 35.0683 27.4383 18.6521 7.79697 -4.00774 -14.8893 -26.1031 -34.3332 -42.6106 -50.4419 -57.242 -63.1712 -68.0017 -71.1965 -73.3074 -74.1284 -74.954 -76.5954 -80.8092 -84.1416 -84.666 -85.0794 -85.6414 -83.9873 -84.3433 -83.7212 -82.0707 -78.6778 -70.5025 -62.9692 -51.1503 -38.3044 -24.6276 -12.3025 -2.08756 7.80442 15.0026 20.45 26.4311 27.7983} {curve x1001 2129.08 2133.46 2139.56 2145.15 2148.25 2146.1 2141.62 2137.43 2134.92 2129.93 2125.9 2121.64 2121 2124.3 2127.16 2131.21 2135.8 2141.76 2146.51 2149.56 2151 2150.37 2150.27 2147.65 2144.25 2138.53 2131.84 2125.74 2121.06 2118.21 2117.34 2118.33 2118.99 2117.82 2116.89 2116.18 2113.89 2112.13 2110.97 2110.85 2110.68 2111.63 2111.72 2112.28 2114.09 2116.61 2119.62 2124.69 2130.33 2135.2 2141.13 2147.61 2153.49 2159.99 2165.53 2170.74 2173.99 2175.12 2178.33 2183.35 2190.57 2199.45 2210.67 2220.58 2229.15 2236.47 2241.48 2242.53}}
invert true
from1 {107.971 1457.27}
from2 {1536.29 1456.72}
from3 {1536.35 2128.53}
from4 {108.034 2129.08}
name CornerPin2D_Layer_6
label f1001
selected true
xpos 11335
ypos 19070
}
Blur {
size 50
name Blur2
selected true
xpos 11335
ypos 19108
}
set N31dba400 [stack 0]
Crop {
box {{curve x1001 2722.25 x1068 2726.25} {curve x1001 2001.875 x1068 1997.875} {curve x1001 2777.75 x1068 2781.75} {curve x1001 2062.125 x1068 2058.125}}
reformat true
crop false
name Crop3
selected true
xpos 11167
ypos 19285
}
CurveTool {
ROI {0 0 80 78}
autocropdata {20 19 60 58}
intensitydata {{curve x1001 0.07900330528 0.05876698873 0.05838352154 0.05924674436 0.06115633971 0.06991336416 0.08435765756 0.09006048469 0.09619888046 0.1093250926 0.115415007 0.1168018943 0.1174374914 0.1173025551 0.1165190694 0.1162272873 0.0842258703 0.06193551828 0.06139054014 0.06181536399 0.06369304998 0.06955830344 0.07482630649 0.08225696079 0.06325503594 0.06000195435 0.05937800322 0.06418179503 0.08607961174 0.09536831531 0.09710149615 0.0984490809 0.1039312132 0.0989154061 0.09818440909 0.09800001472 0.09790295029 0.09769913462 0.09758785493 0.09766676488 0.0978587923 0.09735588939 0.09756385523 0.09833096701 0.1005316564 0.1016419439 0.1018499665 0.1018462699 0.1015692193 0.1018400873 0.1018566743 0.1022450881 0.1022987825 0.1030408973 0.1027850917 0.1028015814 0.1029137806 0.1036605515 0.1036823051 0.1039119447 0.1038257351 0.1038587368 0.1038283524 0.1039302689 0.1039381462 0.1043247105 0.1038081895 0.1039864508} {curve x1001 0.08560780183 0.06359957719 0.06296111478 0.06395696381 0.06602567536 0.07493266348 0.08882030766 0.09460056519 0.1011541372 0.1152990501 0.1218183083 0.1231008399 0.123852749 0.1239253868 0.1231245814 0.1228244463 0.08820951702 0.06365501782 0.06294967349 0.06338473728 0.06564111992 0.07225277304 0.07834680201 0.08642022277 0.06533159338 0.06181817763 0.06128193827 0.07052696874 0.09514370153 0.1058190861 0.107739065 0.10885177 0.1126779418 0.1089079237 0.1086871579 0.1086108616 0.1086113515 0.1085887272 0.1084706879 0.1084940472 0.1085468449 0.1081753786 0.108502086 0.1094281451 0.1117897913 0.1128368288 0.1131872253 0.1131578192 0.1129862003 0.1132243013 0.1132337175 0.1137337215 0.1136980685 0.1147150759 0.1144178068 0.1146448837 0.1146469875 0.1154643233 0.1153871109 0.1156945085 0.1155429477 0.1155043205 0.1153983607 0.1154210614 0.1154417929 0.1158593958 0.1153958508 0.1156540297} {curve x1001 0.08512737631 0.06776226882 0.06579938959 0.06711537505 0.06917848543 0.07459212707 0.08255437244 0.08670793539 0.09191313064 0.1016909209 0.1074403138 0.107808514 0.1080895264 0.1081244248 0.1076877818 0.1077148027 0.08139533675 0.06296737004 0.06131910964 0.06142458791 0.06367927719 0.06841646979 0.07314150419 0.07890312292 0.06340573564 0.05992882994 0.05968243811 0.06942445168 0.08811783215 0.09668355525 0.09777500464 0.09836472144 0.09929057803 0.09826104236 0.09896594933 0.09930792387 0.09922745979 0.09883370546 0.09905666355 0.09903974844 0.09880621838 0.09855904411 0.09880088978 0.0996062555 0.1014930736 0.1022354261 0.1031072658 0.1033021334 0.1034944557 0.1034319878 0.1033384068 0.1038409894 0.1031763476 0.1042453408 0.1042419994 0.1046964605 0.1046535009 0.104680546 0.1046117094 0.1047041405 0.1044104263 0.1037474355 0.1037412559 0.1036726349 0.1034580066 0.1034490046 0.1031851459 0.1037266845} {curve x1001 0.07600391964}}
name CurveTool3
selected true
xpos 11167
ypos 19311
}
push $N31dba400
Crop {
box {900 1791 999 2045}
reformat true
crop false
name Crop1
selected true
xpos 11514
ypos 19291
}
CurveTool {
ROI {0 0 99 254}
autocropdata {24 63 74 190}
intensitydata {{curve x1001 0.2611958578 0.2599122865 0.2590471537 0.2580993732 0.2572709317 0.2568061684 0.2351682737 0.1573299256 0.1692320434 0.177096163 0.179326506 0.1795702763 0.1789189033 0.177797616 0.1763721706 0.1751602235 0.1734508196 0.1716507445 0.1700755489 0.1685640502 0.1676243733 0.1671911454 0.1692892823 0.1747121357 0.1760910598 0.1759996924 0.175487988 0.1753429103 0.1752552564 0.1749198434 0.1744798426 0.1741836611 0.1740732002 0.1731885801 0.1727293017 0.1723348986 0.1721979545 0.1720451708 0.1717827094 0.1716770901 0.1714710537 0.1714711526 0.1709620137 0.1708962756 0.1700000542 0.1703601709 0.1707585925 0.1707979966 0.1710427347 0.1712630971 0.1711566552 0.1716056204 0.1714821373 0.1716484935 0.1717203154 0.1721378808 0.1953470316 0.2165577088 0.2237319961 0.2262919545 0.2273853454 0.2279686826 0.2284633658 0.2285237932 0.228640854 0.2288323248 0.2286677413 0.2287856375} {curve x1001 0.2711748536 0.2697743212 0.2687521313 0.2677652649 0.2669139719 0.2664847531 0.2436750028 0.161799146 0.1741132573 0.1823128107 0.1846901658 0.185086207 0.184560984 0.1834123881 0.1819362102 0.180652251 0.1789288017 0.1769734287 0.1753977753 0.173891462 0.1730167506 0.172688118 0.174987073 0.1808476461 0.1822529457 0.1821315429 0.1816369563 0.1815943632 0.181717999 0.1814755161 0.1810751701 0.1806537438 0.1806189976 0.1796805926 0.1793833371 0.1788927899 0.1787152485 0.1785565203 0.1783622686 0.1782649577 0.1780764664 0.1781012944 0.1783513921 0.1794783838 0.1796772017 0.1803896579 0.1808014557 0.1808432892 0.1810668097 0.1812458694 0.1811658261 0.1816028564 0.1815438173 0.1817176794 0.1817254853 0.1820347372 0.2059704935 0.2279299819 0.2353448844 0.2378793356 0.2390409389 0.23959307 0.2400929942 0.2400618178 0.2401459693 0.2403183824 0.2401356195 0.2402529224} {curve x1001 0.2232659125 0.222027886 0.2212477575 0.2205135214 0.219703518 0.2194384147 0.1996381068 0.1312684046 0.1422493284 0.1499557537 0.1521809662 0.1523804113 0.1516019443 0.1504201068 0.1488756967 0.1477532877 0.146246613 0.1446828204 0.1433082532 0.1419251261 0.1410400517 0.140618811 0.1425638676 0.1476577654 0.1487058013 0.1486451619 0.148021751 0.1478738544 0.1476812834 0.1473404399 0.1471110841 0.1466255436 0.1465974339 0.1457480994 0.1457744093 0.1455080765 0.1452878697 0.1452093506 0.1450603893 0.1450989071 0.1449978648 0.1450474792 0.1459443241 0.1479738795 0.1490167487 0.149889539 0.1503461068 0.1504842238 0.1507425487 0.1508046525 0.1507577909 0.1511899527 0.1511575748 0.1512971806 0.1512909179 0.151365354 0.1701658232 0.1882223462 0.1944824723 0.1963366836 0.1972630648 0.1976789669 0.1980552055 0.1979351527 0.1979757677 0.1980939603 0.1979392441 0.1980798836} {curve x1001 0.2611958578}}
name CurveTool1
selected true
xpos 11514
ypos 19317
}
push $N33448f00
Dot {
name Dot430
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 5145
ypos 9756
}
Dot {
name Dot16
tile_color 0x949494ff
label windows
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 5145
ypos 13449
}
Dot {
name Dot20
tile_color 0x949494ff
label windows
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 6746
ypos 13449
}
push $N32112400
ChannelMerge {
inputs 2
operation out
name ChannelMerge2
selected true
xpos 6946
ypos 13436
}
StickyNote {
inputs 0
name StickyNote50
label "<< check version number"
selected true
xpos 11848
ypos 29622
}
StickyNote {
inputs 0
name StickyNote53
label "remember to set filters i.e. defocus to all channels\nset reformat to 'original resolution'"
selected true
xpos 11655
ypos 28608
}
StickyNote {
inputs 0
name StickyNote9
label "Pick the correct grain plate"
selected true
xpos 11953
ypos 26646
}
StickyNote {
inputs 0
name StickyNote12
label "<<< set to ALL"
selected true
xpos 11142
ypos -15083
}
Read {
inputs 0
file_type exr
file /coppi/proj/thrg/ftrack/assets/s01e01/015-0250/img/thrg_s01e01_015-0250_comp_v011_comp_lin_ap0/thrg_s01e01_015-0250_comp_comp_lin_ap0_v011.%04d.exr
localizationPolicy on
format "4448 3096 0 0 4448 3096 1 Output Resolution"
first 1001
last 1161
origfirst 1001
origlast 1161
origset true
name comp_comp_lin_ap00
tile_color 0xe36316ff
selected true
xpos 13922
ypos 30661
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp_lin_ap0
addUserKnob {20 ftrack}
addUserKnob {1 componentId}
componentId 5b9174e9-9729-4830-8ac6-15f745e81dcc
addUserKnob {1 componentName}
componentName comp_lin_ap0
addUserKnob {1 assetVersionId}
assetVersionId ece49b84-60fa-46d4-8d9e-85e0e01babb0
addUserKnob {1 assetVersion}
assetVersion 11
addUserKnob {1 assetName}
assetName comp
addUserKnob {1 assetType}
assetType img
addUserKnob {4 versionType l "Version Type" M {latest stable pinned}}
}
OCIOColorSpace {
in_colorspace scene_linear
out_colorspace neutral_grade
key1 OCIO_LUT
value1 s01e01_015-0220
key2 OCIO_LUT_ALT
value2 rig_day1_control_arrilogc_rec709_full_iridas_x33
key3 OCIO_SHOTPATH
value3 thrg_s01e01_015-0220
key4 OCIO_SHOW_ROOT
value4 /coppi/proj/thrg
name OCIOColorSpace6
selected true
xpos 13922
ypos 30792
}
StickyNote {
inputs 0
name StickyNote34
label "axis: <left>\n* rotate.x to match horizon level from layout if using HDRI water\n  - if water is shot rendered - match the rendered water horiz with the <i>WaterTransform</i> node\n* rotate.y to select position on panorama\n* rotate.z  if  horizon vanishing points are not matching plate (use horizon line tool)\n"
note_font_size 15
selected true
xpos 11884
ypos -16540
}
StickyNote {
inputs 0
name StickyNote7
label "FYI: most bashplates have mocha\ncornerpin to use"
selected true
xpos 6470
ypos 9767
}
Read {
inputs 0
file_type exr
file /coppi/proj/thrg/ftrack/assets/s01e01/015-0250/img/thrg_s01e01_015-0250_comp_v011_comp_lin_ap0/thrg_s01e01_015-0250_comp_comp_lin_ap0_v011.%04d.exr
localizationPolicy on
format "4448 3096 0 0 4448 3096 1 Output Resolution"
first 1001
last 1161
origfirst 1001
origlast 1161
origset true
name comp_comp_lin_ap0
tile_color 0xe36316ff
selected true
xpos 14089
ypos 30668
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp_lin_ap0
addUserKnob {20 ftrack}
addUserKnob {1 componentId}
componentId 5b9174e9-9729-4830-8ac6-15f745e81dcc
addUserKnob {1 componentName}
componentName comp_lin_ap0
addUserKnob {1 assetVersionId}
assetVersionId ece49b84-60fa-46d4-8d9e-85e0e01babb0
addUserKnob {1 assetVersion}
assetVersion 11
addUserKnob {1 assetName}
assetName comp
addUserKnob {1 assetType}
assetType img
addUserKnob {4 versionType l "Version Type" M {latest stable pinned}}
}
OCIOColorSpace {
in_colorspace scene_linear
out_colorspace neutral_grade
key1 OCIO_LUT
value1 s01e01_015-0280
key2 OCIO_LUT_ALT
value2 rig_day1_control_arrilogc_rec709_full_iridas_x33
key3 OCIO_SHOTPATH
value3 thrg_s01e01_015-0280
key4 OCIO_SHOW_ROOT
value4 /coppi/proj/thrg
name OCIOColorSpace1
selected true
xpos 14089
ypos 30774
}
Transform {
translate {1785 -335}
scale 2.1
center {2432 1151}
shutteroffset centred
name Transform1
selected true
xpos 14089
ypos 30800
}
Read {
inputs 0
file_type exr
file /coppi/proj/thrg/ftrack/assets/s01e01/015-0250/plate/thrg_s01e01_015-0250_pl01_ud_v001_lens_uv_4p5K_raw/thrg_s01e01_015-0250_pl01_ud_lens_uv_4p5K_raw_v001.%04d.exr
format "4544 3164 0 0 4544 3164 1 Project Resolution"
first 1001
last 1001
origfirst 1001
origlast 1001
origset true
name pl01_ud_lens_uv_4p5K_raw2
tile_color 0x14a14aff
selected true
xpos -182
ypos -19942
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname lens_uv_4p5K_raw
addUserKnob {20 ftrack}
addUserKnob {1 componentId}
componentId 30bf35af-023c-4e7b-a1be-80249afe2b7b
addUserKnob {1 componentName}
componentName lens_uv_4p5K_raw
addUserKnob {1 assetVersionId}
assetVersionId 48c448b0-62dd-43f5-92dd-40dd33bf5b17
addUserKnob {1 assetVersion}
assetVersion 1
addUserKnob {1 assetName}
assetName pl01_ud
addUserKnob {1 assetType}
assetType plate
addUserKnob {4 versionType l "Version Type" M {latest stable pinned}}
}
Dot {
name Dot115
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos -148
ypos -19818
}
Dot {
name Dot118
tile_color 0x949494ff
label lensUV
note_font_size 42
note_font_color 0xffffffff
selected true
xpos -148
ypos -18260
}
Dot {
name Lens6
tile_color 0x949494ff
label lens
note_font_size 42
note_font_color 0xffffffff
selected true
xpos -169
ypos -5406
}
Dot {
name Lens5
tile_color 0x949494ff
label lens
note_font_size 42
note_font_color 0xffffffff
selected true
xpos -193
ypos 3782
}
Dot {
name Lens4
tile_color 0x949494ff
label lens
note_font_size 42
note_font_color 0xffffffff
selected true
xpos -209
ypos 10814
}
Dot {
name Lens3
tile_color 0x949494ff
label lens
note_font_size 42
note_font_color 0xffffffff
selected true
xpos -224
ypos 17824
}
Dot {
name Lens2
tile_color 0x949494ff
label lens
note_font_size 42
note_font_color 0xffffffff
selected true
xpos -218
ypos 20262
}
Dot {
name Lens1
tile_color 0x949494ff
label lens
note_font_size 42
note_font_color 0xffffffff
selected true
xpos -224
ypos 23809
}
Dot {
name Dot474
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 12739
ypos 23713
}
Dot {
name Dot475
tile_color 0x949494ff
label UV
note_font_size 40
note_font_color 0xffffffff
selected true
xpos 12739
ypos 24026
}
set N31d34100 [stack 0]
Read {
inputs 0
file_type exr
file /coppi/proj/thrg/ftrack/assets/s01e01/015-0250/plate/thrg_s01e01_015-0250_pl01_dn_ud_v001_4p5K_exr_lin_ap0/thrg_s01e01_015-0250_pl01_dn_ud_4p5K_exr_lin_ap0_v001.%04d.exr
format "4544 3164 0 0 4544 3164 1 Project Resolution"
first 1001
last 1161
origfirst 1001
origlast 1161
origset true
name pl01_dn_ud_4p5K_exr_lin_ap1
tile_color 0x14a14aff
selected true
xpos 8555
ypos 886
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname 4p5K_exr_lin_ap0
addUserKnob {20 ftrack}
addUserKnob {1 componentId}
componentId cb1e4773-6112-4d7b-9d58-efb4b6c6719a
addUserKnob {1 componentName}
componentName 4p5K_exr_lin_ap0
addUserKnob {1 assetVersionId}
assetVersionId a2f77c02-f5e4-4272-b012-1866f2eb5000
addUserKnob {1 assetVersion}
assetVersion 1
addUserKnob {1 assetName}
assetName pl01_dn_ud
addUserKnob {1 assetType}
assetType plate
addUserKnob {4 versionType l "Version Type" M {latest stable pinned}}
}
set N31d1f900 [stack 0]
Dot {
name Dot478
tile_color 0x949494ff
label "_ud_dn plate"
note_font_size 42
note_font_color 0xffffffff
selected true
xpos 727
ypos 900
}
Dot {
name Dot51
tile_color 0x949494ff
label "_ud_dn plate"
note_font_size 42
note_font_color 0xffffffff
selected true
xpos 696
ypos 3808
}
Dot {
name Dot42
tile_color 0x949494ff
label "_ud_dn plate"
note_font_size 42
note_font_color 0xffffffff
selected true
xpos 715
ypos 10824
}
Dot {
name Dot36
tile_color 0x949494ff
label "_ud_dn plate"
note_font_size 42
note_font_color 0xffffffff
selected true
xpos 713
ypos 17838
}
Dot {
name Dot34
tile_color 0x949494ff
label "_ud_dn plate"
note_font_size 42
note_font_color 0xffffffff
selected true
xpos 729
ypos 20266
}
Dot {
name Dot22
tile_color 0x949494ff
label "_ud_dn plate"
note_font_size 42
note_font_color 0xffffffff
selected true
xpos 729
ypos 23006
}
Dot {
name Dot479
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 13640
ypos 22861
}
Group {
inputs 2
name LensDistortionUV4
help "To undistort or re-distort footage; \nImport lensDistortionUV-map with \nftrackImportAsset and connect to \nthe UV input. \n\nUndistort values are in RGB layer and the redistort values in redistortUV layer.\n\nNote that the output will take on \nthe format of the UV map.This is \ncorrect in most cases. "
tile_color 0xffbf00ff
label "\[value direction]"
selected true
xpos 13606
ypos 24019
addUserKnob {20 lensDistortion l "Lens Distortion"}
addUserKnob {4 direction l mode M {undistort redistort "" ""}}
direction redistort
addUserKnob {4 alpha t "None or bleed: Plate or rendered elements that fill the entire frame. Selected filter is applied to entire image.\n\nElement with alpha: CG renders of other elements with alpha. This mode will use cubic filtering for the alpha and makes sure no sharpening artifacts are introduced around the edges. " M {"none or bleed" "element with alpha" "" "" "" "" "" "" ""}}
addUserKnob {41 filter T STMap1.filter}
addUserKnob {6 applyInLog l "apply in log" t "Applying filtering in log space will reduce the risk of oversharpening around bright spots when using filters like lanczos6. When impulse is selected this setting is bypassed." -STARTLINE}
applyInLog true
addUserKnob {26 ""}
addUserKnob {6 warnWhenMissingUV l "Disable missing UV warning" t "Warning will always be disabled on farm renders." +STARTLINE}
addUserKnob {20 info}
addUserKnob {26 version l "" +STARTLINE T "LensDistortionUV \nversion:1.3"}
addUserKnob {26 ""}
addUserKnob {26 help_1 l "" +STARTLINE T "Alpha: \n  None or bleed: Alpha is filtered in the same way as rgb\n  \n  Element with alpha: CG renders of other elements with alpha. \n  This mode will use cubic filtering for the alpha and makes sure \n  no sharpening artifacts are introduced around the edges. \n\nTo undistort or re-distort footage; \n  Import lensDistortionUV-map with \n  ftrackImportAsset and connect to \n  the UV input. \n\nUndistort values are in RGB layer and the redistort \nvalues in redistortUV layer.\n\nNote that the output will take on \nthe format of the UV map.This is \ncorrect in most cases. "}
addUserKnob {20 endGroup n -1}
}
Input {
inputs 0
name Input1
xpos 290
ypos -222
}
set N31cf3200 [stack 0]
Dot {
name Dot5
xpos 941
ypos -218
}
set N31cf2b00 [stack 0]
Dot {
name Dot20
xpos 1109
ypos -218
}
set N31cf2400 [stack 0]
Remove {
name Remove1
xpos 1081
ypos -155
}
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
message "Please connect lens distortion map!"
old_message {{80 108 101 97 115 101 32 99 111 110 110 101 99 116 32 108 101 110 115 32 100 105 115 116 111 114 116 105 111 110 32 109 97 112 33}
  }
box {0 {(height/2)-(height/3)} {width} {(height/2)+(height/3)}}
xjustify center
yjustify center
transforms {{0 2}
  }
cursor_position 31
font {{ Futura : Regular : fustav/Futura.otf : 0 }}
global_font_scale {{width/3840*1.5}}
center {1003 569}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{0 2160}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 1003 569 0 0 1 1 0 0 0 0}
  }
color {1 0 0 1}
color_panelDropped true
name Text1
label "Missing UV Warning"
xpos 1081
ypos -69
}
push $N31cf2400
Dot {
name Dot19
xpos 1239
ypos -218
}
Merge2 {
inputs 2
name Merge1
xpos 1211
ypos -63
disable {{"parent.warnWhenMissingUV && \$gui"}}
}
Dot {
name Dot2
xpos 1245
ypos 1036
}
Input {
inputs 0
name uvMap
xpos -10
ypos -218
number 1
}
set N31ac9d00 [stack 0]
add_layer {redistortUV redistortUV.red redistortUV.green redistortUV.blue}
Shuffle {
in redistortUV
name Shuffle1
label redistort
xpos 101
ypos -148
}
Reformat {
type "to box"
box_width {{"rint(\[metadata exr/nuke/plateSizeWidth]*(width/\[metadata exr/nuke/plateUdSizeWidth]))"}}
box_height {{"rint(\[metadata exr/nuke/plateSizeHeight]*(height/\[metadata exr/nuke/plateUdSizeHeight]))"}}
resize none
name Reformat1
label "Reformatting to the original plate size \nusing meta data for working with scaled UV maps"
xpos 101
ypos -96
}
push $N31ac9d00
Switch {
inputs 2
which {{parent.direction}}
name Switch1
xpos -10
ypos 19
}
Dot {
name Dot1
xpos 18
ypos 335
}
set N31ac8100 [stack 0]
Dot {
name Dot4
xpos 823
ypos 335
}
push $N31cf2b00
STMap {
inputs 2
uv rgb
filter {{"STMap1.filter != 0? 1 : 0"}}
name STMap4
label "filter linked to STMap1\n\"STMap1.filter != 0? 1 : 0\""
xpos 907
ypos 357
}
Dot {
name Dot9
xpos 935
ypos 456
}
push $N31ac8100
push $N31cf3200
Unpremult {
name Unpremult1
xpos 572
ypos -199
}
Grade {
whitepoint 500
gamma 2.5
black_clamp false
name Grade4
xpos 572
ypos -173
}
Premult {
name Premult1
xpos 572
ypos -147
}
push $N31cf3200
Dot {
name Dot11
xpos 474
ypos -183
}
Switch {
inputs 2
which {{"parent.filter && parent.applyInLog"}}
name Switch6
label "Apply filter in log"
xpos 446
ypos -153
}
Group {
name UnpremultAlpha
xpos 446
ypos -64
}
Input {
inputs 0
name Input1
xpos -277
ypos -347
}
Dot {
name Dot2
xpos -243
ypos -307
}
set N31a90100 [stack 0]
Shuffle {
red alpha
green alpha
blue alpha
name Shuffle1
xpos -153
ypos -311
}
Unpremult {
name Unpremult2
xpos -153
ypos -272
}
push $N31a90100
Unpremult {
name Unpremult3
xpos -277
ypos -275
}
Copy {
inputs 2
from0 rgba.red
to0 rgba.alpha
name Copy1
xpos -277
ypos -237
}
Output {
name Output1
xpos -277
ypos -137
}
end_group
set N31a90f00 [stack 0]
Dot {
name Dot17
xpos 742
ypos -69
}
set N31a7d600 [stack 0]
Dot {
name Dot12
xpos 830
ypos -69
}
Blur {
size {{(width/1920)*bsize}}
name Blur2
xpos 802
ypos 1
addUserKnob {20 User}
addUserKnob {7 bsize R 0 10}
bsize 1
}
Group {
name UnpremultAlpha2
xpos 802
ypos 39
}
Input {
inputs 0
name Input1
xpos -277
ypos -347
}
Dot {
name Dot2
xpos -243
ypos -307
}
set N31a4b200 [stack 0]
Shuffle {
red alpha
green alpha
blue alpha
name Shuffle1
xpos -153
ypos -311
}
Unpremult {
name Unpremult2
xpos -153
ypos -272
}
push $N31a4b200
Unpremult {
name Unpremult3
xpos -277
ypos -275
}
Copy {
inputs 2
from0 rgba.red
to0 rgba.alpha
name Copy1
xpos -277
ypos -237
}
Output {
name Output1
xpos -277
ypos -137
}
end_group
push $N31a7d600
Merge2 {
inputs 2
operation under
name Merge2
xpos 714
ypos 75
}
Dot {
name Dot18
xpos 742
ypos 199
}
push $N31a90f00
Merge2 {
inputs 2
operation under
name Merge6
xpos 446
ypos 201
}
Dot {
name Dot14
xpos 474
ypos 268
}
push $N31cf3200
Grade {
whitepoint 500
gamma 2.5
black_clamp false
name Grade1
xpos 349
ypos -154
}
push $N31cf3200
Switch {
inputs 2
which {{"parent.filter && parent.applyInLog"}}
name Switch7
label "Apply filter in log"
xpos 290
ypos -83
}
Switch {
inputs 2
which {{parent.alpha}}
name Switch5
label type
xpos 290
ypos 258
}
STMap {
inputs 2
uv rgb
filter Lanczos6
name STMap1
xpos 290
ypos 371
}
set N31a0a400 [stack 0]
Dot {
name Dot8
xpos 473
ypos 375
}
Clamp {
channels alpha
name Clamp1
xpos 445
ypos 414
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy1
xpos 445
ypos 452
}
set N319ff200 [stack 0]
Grade {
whitepoint {{parent.Grade4.whitepoint}}
gamma {{parent.Grade4.gamma}}
reverse true
black_clamp false
name Grade3
xpos 537
ypos 528
}
push $N319ff200
Switch {
inputs 2
which {{"parent.filter && parent.applyInLog"}}
name Switch8
label "Apply filter in log"
xpos 445
ypos 606
}
Premult {
name Premult2
xpos 445
ypos 678
}
push $N31a0a400
Grade {
whitepoint {{parent.Grade1.whitepoint}}
gamma {{parent.Grade1.gamma}}
reverse true
black_clamp false
name Grade2
xpos 349
ypos 526
}
push $N31a0a400
Switch {
inputs 2
which {{"parent.filter && parent.applyInLog"}}
name Switch3
label "Apply filter in log"
xpos 290
ypos 611
}
Switch {
inputs 2
which {{parent.alpha}}
name Switch2
label type
xpos 290
ypos 748
}
Switch {
inputs 2
which {{2-parent.inputs}}
name Switch4
xpos 290
ypos 1038
}
Output {
name Output1
xpos 290
ypos 1116
}
end_group
Dot {
name Dot482
label D
selected true
xpos 13637
ypos 24885
}
set N31bccf00 [stack 0]
Dot {
name Dot485
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 13870
ypos 24885
}
Dot {
name Dot486
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 13870
ypos 25485
}
OCIOColorSpace {
in_colorspace neutral_grade
out_colorspace scene_linear
name OCIOColorSpace9
label "Neutral Grade \nREVERSE"
selected true
xpos 13836
ypos 25540
}
Dot {
name Dot487
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 13870
ypos 25590
}
Dot {
name Dot488
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 13878
ypos 26844
}
set N31baeb00 [stack 0]
Dot {
name Dot126
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 13878
ypos 28052
}
Read {
inputs 0
file_type exr
file /coppi/proj/thrg/ftrack/assets/s01e01/015-0250/plate/thrg_s01e01_015-0250_pl01_exr_lin_ap0_v001/thrg_s01e01_015-0250_pl01_exr_lin_ap0_v001.%04d.exr
format "4448 3096 0 0 4448 3096 1 Project Resolution_2"
first 1001
last 1161
origfirst 1001
origlast 1161
origset true
name pl01_main2
tile_color 0xffff00ff
selected true
xpos 293
ypos -20041
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname main
addUserKnob {20 ftrack}
addUserKnob {1 componentId}
componentId f848a442-321c-4b46-923a-1bb4e7f1e17c
addUserKnob {1 componentName}
componentName main
addUserKnob {1 assetVersionId}
assetVersionId dc3f0afd-c8c1-400d-a6ae-56371b3fd736
addUserKnob {1 assetVersion}
assetVersion 1
addUserKnob {1 assetName}
assetName pl01
addUserKnob {1 assetType}
assetType plate
addUserKnob {4 versionType l "Version Type" M {latest stable pinned}}
versionType stable
}
Dot {
name Dot468
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 327
ypos -19864
}
Dot {
name Dot100
tile_color 0x949494ff
label pl01
note_font_size 42
note_font_color 0xffffffff
selected true
xpos 327
ypos -18243
}
Dot {
name Dot58
tile_color 0x949494ff
label pl01
note_font_size 42
note_font_color 0xffffffff
selected true
xpos 342
ypos -5400
}
Dot {
name Dot24
tile_color 0x949494ff
label pl01
note_font_size 42
note_font_color 0xffffffff
selected true
xpos 342
ypos -1308
}
set N31b87900 [stack 0]
Dot {
name Dot50
tile_color 0x949494ff
label pl01
note_font_size 42
note_font_color 0xffffffff
selected true
xpos 358
ypos 3787
}
Dot {
name Dot41
tile_color 0x949494ff
label pl01
note_font_size 42
note_font_color 0xffffffff
selected true
xpos 348
ypos 10812
}
Dot {
name Dot35
tile_color 0x949494ff
label pl01
note_font_size 42
note_font_color 0xffffffff
selected true
xpos 335
ypos 17819
}
Dot {
name Dot33
tile_color 0x949494ff
label pl01
note_font_size 42
note_font_color 0xffffffff
selected true
xpos 354
ypos 20257
}
Dot {
name Dot14
tile_color 0x949494ff
label pl01
note_font_size 42
note_font_color 0xffffffff
selected true
xpos 354
ypos 26979
}
Dot {
name Dot469
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11463
ypos 26883
}
set N31b84f00 [stack 0]
Dot {
name Dot470
selected true
xpos 11462
ypos 27128
}
set N31b84800 [stack 0]
Dot {
name Dot471
selected true
xpos 11462
ypos 27224
}
set N31b84100 [stack 0]
Dot {
name Dot472
selected true
xpos 11462
ypos 27305
}
push $N31b84100
Read {
inputs 0
file_type exr
file /coppi/proj/thrg/shottree/s01e01/output2d/comp/Alexa65_iso800/thrg_s01e01_Alexa65_iso800__lin_ap0_v002/thrg_s01e01_Alexa65_iso800__lin_ap0_v002.%04d.exr
format "4706 2224 0 0 4706 2224 1 Original Plate Resolution_1"
first 1001
last 1400
origfirst 1001
origlast 1400
origset true
name Read3
note_font_color 0xf368e4ff
selected true
xpos 11912
ypos 26684
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
}
Read {
inputs 0
file_type exr
file /coppi/proj/thrg/shottree/s01e01/output2d/comp/Arri_Alexa_Mini_iso800/thrg_s01e01_Arri_Alexa_Mini_iso800__lin_ap0_v002/thrg_s01e01_Arri_Alexa_Mini_iso800__lin_ap0_v002.%04d.exr
format "4448 3096 0 0 4448 3096 1 Project Resolution_2"
first 1001
last 1400
origfirst 1001
origlast 1400
origset true
name Read9
note_font_color 0xf368e4ff
selected true
xpos 12045
ypos 26686
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
}
Switch {
inputs 2
name Switch1
selected true
xpos 11996
ypos 26805
disable true
}
Dot {
name Dot473
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 12030
ypos 26943
}
push 0
push $N31baeb00
Dot {
name Dot489
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11872
ypos 26844
}
push $N31b84f00
Dot {
name Dot490
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11695
ypos 26883
}
push $N31d34100
Roto {
inputs 0
output alpha
cliptype bbox
curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x450de000 x44c6c000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x447a4000
        {0 0}
        {x451f0000 x45108000}
        {0 0}
        {0 0}
        {x451f8000 x44a58000}
        {0 0}
        {0 0}
        {x4550caee x44a5a3c3}
        {0 0}
        {0 0}
        {x454f6eb0 x4513f0c1}
        {0 0}}}
      {cc
       {f 8192}
       {px x447a4000
        {0 0}
        {0 0}
        {0 0}
        {0 0}
        {0 0}
        {0 0}
        {0 0}
        {xc3bd2440 x406bac00}
        {0 0}
        {0 0}
        {xc3bf7578 xc1d86080}
        {0 0}}}}
     {tx x447a4000 x4536e000 x44e6e000}
     {a osw x41200000 osf 0 str 1 spx x450de000 spy x44c6c000 sb 1 ltn x447a4000 ltm x447a4000 tt x40800000}}}}}}
toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
toolbar_brush_hardness 0.200000003
toolbar_source_transform_scale {1 1}
toolbar_source_transform_center {2270 1590}
colorOverlay {0 0 0 0}
lifetime_type "all frames"
lifetime_start 1001
lifetime_end 1001
motionblur_shutter_offset_type centred
source_black_outside true
name Roto7
selected true
xpos 11865
ypos 19268
}
CornerPin2D {
to1 {{curve x1001 107.971 111.126 115.668 115.984 117.507 120.429 127.039 131.672 133.938 133.485 133.528 132.006 127.981 123.317 116.974 110.327 104.609 98.4098 93.3194 88.2671 85.2093 82.191 78.942 71.7918 62.6381 53.2126 43.1109 33.7635 25.3636 18.5323 10.1783 -0.228421 -11.731 -22.1244 -32.6287 -40.0696 -48.0484 -55.6032 -62.3967 -68.6976 -73.9411 -77.2071 -79.4658 -80.5085 -81.6549 -83.7376 -88.1936 -91.6273 -91.8629 -92.4567 -92.8849 -90.958 -91.3931 -90.5686 -88.7387 -84.7531 -76.1616 -68.4248 -55.8019 -41.9169 -27.5227 -14.7244 -3.60351 6.93329 14.5921 20.3219 26.2353 27.8869} {curve x1001 1457.27 1461.9 1468.2 1474.01 1477.2 1475.21 1471.13 1467.65 1465.68 1461.46 1458.29 1454.89 1455.02 1458.77 1461.92 1466.23 1471.01 1477.11 1481.82 1484.96 1486.4 1486.04 1486.07 1483.42 1480.02 1474.08 1467.34 1460.99 1456.33 1453.42 1452.57 1453.29 1453.69 1452.21 1451.18 1450.22 1447.78 1445.96 1444.82 1444.74 1444.67 1445.66 1445.81 1446.48 1448.39 1450.94 1453.97 1459.05 1464.62 1469.41 1475.27 1481.68 1487.42 1493.84 1499.33 1504.52 1507.73 1508.98 1512.4 1517.62 1524.95 1533.94 1545.05 1554.79 1563.23 1570.4 1575.2 1576.09}}
to2 {{curve x1001 1536.29 1538.75 1542.51 1542.35 1543.23 1545.32 1550.87 1554.58 1555.92 1554.6 1553.81 1551.38 1547.23 1542.53 1536.25 1529.75 1523.85 1517.54 1512.29 1507.02 1503.65 1500.6 1497.4 1490.47 1481.88 1473.12 1463.74 1455.17 1447.4 1441.56 1433.57 1424.43 1413.84 1404.53 1394.82 1388.4 1381.12 1374.03 1367.67 1361.57 1356.53 1353.54 1351.25 1350.11 1348.84 1346.84 1343 1339.91 1340.16 1339.44 1338.94 1341.08 1340.37 1341.52 1343.57 1347.69 1355.88 1362.7 1374.78 1388.09 1401.23 1412.98 1423.72 1433.73 1441.05 1446.59 1452.1 1454.3} {curve x1001 1456.72 1461.51 1466.86 1470.77 1471.66 1468.05 1462.48 1457.46 1453.29 1446.81 1441.74 1437.64 1437.46 1440.6 1443.5 1448.31 1453.84 1460.42 1465.31 1468.77 1470.74 1470.47 1470.2 1467.26 1463.52 1458.23 1452.3 1447.85 1444.43 1442.88 1444 1445.73 1447.04 1447.07 1447.54 1447.83 1446.53 1445.57 1444.8 1444.38 1443.65 1444.77 1444.84 1445.09 1446.39 1448.22 1450.61 1455.29 1460.47 1465.18 1470.96 1477.4 1483.46 1489.59 1494.86 1500.17 1503.89 1506.06 1510.37 1516.94 1525.89 1536.49 1548.47 1559.37 1568.61 1575.79 1580.33 1581.07}}
to3 {{curve x1001 1536.35 1538.57 1542.72 1543.4 1545.34 1548.16 1554.58 1559.58 1562.2 1562.03 1561.91 1560.69 1556.79 1552.41 1546.44 1539.7 1533.59 1527.07 1522.03 1516.77 1513.33 1510.17 1507.22 1501.05 1492.83 1484.3 1474.74 1465.56 1457.1 1450.46 1442.05 1432.46 1421.56 1411.76 1401.34 1394.14 1386.56 1379.19 1372.82 1367.1 1362.47 1359.55 1357.41 1356.49 1355.54 1353.98 1350.38 1347.39 1347.36 1346.82 1346.19 1348.05 1347.42 1348.37 1350.24 1353.77 1361.54 1368.16 1379.43 1391.7 1404.13 1415.4 1425.23 1434.61 1441.46 1446.71 1452.3 1454.21} {curve x1001 2128.53 2133.07 2138.21 2141.92 2142.71 2138.94 2132.97 2127.24 2122.53 2115.28 2109.35 2104.39 2103.44 2106.13 2108.75 2113.28 2118.63 2125.07 2130 2133.37 2135.34 2134.8 2134.39 2131.49 2127.75 2122.67 2116.8 2112.59 2109.16 2107.66 2108.76 2110.78 2112.34 2112.68 2113.24 2113.78 2112.64 2111.73 2110.95 2110.49 2109.66 2110.73 2110.75 2110.89 2112.09 2113.89 2116.26 2120.93 2126.18 2130.97 2136.82 2143.33 2149.53 2155.74 2161.07 2166.39 2170.15 2172.19 2176.3 2182.67 2191.51 2202 2214.09 2225.16 2234.54 2241.87 2246.61 2247.52}}
to4 {{curve x1001 108.034 110.95 115.877 117.04 119.616 123.266 130.744 136.673 140.218 140.919 141.628 141.312 137.544 133.198 127.17 120.27 114.353 107.939 103.056 98.0112 94.8857 91.7636 88.7628 82.3812 73.59 64.3911 54.1069 44.153 35.0683 27.4383 18.6521 7.79697 -4.00774 -14.8893 -26.1031 -34.3332 -42.6106 -50.4419 -57.242 -63.1712 -68.0017 -71.1965 -73.3074 -74.1284 -74.954 -76.5954 -80.8092 -84.1416 -84.666 -85.0794 -85.6414 -83.9873 -84.3433 -83.7212 -82.0707 -78.6778 -70.5025 -62.9692 -51.1503 -38.3044 -24.6276 -12.3025 -2.08756 7.80442 15.0026 20.45 26.4311 27.7983} {curve x1001 2129.08 2133.46 2139.56 2145.15 2148.25 2146.1 2141.62 2137.43 2134.92 2129.93 2125.9 2121.64 2121 2124.3 2127.16 2131.21 2135.8 2141.76 2146.51 2149.56 2151 2150.37 2150.27 2147.65 2144.25 2138.53 2131.84 2125.74 2121.06 2118.21 2117.34 2118.33 2118.99 2117.82 2116.89 2116.18 2113.89 2112.13 2110.97 2110.85 2110.68 2111.63 2111.72 2112.28 2114.09 2116.61 2119.62 2124.69 2130.33 2135.2 2141.13 2147.61 2153.49 2159.99 2165.53 2170.74 2173.99 2175.12 2178.33 2183.35 2190.57 2199.45 2210.67 2220.58 2229.15 2236.47 2241.48 2242.53}}
invert false
from1 {107.971 1457.27}
from2 {1536.29 1456.72}
from3 {1536.35 2128.53}
from4 {108.034 2129.08}
name CornerPin2D_Layer_5
label f1001
selected true
xpos 11865
ypos 19328
}
Roto {
inputs 0
output alpha
cliptype bbox
curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x450de000 x44c6c000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x44858000
        {0 x41a00000}
        {x44480000 x451b8000}
        {0 xc1a00000}
        {0 0}
        {x44908000 x44998000}
        {0 0}
        {x41000000 xc2200000}
        {x450b0000 x44ac8000}
        {xc1000000 x42200000}
        {0 0}
        {x44e60000 x45108000}
        {0 0}}}     idem}
     {tx x44858000 x44bc2000 x44e78000}
     {a osw x41200000 osf 0 str 1 spx x450de000 spy x44c6c000 sb 1 ltn x44858000 ltm x44858000 tt x40800000}}}}}}
toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
toolbar_brush_hardness 0.200000003
toolbar_source_transform_scale {1 1}
toolbar_source_transform_center {2270 1590}
colorOverlay {0 0 0 0}
lifetime_type "all frames"
lifetime_start 1068
lifetime_end 1068
motionblur_shutter_offset_type centred
source_black_outside true
name Roto6
selected true
xpos 11865
ypos 19114
}
CornerPin2D {
to1 {{curve x1001 107.971 111.126 115.668 115.984 117.507 120.429 127.039 131.672 133.938 133.485 133.528 132.006 127.981 123.317 116.974 110.327 104.609 98.4098 93.3194 88.2671 85.2093 82.191 78.942 71.7918 62.6381 53.2126 43.1109 33.7635 25.3636 18.5323 10.1783 -0.228421 -11.731 -22.1244 -32.6287 -40.0696 -48.0484 -55.6032 -62.3967 -68.6976 -73.9411 -77.2071 -79.4658 -80.5085 -81.6549 -83.7376 -88.1936 -91.6273 -91.8629 -92.4567 -92.8849 -90.958 -91.3931 -90.5686 -88.7387 -84.7531 -76.1616 -68.4248 -55.8019 -41.9169 -27.5227 -14.7244 -3.60351 6.93329 14.5921 20.3219 26.2353 27.8869} {curve x1001 1457.27 1461.9 1468.2 1474.01 1477.2 1475.21 1471.13 1467.65 1465.68 1461.46 1458.29 1454.89 1455.02 1458.77 1461.92 1466.23 1471.01 1477.11 1481.82 1484.96 1486.4 1486.04 1486.07 1483.42 1480.02 1474.08 1467.34 1460.99 1456.33 1453.42 1452.57 1453.29 1453.69 1452.21 1451.18 1450.22 1447.78 1445.96 1444.82 1444.74 1444.67 1445.66 1445.81 1446.48 1448.39 1450.94 1453.97 1459.05 1464.62 1469.41 1475.27 1481.68 1487.42 1493.84 1499.33 1504.52 1507.73 1508.98 1512.4 1517.62 1524.95 1533.94 1545.05 1554.79 1563.23 1570.4 1575.2 1576.09}}
to2 {{curve x1001 1536.29 1538.75 1542.51 1542.35 1543.23 1545.32 1550.87 1554.58 1555.92 1554.6 1553.81 1551.38 1547.23 1542.53 1536.25 1529.75 1523.85 1517.54 1512.29 1507.02 1503.65 1500.6 1497.4 1490.47 1481.88 1473.12 1463.74 1455.17 1447.4 1441.56 1433.57 1424.43 1413.84 1404.53 1394.82 1388.4 1381.12 1374.03 1367.67 1361.57 1356.53 1353.54 1351.25 1350.11 1348.84 1346.84 1343 1339.91 1340.16 1339.44 1338.94 1341.08 1340.37 1341.52 1343.57 1347.69 1355.88 1362.7 1374.78 1388.09 1401.23 1412.98 1423.72 1433.73 1441.05 1446.59 1452.1 1454.3} {curve x1001 1456.72 1461.51 1466.86 1470.77 1471.66 1468.05 1462.48 1457.46 1453.29 1446.81 1441.74 1437.64 1437.46 1440.6 1443.5 1448.31 1453.84 1460.42 1465.31 1468.77 1470.74 1470.47 1470.2 1467.26 1463.52 1458.23 1452.3 1447.85 1444.43 1442.88 1444 1445.73 1447.04 1447.07 1447.54 1447.83 1446.53 1445.57 1444.8 1444.38 1443.65 1444.77 1444.84 1445.09 1446.39 1448.22 1450.61 1455.29 1460.47 1465.18 1470.96 1477.4 1483.46 1489.59 1494.86 1500.17 1503.89 1506.06 1510.37 1516.94 1525.89 1536.49 1548.47 1559.37 1568.61 1575.79 1580.33 1581.07}}
to3 {{curve x1001 1536.35 1538.57 1542.72 1543.4 1545.34 1548.16 1554.58 1559.58 1562.2 1562.03 1561.91 1560.69 1556.79 1552.41 1546.44 1539.7 1533.59 1527.07 1522.03 1516.77 1513.33 1510.17 1507.22 1501.05 1492.83 1484.3 1474.74 1465.56 1457.1 1450.46 1442.05 1432.46 1421.56 1411.76 1401.34 1394.14 1386.56 1379.19 1372.82 1367.1 1362.47 1359.55 1357.41 1356.49 1355.54 1353.98 1350.38 1347.39 1347.36 1346.82 1346.19 1348.05 1347.42 1348.37 1350.24 1353.77 1361.54 1368.16 1379.43 1391.7 1404.13 1415.4 1425.23 1434.61 1441.46 1446.71 1452.3 1454.21} {curve x1001 2128.53 2133.07 2138.21 2141.92 2142.71 2138.94 2132.97 2127.24 2122.53 2115.28 2109.35 2104.39 2103.44 2106.13 2108.75 2113.28 2118.63 2125.07 2130 2133.37 2135.34 2134.8 2134.39 2131.49 2127.75 2122.67 2116.8 2112.59 2109.16 2107.66 2108.76 2110.78 2112.34 2112.68 2113.24 2113.78 2112.64 2111.73 2110.95 2110.49 2109.66 2110.73 2110.75 2110.89 2112.09 2113.89 2116.26 2120.93 2126.18 2130.97 2136.82 2143.33 2149.53 2155.74 2161.07 2166.39 2170.15 2172.19 2176.3 2182.67 2191.51 2202 2214.09 2225.16 2234.54 2241.87 2246.61 2247.52}}
to4 {{curve x1001 108.034 110.95 115.877 117.04 119.616 123.266 130.744 136.673 140.218 140.919 141.628 141.312 137.544 133.198 127.17 120.27 114.353 107.939 103.056 98.0112 94.8857 91.7636 88.7628 82.3812 73.59 64.3911 54.1069 44.153 35.0683 27.4383 18.6521 7.79697 -4.00774 -14.8893 -26.1031 -34.3332 -42.6106 -50.4419 -57.242 -63.1712 -68.0017 -71.1965 -73.3074 -74.1284 -74.954 -76.5954 -80.8092 -84.1416 -84.666 -85.0794 -85.6414 -83.9873 -84.3433 -83.7212 -82.0707 -78.6778 -70.5025 -62.9692 -51.1503 -38.3044 -24.6276 -12.3025 -2.08756 7.80442 15.0026 20.45 26.4311 27.7983} {curve x1001 2129.08 2133.46 2139.56 2145.15 2148.25 2146.1 2141.62 2137.43 2134.92 2129.93 2125.9 2121.64 2121 2124.3 2127.16 2131.21 2135.8 2141.76 2146.51 2149.56 2151 2150.37 2150.27 2147.65 2144.25 2138.53 2131.84 2125.74 2121.06 2118.21 2117.34 2118.33 2118.99 2117.82 2116.89 2116.18 2113.89 2112.13 2110.97 2110.85 2110.68 2111.63 2111.72 2112.28 2114.09 2116.61 2119.62 2124.69 2130.33 2135.2 2141.13 2147.61 2153.49 2159.99 2165.53 2170.74 2173.99 2175.12 2178.33 2183.35 2190.57 2199.45 2210.67 2220.58 2229.15 2236.47 2241.48 2242.53}}
invert false
from1 {107.971 1457.27}
from2 {1536.29 1456.72}
from3 {1536.35 2128.53}
from4 {108.034 2129.08}
name CornerPin2D_Layer_4
label f1001
selected true
xpos 11865
ypos 19174
}
Roto {
inputs 0
output alpha
cliptype bbox
curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x450de000 x44c6c000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x4482a000
        {0 0}
        {xc3080000 x45184000}
        {0 0}
        {0 0}
        {x44381f1b x451706d5}
        {0 0}
        {0 0}
        {x449b0000 x44650000}
        {0 0}
        {x41400000 0}
        {x42a80000 x44260000}
        {xc1400000 0}}}     idem}
     {tx x4482a000 x44044000 x44c9a000}
     {a osw x41200000 osf 0 str 1 spx x450de000 spy x44c6c000 sb 1 ltn x4482a000 ltm x4482a000 tt x40800000}}}}}}
toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
toolbar_brush_hardness 0.200000003
toolbar_source_transform_scale {1 1}
toolbar_source_transform_center {2270 1590}
colorOverlay {0 0 0 0}
lifetime_type "all frames"
lifetime_start 1045
lifetime_end 1045
motionblur_shutter_offset_type centred
source_black_outside true
name Roto2
selected true
xpos 11865
ypos 18981
}
CornerPin2D {
to1 {{curve x1001 107.971 111.126 115.668 115.984 117.507 120.429 127.039 131.672 133.938 133.485 133.528 132.006 127.981 123.317 116.974 110.327 104.609 98.4098 93.3194 88.2671 85.2093 82.191 78.942 71.7918 62.6381 53.2126 43.1109 33.7635 25.3636 18.5323 10.1783 -0.228421 -11.731 -22.1244 -32.6287 -40.0696 -48.0484 -55.6032 -62.3967 -68.6976 -73.9411 -77.2071 -79.4658 -80.5085 -81.6549 -83.7376 -88.1936 -91.6273 -91.8629 -92.4567 -92.8849 -90.958 -91.3931 -90.5686 -88.7387 -84.7531 -76.1616 -68.4248 -55.8019 -41.9169 -27.5227 -14.7244 -3.60351 6.93329 14.5921 20.3219 26.2353 27.8869} {curve x1001 1457.27 1461.9 1468.2 1474.01 1477.2 1475.21 1471.13 1467.65 1465.68 1461.46 1458.29 1454.89 1455.02 1458.77 1461.92 1466.23 1471.01 1477.11 1481.82 1484.96 1486.4 1486.04 1486.07 1483.42 1480.02 1474.08 1467.34 1460.99 1456.33 1453.42 1452.57 1453.29 1453.69 1452.21 1451.18 1450.22 1447.78 1445.96 1444.82 1444.74 1444.67 1445.66 1445.81 1446.48 1448.39 1450.94 1453.97 1459.05 1464.62 1469.41 1475.27 1481.68 1487.42 1493.84 1499.33 1504.52 1507.73 1508.98 1512.4 1517.62 1524.95 1533.94 1545.05 1554.79 1563.23 1570.4 1575.2 1576.09}}
to2 {{curve x1001 1536.29 1538.75 1542.51 1542.35 1543.23 1545.32 1550.87 1554.58 1555.92 1554.6 1553.81 1551.38 1547.23 1542.53 1536.25 1529.75 1523.85 1517.54 1512.29 1507.02 1503.65 1500.6 1497.4 1490.47 1481.88 1473.12 1463.74 1455.17 1447.4 1441.56 1433.57 1424.43 1413.84 1404.53 1394.82 1388.4 1381.12 1374.03 1367.67 1361.57 1356.53 1353.54 1351.25 1350.11 1348.84 1346.84 1343 1339.91 1340.16 1339.44 1338.94 1341.08 1340.37 1341.52 1343.57 1347.69 1355.88 1362.7 1374.78 1388.09 1401.23 1412.98 1423.72 1433.73 1441.05 1446.59 1452.1 1454.3} {curve x1001 1456.72 1461.51 1466.86 1470.77 1471.66 1468.05 1462.48 1457.46 1453.29 1446.81 1441.74 1437.64 1437.46 1440.6 1443.5 1448.31 1453.84 1460.42 1465.31 1468.77 1470.74 1470.47 1470.2 1467.26 1463.52 1458.23 1452.3 1447.85 1444.43 1442.88 1444 1445.73 1447.04 1447.07 1447.54 1447.83 1446.53 1445.57 1444.8 1444.38 1443.65 1444.77 1444.84 1445.09 1446.39 1448.22 1450.61 1455.29 1460.47 1465.18 1470.96 1477.4 1483.46 1489.59 1494.86 1500.17 1503.89 1506.06 1510.37 1516.94 1525.89 1536.49 1548.47 1559.37 1568.61 1575.79 1580.33 1581.07}}
to3 {{curve x1001 1536.35 1538.57 1542.72 1543.4 1545.34 1548.16 1554.58 1559.58 1562.2 1562.03 1561.91 1560.69 1556.79 1552.41 1546.44 1539.7 1533.59 1527.07 1522.03 1516.77 1513.33 1510.17 1507.22 1501.05 1492.83 1484.3 1474.74 1465.56 1457.1 1450.46 1442.05 1432.46 1421.56 1411.76 1401.34 1394.14 1386.56 1379.19 1372.82 1367.1 1362.47 1359.55 1357.41 1356.49 1355.54 1353.98 1350.38 1347.39 1347.36 1346.82 1346.19 1348.05 1347.42 1348.37 1350.24 1353.77 1361.54 1368.16 1379.43 1391.7 1404.13 1415.4 1425.23 1434.61 1441.46 1446.71 1452.3 1454.21} {curve x1001 2128.53 2133.07 2138.21 2141.92 2142.71 2138.94 2132.97 2127.24 2122.53 2115.28 2109.35 2104.39 2103.44 2106.13 2108.75 2113.28 2118.63 2125.07 2130 2133.37 2135.34 2134.8 2134.39 2131.49 2127.75 2122.67 2116.8 2112.59 2109.16 2107.66 2108.76 2110.78 2112.34 2112.68 2113.24 2113.78 2112.64 2111.73 2110.95 2110.49 2109.66 2110.73 2110.75 2110.89 2112.09 2113.89 2116.26 2120.93 2126.18 2130.97 2136.82 2143.33 2149.53 2155.74 2161.07 2166.39 2170.15 2172.19 2176.3 2182.67 2191.51 2202 2214.09 2225.16 2234.54 2241.87 2246.61 2247.52}}
to4 {{curve x1001 108.034 110.95 115.877 117.04 119.616 123.266 130.744 136.673 140.218 140.919 141.628 141.312 137.544 133.198 127.17 120.27 114.353 107.939 103.056 98.0112 94.8857 91.7636 88.7628 82.3812 73.59 64.3911 54.1069 44.153 35.0683 27.4383 18.6521 7.79697 -4.00774 -14.8893 -26.1031 -34.3332 -42.6106 -50.4419 -57.242 -63.1712 -68.0017 -71.1965 -73.3074 -74.1284 -74.954 -76.5954 -80.8092 -84.1416 -84.666 -85.0794 -85.6414 -83.9873 -84.3433 -83.7212 -82.0707 -78.6778 -70.5025 -62.9692 -51.1503 -38.3044 -24.6276 -12.3025 -2.08756 7.80442 15.0026 20.45 26.4311 27.7983} {curve x1001 2129.08 2133.46 2139.56 2145.15 2148.25 2146.1 2141.62 2137.43 2134.92 2129.93 2125.9 2121.64 2121 2124.3 2127.16 2131.21 2135.8 2141.76 2146.51 2149.56 2151 2150.37 2150.27 2147.65 2144.25 2138.53 2131.84 2125.74 2121.06 2118.21 2117.34 2118.33 2118.99 2117.82 2116.89 2116.18 2113.89 2112.13 2110.97 2110.85 2110.68 2111.63 2111.72 2112.28 2114.09 2116.61 2119.62 2124.69 2130.33 2135.2 2141.13 2147.61 2153.49 2159.99 2165.53 2170.74 2173.99 2175.12 2178.33 2183.35 2190.57 2199.45 2210.67 2220.58 2229.15 2236.47 2241.48 2242.53}}
invert false
from1 {107.971 1457.27}
from2 {1536.29 1456.72}
from3 {1536.35 2128.53}
from4 {108.034 2129.08}
name CornerPin2D_Layer_1
label f1001
selected true
xpos 11865
ypos 19041
}
push $N31fec100
Grade {
channels alpha
gamma 2
white_clamp true
name Grade2
label "thicker dirt"
selected true
xpos 11397
ypos 18378
}
Dot {
name Dot74
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11656
ypos 18394
}
push $N31fec800
Dot {
name Dot186
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 10994
ypos 17990
}
Invert {
name Invert1
selected true
xpos 11104
ypos 17980
}
push $N341cf900
Dot {
name Dot64
tile_color 0x949494ff
label "_paint plate"
note_font_size 42
note_font_color 0xffffffff
selected true
xpos 1180
ypos 2341
}
Dot {
name Dot66
tile_color 0x949494ff
label "_ud_dn plate"
note_font_size 42
note_font_color 0xffffffff
selected true
xpos 1144
ypos 5018
}
Dot {
name Dot71
tile_color 0x949494ff
label "_ud_dn plate"
note_font_size 42
note_font_color 0xffffffff
selected true
xpos 1163
ypos 12034
}
Dot {
name Dot79
tile_color 0x949494ff
label "_paint plate"
note_font_size 42
note_font_color 0xffffffff
selected true
xpos 1163
ypos 17830
}
Dot {
name Dot84
tile_color 0xd8b700ff
label "\n From: _paint plate"
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11069
ypos 17830
hide_input true
}
Dot {
name Dot77
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11069
ypos 17899
}
set N31c9cf00 [stack 0]
Dot {
name Dot373
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11248
ypos 17899
}
Dot {
name Dot76
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11248
ypos 17917
}
Multiply {
inputs 1+1
value 0
invert_mask true
name Multiply4
selected true
xpos 11214
ypos 17980
}
Blur {
size 200
quality 5
name Blur6
selected true
xpos 11214
ypos 18018
}
FilterErode {
channels rgb
size -133
filter quadratic
name FilterErode2
selected true
xpos 11214
ypos 18061
}
Blur {
size 100
quality 5
name Blur7
selected true
xpos 11214
ypos 18087
}
push $N3341c800
Dot {
name Dot37
tile_color 0x949494ff
label matte1
note_font_size 42
note_font_color 0xffffffff
selected true
xpos -807
ypos 10800
}
Dot {
name Dot26
tile_color 0x949494ff
label matte1
note_font_size 42
note_font_color 0xffffffff
selected true
xpos -813
ypos 17858
}
Dot {
name Dot182
tile_color 0x949494ff
label matte1
note_font_size 42
note_font_color 0xffffffff
selected true
xpos -813
ypos 18203
}
set N2f1cf200 [stack 0]
Dot {
name Dot184
tile_color 0xd8b700ff
label "\n From: fgHoldout"
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 10981
ypos 18049
hide_input true
}
Group {
name key_chew16
help "======== KeyChew beta ========\n=============================\n\nThis is a port of the KeyChew macro for Shake to Nuke.\n\nThere might be tiny differences on the results given in both apps. Some of them are caused by the internal algorithms of each app, and others by the way I faked the JSplineV\nexpression of Shake in Nuke. If you know a better way to solve this, let\nme know!!\n\n=============================\n             2009 Cuco Bures\n============================="
selected true
xpos 10960
ypos 18125
addUserKnob {20 Controls}
addUserKnob {7 chew t "\t\t" R -200 200}
chew 10
addUserKnob {7 soften R 0 200}
soften 20
addUserKnob {6 matteMult +STARTLINE}
}
Input {
inputs 0
name Input
xpos -40
ypos -9
}
set N2f7f5d00 [stack 0]
Dot {
name Dot1
xpos 324
ypos -6
}
set N2f7f5600 [stack 0]
push $N2f7f5600
Invert {
name Invert1
xpos 176
ypos 33
}
push $N2f7f5600
Switch {
inputs 2
which {{"\[value chew]>=0?0:1"}}
name Switch1
xpos 180
ypos 87
}
Blur {
size {{"(floor(abs(\[value chew]))/4)+(floor(abs(\[value chew]))/8)"}}
name FgEdgeBlur
xpos 180
ypos 129
}
Grade {
channels alpha
multiply {1 1 1 {max(FgEdgeBlur.size*1.5,1)}}
black_clamp false
name FgEdgeMult
xpos 180
ypos 177
}
Grade {
channels alpha
gamma {1 1 1 {JSplineVFake(floor(abs(chew)))}}
name FgEdgeGamma1
xpos 180
ypos 225
addUserKnob {20 User}
addUserKnob {7 JSplineVFake}
JSplineVFake {{curve l 0.9958 k x5 0.95 0.8 x20 0.5 x40 0.3 x80 0.2 l x200 0.1}}
}
set N7f4100 [stack 0]
Merge2 {
inputs 2
operation minus
name Merge1
xpos 290
ypos 231
}
push $N7f4100
Switch {
inputs 2
which {{"\[value chew]>=0?0:1"}}
name Switch2
xpos 180
ypos 279
}
Clamp {
name Clamp2
xpos 180
ypos 321
}
Blur {
size {{"(floor(abs(\[value soften]))/4)+(floor(abs(\[value soften]))/8)"}}
name BlurResult
xpos 180
ypos 441
}
push $N2f7f5d00
ShuffleCopy {
inputs 2
name ShuffleCopy1
xpos -40
ypos 447
}
Premult {
name Premult1
xpos -40
ypos 495
disable {{"1-\[value matteMult]"}}
}
Output {
name Output1
xpos -40
ypos 567
}
end_group
push $N31c9cf00
Multiply {
inputs 1+1
value 0
name Multiply11
selected true
xpos 11034
ypos 18182
}
Dot {
name Dot85
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11069
ypos 18262
}
push $N31fecf00
Dot {
name Dot80
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11655
ypos 17613
}
push $N6d49f900
Dot {
name Dot323
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9796
ypos -6303
}
set N31c78100 [stack 0]
Dot {
name Dot324
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9796
ypos -6234
}
set N31c5b900 [stack 0]
push $N31c78100
push $N33d82400
Read {
inputs 0
file_type exr
file /coppi/proj/thrg/ftrack/assets/s01e01/015-0300/img/thrg_s01e01_015-0300_amModuleBTY_v003_beauty_acescg/thrg_s01e01_015-0300_amModuleBTY_beauty_acescg_v003.%04d.exr
format "2306 1622 0 0 2306 1622 1 "
first 1001
last 1237
origfirst 1001
origlast 1237
origset true
name amModuleBTY_beauty_acescg
tile_color 0xe36316ff
selected true
xpos 8210
ypos -9319
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname beauty_acescg
addUserKnob {20 ftrack}
addUserKnob {1 componentId}
componentId 58291cd9-95a1-4c0c-8763-6c9e172f6cef
addUserKnob {1 componentName}
componentName beauty_acescg
addUserKnob {1 assetVersionId}
assetVersionId 2eb19b3b-4413-40ec-bcf8-9f637e424c3f
addUserKnob {1 assetVersion}
assetVersion 3
addUserKnob {1 assetName}
assetName amModuleBTY
addUserKnob {1 assetType}
assetType img
addUserKnob {4 versionType l "Version Type" M {latest stable pinned}}
}
Dot {
name Dot325
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 8244
ypos -9089
}
Group {
name Reformat_Overscan4
selected true
xpos 8210
ypos -8760
addUserKnob {20 User l Reformat_Overscan}
addUserKnob {41 format l "output format" T ReformatMASTER.format}
addUserKnob {41 filter T ReformatOverscanMASTER.filter}
addUserKnob {41 overscanPercent T ReformatOverscanMASTER.overscanPercent}
addUserKnob {20 info}
addUserKnob {26 version l ver: T "v1 rafal 10/02/2020"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust4
tile_color 0xaaaaaaff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 42
xpos -987
ypos -496
bdwidth 280
bdheight 332
z_order -92960
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "Flat plate res"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Black
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
Input {
inputs 0
name Input1
xpos -884
ypos -382
}
Reformat {
format {{{parent.parent.Reformat_OverscanMASTER.ReformatMASTER.format}}}
pbb true
name ReformatMASTER
xpos -884
ypos -342
}
Reformat {
type scale
scale {{overscanPercent==0?1:1-(1/overscanPercent)}}
resize none
filter impulse
pbb true
name ReformatOverscanMASTER
xpos -884
ypos -288
addUserKnob {20 User l percent}
addUserKnob {7 overscanPercent R 0 80}
overscanPercent {{parent.parent.Reformat_OverscanMASTER.ReformatOverscanMASTER.overscanPercent}}
}
Crop {
box {{-ceil(((input.height*((1-ReformatOverscanMASTER.scale)))*0.5))} {-ceil(((input.width*((1-ReformatOverscanMASTER.scale)))*0.5))} {ceil(input.width+((input.width*(1-ReformatOverscanMASTER.scale))*0.5))} {ceil(input.height+((input.height*(1-ReformatOverscanMASTER.scale))*0.5))}}
name CropOverscanMASTER
xpos -884
ypos -244
addUserKnob {20 User}
}
set N31c2b200 [stack 0]
Output {
name Output1
xpos -884
ypos -144
}
push $N31c2b200
Viewer {
frame_range 994-1161
fps 25
viewerProcess "sRGB (ACES)"
name Viewer1
xpos -624
ypos -303
}
end_group
Group {
name depthCombo3
selected true
xpos 8210
ypos -8694
addUserKnob {20 User l depthCombo}
addUserKnob {41 math l "input math" T Expression14.math}
addUserKnob {41 from0 l "in depth filtered" T Copyf.from0}
addUserKnob {41 from0_1 l "in depth ufiltered" T Copy.from0}
addUserKnob {41 to0 l output T Copyf1.to0}
addUserKnob {26 txt l output: T "camera =0 (arnold, vray) i.e. real/distance from camera"}
}
Input {
inputs 0
name Input1
xpos 1288
ypos 197
}
set N31c29600 [stack 0]
AddChannels {
channels zDepth
name AddChannels1
xpos 895
ypos 227
}
Dot {
name Dot65
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 929
ypos 315
}
set N31c28100 [stack 0]
Expression {
channel0 alpha
expr0 alpha==1
name Expression13
xpos 1023
ypos 403
}
push $N31c28100
push $N31c28100
Multiply {
channels rgb
value 0
name Multiply1
xpos 826
ypos 358
}
set N31bff200 [stack 0]
Copy {
inputs 2
from0 zDepth.filtered
to0 rgba.red
name Copy
xpos 901
ypos 426
}
push $N31c28100
Dot {
name Dot1
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 757
ypos 315
}
push $N31bff200
Copy {
inputs 2
from0 zDepth.unfiltered
to0 rgba.red
name Copyf
xpos 764
ypos 426
}
Keymix {
inputs 3
channels {rgba.red -rgba.green -rgba.blue none}
invertMask true
name Keymix8
xpos 895
ypos 545
}
Expression {
temp_name0 recip
temp_expr0 1/r
expr0 r>0?recip==inf?0:recip:0
channel1 {-rgba.red -rgba.green -rgba.blue none}
channel2 {-rgba.red -rgba.green -rgba.blue none}
name Expression14
xpos 895
ypos 620
disable {{math}}
addUserKnob {20 User}
addUserKnob {4 math l "input math" M {"infinity = 0 (nuke, renderMan)" "camera = 0 (arnold, vray)"}}
math "camera = 0 (arnold, vray)"
}
push $N31c29600
Copy {
inputs 2
from0 rgba.red
to0 zDepth.combo
name Copyf1
xpos 1288
ypos 614
}
Output {
name Output1
xpos 1288
ypos 784
}
end_group
Dot {
name Dot168
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 8244
ypos -7868
}
set N62bf7200 [stack 0]
Dot {
name Dot169
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 8506
ypos -7868
}
Dot {
name Dot171
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 8506
ypos -7660
}
set N62bf6400 [stack 0]
Dot {
name Dot172
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 8506
ypos -7415
}
set N62bf5d00 [stack 0]
Dot {
name Dot173
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 8506
ypos -7288
}
push $N62bf5d00
push $N62bf6400
Dot {
name Dot174
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 8426
ypos -7660
}
Log2Lin {
operation lin2log
name Log2Lin9
selected true
xpos 8392
ypos -7630
}
Keyer {
operation "luminance key"
range {0.72483001 0.78 1 1}
name Keyer5
selected true
xpos 8392
ypos -7611
}
Log2Lin {
name Log2Lin10
selected true
xpos 8392
ypos -7573
}
Group {
name key_chew14
help "======== KeyChew beta ========\n=============================\n\nThis is a port of the KeyChew macro for Shake to Nuke.\n\nThere might be tiny differences on the results given in both apps. Some of them are caused by the internal algorithms of each app, and others by the way I faked the JSplineV\nexpression of Shake in Nuke. If you know a better way to solve this, let\nme know!!\n\n=============================\n             2009 Cuco Bures\n============================="
selected true
xpos 8392
ypos -7547
addUserKnob {20 Controls}
addUserKnob {7 chew t "\t\t" R -200 200}
chew -11
addUserKnob {7 soften R 0 200}
soften 1
addUserKnob {6 matteMult +STARTLINE}
}
Input {
inputs 0
name Input
xpos -40
ypos -9
}
set N63ff4100 [stack 0]
Dot {
name Dot1
xpos 324
ypos -6
}
set N653fb900 [stack 0]
push $N653fb900
Invert {
name Invert1
xpos 176
ypos 33
}
push $N653fb900
Switch {
inputs 2
which {{"\[value chew]>=0?0:1"}}
name Switch1
xpos 180
ypos 87
}
Blur {
size {{"(floor(abs(\[value chew]))/4)+(floor(abs(\[value chew]))/8)"}}
name FgEdgeBlur
xpos 180
ypos 129
}
Grade {
channels alpha
multiply {1 1 1 {max(FgEdgeBlur.size*1.5,1)}}
black_clamp false
name FgEdgeMult
xpos 180
ypos 177
}
Grade {
channels alpha
gamma {1 1 1 {JSplineVFake(floor(abs(chew)))}}
name FgEdgeGamma1
xpos 180
ypos 225
addUserKnob {20 User}
addUserKnob {7 JSplineVFake}
JSplineVFake {{curve l 0.9958 k x5 0.95 0.8 x20 0.5 x40 0.3 x80 0.2 l x200 0.1}}
}
set N657fa400 [stack 0]
Merge2 {
inputs 2
operation minus
name Merge1
xpos 290
ypos 231
}
push $N657fa400
Switch {
inputs 2
which {{"\[value chew]>=0?0:1"}}
name Switch2
xpos 180
ypos 279
}
Clamp {
name Clamp2
xpos 180
ypos 321
}
Blur {
size {{"(floor(abs(\[value soften]))/4)+(floor(abs(\[value soften]))/8)"}}
name BlurResult
xpos 180
ypos 441
}
push $N63ff4100
ShuffleCopy {
inputs 2
name ShuffleCopy1
xpos -40
ypos 447
}
Premult {
name Premult1
xpos -40
ypos 495
disable {{"1-\[value matteMult]"}}
}
Output {
name Output1
xpos -40
ypos 567
}
end_group
push $N62bf7200
Group {
name Rig_Incandecent3
selected true
xpos 8206
ypos -7817
addUserKnob {20 User l Rig_Incandecent}
addUserKnob {26 txt_3 l Glow}
addUserKnob {41 intensity l Intensity T apGlow.intensity}
addUserKnob {41 persistance T apGlow.persistance}
addUserKnob {41 max_size l "max size" T apGlow.max_size}
addUserKnob {20 group l grading n 1}
addUserKnob {26 txt l Blubs}
addUserKnob {41 white l gain T Gradebulbs.white}
addUserKnob {41 multiply T Gradebulbs.multiply}
addUserKnob {41 gamma T Gradebulbs.gamma}
addUserKnob {41 flicker T MultiplyBulb.flicker}
addUserKnob {41 mix l flickerArea T Merge23stripMix1.mix}
addUserKnob {26 txt_1 l Strips}
addUserKnob {41 white_1 l gain T GradeStrips.white}
addUserKnob {41 multiply_1 l multiply T GradeStrips.multiply}
addUserKnob {41 gamma_1 l gamma T GradeStrips.gamma}
addUserKnob {41 value l coreMult T MultiplyCore.value}
addUserKnob {41 flicker_1 l flicker T MultiplyFluro.flicker}
addUserKnob {41 mix_1 l flickerArea T Merge23BulbMix.mix}
addUserKnob {26 txt_2 l Window}
addUserKnob {41 white_2 l gain T GradeWindows.white}
addUserKnob {41 multiply_2 l multiply T GradeWindows.multiply}
addUserKnob {41 gamma_2 l gamma T GradeWindows.gamma}
addUserKnob {20 endGroup n -1}
addUserKnob {20 info}
addUserKnob {26 txt_4 l ver: T " v1.0 1/3/22 rafs"}
}
Input {
inputs 0
name Input1
xpos -228
ypos -218
}
Dot {
name Dot115
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -194
ypos -178
}
set N673f8f00 [stack 0]
Dot {
name Dot122
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 25
ypos -174
}
set N673f8800 [stack 0]
Dot {
name Dot120
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 206
ypos -174
}
set N673f8100 [stack 0]
Dot {
name Dot118
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 323
ypos -174
}
set N67ffb900 [stack 0]
Dot {
name Dot127
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 733
ypos -174
}
set N67ffb200 [stack 0]
Dot {
name Dot128
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 903
ypos -174
}
Dot {
name Dot129
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 991
ypos 419
}
set N67ffa400 [stack 0]
P_Noise3D {
name P_Noise3D5
xpos 946
ypos 474
in pWorld
output alpha
size {2 {size.x*5} {size.x}}
offset {{int(frame*0.5)} 0 0}
}
push $N67ffa400
P_Noise3D {
name P_Noise3D6
xpos 1098
ypos 489
in pWorld
output alpha
size {2 {size.x*5} {size.x}}
offset {{int(frame*0.5)} 10 10}
}
Merge2 {
inputs 2
operation multiply
name Merge23stripMix1
xpos 1028
ypos 536
}
Grade {
channels alpha
multiply 5
gamma 0.5
white_clamp true
name Grade19
xpos 992
ypos 563
}
push $N67ffa400
P_Noise3D {
name P_Noise3D4
xpos 825
ypos 491
in pWorld
output alpha
size {0.2 {size.x*15} {size.x}}
offset {{(int(frame+2))} -2 -2}
}
Grade {
channels alpha
multiply 3
gamma 0.4
white_clamp true
name Grade18
xpos 825
ypos 552
}
Merge2 {
inputs 2
operation multiply
name Merge25
xpos 825
ypos 607
}
Transform {
scale {1 1}
center {1153 811}
shutteroffset centred
name Transform1
xpos 306
ypos 524
}
Crop {
box {0 0 {width} {height}}
name Crop1
xpos 306
ypos 595
}
push $N673f8800
add_layer {other other.alpha_extra other.lightColor other.lightID other.lightSwitch other.mtoa_constant_UnitLightColor other.mtoa_constant_UnitLightID other.mtoa_constant_UnitLightSwitch other.oceanCusp other.oceanFalloff other.oceanWhitecapRamp other.specrough other.P_world other.ZBack}
Shuffle2 {
fromInput1 {{0} B}
in1 {other.alpha_extra other.lightColor other.lightID other.lightSwitch other.mtoa_constant_UnitLightColor other.mtoa_constant_UnitLightID other.mtoa_constant_UnitLightSwitch other.oceanCusp}
fromInput2 {{0} B}
mappings "4 black -1 -1 rgba.alpha 0 3 other.lightSwitch 0 3 rgba.red 0 0 other.lightSwitch 0 3 rgba.green 0 1 other.lightSwitch 0 3 rgba.blue 0 2"
name Shuffle15
label "\[value in1]"
xpos -9
ypos -61
}
set N6e7f4f00 [stack 0]
push $N673f8100
Shuffle2 {
fromInput1 {{0} B}
in1 {other.alpha_extra other.lightColor other.lightID other.lightSwitch other.mtoa_constant_UnitLightColor other.mtoa_constant_UnitLightID other.mtoa_constant_UnitLightSwitch other.oceanCusp}
fromInput2 {{0} B}
mappings "4 black -1 -1 rgba.alpha 0 3 other.lightColor 0 1 rgba.red 0 0 other.lightColor 0 1 rgba.green 0 1 other.lightColor 0 1 rgba.blue 0 2"
name Shuffle13
label "\[value in1]"
xpos 152
ypos -99
}
set N6e7f4800 [stack 0]
Difference {
inputs 2
name Difference1
xpos 29
ypos 4
}
FilterErode {
size 2
filter gaussian
name FilterErode3
xpos 29
ypos 42
}
Grade {
multiply 3
name Grade17
xpos 29
ypos 80
}
Grade {
channels alpha
multiply 2
white_clamp true
name Grade20
xpos 29
ypos 106
}
Premult {
name Premult3
xpos 29
ypos 161
}
Dot {
name Dot104
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 63
ypos 359
}
set N707fb200 [stack 0]
FilterErode {
size -2
name FilterErode5
xpos 74
ypos 356
}
push $N6e7f4f00
Grade {
channels rgba
whitepoint 0.9998067021
white 0.52
gamma 1.09
white_clamp true
name Grade5
xpos 217
ypos 13
}
set N707f9d00 [stack 0]
push $N67ffb900
Shuffle2 {
fromInput1 {{0} B}
in1 {other.alpha_extra other.lightColor other.lightID other.lightSwitch other.mtoa_constant_UnitLightColor other.mtoa_constant_UnitLightID other.mtoa_constant_UnitLightSwitch other.oceanCusp}
fromInput2 {{0} B}
in2 alpha
mappings "4 other.lightID 0 2 rgba.red 0 0 other.lightID 0 2 rgba.green 0 1 other.lightID 0 2 rgba.blue 0 2 rgba.alpha 1 0 rgba.alpha 0 3"
name Shuffle12
label "\[value in1]"
xpos 289
ypos -128
}
set N70bf6400 [stack 0]
Grade {
channels rgba
blackpoint 0.1193237305
whitepoint 11067.95703
multiply 0.19
gamma 0.345
white_clamp true
name Grade7
xpos 289
ypos -46
}
Merge2 {
inputs 2
operation difference
name Merge19
xpos 289
ypos 65
}
push $N707f9d00
push $N70bf6400
Grade {
channels rgba
blackpoint 0.1193237305
whitepoint 11067.95703
multiply 3.26
gamma 0.236
white_clamp true
name Grade9
xpos 424
ypos -42
}
Merge2 {
inputs 2
operation difference
name Merge20
xpos 424
ypos 61
}
set N71bf6400 [stack 0]
Difference {
inputs 2
name Difference2
xpos 357
ypos 118
}
FilterErode {
size 3
name FilterErode1
xpos 357
ypos 156
}
FilterErode {
size -5
name FilterErode2
xpos 357
ypos 207
}
push $N71bf6400
Shuffle2 {
fromInput1 {{0} B}
fromInput2 {{0} B}
mappings "4 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 black -1 -1 rgba.red 0 0 rgba.red 0 0 rgba.alpha 0 3"
name Shuffle14
label "\[value in1]"
xpos 494
ypos 138
}
ChannelMerge {
inputs 2
operation in
name ChannelMerge1
xpos 494
ypos 202
}
FilterErode {
size -0.02
filter quadratic
name FilterErode4
xpos 494
ypos 252
}
Grade {
channels alpha
whitepoint 0.5956
gamma 1.8
white_clamp true
name Grade12
xpos 494
ypos 279
}
set N72bf5d00 [stack 0]
push $N6e7f4800
Dot {
name Dot103
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 186
ypos 172
}
Shuffle2 {
fromInput1 {{0} B}
fromInput2 {{0} B}
mappings "4 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 black -1 -1 rgba.red 0 0 rgba.red 0 0 rgba.alpha 0 3"
name Shuffle16
label "\[value in1]"
xpos 152
ypos 190
}
ChannelMerge {
inputs 2
operation stencil
name ChannelMerge2
xpos 152
ypos 273
}
Multiply {
inputs 1+1
value 0
name Multiply4
xpos 152
ypos 366
}
Saturation {
saturation 0
name Saturation2
xpos 152
ypos 518
}
Multiply {
inputs 1+1
value {{1-flicker}}
name MultiplyFluro
xpos 155
ypos 609
addUserKnob {20 User}
addUserKnob {7 flicker}
flicker 0.3
}
set N74ff7900 [stack 0]
Viewer {
frame_range 1001-1237
fps 25
colour_sample_bbox {0.5437988043 -0.4518646896 0.5446661115 -0.4509974122}
samplepoints {{0.5437988043 -0.4483954906}
  }
viewerProcess "sRGB (ACES)"
name Viewer1
xpos 395
ypos 1412
}
push $N673f8f00
Dot {
name Dot3
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -377
ypos -145
}
Dot {
name Dot2
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -377
ypos 1604
}
push $N74ff7900
FilterErode {
size {12 1}
filter gaussian
name FilterErode7
xpos 302
ypos 741
}
Grade {
channels alpha
blackpoint 0.026
whitepoint 0.85
gamma 0.765
white_clamp true
name Grade1
xpos 302
ypos 799
}
push $N74ff7900
Grade {
white {0.8422862291 0.9373040199 0.7385955453 1}
multiply 0.68
name GradeStrips
xpos 155
ypos 865
}
Multiply {
inputs 1+1
channels rgb
value 4
name MultiplyCore
xpos 154
ypos 913
}
Dot {
name windows2
tile_color 0x949494ff
label fluroStrips
note_font_size 22
note_font_color 0xffffffff
xpos 186
ypos 1158
}
set N773f8800 [stack 0]
push 0
push $N72bf5d00
Saturation {
saturation 0
name Saturation1
xpos 494
ypos 317
}
Premult {
name Premult6
xpos 494
ypos 356
}
Grade {
white {0.7426635027 0.8707515597 0.9373040199 1}
multiply 0.42
name GradeWindows
xpos 494
ypos 873
}
Dot {
name windows
tile_color 0x949494ff
label windows
note_font_size 22
note_font_color 0xffffffff
xpos 528
ypos 973
}
set N783fb900 [stack 0]
push $N67ffa400
P_Noise3D {
name P_Noise3D1
xpos 1230
ypos 509
in pWorld
output alpha
size {0.2 {size.x} {size.x}}
offset {{frame} 0 0}
}
Grade {
channels alpha
multiply 3
gamma 0.4
white_clamp true
name Grade15
xpos 1230
ypos 570
}
push $N67ffa400
P_Noise3D {
name P_Noise3D2
xpos 1349
ypos 501
in pWorld
output alpha
size {2 {size.x} {size.x}}
offset {{int(frame*0.1)} 0 0}
}
push $N67ffa400
P_Noise3D {
name P_Noise3D3
xpos 1501
ypos 516
in pWorld
output alpha
size {2 {size.x} {size.x}}
offset {{int(frame*0.1)} 10 10}
}
Merge2 {
inputs 2
operation multiply
mix 0.76
name Merge23BulbMix
xpos 1431
ypos 563
}
Grade {
channels alpha
multiply 5
gamma 0.5
white_clamp true
name Grade16
xpos 1349
ypos 587
}
Merge2 {
inputs 2
operation multiply
name Merge22
xpos 1230
ypos 649
}
push $N707fb200
Dot {
name windows1
tile_color 0x949494ff
label bulbs
note_font_size 22
note_font_color 0xffffffff
xpos 63
ypos 475
}
push $N67ffb200
Dot {
name Dot1
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 737
ypos 97
}
set N7e7f6b00 [stack 0]
P_Matte {
name P_Matte1
xpos 822
ypos 170
in pWorld
output alpha
useAlpha false
center {25.96203423 36.25034 41.21370316}
scaling {4000 3 4000}
uniform_scale 6
falloffType Smooth
falloff 0.644
}
FilterErode {
size 5
name FilterErode6
xpos 822
ypos 208
}
push $N7e7f6b00
Cryptomatte {
name Cryptomatte1
xpos 699
ypos 189
matteOutput alpha
matteList ""
cryptoLayer CryptoMaterial_a
expression ""
keyedName ""
previewExpression0 "((mantissa(abs(CryptoMaterial_a00.red)) * 1 % 0.25) * CryptoMaterial_a00.green + (mantissa(abs(CryptoMaterial_a00.blue)) * 1 % 0.25) * CryptoMaterial_a00.alpha + (mantissa(abs(CryptoMaterial_a01.red)) * 1 % 0.25) * CryptoMaterial_a01.green + (mantissa(abs(CryptoMaterial_a01.blue)) * 1 % 0.25) * CryptoMaterial_a01.alpha)"
previewExpression1 "((mantissa(abs(CryptoMaterial_a00.red)) * 16 % 0.25) * CryptoMaterial_a00.green + (mantissa(abs(CryptoMaterial_a00.blue)) * 16 % 0.25) * CryptoMaterial_a00.alpha + (mantissa(abs(CryptoMaterial_a01.red)) * 16 % 0.25) * CryptoMaterial_a01.green + (mantissa(abs(CryptoMaterial_a01.blue)) * 16 % 0.25) * CryptoMaterial_a01.alpha)"
previewExpression2 "((mantissa(abs(CryptoMaterial_a00.red)) * 64 % 0.25) * CryptoMaterial_a00.green + (mantissa(abs(CryptoMaterial_a00.blue)) * 64 % 0.25) * CryptoMaterial_a00.alpha + (mantissa(abs(CryptoMaterial_a01.red)) * 64 % 0.25) * CryptoMaterial_a01.green + (mantissa(abs(CryptoMaterial_a01.blue)) * 64 % 0.25) * CryptoMaterial_a01.alpha)"
previewExpression3 ""
previewChannel none
in00 CryptoMaterial_a00
in01 CryptoMaterial_a01
in02 CryptoMaterial_a02
in03 none
in04 none
in05 none
in06 none
in07 none
}
HueCorrect {
hue {sat {curve -0.001492381096 s-0.02999999933 v2.77112484 0.908650279 0.00398015976 s-0 u2.747416019 v2.909726858 0.5238806009 -0.001492500305 s0 u3 0.01492547989 -0.001492381096 s-0.02999999933 t-0 u0.6962256432}
  lum {curve 1 1 1 1 0.9690589905 1.007500768 1}
  red {curve 1 1.935820818 1 1.051434398 1 1 1}
  green {curve 1 1 1 1.397411227 1 1 1}
  blue {curve 0.6771144867 s0 t0.1400000006 0.75373137 0.75373137 0.5022648573 0.6120986938 0.024487257 0.6771144867 s0.1400000006 t0}
  r_sup {}
  g_sup {curve 1 1 1 1 0.9890546799 0.9890546799 1}
  b_sup {curve -0.00696516037 s0 1 0.1845772266 0.9671641588 0.983582139 0.2331717014 -0.00696516037}
  sat_thrsh {}}
name HueCorrect1
xpos 699
ypos 215
disable true
}
Saturation {
inputs 1+1
saturation 0
name Saturation3
xpos 697
ypos 278
}
HueCorrect {
hue {sat {curve 0.03134346008 s0 t0.008208990097 1.98507452 x1.804918051 0.07512450218 x3 1.722388029 x4 1.25721395 x5.877049446 0.02587080002 x6 0.03134346008}
  lum {curve 1.930348158 s0 1 1 1 1 1.809950113 1.930348158}
  red {}
  green {curve 1 1 1 0.9890546799 1 1 1}
  blue {curve 1 1 1 1.01094532 1 0.9945273399 1}
  r_sup {curve 1 1.399502516 1 1 1 1 1}
  g_sup {curve 1 1 0.6661691666 x2.949056864 1.601989985 x4 0.770149231 x5 1.01094532 1}
  b_sup {curve 0.04776120186 s0 0.5402985811 1 1.00547266 1 0.06417918205 0.04776120186}
  sat_thrsh {curve 0 0 0 0.05870652199 0 0 0}}
name HueCorrect2
xpos 699
ypos 339
}
Shuffle2 {
fromInput1 {{0} B}
fromInput2 {{0} B}
mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 white -1 -1 rgba.alpha 0 3"
name Shuffle18
label "\[value in1]"
xpos 699
ypos 406
}
Multiply {
inputs 1+1
value 0
invert_mask true
name Multiply3
xpos 699
ypos 465
}
Grade {
white {2.985129 1.626458 0.185129 2}
white_panelDropped true
multiply 2.2
name Gradebulbs
xpos 700
ypos 617
}
Multiply {
inputs 1+1
value {{1-flicker}}
name MultiplyBulb
xpos 699
ypos 657
addUserKnob {20 User}
addUserKnob {7 flicker l "" +STARTLINE}
flicker 0.51
}
Dot {
name windows3
tile_color 0x949494ff
label bulbs
note_font_size 22
note_font_color 0xffffffff
xpos 733
ypos 695
}
set N39bca400 [stack 0]
Merge2 {
inputs 3+1
name Merge26
xpos 609
ypos 1165
}
set N39bc9d00 [stack 0]
Group {
name apGlow
help "apGlow v1.1 by Adrian Pueyo\n\nExponential glow using a sub-frame iterative blur.\n\nWith the \"area\" input (optional) you can set only a part of the image to emit glow.\n\nCaveats:\n- This node will kill sub-frames as it relies on a floor NoTimeBlur. Do any other sub-frame operations before this!\n- NaN's will be turned black, but on rgba only.\n\nadrianpueyo.com, 2015-2018"
onCreate "n = nuke.thisNode()\nfor i in \['intensity','response','max_size','src_black','src_white','response']:\n    n\[i].setFlag(0x00000004)\nn\['max_size'].setRange(0,10000)\nn\['overscan'].setRange(0,1000)"
knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() in \[\"crop\",\"enableOverscan\"]:\n    kcv = n\[\"crop\"].value()\n    kov = n\[\"enableOverscan\"].value()\n    n\[\"enableOverscan\"].setEnabled(not kcv)\n    n\['overscan'].setEnabled(not kcv and kov)"
tile_color 0xe88543ff
xpos 411
ypos 1284
addUserKnob {20 apGlow}
addUserKnob {41 channels T KeepWhat.channels}
addUserKnob {7 intensity t "Intensity multiplier for the resulting glow." R 0 10}
intensity 0.72
addUserKnob {18 persistance t "Color gain of the largest step. Affects the other steps progressively, with 0 effect on the smallest one.\n\nUse as an inverse falloff or as a progressive color tint." R 0 10}
persistance 2.04
addUserKnob {6 persistance_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 persistance_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 tint t "Overall color multiplier for the intensity."}
tint 1
addUserKnob {6 tint_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 tint_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 effect_only l "effect only" +STARTLINE}
effect_only true
addUserKnob {26 ""}
addUserKnob {7 src_black l "src black" t "Black point of the source image's luminance.\nClip the effect below this luminance value." R 0 4}
src_black 0.005
addUserKnob {7 src_white l "src white" t "White point of the source image's luminance." R 0 4}
src_white 0.86
addUserKnob {41 white_clamp l clamp -STARTLINE T Grade1.white_clamp}
addUserKnob {7 response t "Gamma on the source image's luminance, to change the response curve falloff." R 0 4}
response 0.64
addUserKnob {26 ""}
addUserKnob {14 max_size l "max size" t "Maximum pixel size of the exponential glow." R 0 10000}
max_size 40
addUserKnob {14 falloff l "size falloff" t "Falloff adjustment on the exponential distribution of the blur sizes." R 0 10}
falloff 0.2
addUserKnob {3 steps t "Number of blur iterations to combine together."}
steps 10
addUserKnob {41 filter T Blur.filter}
addUserKnob {41 quality l "" -STARTLINE T Blur.quality}
addUserKnob {6 crop l "crop to format" -STARTLINE}
addUserKnob {14 overscan R 0 1000}
overscan 100
addUserKnob {6 enableOverscan l enable -STARTLINE}
enableOverscan true
addUserKnob {26 ""}
addUserKnob {41 maskChannelArea l area -STARTLINE T ExpressionArea.maskChannelMask}
addUserKnob {41 inject_area l inject -STARTLINE T ExpressionArea.inject}
addUserKnob {41 invert_area l invert -STARTLINE T ExpressionArea.invert_mask}
addUserKnob {41 fringe_area l fringe -STARTLINE T ExpressionArea.fringe}
addUserKnob {41 maskChannelMask l mask T Merge.maskChannelMask}
addUserKnob {41 inject -STARTLINE T Merge.inject}
addUserKnob {41 invert_mask l invert -STARTLINE T Merge.invert_mask}
addUserKnob {41 fringe -STARTLINE T Merge.fringe}
addUserKnob {41 mix T Merge.mix}
addUserKnob {26 version_author l "" t "apGlow v1.1\n2018" +STARTLINE T "<span style=\"color:#666\"><br/><b>apGlow v1.1</b> - <a href=\"http://www.adrianpueyo.com\" style=\"color:#666;text-decoration: none;\">adrianpueyo.com</a>, 2015-2018</span>"}
}
Input {
inputs 0
name Inputmask
xpos -748
ypos 847
number 2
}
Input {
inputs 0
name Inputarea
xpos -156
ypos 383
number 1
}
Input {
inputs 0
name Inputimg
xpos -638
ypos 220
}
NoTimeBlur {
rounding none
name NTB
xpos -638
ypos 267
}
Dot {
name Dot6
xpos -604
ypos 308
}
set N39b9e400 [stack 0]
Dot {
name Dot7
xpos -384
ypos 308
}
set N39b9dd00 [stack 0]
Dot {
name Dot8
xpos -232
ypos 308
}
Remove {
name RemoveAll
xpos -266
ypos 345
}
Expression {
inputs 1+1
channel0 rgba
expr0 1
maskChannelMask -rgba.alpha
name ExpressionArea
xpos -266
ypos 383
disable {{"!\[exists parent.input1]"}}
}
Shuffle {
red white
green white
blue white
alpha white
name ShuffleWhite
xpos -266
ypos 409
disable {{"\[exists parent.input1]"}}
}
push $N39b9dd00
Remove {
operation keep
channels rgba
name KeepWhat
xpos -418
ypos 377
}
add_layer {apGlowArea apGlowArea.red}
Copy {
inputs 2
from0 rgba.alpha
to0 apGlowArea.red
name Copy1
xpos -418
ypos 403
disable {{"!\[exists parent.input1]"}}
}
Premult {
channels all
alpha apGlowArea.red
name Premult1
xpos -418
ypos 441
disable {{"!\[exists parent.input1]"}}
}
Remove {
channels apGlowArea
name RemoveArea
xpos -418
ypos 479
disable {{"!\[exists parent.input1]"}}
}
Dot {
name Dot5
xpos -384
ypos 532
}
set N39b7dd00 [stack 0]
Dot {
name Dot1
xpos -284
ypos 532
}
Saturation {
channels all
saturation 0
name Saturation1
xpos -318
ypos 572
}
set N39b7cf00 [stack 0]
Grade {
channels all
blackpoint {{parent.src_black}}
whitepoint {{parent.src_white}}
gamma {{parent.response}}
name Grade1
xpos -318
ypos 610
}
push $N39b7dd00
push $N39b7cf00
Merge2 {
inputs 2
operation divide
also_merge all
name Merge4
xpos -418
ypos 578
}
Merge2 {
inputs 2
operation multiply
also_merge all
name Merge3
xpos -418
ypos 616
}
Dot {
name DP
xpos -384
ypos 642
addUserKnob {20 User}
addUserKnob {14 j R 0 100}
j {{"pow(2, t*(log(parent.max_size*parent.falloff)/log(2)) )"} {"pow(2, t*(log(parent.max_size*parent.falloff)/log(2)) )"}}
}
Blur {
size {{"DP.j( (t%1)+1/parent.steps) / parent.falloff"} {"DP.j( (t%1)+1/parent.steps) / parent.falloff"}}
crop false
name Blur
xpos -418
ypos 660
}
Multiply {
value {{"parent.persistance * (t%1) + (1-t%1)"} {"parent.persistance * (t%1) + (1-t%1)"} {"parent.persistance * (t%1) + (1-t%1)"} {"parent.persistance * (t%1) + (1-t%1)"}}
name Multiply
xpos -418
ypos 699
}
TimeBlur {
divisions {{parent.steps}}
shutter 1
shutteroffset start
shuttercustomoffset 0
name TB
xpos -418
ypos 736
}
Multiply {
value {{parent.steps?parent.intensity*parent.tint:0} {parent.steps?parent.intensity*parent.tint:0} {parent.steps?parent.intensity*parent.tint:0} {parent.steps?parent.intensity*parent.tint:0}}
name MultiplyR
xpos -418
ypos 762
}
Expression {
expr0 isnan(r)?0:r
expr1 isnan(g)?0:g
expr2 isnan(b)?0:b
expr3 isnan(a)?0:a
name NanToBlack
xpos -418
ypos 800
}
push $N39b9e400
Dot {
name Dot4
xpos -604
ypos 582
}
set N39b34800 [stack 0]
Dot {
name Dot2
xpos -494
ypos 582
}
Shuffle {
red black
green black
blue black
name Shuffle
xpos -528
ypos 660
disable {{!parent.effect_only}}
}
Remove {
operation keep
channels rgb
name Remove1
xpos -528
ypos 686
disable {{!parent.effect_only}}
}
Merge2 {
inputs 2
operation plus
output {rgba.red rgba.green rgba.blue -rgba.alpha}
also_merge all
name Merge1
xpos -528
ypos 800
}
Dot {
name Dot3
xpos -494
ypos 850
}
push $N39b34800
Merge2 {
inputs 2+1
operation copy
output {rgba.red rgba.green rgba.blue -rgba.alpha}
also_merge all
maskChannelMask -rgba.alpha
name Merge
xpos -638
ypos 846
}
Crop {
box {{parent.crop?0:-parent.overscan} {parent.crop?0:-parent.overscan} {parent.crop?width:width+parent.overscan} {parent.crop?height:height+parent.overscan}}
intersect true
name CropOverscan
xpos -638
ypos 872
disable {{"!parent.enableOverscan && !parent.crop"}}
}
Output {
name Output
xpos -638
ypos 898
}
end_group
set N39bc9600 [stack 0]
push $N39bc9d00
Merge2 {
inputs 2
operation plus
name Plus1
xpos 596
ypos 1315
}
add_layer {incandescent incandescent.red temp.green temp.blue}
Shuffle2 {
fromInput1 {{0} B}
out1 incandescent
fromInput2 {{0} B}
mappings "3 rgba.red 0 0 incandescent.red 0 0 rgba.green 0 1 temp.green 0 1 rgba.blue 0 2 temp.blue 0 2"
name Shuffle1
label "\[value in1]"
xpos -83
ypos 1462
}
push $N39bc9600
push $N39bc9600
add_layer {LS_Incandecent_glow LS_Incandecent_glow.red LS_Incandecent_glow.green LS_Incandecent_glow.blue LS_Incandecent_glow.alpha}
AddChannels {
channels LS_Incandecent_glow
name AddChannels4
xpos -108
ypos 1339
}
push $N773f8800
add_layer {LS_Incandecent_strips LS_Incandecent_strips.red LS_Incandecent_Windows.green LS_Incandecent_Windows.blue LS_Incandecent_Bulbs.alpha}
AddChannels {
channels LS_Incandecent_strips
name AddChannels3
xpos -111
ypos 1180
}
set N39ae2b00 [stack 0]
Dot {
name Dot136
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -77
ypos 1268
}
push $N39ae2b00
push $N783fb900
add_layer {LS_Incandecent_window LS_Incandecent_window.red LS_Incandecent_window.green LS_Incandecent_window.blue LS_Incandecent_window.alpha}
AddChannels {
channels LS_Incandecent_window
name AddChannels2
xpos -111
ypos 963
}
set N39ae1600 [stack 0]
Dot {
name Dot130
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -77
ypos 1051
}
push $N39ae1600
push $N39bca400
add_layer {LS_Incandecent_bulb LS_Incandecent_bulb.red LS_Incandecent_bulb.green LS_Incandecent_bulb.blue LS_Incandecent_bulb.alpha}
AddChannels {
channels LS_Incandecent_bulb
name AddChannels1
xpos -114
ypos 704
}
set N39ae0100 [stack 0]
Dot {
name Dot126
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -80
ypos 792
}
push $N39ae0100
push $N673f8f00
Dot {
name Dot116
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -194
ypos 400
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
channels LS_Incandecent_bulb
name Copy2
xpos -228
ypos 698
}
Merge2 {
inputs 2
name Merge21
xpos -228
ypos 788
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
channels LS_Incandecent_window
name Copy4
xpos -225
ypos 957
}
Merge2 {
inputs 2
name Merge23
xpos -225
ypos 1047
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
channels LS_Incandecent_strips
name Copy6
xpos -225
ypos 1174
}
Merge2 {
inputs 2
name Merge24
xpos -225
ypos 1264
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
channels LS_Incandecent_glow
name Copy1
xpos -222
ypos 1333
}
Merge2 {
inputs 2
operation plus
name Plus
xpos -225
ypos 1406
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
channels incandescent
name Copy5
xpos -225
ypos 1493
}
Merge2 {
operation plus
name Plus2
xpos -228
ypos 1566
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy3
xpos -236
ypos 1616
}
Output {
name Output1
xpos -236
ypos 1772
}
end_group
Unpremult {
channels all
name Unpremult7
selected true
xpos 8210
ypos -7759
}
Group {
name GradeAOV17
help "Colour correct the CG beauty using the secondary(aov) passes.with a subtractive process.\nto be used when:\n * the CG is good and only a few passes need adjusting\n * the secondaries don't add up to the beauty\n * rgb saturation (luminance mix on)\n * rgb contrast (with pivot)\n * matting with external mask input or main channel input or both with an operation.\n The order of correction is: Grade Node>Contrast Node>Saturation."
tile_color 0x8aa7dbff
label " \[value in]"
selected true
xpos 8210
ypos -7693
addUserKnob {20 User l GradeAOV}
addUserKnob {41 in l "Channel to use" T Shuffle5345.in}
addUserKnob {41 AlsoGradeChannel l "Also Grade Channel" t "as well as grading the beauty bake the grade into the selected channel" -STARTLINE T ShuffleCopy1544235.AlsoGradeChannel}
addUserKnob {41 solo T Switch3.solo}
addUserKnob {41 mute -STARTLINE T Switch3.mute}
addUserKnob {41 contact -STARTLINE T Switch3.contact}
addUserKnob {26 spacetxt l "                                                                                         " -STARTLINE T " "}
addUserKnob {22 NodeExpCopy l "Node Exp Copy" -STARTLINE T "knobsList = \[\"blackpoint\", \"whitepoint\", \"black\", \"white\", \"multiply\", \"add\", \"gamma\", \"reverse\", \"black_clamp\", \"white_clamp\", \"enable_mix_luminance\", \"mix_luminance\", \"value\", \"grey\", \"saturation\",\n \"enable_mix_luminance_1\", \"mix_luminance_1\", \"alpha\", \"mixBlend\"]\nnukescripts.clear_selection_recursive()\nn = nuke.thisNode()\nn\['selected'].setValue(True)\nwith nuke.root():\n nuke.nodeCopy(\"%clipboard%\")\n nuke.nodePaste(\"%clipboard%\")\n new_node = nuke.selectedNode()\n\n for j in new_node.knobs():\n\n  if j in  knobsList:\n   if isinstance(new_node.knob(j), nuke.Array_Knob):\n     new_node\[j].setSingleValue(False)\n   new_node\[j].setExpression( n.name() + '.' + j )\n\n\n"}
addUserKnob {26 ""}
addUserKnob {41 blackpoint T Grade273535.blackpoint}
addUserKnob {41 whitepoint T Grade273535.whitepoint}
addUserKnob {41 black l lift T Grade273535.black}
addUserKnob {41 white l gain T Grade273535.white}
addUserKnob {41 multiply T Grade273535.multiply}
addUserKnob {41 add l offset T Grade273535.add}
addUserKnob {41 gamma T Grade273535.gamma}
addUserKnob {41 reverse T Grade273535.reverse}
addUserKnob {41 black_clamp l "black clamp" -STARTLINE T Grade273535.black_clamp}
addUserKnob {41 white_clamp l "white clamp" -STARTLINE T Grade273535.white_clamp}
addUserKnob {26 text2 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance l "" -STARTLINE T Grade273535.enable_mix_luminance}
addUserKnob {41 mix_luminance l "" -STARTLINE T Grade273535.mix_luminance}
addUserKnob {26 "" l "  "}
addUserKnob {41 value l Contrast t " " T contrast.value}
addUserKnob {41 grey T contrast.grey}
addUserKnob {41 saturation T ColorCorrect6.saturation}
addUserKnob {26 text3 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance_1 l "" -STARTLINE T ColorCorrect6.enable_mix_luminance}
addUserKnob {41 mix_luminance_1 l "" -STARTLINE T ColorCorrect6.mix_luminance}
addUserKnob {26 ""}
addUserKnob {41 maskChannel l "mask channel" t "if the mask input is unplugged then the input channel can be used" T Keymix3.maskChannel}
addUserKnob {41 invertMask l invert -STARTLINE T Keymix3.invertMask}
addUserKnob {26 ""}
addUserKnob {41 alpha l "(un)premult by" T Unpremult13535.alpha}
addUserKnob {41 mixBlend l mix T Blend1.mixBlend}
addUserKnob {20 Info}
addUserKnob {22 documentation l " Documentation / Feedback " T "import webbrowser\nwebbrowser.open(\"http://opennuke.github.io/gradeAov_nkV/\")" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {26 version l version: T v1.2}
addUserKnob {26 created l created: T "1/1/2015 by <a href=\\'http://movingimagearts.com'> Rafal Kaniewski</a>"}
addUserKnob {26 modified l "modified: " T "01/10/2016 :update to fix back clamp by Rafal_Kan\n2017/12/19 :v1: forked, renamed, premult per channel, colourspaceShift\n2018/01/01: added copyExpNode and solo/mute"}
addUserKnob {26 source l source: T "<a href='https://github.com/vfxwiki/gradeAOV/'> Github.com</a>"}
addUserKnob {26 licence l licence: T "<a href=\"https://github.com/openNuke/toolset/blob/master/LICENCE\">READ ME</a>"}
}
Input {
inputs 0
name Input
xpos -220
ypos -721
}
set N39a94100 [stack 0]
Dot {
name Dot8
xpos -995
ypos -718
}
Dot {
name Dot5
xpos -995
ypos 105
}
set N39a5f200 [stack 0]
Dot {
name Dot9
xpos -995
ypos 217
}
LayerContactSheet {
width {{width*6}}
height {{height*6}}
showLayerNames true
name LayerContactSheet1
xpos -632
ypos 213
}
push $N39a94100
Dot {
name Dot1
xpos -186
ypos -633
}
set N39a5dd00 [stack 0]
Dot {
name Dot27
xpos -457
ypos -567
}
set N39a5d600 [stack 0]
Dot {
name Dot26
xpos -646
ypos -567
}
Shuffle {
in LS_sun_LGT_all
in2 alpha
alpha red2
name Shuffle5345
xpos -680
ypos -533
}
Premult {
name Premult1
xpos -680
ypos -507
}
set N39a5c100 [stack 0]
push $N39a5d600
Merge2 {
inputs 2
operation from
Achannels rgb
Bchannels rgb
output rgb
name From
xpos -491
ypos -507
}
Dot {
name Dot15
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -457
ypos -422
}
set N3a3e3200 [stack 0]
Dot {
name Dot12
xpos -922
ypos -422
}
Dot {
name Dot14
xpos -922
ypos 172
}
push $N39a5c100
Unpremult {
alpha -rgba.alpha
name Unpremult13535
xpos -680
ypos -469
disable {{!alpha}}
addUserKnob {20 User}
}
Grade {
channels all
white {1.025 1 0.975 1}
white_panelDropped true
black_clamp false
name Grade273535
xpos -680
ypos -380
addUserKnob {20 User}
addUserKnob {18 exposure R -1 1}
exposure {{multiply==0|white==0|multiply==0?0:log10(multiply)/log10(2)+log10(white)/log10(2)}}
addUserKnob {6 exposure_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
Expression {
expr0 "pow(r/grey, value+1)*grey"
expr1 "pow(g/grey, value+1)*grey"
expr2 "pow(b/grey, value+1)*grey"
name contrast
xpos -680
ypos -322
addUserKnob {20 User}
addUserKnob {7 grey}
grey 0.18
addUserKnob {18 value R -1 1}
value {0 0 0}
addUserKnob {6 value_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
ColorCorrect {
channels all
saturation 0.64
enable_mix_luminance false
name ColorCorrect6
xpos -680
ypos -273
}
set N3a3d0800 [stack 0]
Dot {
name Dot4
xpos -833
ypos -263
}
Dot {
name Dot7
xpos -833
ypos 157
}
Dot {
name Dot10
xpos -403
ypos 186
}
Input {
inputs 0
name mask
label mask
xpos 65
ypos -760
number 1
}
Dot {
name Dot13
xpos 99
ypos 105
}
push $N39a5f200
Dot {
name Dot11
xpos -435
ypos 105
}
set N3a3a4f00 [stack 0]
Switch {
inputs 2
which {{"\[exists parent.input1]"}}
name Switch1
xpos -177
ypos 101
disable {{"!\[exists parent.input1]"}}
}
Invert {
name Invert1
xpos -177
ypos 127
}
push $N3a3a4f00
push $N3a3d0800
Dot {
name Dot6
xpos -646
ypos 39
}
push $N39a5dd00
Dot {
name Dot2
xpos -186
ypos -321
}
Dot {
name Dot3
xpos -284
ypos -321
}
push $N3a3d0800
push $N3a3e3200
Clamp {
channels rgb
minimum_enable {{parent.Grade273535.black_clamp}}
maximum 1e+14
maximum_enable {{parent.Grade273535.white_clamp}}
name Clamp135345
xpos -491
ypos -374
}
Merge2 {
inputs 2
operation plus
Achannels rgb
Bchannels rgb
output rgb
name Merge34
xpos -491
ypos -267
}
Premult {
alpha {{{Unpremult1.alpha}}}
name Premult435345345
xpos -487
ypos -142
disable {{Unpremult13535.disable}}
}
Blend {
inputs 2
channels rgb
weight0 {{mixBlend}}
weight1 {{1-weight0}}
name Blend1
xpos -318
ypos -142
addUserKnob {20 User}
addUserKnob {7 mixBlend}
mixBlend 1
}
ShuffleCopy {
inputs 2
in {{{Shuffle.in}}}
alpha alpha2
black red
white green
red2 blue
out2 {{{Shuffle.in}}}
name ShuffleCopy1544235
xpos -318
ypos 35
disable {{!AlsoGradeChannel}}
addUserKnob {20 User}
addUserKnob {6 AlsoGradeChannel l "Also Grade Channel" +STARTLINE}
AlsoGradeChannel true
}
Keymix {
inputs 3
channels rgb
maskChannel -rgba.alpha
name Keymix3
xpos -318
ypos 161
disable {{!maskChannel}}
}
Switch {
inputs 4
which {{contact?3:mute?2:solo?1:0}}
name Switch3
xpos -318
ypos 196
addUserKnob {20 User}
addUserKnob {4 output M {"rgb graded by channel" "preview channel (solo)" "preview without (mute)" "channel contact sheet" "" "" "" "" ""}}
output "preview channel (solo)"
addUserKnob {6 solo +STARTLINE}
addUserKnob {6 mute -STARTLINE}
addUserKnob {6 contact -STARTLINE}
}
Output {
name Output1
xpos -318
ypos 385
}
end_group
Group {
name GradeAOV18
help "Colour correct the CG beauty using the secondary(aov) passes.with a subtractive process.\nto be used when:\n * the CG is good and only a few passes need adjusting\n * the secondaries don't add up to the beauty\n * rgb saturation (luminance mix on)\n * rgb contrast (with pivot)\n * matting with external mask input or main channel input or both with an operation.\n The order of correction is: Grade Node>Contrast Node>Saturation."
tile_color 0x8aa7dbff
label " \[value in]"
selected true
xpos 8210
ypos -7634
addUserKnob {20 User l GradeAOV}
addUserKnob {41 in l "Channel to use" T Shuffle5345.in}
addUserKnob {41 AlsoGradeChannel l "Also Grade Channel" t "as well as grading the beauty bake the grade into the selected channel" -STARTLINE T ShuffleCopy1544235.AlsoGradeChannel}
addUserKnob {41 solo T Switch3.solo}
addUserKnob {41 mute -STARTLINE T Switch3.mute}
addUserKnob {41 contact -STARTLINE T Switch3.contact}
addUserKnob {26 spacetxt l "                                                                                         " -STARTLINE T " "}
addUserKnob {22 NodeExpCopy l "Node Exp Copy" -STARTLINE T "knobsList = \[\"blackpoint\", \"whitepoint\", \"black\", \"white\", \"multiply\", \"add\", \"gamma\", \"reverse\", \"black_clamp\", \"white_clamp\", \"enable_mix_luminance\", \"mix_luminance\", \"value\", \"grey\", \"saturation\",\n \"enable_mix_luminance_1\", \"mix_luminance_1\", \"alpha\", \"mixBlend\"]\nnukescripts.clear_selection_recursive()\nn = nuke.thisNode()\nn\['selected'].setValue(True)\nwith nuke.root():\n nuke.nodeCopy(\"%clipboard%\")\n nuke.nodePaste(\"%clipboard%\")\n new_node = nuke.selectedNode()\n\n for j in new_node.knobs():\n\n  if j in  knobsList:\n   if isinstance(new_node.knob(j), nuke.Array_Knob):\n     new_node\[j].setSingleValue(False)\n   new_node\[j].setExpression( n.name() + '.' + j )\n\n\n"}
addUserKnob {26 ""}
addUserKnob {41 blackpoint T Grade273535.blackpoint}
addUserKnob {41 whitepoint T Grade273535.whitepoint}
addUserKnob {41 black l lift T Grade273535.black}
addUserKnob {41 white l gain T Grade273535.white}
addUserKnob {41 multiply T Grade273535.multiply}
addUserKnob {41 add l offset T Grade273535.add}
addUserKnob {41 gamma T Grade273535.gamma}
addUserKnob {41 reverse T Grade273535.reverse}
addUserKnob {41 black_clamp l "black clamp" -STARTLINE T Grade273535.black_clamp}
addUserKnob {41 white_clamp l "white clamp" -STARTLINE T Grade273535.white_clamp}
addUserKnob {26 text2 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance l "" -STARTLINE T Grade273535.enable_mix_luminance}
addUserKnob {41 mix_luminance l "" -STARTLINE T Grade273535.mix_luminance}
addUserKnob {26 "" l "  "}
addUserKnob {41 value l Contrast t " " T contrast.value}
addUserKnob {41 grey T contrast.grey}
addUserKnob {41 saturation T ColorCorrect6.saturation}
addUserKnob {26 text3 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance_1 l "" -STARTLINE T ColorCorrect6.enable_mix_luminance}
addUserKnob {41 mix_luminance_1 l "" -STARTLINE T ColorCorrect6.mix_luminance}
addUserKnob {26 ""}
addUserKnob {41 maskChannel l "mask channel" t "if the mask input is unplugged then the input channel can be used" T Keymix3.maskChannel}
addUserKnob {41 invertMask l invert -STARTLINE T Keymix3.invertMask}
addUserKnob {26 ""}
addUserKnob {41 alpha l "(un)premult by" T Unpremult13535.alpha}
addUserKnob {41 mixBlend l mix T Blend1.mixBlend}
addUserKnob {20 Info}
addUserKnob {22 documentation l " Documentation / Feedback " T "import webbrowser\nwebbrowser.open(\"http://opennuke.github.io/gradeAov_nkV/\")" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {26 version l version: T v1.2}
addUserKnob {26 created l created: T "1/1/2015 by <a href=\\'http://movingimagearts.com'> Rafal Kaniewski</a>"}
addUserKnob {26 modified l "modified: " T "01/10/2016 :update to fix back clamp by Rafal_Kan\n2017/12/19 :v1: forked, renamed, premult per channel, colourspaceShift\n2018/01/01: added copyExpNode and solo/mute"}
addUserKnob {26 source l source: T "<a href='https://github.com/vfxwiki/gradeAOV/'> Github.com</a>"}
addUserKnob {26 licence l licence: T "<a href=\"https://github.com/openNuke/toolset/blob/master/LICENCE\">READ ME</a>"}
}
Input {
inputs 0
name Input
xpos -220
ypos -721
}
set N3a368800 [stack 0]
Dot {
name Dot8
xpos -995
ypos -718
}
Dot {
name Dot5
xpos -995
ypos 105
}
set N3a33b900 [stack 0]
Dot {
name Dot9
xpos -995
ypos 217
}
LayerContactSheet {
width {{width*6}}
height {{height*6}}
showLayerNames true
name LayerContactSheet1
xpos -632
ypos 213
}
push $N3a368800
Dot {
name Dot1
xpos -186
ypos -633
}
set N3a33a400 [stack 0]
Dot {
name Dot27
xpos -457
ypos -567
}
set N3a339d00 [stack 0]
Dot {
name Dot26
xpos -646
ypos -567
}
Shuffle {
in LS_env_LGT_all
in2 alpha
alpha red2
name Shuffle5345
xpos -680
ypos -533
}
Premult {
name Premult1
xpos -680
ypos -507
}
set N3a338800 [stack 0]
push $N3a339d00
Merge2 {
inputs 2
operation from
Achannels rgb
Bchannels rgb
output rgb
name From
xpos -491
ypos -507
}
Dot {
name Dot15
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -457
ypos -422
}
set N3a31b900 [stack 0]
Dot {
name Dot12
xpos -922
ypos -422
}
Dot {
name Dot14
xpos -922
ypos 172
}
push $N3a338800
Unpremult {
alpha -rgba.alpha
name Unpremult13535
xpos -680
ypos -469
disable {{!alpha}}
addUserKnob {20 User}
}
Grade {
channels all
white {0.99 1 1.01 1}
white_panelDropped true
multiply 1.35
black_clamp false
name Grade273535
xpos -680
ypos -380
addUserKnob {20 User}
addUserKnob {18 exposure R -1 1}
exposure {{multiply==0|white==0|multiply==0?0:log10(multiply)/log10(2)+log10(white)/log10(2)}}
addUserKnob {6 exposure_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
Expression {
expr0 "pow(r/grey, value+1)*grey"
expr1 "pow(g/grey, value+1)*grey"
expr2 "pow(b/grey, value+1)*grey"
name contrast
xpos -680
ypos -322
addUserKnob {20 User}
addUserKnob {7 grey}
grey 0.18
addUserKnob {18 value R -1 1}
value {0 0 0}
addUserKnob {6 value_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
ColorCorrect {
channels all
enable_mix_luminance false
name ColorCorrect6
xpos -680
ypos -273
}
set N3a308f00 [stack 0]
Dot {
name Dot4
xpos -833
ypos -263
}
Dot {
name Dot7
xpos -833
ypos 157
}
Dot {
name Dot10
xpos -403
ypos 186
}
Input {
inputs 0
name mask
label mask
xpos 65
ypos -760
number 1
}
Dot {
name Dot13
xpos 99
ypos 105
}
push $N3a33b900
Dot {
name Dot11
xpos -435
ypos 105
}
set N3a2d5600 [stack 0]
Switch {
inputs 2
which {{"\[exists parent.input1]"}}
name Switch1
xpos -177
ypos 101
disable {{"!\[exists parent.input1]"}}
}
Invert {
name Invert1
xpos -177
ypos 127
}
push $N3a2d5600
push $N3a308f00
Dot {
name Dot6
xpos -646
ypos 39
}
push $N3a33a400
Dot {
name Dot2
xpos -186
ypos -321
}
Dot {
name Dot3
xpos -284
ypos -321
}
push $N3a308f00
push $N3a31b900
Clamp {
channels rgb
minimum_enable {{parent.Grade273535.black_clamp}}
maximum 1e+14
maximum_enable {{parent.Grade273535.white_clamp}}
name Clamp135345
xpos -491
ypos -374
}
Merge2 {
inputs 2
operation plus
Achannels rgb
Bchannels rgb
output rgb
name Merge34
xpos -491
ypos -267
}
Premult {
alpha {{{Unpremult1.alpha}}}
name Premult435345345
xpos -487
ypos -142
disable {{Unpremult13535.disable}}
}
Blend {
inputs 2
channels rgb
weight0 {{mixBlend}}
weight1 {{1-weight0}}
name Blend1
xpos -318
ypos -142
addUserKnob {20 User}
addUserKnob {7 mixBlend}
mixBlend 1
}
ShuffleCopy {
inputs 2
in {{{Shuffle.in}}}
alpha alpha2
black red
white green
red2 blue
out2 {{{Shuffle.in}}}
name ShuffleCopy1544235
xpos -318
ypos 35
disable {{!AlsoGradeChannel}}
addUserKnob {20 User}
addUserKnob {6 AlsoGradeChannel l "Also Grade Channel" +STARTLINE}
AlsoGradeChannel true
}
Keymix {
inputs 3
channels rgb
maskChannel -rgba.alpha
name Keymix3
xpos -318
ypos 161
disable {{!maskChannel}}
}
Switch {
inputs 4
which {{contact?3:mute?2:solo?1:0}}
name Switch3
xpos -318
ypos 196
addUserKnob {20 User}
addUserKnob {4 output M {"rgb graded by channel" "preview channel (solo)" "preview without (mute)" "channel contact sheet" "" "" "" "" ""}}
output "preview channel (solo)"
addUserKnob {6 solo +STARTLINE}
addUserKnob {6 mute -STARTLINE}
addUserKnob {6 contact -STARTLINE}
}
Output {
name Output1
xpos -318
ypos 385
}
end_group
Group {
inputs 2
name GradeAOV19
help "Colour correct the CG beauty using the secondary(aov) passes.with a subtractive process.\nto be used when:\n * the CG is good and only a few passes need adjusting\n * the secondaries don't add up to the beauty\n * rgb saturation (luminance mix on)\n * rgb contrast (with pivot)\n * matting with external mask input or main channel input or both with an operation.\n The order of correction is: Grade Node>Contrast Node>Saturation."
tile_color 0x8aa7dbff
label " \[value in]"
selected true
xpos 8210
ypos -7553
addUserKnob {20 User l GradeAOV}
addUserKnob {41 in l "Channel to use" T Shuffle5345.in}
addUserKnob {41 AlsoGradeChannel l "Also Grade Channel" t "as well as grading the beauty bake the grade into the selected channel" -STARTLINE T ShuffleCopy1544235.AlsoGradeChannel}
addUserKnob {41 solo T Switch3.solo}
addUserKnob {41 mute -STARTLINE T Switch3.mute}
addUserKnob {41 contact -STARTLINE T Switch3.contact}
addUserKnob {26 spacetxt l "                                                                                         " -STARTLINE T " "}
addUserKnob {22 NodeExpCopy l "Node Exp Copy" -STARTLINE T "knobsList = \[\"blackpoint\", \"whitepoint\", \"black\", \"white\", \"multiply\", \"add\", \"gamma\", \"reverse\", \"black_clamp\", \"white_clamp\", \"enable_mix_luminance\", \"mix_luminance\", \"value\", \"grey\", \"saturation\",\n \"enable_mix_luminance_1\", \"mix_luminance_1\", \"alpha\", \"mixBlend\"]\nnukescripts.clear_selection_recursive()\nn = nuke.thisNode()\nn\['selected'].setValue(True)\nwith nuke.root():\n nuke.nodeCopy(\"%clipboard%\")\n nuke.nodePaste(\"%clipboard%\")\n new_node = nuke.selectedNode()\n\n for j in new_node.knobs():\n\n  if j in  knobsList:\n   if isinstance(new_node.knob(j), nuke.Array_Knob):\n     new_node\[j].setSingleValue(False)\n   new_node\[j].setExpression( n.name() + '.' + j )\n\n\n"}
addUserKnob {26 ""}
addUserKnob {41 blackpoint T Grade273535.blackpoint}
addUserKnob {41 whitepoint T Grade273535.whitepoint}
addUserKnob {41 black l lift T Grade273535.black}
addUserKnob {41 white l gain T Grade273535.white}
addUserKnob {41 multiply T Grade273535.multiply}
addUserKnob {41 add l offset T Grade273535.add}
addUserKnob {41 gamma T Grade273535.gamma}
addUserKnob {41 reverse T Grade273535.reverse}
addUserKnob {41 black_clamp l "black clamp" -STARTLINE T Grade273535.black_clamp}
addUserKnob {41 white_clamp l "white clamp" -STARTLINE T Grade273535.white_clamp}
addUserKnob {26 text2 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance l "" -STARTLINE T Grade273535.enable_mix_luminance}
addUserKnob {41 mix_luminance l "" -STARTLINE T Grade273535.mix_luminance}
addUserKnob {26 "" l "  "}
addUserKnob {41 value l Contrast t " " T contrast.value}
addUserKnob {41 grey T contrast.grey}
addUserKnob {41 saturation T ColorCorrect6.saturation}
addUserKnob {26 text3 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance_1 l "" -STARTLINE T ColorCorrect6.enable_mix_luminance}
addUserKnob {41 mix_luminance_1 l "" -STARTLINE T ColorCorrect6.mix_luminance}
addUserKnob {26 ""}
addUserKnob {41 maskChannel l "mask channel" t "if the mask input is unplugged then the input channel can be used" T Keymix3.maskChannel}
addUserKnob {41 invertMask l invert -STARTLINE T Keymix3.invertMask}
addUserKnob {26 ""}
addUserKnob {41 alpha l "(un)premult by" T Unpremult13535.alpha}
addUserKnob {41 mixBlend l mix T Blend1.mixBlend}
addUserKnob {20 Info}
addUserKnob {22 documentation l " Documentation / Feedback " T "import webbrowser\nwebbrowser.open(\"http://opennuke.github.io/gradeAov_nkV/\")" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {26 version l version: T v1.2}
addUserKnob {26 created l created: T "1/1/2015 by <a href=\\'http://movingimagearts.com'> Rafal Kaniewski</a>"}
addUserKnob {26 modified l "modified: " T "01/10/2016 :update to fix back clamp by Rafal_Kan\n2017/12/19 :v1: forked, renamed, premult per channel, colourspaceShift\n2018/01/01: added copyExpNode and solo/mute"}
addUserKnob {26 source l source: T "<a href='https://github.com/vfxwiki/gradeAOV/'> Github.com</a>"}
addUserKnob {26 licence l licence: T "<a href=\"https://github.com/openNuke/toolset/blob/master/LICENCE\">READ ME</a>"}
}
Input {
inputs 0
name Input
xpos -220
ypos -721
}
set N3a29cf00 [stack 0]
Dot {
name Dot8
xpos -995
ypos -718
}
Dot {
name Dot5
xpos -995
ypos 105
}
set N3a29c100 [stack 0]
Dot {
name Dot9
xpos -995
ypos 217
}
LayerContactSheet {
width {{width*6}}
height {{height*6}}
showLayerNames true
name LayerContactSheet1
xpos -632
ypos 213
}
push $N3a29cf00
Dot {
name Dot1
xpos -186
ypos -633
}
set N3a26eb00 [stack 0]
Dot {
name Dot27
xpos -457
ypos -567
}
set N3a26e400 [stack 0]
Dot {
name Dot26
xpos -646
ypos -567
}
Shuffle {
in S_direct_reflect
in2 alpha
alpha red2
name Shuffle5345
xpos -680
ypos -533
}
Premult {
name Premult1
xpos -680
ypos -507
}
set N3a26cf00 [stack 0]
push $N3a26e400
Merge2 {
inputs 2
operation from
Achannels rgb
Bchannels rgb
output rgb
name From
xpos -491
ypos -507
}
Dot {
name Dot15
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -457
ypos -422
}
set N3a26c100 [stack 0]
Dot {
name Dot12
xpos -922
ypos -422
}
Dot {
name Dot14
xpos -922
ypos 172
}
push $N3a26cf00
Unpremult {
alpha -rgba.alpha
name Unpremult13535
xpos -680
ypos -469
disable {{!alpha}}
addUserKnob {20 User}
}
Grade {
channels all
white {1.075 1 0.925 1}
white_panelDropped true
black_clamp false
name Grade273535
xpos -680
ypos -380
addUserKnob {20 User}
addUserKnob {18 exposure R -1 1}
exposure {{multiply==0|white==0|multiply==0?0:log10(multiply)/log10(2)+log10(white)/log10(2)}}
addUserKnob {6 exposure_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
Expression {
expr0 "pow(r/grey, value+1)*grey"
expr1 "pow(g/grey, value+1)*grey"
expr2 "pow(b/grey, value+1)*grey"
name contrast
xpos -680
ypos -322
addUserKnob {20 User}
addUserKnob {7 grey}
grey 0.18
addUserKnob {18 value R -1 1}
value {0 0 0}
addUserKnob {6 value_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
ColorCorrect {
channels all
enable_mix_luminance false
name ColorCorrect6
xpos -680
ypos -273
}
set N3a239600 [stack 0]
Dot {
name Dot4
xpos -833
ypos -263
}
Dot {
name Dot7
xpos -833
ypos 157
}
Dot {
name Dot10
xpos -403
ypos 186
}
Input {
inputs 0
name mask
label mask
xpos 65
ypos -760
number 1
}
Dot {
name Dot13
xpos 99
ypos 105
}
push $N3a29c100
Dot {
name Dot11
xpos -435
ypos 105
}
set N3a20dd00 [stack 0]
Switch {
inputs 2
which {{"\[exists parent.input1]"}}
name Switch1
xpos -177
ypos 101
disable {{"!\[exists parent.input1]"}}
}
Invert {
name Invert1
xpos -177
ypos 127
}
push $N3a20dd00
push $N3a239600
Dot {
name Dot6
xpos -646
ypos 39
}
push $N3a26eb00
Dot {
name Dot2
xpos -186
ypos -321
}
Dot {
name Dot3
xpos -284
ypos -321
}
push $N3a239600
push $N3a26c100
Clamp {
channels rgb
minimum_enable {{parent.Grade273535.black_clamp}}
maximum 1e+14
maximum_enable {{parent.Grade273535.white_clamp}}
name Clamp135345
xpos -491
ypos -374
}
Merge2 {
inputs 2
operation plus
Achannels rgb
Bchannels rgb
output rgb
name Merge34
xpos -491
ypos -267
}
Premult {
alpha {{{Unpremult1.alpha}}}
name Premult435345345
xpos -487
ypos -142
disable {{Unpremult13535.disable}}
}
Blend {
inputs 2
channels rgb
weight0 {{mixBlend}}
weight1 {{1-weight0}}
name Blend1
xpos -318
ypos -142
addUserKnob {20 User}
addUserKnob {7 mixBlend}
mixBlend 1
}
ShuffleCopy {
inputs 2
in {{{Shuffle.in}}}
alpha alpha2
black red
white green
red2 blue
out2 {{{Shuffle.in}}}
name ShuffleCopy1544235
xpos -318
ypos 35
disable {{!AlsoGradeChannel}}
addUserKnob {20 User}
addUserKnob {6 AlsoGradeChannel l "Also Grade Channel" +STARTLINE}
AlsoGradeChannel true
}
Keymix {
inputs 3
channels rgb
name Keymix3
xpos -318
ypos 161
disable {{!maskChannel}}
}
Switch {
inputs 4
which {{contact?3:mute?2:solo?1:0}}
name Switch3
xpos -318
ypos 196
addUserKnob {20 User}
addUserKnob {4 output M {"rgb graded by channel" "preview channel (solo)" "preview without (mute)" "channel contact sheet" "" "" "" "" ""}}
output "preview channel (solo)"
addUserKnob {6 solo +STARTLINE}
addUserKnob {6 mute -STARTLINE}
addUserKnob {6 contact -STARTLINE}
}
Output {
name Output1
xpos -318
ypos 385
}
end_group
Group {
name GradeAOV20
help "Colour correct the CG beauty using the secondary(aov) passes.with a subtractive process.\nto be used when:\n * the CG is good and only a few passes need adjusting\n * the secondaries don't add up to the beauty\n * rgb saturation (luminance mix on)\n * rgb contrast (with pivot)\n * matting with external mask input or main channel input or both with an operation.\n The order of correction is: Grade Node>Contrast Node>Saturation."
tile_color 0x8aa7dbff
label " \[value in]"
selected true
xpos 8210
ypos -7486
addUserKnob {20 User l GradeAOV}
addUserKnob {41 in l "Channel to use" T Shuffle5345.in}
addUserKnob {41 AlsoGradeChannel l "Also Grade Channel" t "as well as grading the beauty bake the grade into the selected channel" -STARTLINE T ShuffleCopy1544235.AlsoGradeChannel}
addUserKnob {41 solo T Switch3.solo}
addUserKnob {41 mute -STARTLINE T Switch3.mute}
addUserKnob {41 contact -STARTLINE T Switch3.contact}
addUserKnob {26 spacetxt l "                                                                                         " -STARTLINE T " "}
addUserKnob {22 NodeExpCopy l "Node Exp Copy" -STARTLINE T "knobsList = \[\"blackpoint\", \"whitepoint\", \"black\", \"white\", \"multiply\", \"add\", \"gamma\", \"reverse\", \"black_clamp\", \"white_clamp\", \"enable_mix_luminance\", \"mix_luminance\", \"value\", \"grey\", \"saturation\",\n \"enable_mix_luminance_1\", \"mix_luminance_1\", \"alpha\", \"mixBlend\"]\nnukescripts.clear_selection_recursive()\nn = nuke.thisNode()\nn\['selected'].setValue(True)\nwith nuke.root():\n nuke.nodeCopy(\"%clipboard%\")\n nuke.nodePaste(\"%clipboard%\")\n new_node = nuke.selectedNode()\n\n for j in new_node.knobs():\n\n  if j in  knobsList:\n   if isinstance(new_node.knob(j), nuke.Array_Knob):\n     new_node\[j].setSingleValue(False)\n   new_node\[j].setExpression( n.name() + '.' + j )\n\n\n"}
addUserKnob {26 ""}
addUserKnob {41 blackpoint T Grade273535.blackpoint}
addUserKnob {41 whitepoint T Grade273535.whitepoint}
addUserKnob {41 black l lift T Grade273535.black}
addUserKnob {41 white l gain T Grade273535.white}
addUserKnob {41 multiply T Grade273535.multiply}
addUserKnob {41 add l offset T Grade273535.add}
addUserKnob {41 gamma T Grade273535.gamma}
addUserKnob {41 reverse T Grade273535.reverse}
addUserKnob {41 black_clamp l "black clamp" -STARTLINE T Grade273535.black_clamp}
addUserKnob {41 white_clamp l "white clamp" -STARTLINE T Grade273535.white_clamp}
addUserKnob {26 text2 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance l "" -STARTLINE T Grade273535.enable_mix_luminance}
addUserKnob {41 mix_luminance l "" -STARTLINE T Grade273535.mix_luminance}
addUserKnob {26 "" l "  "}
addUserKnob {41 value l Contrast t " " T contrast.value}
addUserKnob {41 grey T contrast.grey}
addUserKnob {41 saturation T ColorCorrect6.saturation}
addUserKnob {26 text3 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance_1 l "" -STARTLINE T ColorCorrect6.enable_mix_luminance}
addUserKnob {41 mix_luminance_1 l "" -STARTLINE T ColorCorrect6.mix_luminance}
addUserKnob {26 ""}
addUserKnob {41 maskChannel l "mask channel" t "if the mask input is unplugged then the input channel can be used" T Keymix3.maskChannel}
addUserKnob {41 invertMask l invert -STARTLINE T Keymix3.invertMask}
addUserKnob {26 ""}
addUserKnob {41 alpha l "(un)premult by" T Unpremult13535.alpha}
addUserKnob {41 mixBlend l mix T Blend1.mixBlend}
addUserKnob {20 Info}
addUserKnob {22 documentation l " Documentation / Feedback " T "import webbrowser\nwebbrowser.open(\"http://opennuke.github.io/gradeAov_nkV/\")" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {26 version l version: T v1.2}
addUserKnob {26 created l created: T "1/1/2015 by <a href=\\'http://movingimagearts.com'> Rafal Kaniewski</a>"}
addUserKnob {26 modified l "modified: " T "01/10/2016 :update to fix back clamp by Rafal_Kan\n2017/12/19 :v1: forked, renamed, premult per channel, colourspaceShift\n2018/01/01: added copyExpNode and solo/mute"}
addUserKnob {26 source l source: T "<a href='https://github.com/vfxwiki/gradeAOV/'> Github.com</a>"}
addUserKnob {26 licence l licence: T "<a href=\"https://github.com/openNuke/toolset/blob/master/LICENCE\">READ ME</a>"}
}
Input {
inputs 0
name Input
xpos -220
ypos -721
}
set N3a1cd600 [stack 0]
Dot {
name Dot8
xpos -995
ypos -718
}
Dot {
name Dot5
xpos -995
ypos 105
}
set N3a1cc800 [stack 0]
Dot {
name Dot9
xpos -995
ypos 217
}
LayerContactSheet {
width {{width*6}}
height {{height*6}}
showLayerNames true
name LayerContactSheet1
xpos -632
ypos 213
}
push $N3a1cd600
Dot {
name Dot1
xpos -186
ypos -633
}
set N3a1b3200 [stack 0]
Dot {
name Dot27
xpos -457
ypos -567
}
set N3a1b2b00 [stack 0]
Dot {
name Dot26
xpos -646
ypos -567
}
Shuffle {
in rgb
in2 alpha
alpha red2
name Shuffle5345
xpos -680
ypos -533
}
Premult {
name Premult1
xpos -680
ypos -507
}
set N3a1b1600 [stack 0]
push $N3a1b2b00
Merge2 {
inputs 2
operation from
Achannels rgb
Bchannels rgb
output rgb
name From
xpos -491
ypos -507
}
Dot {
name Dot15
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -457
ypos -422
}
set N3a1b0800 [stack 0]
Dot {
name Dot12
xpos -922
ypos -422
}
Dot {
name Dot14
xpos -922
ypos 172
}
push $N3a1b1600
Unpremult {
alpha -rgba.alpha
name Unpremult13535
xpos -680
ypos -469
disable {{!alpha}}
addUserKnob {20 User}
}
Grade {
channels all
white_panelDropped true
multiply 1.5
gamma 1.1
black_clamp false
name Grade273535
xpos -680
ypos -380
addUserKnob {20 User}
addUserKnob {18 exposure R -1 1}
exposure {{multiply==0|white==0|multiply==0?0:log10(multiply)/log10(2)+log10(white)/log10(2)}}
addUserKnob {6 exposure_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
Expression {
expr0 "pow(r/grey, value+1)*grey"
expr1 "pow(g/grey, value+1)*grey"
expr2 "pow(b/grey, value+1)*grey"
name contrast
xpos -680
ypos -322
addUserKnob {20 User}
addUserKnob {7 grey}
grey 0.18
addUserKnob {18 value R -1 1}
value {0 0 0}
addUserKnob {6 value_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
ColorCorrect {
channels all
enable_mix_luminance false
name ColorCorrect6
xpos -680
ypos -273
}
set N3a181d00 [stack 0]
Dot {
name Dot4
xpos -833
ypos -263
}
Dot {
name Dot7
xpos -833
ypos 157
}
Dot {
name Dot10
xpos -403
ypos 186
}
Input {
inputs 0
name mask
label mask
xpos 65
ypos -760
number 1
}
Dot {
name Dot13
xpos 99
ypos 105
}
push $N3a1cc800
Dot {
name Dot11
xpos -435
ypos 105
}
set N3a15a400 [stack 0]
Switch {
inputs 2
which {{"\[exists parent.input1]"}}
name Switch1
xpos -177
ypos 101
disable {{"!\[exists parent.input1]"}}
}
Invert {
name Invert1
xpos -177
ypos 127
}
push $N3a15a400
push $N3a181d00
Dot {
name Dot6
xpos -646
ypos 39
}
push $N3a1b3200
Dot {
name Dot2
xpos -186
ypos -321
}
Dot {
name Dot3
xpos -284
ypos -321
}
push $N3a181d00
push $N3a1b0800
Clamp {
channels rgb
minimum_enable {{parent.Grade273535.black_clamp}}
maximum 1e+14
maximum_enable {{parent.Grade273535.white_clamp}}
name Clamp135345
xpos -491
ypos -374
}
Merge2 {
inputs 2
operation plus
Achannels rgb
Bchannels rgb
output rgb
name Merge34
xpos -491
ypos -267
}
Premult {
alpha {{{Unpremult1.alpha}}}
name Premult435345345
xpos -487
ypos -142
disable {{Unpremult13535.disable}}
}
Blend {
inputs 2
channels rgb
weight0 {{mixBlend}}
weight1 {{1-weight0}}
name Blend1
xpos -318
ypos -142
addUserKnob {20 User}
addUserKnob {7 mixBlend}
mixBlend 1
}
ShuffleCopy {
inputs 2
in {{{Shuffle.in}}}
alpha alpha2
black red
white green
red2 blue
out2 {{{Shuffle.in}}}
name ShuffleCopy1544235
xpos -318
ypos 35
disable {{!AlsoGradeChannel}}
addUserKnob {20 User}
addUserKnob {6 AlsoGradeChannel l "Also Grade Channel" +STARTLINE}
AlsoGradeChannel true
}
Keymix {
inputs 3
channels rgb
maskChannel -rgba.alpha
name Keymix3
xpos -318
ypos 161
disable {{!maskChannel}}
}
Switch {
inputs 4
which {{contact?3:mute?2:solo?1:0}}
name Switch3
xpos -318
ypos 196
addUserKnob {20 User}
addUserKnob {4 output M {"rgb graded by channel" "preview channel (solo)" "preview without (mute)" "channel contact sheet" "" "" "" "" ""}}
output "preview channel (solo)"
addUserKnob {6 solo +STARTLINE}
addUserKnob {6 mute -STARTLINE}
addUserKnob {6 contact -STARTLINE}
}
Output {
name Output1
xpos -318
ypos 385
}
end_group
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy12
selected true
xpos 8218
ypos -7425
}
Premult {
channels all
name Premult8
selected true
xpos 8218
ypos -7360
}
Copy {
inputs 2
from0 rgba.alpha
to0 -rgba.alpha
channels zDepth
name Copy13
selected true
xpos 8218
ypos -7304
}
Dot {
name Dot329
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 8244
ypos -6769
}
Dot {
name Dot330
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9378
ypos -6769
}
set N316ec800 [stack 0]
Dot {
name Dot331
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9377
ypos -6709
}
push $N316ec800
Read {
inputs 0
file_type exr
file /coppi/proj/thrg/ftrack/assets/s01e01/015-0300/img/thrg_s01e01_015-0300_amBridgeBTY_v002_beauty_acescg/thrg_s01e01_015-0300_amBridgeBTY_beauty_acescg_v002.%04d.exr
localizationPolicy on
format "2306 1622 0 0 2306 1622 1 "
first 1001
last 1237
origfirst 1001
origlast 1237
origset true
name amBridgeBTY_beauty_acescg
tile_color 0xe3634bff
selected true
xpos 8808
ypos -9309
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname beauty_acescg
addUserKnob {20 ftrack}
addUserKnob {1 componentId}
componentId cf9c3eca-4a47-4c28-a680-b9b35db598ba
addUserKnob {1 componentName}
componentName beauty_acescg
addUserKnob {1 assetVersionId}
assetVersionId 62ca5450-0781-4829-81be-6c4aa4f61520
addUserKnob {1 assetVersion}
assetVersion 2
addUserKnob {1 assetName}
assetName amBridgeBTY
addUserKnob {1 assetType}
assetType img
addUserKnob {4 versionType l "Version Type" M {latest stable pinned}}
versionType stable
}
Dot {
name Dot332
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 8842
ypos -9038
}
Group {
name Reformat_Overscan5
selected true
xpos 8808
ypos -8746
addUserKnob {20 User l Reformat_Overscan}
addUserKnob {41 format l "output format" T ReformatMASTER.format}
addUserKnob {41 filter T ReformatOverscanMASTER.filter}
addUserKnob {41 overscanPercent T ReformatOverscanMASTER.overscanPercent}
addUserKnob {20 info}
addUserKnob {26 version l ver: T "v1 rafal 10/02/2020"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust4
tile_color 0xaaaaaaff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 42
xpos -987
ypos -496
bdwidth 280
bdheight 332
z_order -92960
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "Flat plate res"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Black
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
Input {
inputs 0
name Input1
xpos -884
ypos -382
}
Reformat {
format {{{parent.parent.Reformat_OverscanMASTER.ReformatMASTER.format}}}
pbb true
name ReformatMASTER
xpos -884
ypos -342
}
Reformat {
type scale
scale {{overscanPercent==0?1:1-(1/overscanPercent)}}
resize none
filter impulse
pbb true
name ReformatOverscanMASTER
xpos -884
ypos -288
addUserKnob {20 User l percent}
addUserKnob {7 overscanPercent R 0 80}
overscanPercent {{parent.parent.Reformat_OverscanMASTER.ReformatOverscanMASTER.overscanPercent}}
}
Crop {
box {{-ceil(((input.height*((1-ReformatOverscanMASTER.scale)))*0.5))} {-ceil(((input.width*((1-ReformatOverscanMASTER.scale)))*0.5))} {ceil(input.width+((input.width*(1-ReformatOverscanMASTER.scale))*0.5))} {ceil(input.height+((input.height*(1-ReformatOverscanMASTER.scale))*0.5))}}
name CropOverscanMASTER
xpos -884
ypos -244
addUserKnob {20 User}
}
set N314bc100 [stack 0]
Output {
name Output1
xpos -884
ypos -144
}
push $N314bc100
Viewer {
frame_range 994-1161
fps 25
viewerProcess "sRGB (ACES)"
name Viewer1
xpos -624
ypos -303
}
end_group
Group {
name depthCombo5
selected true
xpos 8808
ypos -8679
addUserKnob {20 User l depthCombo}
addUserKnob {41 math l "input math" T Expression14.math}
addUserKnob {41 from0 l "in depth filtered" T Copyf.from0}
addUserKnob {41 from0_1 l "in depth ufiltered" T Copy.from0}
addUserKnob {41 to0 l output T Copyf1.to0}
addUserKnob {26 txt l output: T "camera =0 (arnold, vray) i.e. real/distance from camera"}
}
Input {
inputs 0
name Input1
xpos 1288
ypos 197
}
set N31492400 [stack 0]
AddChannels {
channels zDepth
name AddChannels1
xpos 895
ypos 227
}
Dot {
name Dot65
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 929
ypos 315
}
set N31490f00 [stack 0]
Expression {
channel0 alpha
expr0 alpha==1
name Expression13
xpos 1023
ypos 403
}
push $N31490f00
push $N31490f00
Multiply {
channels rgb
value 0
name Multiply1
xpos 826
ypos 358
}
set N31490100 [stack 0]
Copy {
inputs 2
from0 zDepth.filtered
to0 rgba.red
name Copy
xpos 901
ypos 426
}
push $N31490f00
Dot {
name Dot1
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 757
ypos 315
}
push $N31490100
Copy {
inputs 2
from0 zDepth.unfiltered
to0 rgba.red
name Copyf
xpos 764
ypos 426
}
Keymix {
inputs 3
channels {rgba.red -rgba.green -rgba.blue none}
invertMask true
name Keymix8
xpos 895
ypos 545
}
Expression {
temp_name0 recip
temp_expr0 1/r
expr0 r>0?recip==inf?0:recip:0
channel1 {-rgba.red -rgba.green -rgba.blue none}
channel2 {-rgba.red -rgba.green -rgba.blue none}
name Expression14
xpos 895
ypos 620
disable {{math}}
addUserKnob {20 User}
addUserKnob {4 math l "input math" M {"infinity = 0 (nuke, renderMan)" "camera = 0 (arnold, vray)"}}
math "camera = 0 (arnold, vray)"
}
push $N31492400
Copy {
inputs 2
from0 rgba.red
to0 zDepth.combo
name Copyf1
xpos 1288
ypos 614
}
Output {
name Output1
xpos 1288
ypos 784
}
end_group
Dot {
name Dot333
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 8842
ypos -7882
}
set N31468100 [stack 0]
Dot {
name Dot334
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9104
ypos -7882
}
Dot {
name Dot143
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9104
ypos -7674
}
set N2a7cc800 [stack 0]
Dot {
name Dot160
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9104
ypos -7429
}
set N617f5d00 [stack 0]
Dot {
name Dot167
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9104
ypos -7302
}
push $N617f5d00
push $N2a7cc800
Dot {
name Dot155
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9024
ypos -7674
}
Log2Lin {
operation lin2log
name Log2Lin7
selected true
xpos 8990
ypos -7644
}
Keyer {
operation "luminance key"
range {0.72483001 0.78 1 1}
name Keyer4
selected true
xpos 8990
ypos -7625
}
Log2Lin {
name Log2Lin8
selected true
xpos 8990
ypos -7587
}
Group {
name key_chew13
help "======== KeyChew beta ========\n=============================\n\nThis is a port of the KeyChew macro for Shake to Nuke.\n\nThere might be tiny differences on the results given in both apps. Some of them are caused by the internal algorithms of each app, and others by the way I faked the JSplineV\nexpression of Shake in Nuke. If you know a better way to solve this, let\nme know!!\n\n=============================\n             2009 Cuco Bures\n============================="
selected true
xpos 8990
ypos -7561
addUserKnob {20 Controls}
addUserKnob {7 chew t "\t\t" R -200 200}
chew -11
addUserKnob {7 soften R 0 200}
soften 1
addUserKnob {6 matteMult +STARTLINE}
}
Input {
inputs 0
name Input
xpos -40
ypos -9
}
set Nddac7200 [stack 0]
Dot {
name Dot1
xpos 324
ypos -6
}
set Nddac6b00 [stack 0]
push $Nddac6b00
Invert {
name Invert1
xpos 176
ypos 33
}
push $Nddac6b00
Switch {
inputs 2
which {{"\[value chew]>=0?0:1"}}
name Switch1
xpos 180
ypos 87
}
Blur {
size {{"(floor(abs(\[value chew]))/4)+(floor(abs(\[value chew]))/8)"}}
name FgEdgeBlur
xpos 180
ypos 129
}
Grade {
channels alpha
multiply {1 1 1 {max(FgEdgeBlur.size*1.5,1)}}
black_clamp false
name FgEdgeMult
xpos 180
ypos 177
}
Grade {
channels alpha
gamma {1 1 1 {JSplineVFake(floor(abs(chew)))}}
name FgEdgeGamma1
xpos 180
ypos 225
addUserKnob {20 User}
addUserKnob {7 JSplineVFake}
JSplineVFake {{curve l 0.9958 k x5 0.95 0.8 x20 0.5 x40 0.3 x80 0.2 l x200 0.1}}
}
set Ndd761600 [stack 0]
Merge2 {
inputs 2
operation minus
name Merge1
xpos 290
ypos 231
}
push $Ndd761600
Switch {
inputs 2
which {{"\[value chew]>=0?0:1"}}
name Switch2
xpos 180
ypos 279
}
Clamp {
name Clamp2
xpos 180
ypos 321
}
Blur {
size {{"(floor(abs(\[value soften]))/4)+(floor(abs(\[value soften]))/8)"}}
name BlurResult
xpos 180
ypos 441
}
push $Nddac7200
ShuffleCopy {
inputs 2
name ShuffleCopy1
xpos -40
ypos 447
}
Premult {
name Premult1
xpos -40
ypos 495
disable {{"1-\[value matteMult]"}}
}
Output {
name Output1
xpos -40
ypos 567
}
end_group
push $N31468100
Group {
name Rig_Incandecent1
selected true
xpos 8804
ypos -7831
addUserKnob {20 User l Rig_Incandecent}
addUserKnob {26 txt_3 l Glow}
addUserKnob {41 intensity l Intensity T apGlow.intensity}
addUserKnob {41 persistance T apGlow.persistance}
addUserKnob {41 max_size l "max size" T apGlow.max_size}
addUserKnob {20 group l grading n 1}
addUserKnob {26 txt l Blubs}
addUserKnob {41 white l gain T Gradebulbs.white}
addUserKnob {41 multiply T Gradebulbs.multiply}
addUserKnob {41 gamma T Gradebulbs.gamma}
addUserKnob {41 flicker T MultiplyBulb.flicker}
addUserKnob {41 mix l flickerArea T Merge23stripMix1.mix}
addUserKnob {26 txt_1 l Strips}
addUserKnob {41 white_1 l gain T GradeStrips.white}
addUserKnob {41 multiply_1 l multiply T GradeStrips.multiply}
addUserKnob {41 gamma_1 l gamma T GradeStrips.gamma}
addUserKnob {41 value l coreMult T MultiplyCore.value}
addUserKnob {41 flicker_1 l flicker T MultiplyFluro.flicker}
addUserKnob {41 mix_1 l flickerArea T Merge23BulbMix.mix}
addUserKnob {26 txt_2 l Window}
addUserKnob {41 white_2 l gain T GradeWindows.white}
addUserKnob {41 multiply_2 l multiply T GradeWindows.multiply}
addUserKnob {41 gamma_2 l gamma T GradeWindows.gamma}
addUserKnob {20 endGroup n -1}
addUserKnob {20 info}
addUserKnob {26 txt_4 l ver: T " v1.0 1/3/22 rafs"}
}
Input {
inputs 0
name Input1
xpos -228
ypos -218
}
Dot {
name Dot115
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -194
ypos -178
}
set Nc230ab00 [stack 0]
Dot {
name Dot122
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 25
ypos -174
}
set Nc230a400 [stack 0]
Dot {
name Dot120
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 206
ypos -174
}
set Nc2309d00 [stack 0]
Dot {
name Dot118
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 323
ypos -174
}
set Nc2309600 [stack 0]
Dot {
name Dot127
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 733
ypos -174
}
set Nc2308f00 [stack 0]
Dot {
name Dot128
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 903
ypos -174
}
Dot {
name Dot129
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 991
ypos 419
}
set Nc2308100 [stack 0]
P_Noise3D {
name P_Noise3D5
xpos 946
ypos 474
in pWorld
output alpha
size {2 {size.x*5} {size.x}}
offset {{int(frame*0.5)} 0 0}
}
push $Nc2308100
P_Noise3D {
name P_Noise3D6
xpos 1098
ypos 489
in pWorld
output alpha
size {2 {size.x*5} {size.x}}
offset {{int(frame*0.5)} 10 10}
}
Merge2 {
inputs 2
operation multiply
name Merge23stripMix1
xpos 1028
ypos 536
}
Grade {
channels alpha
multiply 5
gamma 0.5
white_clamp true
name Grade19
xpos 992
ypos 563
}
push $Nc2308100
P_Noise3D {
name P_Noise3D4
xpos 825
ypos 491
in pWorld
output alpha
size {0.2 {size.x*15} {size.x}}
offset {{(int(frame+2))} -2 -2}
}
Grade {
channels alpha
multiply 3
gamma 0.4
white_clamp true
name Grade18
xpos 825
ypos 552
}
Merge2 {
inputs 2
operation multiply
name Merge25
xpos 825
ypos 607
}
Transform {
scale {1 1}
center {1153 811}
shutteroffset centred
name Transform1
xpos 306
ypos 524
}
Crop {
box {0 0 {width} {height}}
name Crop1
xpos 306
ypos 595
}
push $Nc230a400
Shuffle2 {
fromInput1 {{0} B}
in1 {other.alpha_extra other.lightColor other.lightID other.lightSwitch other.mtoa_constant_UnitLightColor other.mtoa_constant_UnitLightID other.mtoa_constant_UnitLightSwitch other.oceanCusp}
fromInput2 {{0} B}
mappings "4 black -1 -1 rgba.alpha 0 3 other.lightSwitch 0 3 rgba.red 0 0 other.lightSwitch 0 3 rgba.green 0 1 other.lightSwitch 0 3 rgba.blue 0 2"
name Shuffle15
label "\[value in1]"
xpos -9
ypos -61
}
set Nb8f46b00 [stack 0]
push $Nc2309d00
Shuffle2 {
fromInput1 {{0} B}
in1 {other.alpha_extra other.lightColor other.lightID other.lightSwitch other.mtoa_constant_UnitLightColor other.mtoa_constant_UnitLightID other.mtoa_constant_UnitLightSwitch other.oceanCusp}
fromInput2 {{0} B}
mappings "4 black -1 -1 rgba.alpha 0 3 other.lightColor 0 1 rgba.red 0 0 other.lightColor 0 1 rgba.green 0 1 other.lightColor 0 1 rgba.blue 0 2"
name Shuffle13
label "\[value in1]"
xpos 152
ypos -99
}
set Nb8f46400 [stack 0]
Difference {
inputs 2
name Difference1
xpos 29
ypos 4
}
FilterErode {
size 2
filter gaussian
name FilterErode3
xpos 29
ypos 42
}
Grade {
multiply 3
name Grade17
xpos 29
ypos 80
}
Grade {
channels alpha
multiply 2
white_clamp true
name Grade20
xpos 29
ypos 106
}
Premult {
name Premult3
xpos 29
ypos 161
}
Dot {
name Dot104
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 63
ypos 359
}
set Nb97c8f00 [stack 0]
FilterErode {
size -2
name FilterErode5
xpos 74
ypos 356
}
push $Nb8f46b00
Grade {
channels rgba
whitepoint 0.9998067021
white 0.52
gamma 1.09
white_clamp true
name Grade5
xpos 217
ypos 13
}
set Nb97bf900 [stack 0]
push $Nc2309600
Shuffle2 {
fromInput1 {{0} B}
in1 {other.alpha_extra other.lightColor other.lightID other.lightSwitch other.mtoa_constant_UnitLightColor other.mtoa_constant_UnitLightID other.mtoa_constant_UnitLightSwitch other.oceanCusp}
fromInput2 {{0} B}
in2 alpha
mappings "4 other.lightID 0 2 rgba.red 0 0 other.lightID 0 2 rgba.green 0 1 other.lightID 0 2 rgba.blue 0 2 rgba.alpha 1 0 rgba.alpha 0 3"
name Shuffle12
label "\[value in1]"
xpos 289
ypos -128
}
set Nb97bc100 [stack 0]
Grade {
channels rgba
blackpoint 0.1193237305
whitepoint 11067.95703
multiply 0.19
gamma 0.345
white_clamp true
name Grade7
xpos 289
ypos -46
}
Merge2 {
inputs 2
operation difference
name Merge19
xpos 289
ypos 65
}
push $Nb97bf900
push $Nb97bc100
Grade {
channels rgba
blackpoint 0.1193237305
whitepoint 11067.95703
multiply 3.26
gamma 0.236
white_clamp true
name Grade9
xpos 424
ypos -42
}
Merge2 {
inputs 2
operation difference
name Merge20
xpos 424
ypos 61
}
set Nb9794100 [stack 0]
Difference {
inputs 2
name Difference2
xpos 357
ypos 118
}
FilterErode {
size 3
name FilterErode1
xpos 357
ypos 156
}
FilterErode {
size -5
name FilterErode2
xpos 357
ypos 207
}
push $Nb9794100
Shuffle2 {
fromInput1 {{0} B}
fromInput2 {{0} B}
mappings "4 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 black -1 -1 rgba.red 0 0 rgba.red 0 0 rgba.alpha 0 3"
name Shuffle14
label "\[value in1]"
xpos 494
ypos 138
}
ChannelMerge {
inputs 2
operation in
name ChannelMerge1
xpos 494
ypos 202
}
FilterErode {
size -0.02
filter quadratic
name FilterErode4
xpos 494
ypos 252
}
Grade {
channels alpha
whitepoint 0.5956
gamma 1.8
white_clamp true
name Grade12
xpos 494
ypos 279
}
set Nb9767900 [stack 0]
push $Nb8f46400
Dot {
name Dot103
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 186
ypos 172
}
Shuffle2 {
fromInput1 {{0} B}
fromInput2 {{0} B}
mappings "4 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 black -1 -1 rgba.red 0 0 rgba.red 0 0 rgba.alpha 0 3"
name Shuffle16
label "\[value in1]"
xpos 152
ypos 190
}
ChannelMerge {
inputs 2
operation stencil
name ChannelMerge2
xpos 152
ypos 273
}
Multiply {
inputs 1+1
value 0
name Multiply4
xpos 152
ypos 366
}
Saturation {
saturation 0
name Saturation2
xpos 152
ypos 518
}
Multiply {
inputs 1+1
value {{1-flicker}}
name MultiplyFluro
xpos 155
ypos 609
addUserKnob {20 User}
addUserKnob {7 flicker}
flicker 0.3
}
set Nb9755600 [stack 0]
Viewer {
frame_range 1001-1237
fps 25
colour_sample_bbox {0.5437988043 -0.4518646896 0.5446661115 -0.4509974122}
samplepoints {{0.5437988043 -0.4483954906}
  }
viewerProcess "sRGB (ACES)"
name Viewer1
xpos 395
ypos 1412
}
push $Nc230ab00
Dot {
name Dot3
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -377
ypos -145
}
Dot {
name Dot2
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -377
ypos 1604
}
push $Nb9755600
FilterErode {
size {12 1}
filter gaussian
name FilterErode7
xpos 302
ypos 741
}
Grade {
channels alpha
blackpoint 0.026
whitepoint 0.85
gamma 0.765
white_clamp true
name Grade1
xpos 302
ypos 799
}
push $Nb9755600
Grade {
white {0.8422862291 0.9373040199 0.7385955453 1}
multiply 0.68
name GradeStrips
xpos 155
ypos 865
}
Multiply {
inputs 1+1
channels rgb
value 4
name MultiplyCore
xpos 154
ypos 913
}
Dot {
name windows2
tile_color 0x949494ff
label fluroStrips
note_font_size 22
note_font_color 0xffffffff
xpos 186
ypos 1158
}
set Nb9702400 [stack 0]
push 0
push $Nb9767900
Saturation {
saturation 0
name Saturation1
xpos 494
ypos 317
}
Premult {
name Premult6
xpos 494
ypos 356
}
Grade {
white {0.7426635027 0.8707515597 0.9373040199 1}
multiply 0.42
name GradeWindows
xpos 494
ypos 873
}
Dot {
name windows
tile_color 0x949494ff
label windows
note_font_size 22
note_font_color 0xffffffff
xpos 528
ypos 973
}
set Nb96ed600 [stack 0]
push $Nc2308100
P_Noise3D {
name P_Noise3D1
xpos 1230
ypos 509
in pWorld
output alpha
size {0.2 {size.x} {size.x}}
offset {{frame} 0 0}
}
Grade {
channels alpha
multiply 3
gamma 0.4
white_clamp true
name Grade15
xpos 1230
ypos 570
}
push $Nc2308100
P_Noise3D {
name P_Noise3D2
xpos 1349
ypos 501
in pWorld
output alpha
size {2 {size.x} {size.x}}
offset {{int(frame*0.1)} 0 0}
}
push $Nc2308100
P_Noise3D {
name P_Noise3D3
xpos 1501
ypos 516
in pWorld
output alpha
size {2 {size.x} {size.x}}
offset {{int(frame*0.1)} 10 10}
}
Merge2 {
inputs 2
operation multiply
mix 0.76
name Merge23BulbMix
xpos 1431
ypos 563
}
Grade {
channels alpha
multiply 5
gamma 0.5
white_clamp true
name Grade16
xpos 1349
ypos 587
}
Merge2 {
inputs 2
operation multiply
name Merge22
xpos 1230
ypos 649
}
push $Nb97c8f00
Dot {
name windows1
tile_color 0x949494ff
label bulbs
note_font_size 22
note_font_color 0xffffffff
xpos 63
ypos 475
}
push $Nc2308f00
Dot {
name Dot1
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 737
ypos 97
}
set Nb9618800 [stack 0]
P_Matte {
name P_Matte1
xpos 822
ypos 170
in pWorld
output alpha
useAlpha false
center {25.96203423 36.25034 41.21370316}
scaling {4000 3 4000}
uniform_scale 6
falloffType Smooth
falloff 0.644
}
FilterErode {
size 5
name FilterErode6
xpos 822
ypos 208
}
push $Nb9618800
Cryptomatte {
name Cryptomatte1
xpos 699
ypos 189
matteOutput alpha
matteList ""
cryptoLayer CryptoMaterial_a
expression ""
keyedName ""
previewExpression0 "((mantissa(abs(CryptoMaterial_a00.red)) * 1 % 0.25) * CryptoMaterial_a00.green + (mantissa(abs(CryptoMaterial_a00.blue)) * 1 % 0.25) * CryptoMaterial_a00.alpha + (mantissa(abs(CryptoMaterial_a01.red)) * 1 % 0.25) * CryptoMaterial_a01.green + (mantissa(abs(CryptoMaterial_a01.blue)) * 1 % 0.25) * CryptoMaterial_a01.alpha)"
previewExpression1 "((mantissa(abs(CryptoMaterial_a00.red)) * 16 % 0.25) * CryptoMaterial_a00.green + (mantissa(abs(CryptoMaterial_a00.blue)) * 16 % 0.25) * CryptoMaterial_a00.alpha + (mantissa(abs(CryptoMaterial_a01.red)) * 16 % 0.25) * CryptoMaterial_a01.green + (mantissa(abs(CryptoMaterial_a01.blue)) * 16 % 0.25) * CryptoMaterial_a01.alpha)"
previewExpression2 "((mantissa(abs(CryptoMaterial_a00.red)) * 64 % 0.25) * CryptoMaterial_a00.green + (mantissa(abs(CryptoMaterial_a00.blue)) * 64 % 0.25) * CryptoMaterial_a00.alpha + (mantissa(abs(CryptoMaterial_a01.red)) * 64 % 0.25) * CryptoMaterial_a01.green + (mantissa(abs(CryptoMaterial_a01.blue)) * 64 % 0.25) * CryptoMaterial_a01.alpha)"
previewExpression3 ""
previewChannel none
in00 CryptoMaterial_a00
in01 CryptoMaterial_a01
in02 CryptoMaterial_a02
in03 none
in04 none
in05 none
in06 none
in07 none
}
HueCorrect {
hue {sat {curve -0.001492381096 s-0.02999999933 v2.77112484 0.908650279 0.00398015976 s-0 u2.747416019 v2.909726858 0.5238806009 -0.001492500305 s0 u3 0.01492547989 -0.001492381096 s-0.02999999933 t-0 u0.6962256432}
  lum {curve 1 1 1 1 0.9690589905 1.007500768 1}
  red {curve 1 1.935820818 1 1.051434398 1 1 1}
  green {curve 1 1 1 1.397411227 1 1 1}
  blue {curve 0.6771144867 s0 t0.1400000006 0.75373137 0.75373137 0.5022648573 0.6120986938 0.024487257 0.6771144867 s0.1400000006 t0}
  r_sup {}
  g_sup {curve 1 1 1 1 0.9890546799 0.9890546799 1}
  b_sup {curve -0.00696516037 s0 1 0.1845772266 0.9671641588 0.983582139 0.2331717014 -0.00696516037}
  sat_thrsh {}}
name HueCorrect1
xpos 699
ypos 215
disable true
}
Saturation {
inputs 1+1
saturation 0
name Saturation3
xpos 697
ypos 278
}
HueCorrect {
hue {sat {curve 0.03134346008 s0 t0.008208990097 1.98507452 x1.804918051 0.07512450218 x3 1.722388029 x4 1.25721395 x5.877049446 0.02587080002 x6 0.03134346008}
  lum {curve 1.930348158 s0 1 1 1 1 1.809950113 1.930348158}
  red {}
  green {curve 1 1 1 0.9890546799 1 1 1}
  blue {curve 1 1 1 1.01094532 1 0.9945273399 1}
  r_sup {curve 1 1.399502516 1 1 1 1 1}
  g_sup {curve 1 1 0.6661691666 x2.949056864 1.601989985 x4 0.770149231 x5 1.01094532 1}
  b_sup {curve 0.04776120186 s0 0.5402985811 1 1.00547266 1 0.06417918205 0.04776120186}
  sat_thrsh {curve 0 0 0 0.05870652199 0 0 0}}
name HueCorrect2
xpos 699
ypos 339
}
Shuffle2 {
fromInput1 {{0} B}
fromInput2 {{0} B}
mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 white -1 -1 rgba.alpha 0 3"
name Shuffle18
label "\[value in1]"
xpos 699
ypos 406
}
Multiply {
inputs 1+1
value 0
invert_mask true
name Multiply3
xpos 699
ypos 465
}
Grade {
white {2.985129 1.626458 0.185129 2}
white_panelDropped true
multiply 2.2
name Gradebulbs
xpos 700
ypos 617
}
Multiply {
inputs 1+1
value {{1-flicker}}
name MultiplyBulb
xpos 699
ypos 657
addUserKnob {20 User}
addUserKnob {7 flicker l "" +STARTLINE}
flicker 0.51
}
Dot {
name windows3
tile_color 0x949494ff
label bulbs
note_font_size 22
note_font_color 0xffffffff
xpos 733
ypos 695
}
set Nb94bc100 [stack 0]
Merge2 {
inputs 3+1
name Merge26
xpos 609
ypos 1165
}
set Nb94a7900 [stack 0]
Group {
name apGlow
help "apGlow v1.1 by Adrian Pueyo\n\nExponential glow using a sub-frame iterative blur.\n\nWith the \"area\" input (optional) you can set only a part of the image to emit glow.\n\nCaveats:\n- This node will kill sub-frames as it relies on a floor NoTimeBlur. Do any other sub-frame operations before this!\n- NaN's will be turned black, but on rgba only.\n\nadrianpueyo.com, 2015-2018"
onCreate "n = nuke.thisNode()\nfor i in \['intensity','response','max_size','src_black','src_white','response']:\n    n\[i].setFlag(0x00000004)\nn\['max_size'].setRange(0,10000)\nn\['overscan'].setRange(0,1000)"
knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() in \[\"crop\",\"enableOverscan\"]:\n    kcv = n\[\"crop\"].value()\n    kov = n\[\"enableOverscan\"].value()\n    n\[\"enableOverscan\"].setEnabled(not kcv)\n    n\['overscan'].setEnabled(not kcv and kov)"
tile_color 0xe88543ff
xpos 411
ypos 1284
addUserKnob {20 apGlow}
addUserKnob {41 channels T KeepWhat.channels}
addUserKnob {7 intensity t "Intensity multiplier for the resulting glow." R 0 10}
intensity 0.72
addUserKnob {18 persistance t "Color gain of the largest step. Affects the other steps progressively, with 0 effect on the smallest one.\n\nUse as an inverse falloff or as a progressive color tint." R 0 10}
persistance 2.04
addUserKnob {6 persistance_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 persistance_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 tint t "Overall color multiplier for the intensity."}
tint 1
addUserKnob {6 tint_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 tint_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 effect_only l "effect only" +STARTLINE}
effect_only true
addUserKnob {26 ""}
addUserKnob {7 src_black l "src black" t "Black point of the source image's luminance.\nClip the effect below this luminance value." R 0 4}
src_black 0.005
addUserKnob {7 src_white l "src white" t "White point of the source image's luminance." R 0 4}
src_white 0.86
addUserKnob {41 white_clamp l clamp -STARTLINE T Grade1.white_clamp}
addUserKnob {7 response t "Gamma on the source image's luminance, to change the response curve falloff." R 0 4}
response 0.64
addUserKnob {26 ""}
addUserKnob {14 max_size l "max size" t "Maximum pixel size of the exponential glow." R 0 10000}
max_size 40
addUserKnob {14 falloff l "size falloff" t "Falloff adjustment on the exponential distribution of the blur sizes." R 0 10}
falloff 0.2
addUserKnob {3 steps t "Number of blur iterations to combine together."}
steps 10
addUserKnob {41 filter T Blur.filter}
addUserKnob {41 quality l "" -STARTLINE T Blur.quality}
addUserKnob {6 crop l "crop to format" -STARTLINE}
addUserKnob {14 overscan R 0 1000}
overscan 100
addUserKnob {6 enableOverscan l enable -STARTLINE}
enableOverscan true
addUserKnob {26 ""}
addUserKnob {41 maskChannelArea l area -STARTLINE T ExpressionArea.maskChannelMask}
addUserKnob {41 inject_area l inject -STARTLINE T ExpressionArea.inject}
addUserKnob {41 invert_area l invert -STARTLINE T ExpressionArea.invert_mask}
addUserKnob {41 fringe_area l fringe -STARTLINE T ExpressionArea.fringe}
addUserKnob {41 maskChannelMask l mask T Merge.maskChannelMask}
addUserKnob {41 inject -STARTLINE T Merge.inject}
addUserKnob {41 invert_mask l invert -STARTLINE T Merge.invert_mask}
addUserKnob {41 fringe -STARTLINE T Merge.fringe}
addUserKnob {41 mix T Merge.mix}
addUserKnob {26 version_author l "" t "apGlow v1.1\n2018" +STARTLINE T "<span style=\"color:#666\"><br/><b>apGlow v1.1</b> - <a href=\"http://www.adrianpueyo.com\" style=\"color:#666;text-decoration: none;\">adrianpueyo.com</a>, 2015-2018</span>"}
}
Input {
inputs 0
name Inputmask
xpos -748
ypos 847
number 2
}
Input {
inputs 0
name Inputarea
xpos -156
ypos 383
number 1
}
Input {
inputs 0
name Inputimg
xpos -638
ypos 220
}
NoTimeBlur {
rounding none
name NTB
xpos -638
ypos 267
}
Dot {
name Dot6
xpos -604
ypos 308
}
set Nb94a4100 [stack 0]
Dot {
name Dot7
xpos -384
ypos 308
}
set Nb9487900 [stack 0]
Dot {
name Dot8
xpos -232
ypos 308
}
Remove {
name RemoveAll
xpos -266
ypos 345
}
Expression {
inputs 1+1
channel0 rgba
expr0 1
maskChannelMask -rgba.alpha
name ExpressionArea
xpos -266
ypos 383
disable {{"!\[exists parent.input1]"}}
}
Shuffle {
red white
green white
blue white
alpha white
name ShuffleWhite
xpos -266
ypos 409
disable {{"\[exists parent.input1]"}}
}
push $Nb9487900
Remove {
operation keep
channels rgba
name KeepWhat
xpos -418
ypos 377
}
Copy {
inputs 2
from0 rgba.alpha
to0 apGlowArea.red
name Copy1
xpos -418
ypos 403
disable {{"!\[exists parent.input1]"}}
}
Premult {
channels all
alpha apGlowArea.red
name Premult1
xpos -418
ypos 441
disable {{"!\[exists parent.input1]"}}
}
Remove {
channels apGlowArea
name RemoveArea
xpos -418
ypos 479
disable {{"!\[exists parent.input1]"}}
}
Dot {
name Dot5
xpos -384
ypos 532
}
set Nb9457900 [stack 0]
Dot {
name Dot1
xpos -284
ypos 532
}
Saturation {
channels all
saturation 0
name Saturation1
xpos -318
ypos 572
}
set Nb9456b00 [stack 0]
Grade {
channels all
blackpoint {{parent.src_black}}
whitepoint {{parent.src_white}}
gamma {{parent.response}}
name Grade1
xpos -318
ypos 610
}
push $Nb9457900
push $Nb9456b00
Merge2 {
inputs 2
operation divide
also_merge all
name Merge4
xpos -418
ypos 578
}
Merge2 {
inputs 2
operation multiply
also_merge all
name Merge3
xpos -418
ypos 616
}
Dot {
name DP
xpos -384
ypos 642
addUserKnob {20 User}
addUserKnob {14 j R 0 100}
j {{"pow(2, t*(log(parent.max_size*parent.falloff)/log(2)) )"} {"pow(2, t*(log(parent.max_size*parent.falloff)/log(2)) )"}}
}
Blur {
size {{"DP.j( (t%1)+1/parent.steps) / parent.falloff"} {"DP.j( (t%1)+1/parent.steps) / parent.falloff"}}
crop false
name Blur
xpos -418
ypos 660
}
Multiply {
value {{"parent.persistance * (t%1) + (1-t%1)"} {"parent.persistance * (t%1) + (1-t%1)"} {"parent.persistance * (t%1) + (1-t%1)"} {"parent.persistance * (t%1) + (1-t%1)"}}
name Multiply
xpos -418
ypos 699
}
TimeBlur {
divisions {{parent.steps}}
shutter 1
shutteroffset start
shuttercustomoffset 0
name TB
xpos -418
ypos 736
}
Multiply {
value {{parent.steps?parent.intensity*parent.tint:0} {parent.steps?parent.intensity*parent.tint:0} {parent.steps?parent.intensity*parent.tint:0} {parent.steps?parent.intensity*parent.tint:0}}
name MultiplyR
xpos -418
ypos 762
}
Expression {
expr0 isnan(r)?0:r
expr1 isnan(g)?0:g
expr2 isnan(b)?0:b
expr3 isnan(a)?0:a
name NanToBlack
xpos -418
ypos 800
}
push $Nb94a4100
Dot {
name Dot4
xpos -604
ypos 582
}
set Nb941e400 [stack 0]
Dot {
name Dot2
xpos -494
ypos 582
}
Shuffle {
red black
green black
blue black
name Shuffle
xpos -528
ypos 660
disable {{!parent.effect_only}}
}
Remove {
operation keep
channels rgb
name Remove1
xpos -528
ypos 686
disable {{!parent.effect_only}}
}
Merge2 {
inputs 2
operation plus
output {rgba.red rgba.green rgba.blue -rgba.alpha}
also_merge all
name Merge1
xpos -528
ypos 800
}
Dot {
name Dot3
xpos -494
ypos 850
}
push $Nb941e400
Merge2 {
inputs 2+1
operation copy
output {rgba.red rgba.green rgba.blue -rgba.alpha}
also_merge all
maskChannelMask -rgba.alpha
name Merge
xpos -638
ypos 846
}
Crop {
box {{parent.crop?0:-parent.overscan} {parent.crop?0:-parent.overscan} {parent.crop?width:width+parent.overscan} {parent.crop?height:height+parent.overscan}}
intersect true
name CropOverscan
xpos -638
ypos 872
disable {{"!parent.enableOverscan && !parent.crop"}}
}
Output {
name Output
xpos -638
ypos 898
}
end_group
set Nb94a7200 [stack 0]
push $Nb94a7900
Merge2 {
inputs 2
operation plus
name Plus1
xpos 596
ypos 1315
}
Shuffle2 {
fromInput1 {{0} B}
out1 incandescent
fromInput2 {{0} B}
mappings "3 rgba.red 0 0 incandescent.red 0 0 rgba.green 0 1 temp.green 0 1 rgba.blue 0 2 temp.blue 0 2"
name Shuffle1
label "\[value in1]"
xpos -83
ypos 1462
}
push $Nb94a7200
push $Nb94a7200
AddChannels {
channels LS_Incandecent_glow
name AddChannels4
xpos -108
ypos 1339
}
push $Nb9702400
AddChannels {
channels LS_Incandecent_strips
name AddChannels3
xpos -111
ypos 1180
}
set Nb93e8800 [stack 0]
Dot {
name Dot136
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -77
ypos 1268
}
push $Nb93e8800
push $Nb96ed600
AddChannels {
channels LS_Incandecent_window
name AddChannels2
xpos -111
ypos 963
}
set Nc27d7200 [stack 0]
Dot {
name Dot130
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -77
ypos 1051
}
push $Nc27d7200
push $Nb94bc100
AddChannels {
channels LS_Incandecent_bulb
name AddChannels1
xpos -114
ypos 704
}
set Nc27d5d00 [stack 0]
Dot {
name Dot126
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -80
ypos 792
}
push $Nc27d5d00
push $Nc230ab00
Dot {
name Dot116
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -194
ypos 400
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
channels LS_Incandecent_bulb
name Copy2
xpos -228
ypos 698
}
Merge2 {
inputs 2
name Merge21
xpos -228
ypos 788
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
channels LS_Incandecent_window
name Copy4
xpos -225
ypos 957
}
Merge2 {
inputs 2
name Merge23
xpos -225
ypos 1047
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
channels LS_Incandecent_strips
name Copy6
xpos -225
ypos 1174
}
Merge2 {
inputs 2
name Merge24
xpos -225
ypos 1264
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
channels LS_Incandecent_glow
name Copy1
xpos -222
ypos 1333
}
Merge2 {
inputs 2
operation plus
name Plus
xpos -225
ypos 1406
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
channels incandescent
name Copy5
xpos -225
ypos 1493
}
Merge2 {
operation plus
name Plus2
xpos -228
ypos 1566
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy3
xpos -236
ypos 1616
}
Output {
name Output1
xpos -236
ypos 1772
}
end_group
Unpremult {
channels all
name Unpremult14
selected true
xpos 8808
ypos -7773
}
Group {
name GradeAOV6
help "Colour correct the CG beauty using the secondary(aov) passes.with a subtractive process.\nto be used when:\n * the CG is good and only a few passes need adjusting\n * the secondaries don't add up to the beauty\n * rgb saturation (luminance mix on)\n * rgb contrast (with pivot)\n * matting with external mask input or main channel input or both with an operation.\n The order of correction is: Grade Node>Contrast Node>Saturation."
tile_color 0x8aa7dbff
label " \[value in]"
selected true
xpos 8808
ypos -7707
addUserKnob {20 User l GradeAOV}
addUserKnob {41 in l "Channel to use" T Shuffle5345.in}
addUserKnob {41 AlsoGradeChannel l "Also Grade Channel" t "as well as grading the beauty bake the grade into the selected channel" -STARTLINE T ShuffleCopy1544235.AlsoGradeChannel}
addUserKnob {41 solo T Switch3.solo}
addUserKnob {41 mute -STARTLINE T Switch3.mute}
addUserKnob {41 contact -STARTLINE T Switch3.contact}
addUserKnob {26 spacetxt l "                                                                                         " -STARTLINE T " "}
addUserKnob {22 NodeExpCopy l "Node Exp Copy" -STARTLINE T "knobsList = \[\"blackpoint\", \"whitepoint\", \"black\", \"white\", \"multiply\", \"add\", \"gamma\", \"reverse\", \"black_clamp\", \"white_clamp\", \"enable_mix_luminance\", \"mix_luminance\", \"value\", \"grey\", \"saturation\",\n \"enable_mix_luminance_1\", \"mix_luminance_1\", \"alpha\", \"mixBlend\"]\nnukescripts.clear_selection_recursive()\nn = nuke.thisNode()\nn\['selected'].setValue(True)\nwith nuke.root():\n nuke.nodeCopy(\"%clipboard%\")\n nuke.nodePaste(\"%clipboard%\")\n new_node = nuke.selectedNode()\n\n for j in new_node.knobs():\n\n  if j in  knobsList:\n   if isinstance(new_node.knob(j), nuke.Array_Knob):\n     new_node\[j].setSingleValue(False)\n   new_node\[j].setExpression( n.name() + '.' + j )\n\n\n"}
addUserKnob {26 ""}
addUserKnob {41 blackpoint T Grade273535.blackpoint}
addUserKnob {41 whitepoint T Grade273535.whitepoint}
addUserKnob {41 black l lift T Grade273535.black}
addUserKnob {41 white l gain T Grade273535.white}
addUserKnob {41 multiply T Grade273535.multiply}
addUserKnob {41 add l offset T Grade273535.add}
addUserKnob {41 gamma T Grade273535.gamma}
addUserKnob {41 reverse T Grade273535.reverse}
addUserKnob {41 black_clamp l "black clamp" -STARTLINE T Grade273535.black_clamp}
addUserKnob {41 white_clamp l "white clamp" -STARTLINE T Grade273535.white_clamp}
addUserKnob {26 text2 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance l "" -STARTLINE T Grade273535.enable_mix_luminance}
addUserKnob {41 mix_luminance l "" -STARTLINE T Grade273535.mix_luminance}
addUserKnob {26 "" l "  "}
addUserKnob {41 value l Contrast t " " T contrast.value}
addUserKnob {41 grey T contrast.grey}
addUserKnob {41 saturation T ColorCorrect6.saturation}
addUserKnob {26 text3 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance_1 l "" -STARTLINE T ColorCorrect6.enable_mix_luminance}
addUserKnob {41 mix_luminance_1 l "" -STARTLINE T ColorCorrect6.mix_luminance}
addUserKnob {26 ""}
addUserKnob {41 maskChannel l "mask channel" t "if the mask input is unplugged then the input channel can be used" T Keymix3.maskChannel}
addUserKnob {41 invertMask l invert -STARTLINE T Keymix3.invertMask}
addUserKnob {26 ""}
addUserKnob {41 alpha l "(un)premult by" T Unpremult13535.alpha}
addUserKnob {41 mixBlend l mix T Blend1.mixBlend}
addUserKnob {20 Info}
addUserKnob {22 documentation l " Documentation / Feedback " T "import webbrowser\nwebbrowser.open(\"http://opennuke.github.io/gradeAov_nkV/\")" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {26 version l version: T v1.2}
addUserKnob {26 created l created: T "1/1/2015 by <a href=\\'http://movingimagearts.com'> Rafal Kaniewski</a>"}
addUserKnob {26 modified l "modified: " T "01/10/2016 :update to fix back clamp by Rafal_Kan\n2017/12/19 :v1: forked, renamed, premult per channel, colourspaceShift\n2018/01/01: added copyExpNode and solo/mute"}
addUserKnob {26 source l source: T "<a href='https://github.com/vfxwiki/gradeAOV/'> Github.com</a>"}
addUserKnob {26 licence l licence: T "<a href=\"https://github.com/openNuke/toolset/blob/master/LICENCE\">READ ME</a>"}
}
Input {
inputs 0
name Input
xpos -220
ypos -721
}
set N493f8800 [stack 0]
Dot {
name Dot8
xpos -995
ypos -718
}
Dot {
name Dot5
xpos -995
ypos 105
}
set N4a3fb900 [stack 0]
Dot {
name Dot9
xpos -995
ypos 217
}
LayerContactSheet {
width {{width*6}}
height {{height*6}}
showLayerNames true
name LayerContactSheet1
xpos -632
ypos 213
}
push $N493f8800
Dot {
name Dot1
xpos -186
ypos -633
}
set N4a3fa400 [stack 0]
Dot {
name Dot27
xpos -457
ypos -567
}
set N4a3f9d00 [stack 0]
Dot {
name Dot26
xpos -646
ypos -567
}
Shuffle {
in LS_sun_LGT_all
in2 alpha
alpha red2
name Shuffle5345
xpos -680
ypos -533
}
Premult {
name Premult1
xpos -680
ypos -507
}
set N4a3f8800 [stack 0]
push $N4a3f9d00
Merge2 {
inputs 2
operation from
Achannels rgb
Bchannels rgb
output rgb
name From
xpos -491
ypos -507
}
Dot {
name Dot15
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -457
ypos -422
}
set N4abf7900 [stack 0]
Dot {
name Dot12
xpos -922
ypos -422
}
Dot {
name Dot14
xpos -922
ypos 172
}
push $N4a3f8800
Unpremult {
alpha -rgba.alpha
name Unpremult13535
xpos -680
ypos -469
disable {{!alpha}}
addUserKnob {20 User}
}
Grade {
channels all
white {1.025 1 0.975 1}
white_panelDropped true
black_clamp false
name Grade273535
xpos -680
ypos -380
addUserKnob {20 User}
addUserKnob {18 exposure R -1 1}
exposure {{multiply==0|white==0|multiply==0?0:log10(multiply)/log10(2)+log10(white)/log10(2)}}
addUserKnob {6 exposure_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
Expression {
expr0 "pow(r/grey, value+1)*grey"
expr1 "pow(g/grey, value+1)*grey"
expr2 "pow(b/grey, value+1)*grey"
name contrast
xpos -680
ypos -322
addUserKnob {20 User}
addUserKnob {7 grey}
grey 0.18
addUserKnob {18 value R -1 1}
value {0 0 0}
addUserKnob {6 value_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
ColorCorrect {
channels all
saturation 0.64
enable_mix_luminance false
name ColorCorrect6
xpos -680
ypos -273
}
set N4c3f8f00 [stack 0]
Dot {
name Dot4
xpos -833
ypos -263
}
Dot {
name Dot7
xpos -833
ypos 157
}
Dot {
name Dot10
xpos -403
ypos 186
}
Input {
inputs 0
name mask
label mask
xpos 65
ypos -760
number 1
}
Dot {
name Dot13
xpos 99
ypos 105
}
push $N4a3fb900
Dot {
name Dot11
xpos -435
ypos 105
}
set N4cff9600 [stack 0]
Switch {
inputs 2
which {{"\[exists parent.input1]"}}
name Switch1
xpos -177
ypos 101
disable {{"!\[exists parent.input1]"}}
}
Invert {
name Invert1
xpos -177
ypos 127
}
push $N4cff9600
push $N4c3f8f00
Dot {
name Dot6
xpos -646
ypos 39
}
push $N4a3fa400
Dot {
name Dot2
xpos -186
ypos -321
}
Dot {
name Dot3
xpos -284
ypos -321
}
push $N4c3f8f00
push $N4abf7900
Clamp {
channels rgb
minimum_enable {{parent.Grade273535.black_clamp}}
maximum 1e+14
maximum_enable {{parent.Grade273535.white_clamp}}
name Clamp135345
xpos -491
ypos -374
}
Merge2 {
inputs 2
operation plus
Achannels rgb
Bchannels rgb
output rgb
name Merge34
xpos -491
ypos -267
}
Premult {
alpha {{{Unpremult1.alpha}}}
name Premult435345345
xpos -487
ypos -142
disable {{Unpremult13535.disable}}
}
Blend {
inputs 2
channels rgb
weight0 {{mixBlend}}
weight1 {{1-weight0}}
name Blend1
xpos -318
ypos -142
addUserKnob {20 User}
addUserKnob {7 mixBlend}
mixBlend 1
}
ShuffleCopy {
inputs 2
in {{{Shuffle.in}}}
alpha alpha2
black red
white green
red2 blue
out2 {{{Shuffle.in}}}
name ShuffleCopy1544235
xpos -318
ypos 35
disable {{!AlsoGradeChannel}}
addUserKnob {20 User}
addUserKnob {6 AlsoGradeChannel l "Also Grade Channel" +STARTLINE}
AlsoGradeChannel true
}
Keymix {
inputs 3
channels rgb
maskChannel -rgba.alpha
name Keymix3
xpos -318
ypos 161
disable {{!maskChannel}}
}
Switch {
inputs 4
which {{contact?3:mute?2:solo?1:0}}
name Switch3
xpos -318
ypos 196
addUserKnob {20 User}
addUserKnob {4 output M {"rgb graded by channel" "preview channel (solo)" "preview without (mute)" "channel contact sheet" "" "" "" "" ""}}
output "preview channel (solo)"
addUserKnob {6 solo +STARTLINE}
addUserKnob {6 mute -STARTLINE}
addUserKnob {6 contact -STARTLINE}
}
Output {
name Output1
xpos -318
ypos 385
}
end_group
Group {
name GradeAOV7
help "Colour correct the CG beauty using the secondary(aov) passes.with a subtractive process.\nto be used when:\n * the CG is good and only a few passes need adjusting\n * the secondaries don't add up to the beauty\n * rgb saturation (luminance mix on)\n * rgb contrast (with pivot)\n * matting with external mask input or main channel input or both with an operation.\n The order of correction is: Grade Node>Contrast Node>Saturation."
tile_color 0x8aa7dbff
label " \[value in]"
selected true
xpos 8808
ypos -7648
addUserKnob {20 User l GradeAOV}
addUserKnob {41 in l "Channel to use" T Shuffle5345.in}
addUserKnob {41 AlsoGradeChannel l "Also Grade Channel" t "as well as grading the beauty bake the grade into the selected channel" -STARTLINE T ShuffleCopy1544235.AlsoGradeChannel}
addUserKnob {41 solo T Switch3.solo}
addUserKnob {41 mute -STARTLINE T Switch3.mute}
addUserKnob {41 contact -STARTLINE T Switch3.contact}
addUserKnob {26 spacetxt l "                                                                                         " -STARTLINE T " "}
addUserKnob {22 NodeExpCopy l "Node Exp Copy" -STARTLINE T "knobsList = \[\"blackpoint\", \"whitepoint\", \"black\", \"white\", \"multiply\", \"add\", \"gamma\", \"reverse\", \"black_clamp\", \"white_clamp\", \"enable_mix_luminance\", \"mix_luminance\", \"value\", \"grey\", \"saturation\",\n \"enable_mix_luminance_1\", \"mix_luminance_1\", \"alpha\", \"mixBlend\"]\nnukescripts.clear_selection_recursive()\nn = nuke.thisNode()\nn\['selected'].setValue(True)\nwith nuke.root():\n nuke.nodeCopy(\"%clipboard%\")\n nuke.nodePaste(\"%clipboard%\")\n new_node = nuke.selectedNode()\n\n for j in new_node.knobs():\n\n  if j in  knobsList:\n   if isinstance(new_node.knob(j), nuke.Array_Knob):\n     new_node\[j].setSingleValue(False)\n   new_node\[j].setExpression( n.name() + '.' + j )\n\n\n"}
addUserKnob {26 ""}
addUserKnob {41 blackpoint T Grade273535.blackpoint}
addUserKnob {41 whitepoint T Grade273535.whitepoint}
addUserKnob {41 black l lift T Grade273535.black}
addUserKnob {41 white l gain T Grade273535.white}
addUserKnob {41 multiply T Grade273535.multiply}
addUserKnob {41 add l offset T Grade273535.add}
addUserKnob {41 gamma T Grade273535.gamma}
addUserKnob {41 reverse T Grade273535.reverse}
addUserKnob {41 black_clamp l "black clamp" -STARTLINE T Grade273535.black_clamp}
addUserKnob {41 white_clamp l "white clamp" -STARTLINE T Grade273535.white_clamp}
addUserKnob {26 text2 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance l "" -STARTLINE T Grade273535.enable_mix_luminance}
addUserKnob {41 mix_luminance l "" -STARTLINE T Grade273535.mix_luminance}
addUserKnob {26 "" l "  "}
addUserKnob {41 value l Contrast t " " T contrast.value}
addUserKnob {41 grey T contrast.grey}
addUserKnob {41 saturation T ColorCorrect6.saturation}
addUserKnob {26 text3 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance_1 l "" -STARTLINE T ColorCorrect6.enable_mix_luminance}
addUserKnob {41 mix_luminance_1 l "" -STARTLINE T ColorCorrect6.mix_luminance}
addUserKnob {26 ""}
addUserKnob {41 maskChannel l "mask channel" t "if the mask input is unplugged then the input channel can be used" T Keymix3.maskChannel}
addUserKnob {41 invertMask l invert -STARTLINE T Keymix3.invertMask}
addUserKnob {26 ""}
addUserKnob {41 alpha l "(un)premult by" T Unpremult13535.alpha}
addUserKnob {41 mixBlend l mix T Blend1.mixBlend}
addUserKnob {20 Info}
addUserKnob {22 documentation l " Documentation / Feedback " T "import webbrowser\nwebbrowser.open(\"http://opennuke.github.io/gradeAov_nkV/\")" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {26 version l version: T v1.2}
addUserKnob {26 created l created: T "1/1/2015 by <a href=\\'http://movingimagearts.com'> Rafal Kaniewski</a>"}
addUserKnob {26 modified l "modified: " T "01/10/2016 :update to fix back clamp by Rafal_Kan\n2017/12/19 :v1: forked, renamed, premult per channel, colourspaceShift\n2018/01/01: added copyExpNode and solo/mute"}
addUserKnob {26 source l source: T "<a href='https://github.com/vfxwiki/gradeAOV/'> Github.com</a>"}
addUserKnob {26 licence l licence: T "<a href=\"https://github.com/openNuke/toolset/blob/master/LICENCE\">READ ME</a>"}
}
Input {
inputs 0
name Input
xpos -220
ypos -721
}
set N4eff4f00 [stack 0]
Dot {
name Dot8
xpos -995
ypos -718
}
Dot {
name Dot5
xpos -995
ypos 105
}
set N4eff4100 [stack 0]
Dot {
name Dot9
xpos -995
ypos 217
}
LayerContactSheet {
width {{width*6}}
height {{height*6}}
showLayerNames true
name LayerContactSheet1
xpos -632
ypos 213
}
push $N4eff4f00
Dot {
name Dot1
xpos -186
ypos -633
}
set N4fbf6b00 [stack 0]
Dot {
name Dot27
xpos -457
ypos -567
}
set N4fbf6400 [stack 0]
Dot {
name Dot26
xpos -646
ypos -567
}
Shuffle {
in LS_env_LGT_all
in2 alpha
alpha red2
name Shuffle5345
xpos -680
ypos -533
}
Premult {
name Premult1
xpos -680
ypos -507
}
set N4fbf4f00 [stack 0]
push $N4fbf6400
Merge2 {
inputs 2
operation from
Achannels rgb
Bchannels rgb
output rgb
name From
xpos -491
ypos -507
}
Dot {
name Dot15
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -457
ypos -422
}
set N4fbf4100 [stack 0]
Dot {
name Dot12
xpos -922
ypos -422
}
Dot {
name Dot14
xpos -922
ypos 172
}
push $N4fbf4f00
Unpremult {
alpha -rgba.alpha
name Unpremult13535
xpos -680
ypos -469
disable {{!alpha}}
addUserKnob {20 User}
}
Grade {
channels all
white {0.99 1 1.01 1}
white_panelDropped true
multiply 1.35
black_clamp false
name Grade273535
xpos -680
ypos -380
addUserKnob {20 User}
addUserKnob {18 exposure R -1 1}
exposure {{multiply==0|white==0|multiply==0?0:log10(multiply)/log10(2)+log10(white)/log10(2)}}
addUserKnob {6 exposure_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
Expression {
expr0 "pow(r/grey, value+1)*grey"
expr1 "pow(g/grey, value+1)*grey"
expr2 "pow(b/grey, value+1)*grey"
name contrast
xpos -680
ypos -322
addUserKnob {20 User}
addUserKnob {7 grey}
grey 0.18
addUserKnob {18 value R -1 1}
value {0 0 0}
addUserKnob {6 value_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
ColorCorrect {
channels all
enable_mix_luminance false
name ColorCorrect6
xpos -680
ypos -273
}
set N523f9600 [stack 0]
Dot {
name Dot4
xpos -833
ypos -263
}
Dot {
name Dot7
xpos -833
ypos 157
}
Dot {
name Dot10
xpos -403
ypos 186
}
Input {
inputs 0
name mask
label mask
xpos 65
ypos -760
number 1
}
Dot {
name Dot13
xpos 99
ypos 105
}
push $N4eff4100
Dot {
name Dot11
xpos -435
ypos 105
}
set N52ff9d00 [stack 0]
Switch {
inputs 2
which {{"\[exists parent.input1]"}}
name Switch1
xpos -177
ypos 101
disable {{"!\[exists parent.input1]"}}
}
Invert {
name Invert1
xpos -177
ypos 127
}
push $N52ff9d00
push $N523f9600
Dot {
name Dot6
xpos -646
ypos 39
}
push $N4fbf6b00
Dot {
name Dot2
xpos -186
ypos -321
}
Dot {
name Dot3
xpos -284
ypos -321
}
push $N523f9600
push $N4fbf4100
Clamp {
channels rgb
minimum_enable {{parent.Grade273535.black_clamp}}
maximum 1e+14
maximum_enable {{parent.Grade273535.white_clamp}}
name Clamp135345
xpos -491
ypos -374
}
Merge2 {
inputs 2
operation plus
Achannels rgb
Bchannels rgb
output rgb
name Merge34
xpos -491
ypos -267
}
Premult {
alpha {{{Unpremult1.alpha}}}
name Premult435345345
xpos -487
ypos -142
disable {{Unpremult13535.disable}}
}
Blend {
inputs 2
channels rgb
weight0 {{mixBlend}}
weight1 {{1-weight0}}
name Blend1
xpos -318
ypos -142
addUserKnob {20 User}
addUserKnob {7 mixBlend}
mixBlend 1
}
ShuffleCopy {
inputs 2
in {{{Shuffle.in}}}
alpha alpha2
black red
white green
red2 blue
out2 {{{Shuffle.in}}}
name ShuffleCopy1544235
xpos -318
ypos 35
disable {{!AlsoGradeChannel}}
addUserKnob {20 User}
addUserKnob {6 AlsoGradeChannel l "Also Grade Channel" +STARTLINE}
AlsoGradeChannel true
}
Keymix {
inputs 3
channels rgb
maskChannel -rgba.alpha
name Keymix3
xpos -318
ypos 161
disable {{!maskChannel}}
}
Switch {
inputs 4
which {{contact?3:mute?2:solo?1:0}}
name Switch3
xpos -318
ypos 196
addUserKnob {20 User}
addUserKnob {4 output M {"rgb graded by channel" "preview channel (solo)" "preview without (mute)" "channel contact sheet" "" "" "" "" ""}}
output "preview channel (solo)"
addUserKnob {6 solo +STARTLINE}
addUserKnob {6 mute -STARTLINE}
addUserKnob {6 contact -STARTLINE}
}
Output {
name Output1
xpos -318
ypos 385
}
end_group
Group {
inputs 2
name GradeAOV14
help "Colour correct the CG beauty using the secondary(aov) passes.with a subtractive process.\nto be used when:\n * the CG is good and only a few passes need adjusting\n * the secondaries don't add up to the beauty\n * rgb saturation (luminance mix on)\n * rgb contrast (with pivot)\n * matting with external mask input or main channel input or both with an operation.\n The order of correction is: Grade Node>Contrast Node>Saturation."
tile_color 0x8aa7dbff
label " \[value in]"
selected true
xpos 8808
ypos -7567
addUserKnob {20 User l GradeAOV}
addUserKnob {41 in l "Channel to use" T Shuffle5345.in}
addUserKnob {41 AlsoGradeChannel l "Also Grade Channel" t "as well as grading the beauty bake the grade into the selected channel" -STARTLINE T ShuffleCopy1544235.AlsoGradeChannel}
addUserKnob {41 solo T Switch3.solo}
addUserKnob {41 mute -STARTLINE T Switch3.mute}
addUserKnob {41 contact -STARTLINE T Switch3.contact}
addUserKnob {26 spacetxt l "                                                                                         " -STARTLINE T " "}
addUserKnob {22 NodeExpCopy l "Node Exp Copy" -STARTLINE T "knobsList = \[\"blackpoint\", \"whitepoint\", \"black\", \"white\", \"multiply\", \"add\", \"gamma\", \"reverse\", \"black_clamp\", \"white_clamp\", \"enable_mix_luminance\", \"mix_luminance\", \"value\", \"grey\", \"saturation\",\n \"enable_mix_luminance_1\", \"mix_luminance_1\", \"alpha\", \"mixBlend\"]\nnukescripts.clear_selection_recursive()\nn = nuke.thisNode()\nn\['selected'].setValue(True)\nwith nuke.root():\n nuke.nodeCopy(\"%clipboard%\")\n nuke.nodePaste(\"%clipboard%\")\n new_node = nuke.selectedNode()\n\n for j in new_node.knobs():\n\n  if j in  knobsList:\n   if isinstance(new_node.knob(j), nuke.Array_Knob):\n     new_node\[j].setSingleValue(False)\n   new_node\[j].setExpression( n.name() + '.' + j )\n\n\n"}
addUserKnob {26 ""}
addUserKnob {41 blackpoint T Grade273535.blackpoint}
addUserKnob {41 whitepoint T Grade273535.whitepoint}
addUserKnob {41 black l lift T Grade273535.black}
addUserKnob {41 white l gain T Grade273535.white}
addUserKnob {41 multiply T Grade273535.multiply}
addUserKnob {41 add l offset T Grade273535.add}
addUserKnob {41 gamma T Grade273535.gamma}
addUserKnob {41 reverse T Grade273535.reverse}
addUserKnob {41 black_clamp l "black clamp" -STARTLINE T Grade273535.black_clamp}
addUserKnob {41 white_clamp l "white clamp" -STARTLINE T Grade273535.white_clamp}
addUserKnob {26 text2 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance l "" -STARTLINE T Grade273535.enable_mix_luminance}
addUserKnob {41 mix_luminance l "" -STARTLINE T Grade273535.mix_luminance}
addUserKnob {26 "" l "  "}
addUserKnob {41 value l Contrast t " " T contrast.value}
addUserKnob {41 grey T contrast.grey}
addUserKnob {41 saturation T ColorCorrect6.saturation}
addUserKnob {26 text3 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance_1 l "" -STARTLINE T ColorCorrect6.enable_mix_luminance}
addUserKnob {41 mix_luminance_1 l "" -STARTLINE T ColorCorrect6.mix_luminance}
addUserKnob {26 ""}
addUserKnob {41 maskChannel l "mask channel" t "if the mask input is unplugged then the input channel can be used" T Keymix3.maskChannel}
addUserKnob {41 invertMask l invert -STARTLINE T Keymix3.invertMask}
addUserKnob {26 ""}
addUserKnob {41 alpha l "(un)premult by" T Unpremult13535.alpha}
addUserKnob {41 mixBlend l mix T Blend1.mixBlend}
addUserKnob {20 Info}
addUserKnob {22 documentation l " Documentation / Feedback " T "import webbrowser\nwebbrowser.open(\"http://opennuke.github.io/gradeAov_nkV/\")" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {26 version l version: T v1.2}
addUserKnob {26 created l created: T "1/1/2015 by <a href=\\'http://movingimagearts.com'> Rafal Kaniewski</a>"}
addUserKnob {26 modified l "modified: " T "01/10/2016 :update to fix back clamp by Rafal_Kan\n2017/12/19 :v1: forked, renamed, premult per channel, colourspaceShift\n2018/01/01: added copyExpNode and solo/mute"}
addUserKnob {26 source l source: T "<a href='https://github.com/vfxwiki/gradeAOV/'> Github.com</a>"}
addUserKnob {26 licence l licence: T "<a href=\"https://github.com/openNuke/toolset/blob/master/LICENCE\">READ ME</a>"}
}
Input {
inputs 0
name Input
xpos -220
ypos -721
}
set N54ff9600 [stack 0]
Dot {
name Dot8
xpos -995
ypos -718
}
Dot {
name Dot5
xpos -995
ypos 105
}
set N54ff8800 [stack 0]
Dot {
name Dot9
xpos -995
ypos 217
}
LayerContactSheet {
width {{width*6}}
height {{height*6}}
showLayerNames true
name LayerContactSheet1
xpos -632
ypos 213
}
push $N54ff9600
Dot {
name Dot1
xpos -186
ypos -633
}
set N567f7200 [stack 0]
Dot {
name Dot27
xpos -457
ypos -567
}
set N567f6b00 [stack 0]
Dot {
name Dot26
xpos -646
ypos -567
}
Shuffle {
in S_direct_reflect
in2 alpha
alpha red2
name Shuffle5345
xpos -680
ypos -533
}
Premult {
name Premult1
xpos -680
ypos -507
}
set N567f5600 [stack 0]
push $N567f6b00
Merge2 {
inputs 2
operation from
Achannels rgb
Bchannels rgb
output rgb
name From
xpos -491
ypos -507
}
Dot {
name Dot15
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -457
ypos -422
}
set N567f4800 [stack 0]
Dot {
name Dot12
xpos -922
ypos -422
}
Dot {
name Dot14
xpos -922
ypos 172
}
push $N567f5600
Unpremult {
alpha -rgba.alpha
name Unpremult13535
xpos -680
ypos -469
disable {{!alpha}}
addUserKnob {20 User}
}
Grade {
channels all
white {1.075 1 0.925 1}
white_panelDropped true
black_clamp false
name Grade273535
xpos -680
ypos -380
addUserKnob {20 User}
addUserKnob {18 exposure R -1 1}
exposure {{multiply==0|white==0|multiply==0?0:log10(multiply)/log10(2)+log10(white)/log10(2)}}
addUserKnob {6 exposure_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
Expression {
expr0 "pow(r/grey, value+1)*grey"
expr1 "pow(g/grey, value+1)*grey"
expr2 "pow(b/grey, value+1)*grey"
name contrast
xpos -680
ypos -322
addUserKnob {20 User}
addUserKnob {7 grey}
grey 0.18
addUserKnob {18 value R -1 1}
value {0 0 0}
addUserKnob {6 value_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
ColorCorrect {
channels all
enable_mix_luminance false
name ColorCorrect6
xpos -680
ypos -273
}
set N583f9d00 [stack 0]
Dot {
name Dot4
xpos -833
ypos -263
}
Dot {
name Dot7
xpos -833
ypos 157
}
Dot {
name Dot10
xpos -403
ypos 186
}
Input {
inputs 0
name mask
label mask
xpos 65
ypos -760
number 1
}
Dot {
name Dot13
xpos 99
ypos 105
}
push $N54ff8800
Dot {
name Dot11
xpos -435
ypos 105
}
set N58bf6400 [stack 0]
Switch {
inputs 2
which {{"\[exists parent.input1]"}}
name Switch1
xpos -177
ypos 101
disable {{"!\[exists parent.input1]"}}
}
Invert {
name Invert1
xpos -177
ypos 127
}
push $N58bf6400
push $N583f9d00
Dot {
name Dot6
xpos -646
ypos 39
}
push $N567f7200
Dot {
name Dot2
xpos -186
ypos -321
}
Dot {
name Dot3
xpos -284
ypos -321
}
push $N583f9d00
push $N567f4800
Clamp {
channels rgb
minimum_enable {{parent.Grade273535.black_clamp}}
maximum 1e+14
maximum_enable {{parent.Grade273535.white_clamp}}
name Clamp135345
xpos -491
ypos -374
}
Merge2 {
inputs 2
operation plus
Achannels rgb
Bchannels rgb
output rgb
name Merge34
xpos -491
ypos -267
}
Premult {
alpha {{{Unpremult1.alpha}}}
name Premult435345345
xpos -487
ypos -142
disable {{Unpremult13535.disable}}
}
Blend {
inputs 2
channels rgb
weight0 {{mixBlend}}
weight1 {{1-weight0}}
name Blend1
xpos -318
ypos -142
addUserKnob {20 User}
addUserKnob {7 mixBlend}
mixBlend 1
}
ShuffleCopy {
inputs 2
in {{{Shuffle.in}}}
alpha alpha2
black red
white green
red2 blue
out2 {{{Shuffle.in}}}
name ShuffleCopy1544235
xpos -318
ypos 35
disable {{!AlsoGradeChannel}}
addUserKnob {20 User}
addUserKnob {6 AlsoGradeChannel l "Also Grade Channel" +STARTLINE}
AlsoGradeChannel true
}
Keymix {
inputs 3
channels rgb
name Keymix3
xpos -318
ypos 161
disable {{!maskChannel}}
}
Switch {
inputs 4
which {{contact?3:mute?2:solo?1:0}}
name Switch3
xpos -318
ypos 196
addUserKnob {20 User}
addUserKnob {4 output M {"rgb graded by channel" "preview channel (solo)" "preview without (mute)" "channel contact sheet" "" "" "" "" ""}}
output "preview channel (solo)"
addUserKnob {6 solo +STARTLINE}
addUserKnob {6 mute -STARTLINE}
addUserKnob {6 contact -STARTLINE}
}
Output {
name Output1
xpos -318
ypos 385
}
end_group
Group {
name GradeAOV16
help "Colour correct the CG beauty using the secondary(aov) passes.with a subtractive process.\nto be used when:\n * the CG is good and only a few passes need adjusting\n * the secondaries don't add up to the beauty\n * rgb saturation (luminance mix on)\n * rgb contrast (with pivot)\n * matting with external mask input or main channel input or both with an operation.\n The order of correction is: Grade Node>Contrast Node>Saturation."
tile_color 0x8aa7dbff
label " \[value in]"
selected true
xpos 8808
ypos -7500
addUserKnob {20 User l GradeAOV}
addUserKnob {41 in l "Channel to use" T Shuffle5345.in}
addUserKnob {41 AlsoGradeChannel l "Also Grade Channel" t "as well as grading the beauty bake the grade into the selected channel" -STARTLINE T ShuffleCopy1544235.AlsoGradeChannel}
addUserKnob {41 solo T Switch3.solo}
addUserKnob {41 mute -STARTLINE T Switch3.mute}
addUserKnob {41 contact -STARTLINE T Switch3.contact}
addUserKnob {26 spacetxt l "                                                                                         " -STARTLINE T " "}
addUserKnob {22 NodeExpCopy l "Node Exp Copy" -STARTLINE T "knobsList = \[\"blackpoint\", \"whitepoint\", \"black\", \"white\", \"multiply\", \"add\", \"gamma\", \"reverse\", \"black_clamp\", \"white_clamp\", \"enable_mix_luminance\", \"mix_luminance\", \"value\", \"grey\", \"saturation\",\n \"enable_mix_luminance_1\", \"mix_luminance_1\", \"alpha\", \"mixBlend\"]\nnukescripts.clear_selection_recursive()\nn = nuke.thisNode()\nn\['selected'].setValue(True)\nwith nuke.root():\n nuke.nodeCopy(\"%clipboard%\")\n nuke.nodePaste(\"%clipboard%\")\n new_node = nuke.selectedNode()\n\n for j in new_node.knobs():\n\n  if j in  knobsList:\n   if isinstance(new_node.knob(j), nuke.Array_Knob):\n     new_node\[j].setSingleValue(False)\n   new_node\[j].setExpression( n.name() + '.' + j )\n\n\n"}
addUserKnob {26 ""}
addUserKnob {41 blackpoint T Grade273535.blackpoint}
addUserKnob {41 whitepoint T Grade273535.whitepoint}
addUserKnob {41 black l lift T Grade273535.black}
addUserKnob {41 white l gain T Grade273535.white}
addUserKnob {41 multiply T Grade273535.multiply}
addUserKnob {41 add l offset T Grade273535.add}
addUserKnob {41 gamma T Grade273535.gamma}
addUserKnob {41 reverse T Grade273535.reverse}
addUserKnob {41 black_clamp l "black clamp" -STARTLINE T Grade273535.black_clamp}
addUserKnob {41 white_clamp l "white clamp" -STARTLINE T Grade273535.white_clamp}
addUserKnob {26 text2 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance l "" -STARTLINE T Grade273535.enable_mix_luminance}
addUserKnob {41 mix_luminance l "" -STARTLINE T Grade273535.mix_luminance}
addUserKnob {26 "" l "  "}
addUserKnob {41 value l Contrast t " " T contrast.value}
addUserKnob {41 grey T contrast.grey}
addUserKnob {41 saturation T ColorCorrect6.saturation}
addUserKnob {26 text3 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance_1 l "" -STARTLINE T ColorCorrect6.enable_mix_luminance}
addUserKnob {41 mix_luminance_1 l "" -STARTLINE T ColorCorrect6.mix_luminance}
addUserKnob {26 ""}
addUserKnob {41 maskChannel l "mask channel" t "if the mask input is unplugged then the input channel can be used" T Keymix3.maskChannel}
addUserKnob {41 invertMask l invert -STARTLINE T Keymix3.invertMask}
addUserKnob {26 ""}
addUserKnob {41 alpha l "(un)premult by" T Unpremult13535.alpha}
addUserKnob {41 mixBlend l mix T Blend1.mixBlend}
addUserKnob {20 Info}
addUserKnob {22 documentation l " Documentation / Feedback " T "import webbrowser\nwebbrowser.open(\"http://opennuke.github.io/gradeAov_nkV/\")" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {26 version l version: T v1.2}
addUserKnob {26 created l created: T "1/1/2015 by <a href=\\'http://movingimagearts.com'> Rafal Kaniewski</a>"}
addUserKnob {26 modified l "modified: " T "01/10/2016 :update to fix back clamp by Rafal_Kan\n2017/12/19 :v1: forked, renamed, premult per channel, colourspaceShift\n2018/01/01: added copyExpNode and solo/mute"}
addUserKnob {26 source l source: T "<a href='https://github.com/vfxwiki/gradeAOV/'> Github.com</a>"}
addUserKnob {26 licence l licence: T "<a href=\"https://github.com/openNuke/toolset/blob/master/LICENCE\">READ ME</a>"}
}
Input {
inputs 0
name Input
xpos -220
ypos -721
}
set N5abf5d00 [stack 0]
Dot {
name Dot8
xpos -995
ypos -718
}
Dot {
name Dot5
xpos -995
ypos 105
}
set N5abf4f00 [stack 0]
Dot {
name Dot9
xpos -995
ypos 217
}
LayerContactSheet {
width {{width*6}}
height {{height*6}}
showLayerNames true
name LayerContactSheet1
xpos -632
ypos 213
}
push $N5abf5d00
Dot {
name Dot1
xpos -186
ypos -633
}
set N5c7f7900 [stack 0]
Dot {
name Dot27
xpos -457
ypos -567
}
set N5c7f7200 [stack 0]
Dot {
name Dot26
xpos -646
ypos -567
}
Shuffle {
in rgb
in2 alpha
alpha red2
name Shuffle5345
xpos -680
ypos -533
}
Premult {
name Premult1
xpos -680
ypos -507
}
set N5c7f5d00 [stack 0]
push $N5c7f7200
Merge2 {
inputs 2
operation from
Achannels rgb
Bchannels rgb
output rgb
name From
xpos -491
ypos -507
}
Dot {
name Dot15
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -457
ypos -422
}
set N5c7f4f00 [stack 0]
Dot {
name Dot12
xpos -922
ypos -422
}
Dot {
name Dot14
xpos -922
ypos 172
}
push $N5c7f5d00
Unpremult {
alpha -rgba.alpha
name Unpremult13535
xpos -680
ypos -469
disable {{!alpha}}
addUserKnob {20 User}
}
Grade {
channels all
white_panelDropped true
multiply 1.5
gamma 1.1
black_clamp false
name Grade273535
xpos -680
ypos -380
addUserKnob {20 User}
addUserKnob {18 exposure R -1 1}
exposure {{multiply==0|white==0|multiply==0?0:log10(multiply)/log10(2)+log10(white)/log10(2)}}
addUserKnob {6 exposure_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
Expression {
expr0 "pow(r/grey, value+1)*grey"
expr1 "pow(g/grey, value+1)*grey"
expr2 "pow(b/grey, value+1)*grey"
name contrast
xpos -680
ypos -322
addUserKnob {20 User}
addUserKnob {7 grey}
grey 0.18
addUserKnob {18 value R -1 1}
value {0 0 0}
addUserKnob {6 value_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
ColorCorrect {
channels all
enable_mix_luminance false
name ColorCorrect6
xpos -680
ypos -273
}
set N5dffa400 [stack 0]
Dot {
name Dot4
xpos -833
ypos -263
}
Dot {
name Dot7
xpos -833
ypos 157
}
Dot {
name Dot10
xpos -403
ypos 186
}
Input {
inputs 0
name mask
label mask
xpos 65
ypos -760
number 1
}
Dot {
name Dot13
xpos 99
ypos 105
}
push $N5abf4f00
Dot {
name Dot11
xpos -435
ypos 105
}
set N5f7f6b00 [stack 0]
Switch {
inputs 2
which {{"\[exists parent.input1]"}}
name Switch1
xpos -177
ypos 101
disable {{"!\[exists parent.input1]"}}
}
Invert {
name Invert1
xpos -177
ypos 127
}
push $N5f7f6b00
push $N5dffa400
Dot {
name Dot6
xpos -646
ypos 39
}
push $N5c7f7900
Dot {
name Dot2
xpos -186
ypos -321
}
Dot {
name Dot3
xpos -284
ypos -321
}
push $N5dffa400
push $N5c7f4f00
Clamp {
channels rgb
minimum_enable {{parent.Grade273535.black_clamp}}
maximum 1e+14
maximum_enable {{parent.Grade273535.white_clamp}}
name Clamp135345
xpos -491
ypos -374
}
Merge2 {
inputs 2
operation plus
Achannels rgb
Bchannels rgb
output rgb
name Merge34
xpos -491
ypos -267
}
Premult {
alpha {{{Unpremult1.alpha}}}
name Premult435345345
xpos -487
ypos -142
disable {{Unpremult13535.disable}}
}
Blend {
inputs 2
channels rgb
weight0 {{mixBlend}}
weight1 {{1-weight0}}
name Blend1
xpos -318
ypos -142
addUserKnob {20 User}
addUserKnob {7 mixBlend}
mixBlend 1
}
ShuffleCopy {
inputs 2
in {{{Shuffle.in}}}
alpha alpha2
black red
white green
red2 blue
out2 {{{Shuffle.in}}}
name ShuffleCopy1544235
xpos -318
ypos 35
disable {{!AlsoGradeChannel}}
addUserKnob {20 User}
addUserKnob {6 AlsoGradeChannel l "Also Grade Channel" +STARTLINE}
AlsoGradeChannel true
}
Keymix {
inputs 3
channels rgb
maskChannel -rgba.alpha
name Keymix3
xpos -318
ypos 161
disable {{!maskChannel}}
}
Switch {
inputs 4
which {{contact?3:mute?2:solo?1:0}}
name Switch3
xpos -318
ypos 196
addUserKnob {20 User}
addUserKnob {4 output M {"rgb graded by channel" "preview channel (solo)" "preview without (mute)" "channel contact sheet" "" "" "" "" ""}}
output "preview channel (solo)"
addUserKnob {6 solo +STARTLINE}
addUserKnob {6 mute -STARTLINE}
addUserKnob {6 contact -STARTLINE}
}
Output {
name Output1
xpos -318
ypos 385
}
end_group
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy10
selected true
xpos 8816
ypos -7439
}
Premult {
channels all
name Premult7
selected true
xpos 8816
ypos -7374
}
Copy {
inputs 2
from0 rgba.alpha
to0 -rgba.alpha
channels zDepth
name Copy11
selected true
xpos 8816
ypos -7318
}
Dot {
name Dot336
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 8842
ypos -6943
}
Dot {
name Dot337
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9379
ypos -6943
}
set N31699d00 [stack 0]
Dot {
name Dot338
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9378
ypos -6883
}
push $N31699d00
Read {
inputs 0
file_type exr
file /coppi/proj/thrg/ftrack/assets/s01e01/015-0250/img/thrg_s01e01_015-0250_pmModuleBTY_v008_beauty_acescg/thrg_s01e01_015-0250_pmModuleBTY_beauty_acescg_v008.%04d.exr
format "2272 1582 0 0 2272 1582 1 "
first 1001
last 1161
origfirst 1001
origlast 1161
origset true
name pmModuleBTY_beauty_acescg1
tile_color 0x14a14aff
selected true
xpos 9491
ypos -9322
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname beauty_acescg
addUserKnob {20 ftrack}
addUserKnob {1 componentId}
componentId d8ed04ec-820c-4fae-9c49-135b5ed07141
addUserKnob {1 componentName}
componentName beauty_acescg
addUserKnob {1 assetVersionId}
assetVersionId e2553ad0-bef3-4ad2-9956-0ae9a3146983
addUserKnob {1 assetVersion}
assetVersion 8
addUserKnob {1 assetName}
assetName pmModuleBTY
addUserKnob {1 assetType}
assetType img
addUserKnob {4 versionType l "Version Type" M {latest stable pinned}}
}
Dot {
name Dot339
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9525
ypos -9079
}
Group {
name Reformat_Overscan6
selected true
xpos 9491
ypos -8752
addUserKnob {20 User l Reformat_Overscan}
addUserKnob {41 format l "output format" T ReformatMASTER.format}
addUserKnob {41 filter T ReformatOverscanMASTER.filter}
addUserKnob {41 overscanPercent T ReformatOverscanMASTER.overscanPercent}
addUserKnob {20 info}
addUserKnob {26 version l ver: T "v1 rafal 10/02/2020"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust4
tile_color 0xaaaaaaff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 42
xpos -987
ypos -496
bdwidth 280
bdheight 332
z_order -92960
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "Flat plate res"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Black
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
Input {
inputs 0
name Input1
xpos -884
ypos -382
}
Reformat {
format {{{parent.parent.Reformat_OverscanMASTER.ReformatMASTER.format}}}
pbb true
name ReformatMASTER
xpos -884
ypos -342
}
Reformat {
type scale
scale {{overscanPercent==0?1:1-(1/overscanPercent)}}
resize none
filter impulse
pbb true
name ReformatOverscanMASTER
xpos -884
ypos -288
addUserKnob {20 User l percent}
addUserKnob {7 overscanPercent R 0 80}
overscanPercent {{parent.parent.Reformat_OverscanMASTER.ReformatOverscanMASTER.overscanPercent}}
}
Crop {
box {{-ceil(((input.height*((1-ReformatOverscanMASTER.scale)))*0.5))} {-ceil(((input.width*((1-ReformatOverscanMASTER.scale)))*0.5))} {ceil(input.width+((input.width*(1-ReformatOverscanMASTER.scale))*0.5))} {ceil(input.height+((input.height*(1-ReformatOverscanMASTER.scale))*0.5))}}
name CropOverscanMASTER
xpos -884
ypos -244
addUserKnob {20 User}
}
set N31671600 [stack 0]
Output {
name Output1
xpos -884
ypos -144
}
push $N31671600
Viewer {
frame_range 994-1161
fps 25
viewerProcess "sRGB (ACES)"
name Viewer1
xpos -624
ypos -303
}
end_group
Group {
name depthCombo4
selected true
xpos 9491
ypos -8669
addUserKnob {20 User l depthCombo}
addUserKnob {41 math l "input math" T Expression14.math}
addUserKnob {41 from0 l "in depth filtered" T Copyf.from0}
addUserKnob {41 from0_1 l "in depth ufiltered" T Copy.from0}
addUserKnob {41 to0 l output T Copyf1.to0}
addUserKnob {26 txt l output: T "camera =0 (arnold, vray) i.e. real/distance from camera"}
}
Input {
inputs 0
name Input1
xpos 1288
ypos 197
}
set N31633900 [stack 0]
AddChannels {
channels zDepth
name AddChannels1
xpos 895
ypos 227
}
Dot {
name Dot65
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 929
ypos 315
}
set N31632400 [stack 0]
Expression {
channel0 alpha
expr0 alpha==1
name Expression13
xpos 1023
ypos 403
}
push $N31632400
push $N31632400
Multiply {
channels rgb
value 0
name Multiply1
xpos 826
ypos 358
}
set N31631600 [stack 0]
Copy {
inputs 2
from0 zDepth.filtered
to0 rgba.red
name Copy
xpos 901
ypos 426
}
push $N31632400
Dot {
name Dot1
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 757
ypos 315
}
push $N31631600
Copy {
inputs 2
from0 zDepth.unfiltered
to0 rgba.red
name Copyf
xpos 764
ypos 426
}
Keymix {
inputs 3
channels {rgba.red -rgba.green -rgba.blue none}
invertMask true
name Keymix8
xpos 895
ypos 545
}
Expression {
temp_name0 recip
temp_expr0 1/r
expr0 r>0?recip==inf?0:recip:0
channel1 {-rgba.red -rgba.green -rgba.blue none}
channel2 {-rgba.red -rgba.green -rgba.blue none}
name Expression14
xpos 895
ypos 620
disable {{math}}
addUserKnob {20 User}
addUserKnob {4 math l "input math" M {"infinity = 0 (nuke, renderMan)" "camera = 0 (arnold, vray)"}}
math "camera = 0 (arnold, vray)"
}
push $N31633900
Copy {
inputs 2
from0 rgba.red
to0 zDepth.combo
name Copyf1
xpos 1288
ypos 614
}
Output {
name Output1
xpos 1288
ypos 784
}
end_group
Dot {
name Dot81
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9525
ypos -7852
}
set N31611600 [stack 0]
Dot {
name Dot82
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9787
ypos -7852
}
Dot {
name Dot154
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9787
ypos -7652
}
set Nea0ee400 [stack 0]
Dot {
name Dot159
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9784
ypos -7378
}
set N617f6400 [stack 0]
Dot {
name Dot83
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9787
ypos -7262
}
push $N617f6400
push $Nea0ee400
Dot {
name Dot107
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9707
ypos -7652
}
Log2Lin {
operation lin2log
name Log2Lin5
selected true
xpos 9673
ypos -7622
}
Keyer {
operation "luminance key"
range {0.72483001 0.78 1 1}
name Keyer3
selected true
xpos 9673
ypos -7603
}
Log2Lin {
name Log2Lin6
selected true
xpos 9673
ypos -7565
}
Group {
name key_chew12
help "======== KeyChew beta ========\n=============================\n\nThis is a port of the KeyChew macro for Shake to Nuke.\n\nThere might be tiny differences on the results given in both apps. Some of them are caused by the internal algorithms of each app, and others by the way I faked the JSplineV\nexpression of Shake in Nuke. If you know a better way to solve this, let\nme know!!\n\n=============================\n             2009 Cuco Bures\n============================="
selected true
xpos 9673
ypos -7539
addUserKnob {20 Controls}
addUserKnob {7 chew t "\t\t" R -200 200}
chew -11
addUserKnob {7 soften R 0 200}
soften 1
addUserKnob {6 matteMult +STARTLINE}
}
Input {
inputs 0
name Input
xpos -40
ypos -9
}
set Ndf2b8f00 [stack 0]
Dot {
name Dot1
xpos 324
ypos -6
}
set Ndf2b8800 [stack 0]
push $Ndf2b8800
Invert {
name Invert1
xpos 176
ypos 33
}
push $Ndf2b8800
Switch {
inputs 2
which {{"\[value chew]>=0?0:1"}}
name Switch1
xpos 180
ypos 87
}
Blur {
size {{"(floor(abs(\[value chew]))/4)+(floor(abs(\[value chew]))/8)"}}
name FgEdgeBlur
xpos 180
ypos 129
}
Grade {
channels alpha
multiply {1 1 1 {max(FgEdgeBlur.size*1.5,1)}}
black_clamp false
name FgEdgeMult
xpos 180
ypos 177
}
Grade {
channels alpha
gamma {1 1 1 {JSplineVFake(floor(abs(chew)))}}
name FgEdgeGamma1
xpos 180
ypos 225
addUserKnob {20 User}
addUserKnob {7 JSplineVFake}
JSplineVFake {{curve l 0.9958 k x5 0.95 0.8 x20 0.5 x40 0.3 x80 0.2 l x200 0.1}}
}
set Ndbd8b200 [stack 0]
Merge2 {
inputs 2
operation minus
name Merge1
xpos 290
ypos 231
}
push $Ndbd8b200
Switch {
inputs 2
which {{"\[value chew]>=0?0:1"}}
name Switch2
xpos 180
ypos 279
}
Clamp {
name Clamp2
xpos 180
ypos 321
}
Blur {
size {{"(floor(abs(\[value soften]))/4)+(floor(abs(\[value soften]))/8)"}}
name BlurResult
xpos 180
ypos 441
}
push $Ndf2b8f00
ShuffleCopy {
inputs 2
name ShuffleCopy1
xpos -40
ypos 447
}
Premult {
name Premult1
xpos -40
ypos 495
disable {{"1-\[value matteMult]"}}
}
Output {
name Output1
xpos -40
ypos 567
}
end_group
push $N31611600
Group {
name Rig_Incandecent
selected true
xpos 9491
ypos -7804
addUserKnob {20 User l Rig_Incandecent}
addUserKnob {26 txt_3 l Glow}
addUserKnob {41 intensity l Intensity T apGlow.intensity}
addUserKnob {41 persistance T apGlow.persistance}
addUserKnob {41 max_size l "max size" T apGlow.max_size}
addUserKnob {20 group l grading n 1}
addUserKnob {26 txt l Blubs}
addUserKnob {41 white l gain T Gradebulbs.white}
addUserKnob {41 multiply T Gradebulbs.multiply}
addUserKnob {41 gamma T Gradebulbs.gamma}
addUserKnob {41 flicker T MultiplyBulb.flicker}
addUserKnob {41 mix l flickerArea T Merge23stripMix1.mix}
addUserKnob {26 txt_1 l Strips}
addUserKnob {41 white_1 l gain T GradeStrips.white}
addUserKnob {41 multiply_1 l multiply T GradeStrips.multiply}
addUserKnob {41 gamma_1 l gamma T GradeStrips.gamma}
addUserKnob {41 value l coreMult T MultiplyCore.value}
addUserKnob {41 flicker_1 l flicker T MultiplyFluro.flicker}
addUserKnob {41 mix_1 l flickerArea T Merge23BulbMix.mix}
addUserKnob {26 txt_2 l Window}
addUserKnob {41 white_2 l gain T GradeWindows.white}
addUserKnob {41 multiply_2 l multiply T GradeWindows.multiply}
addUserKnob {41 gamma_2 l gamma T GradeWindows.gamma}
addUserKnob {20 endGroup n -1}
addUserKnob {20 info}
addUserKnob {26 txt_4 l ver: T " v1.0 1/3/22 rafs"}
}
Input {
inputs 0
name Input1
xpos -228
ypos -218
}
Dot {
name Dot115
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -194
ypos -178
}
set N3133e400 [stack 0]
Dot {
name Dot122
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 25
ypos -174
}
set N3133dd00 [stack 0]
Dot {
name Dot120
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 206
ypos -174
}
set N3133d600 [stack 0]
Dot {
name Dot118
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 323
ypos -174
}
set N3133cf00 [stack 0]
Dot {
name Dot127
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 733
ypos -174
}
set N3133c800 [stack 0]
Dot {
name Dot128
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 903
ypos -174
}
Dot {
name Dot129
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 991
ypos 419
}
set N3131f900 [stack 0]
P_Noise3D {
name P_Noise3D5
xpos 946
ypos 474
in pWorld
output alpha
size {2 {size.x*5} {size.x}}
offset {{int(frame*0.5)} 0 0}
}
push $N3131f900
P_Noise3D {
name P_Noise3D6
xpos 1098
ypos 489
in pWorld
output alpha
size {2 {size.x*5} {size.x}}
offset {{int(frame*0.5)} 10 10}
}
Merge2 {
inputs 2
operation multiply
name Merge23stripMix1
xpos 1028
ypos 536
}
Grade {
channels alpha
multiply 5
gamma 0.5
white_clamp true
name Grade19
xpos 992
ypos 563
}
push $N3131f900
P_Noise3D {
name P_Noise3D4
xpos 825
ypos 491
in pWorld
output alpha
size {0.2 {size.x*15} {size.x}}
offset {{(int(frame+2))} -2 -2}
}
Grade {
channels alpha
multiply 3
gamma 0.4
white_clamp true
name Grade18
xpos 825
ypos 552
}
Merge2 {
inputs 2
operation multiply
name Merge25
xpos 825
ypos 607
}
Transform {
scale {1 1}
center {1153 811}
shutteroffset centred
name Transform1
xpos 306
ypos 524
}
Crop {
box {0 0 {width} {height}}
name Crop1
xpos 306
ypos 595
}
push $N3133dd00
Shuffle2 {
fromInput1 {{0} B}
in1 {other.alpha_extra other.lightColor other.lightID other.lightSwitch other.mtoa_constant_UnitLightColor other.mtoa_constant_UnitLightID other.mtoa_constant_UnitLightSwitch other.oceanCusp}
fromInput2 {{0} B}
mappings "4 black -1 -1 rgba.alpha 0 3 other.lightSwitch 0 3 rgba.red 0 0 other.lightSwitch 0 3 rgba.green 0 1 other.lightSwitch 0 3 rgba.blue 0 2"
name Shuffle15
label "\[value in1]"
xpos -9
ypos -61
}
set N31046400 [stack 0]
push $N3133d600
Shuffle2 {
fromInput1 {{0} B}
in1 {other.alpha_extra other.lightColor other.lightID other.lightSwitch other.mtoa_constant_UnitLightColor other.mtoa_constant_UnitLightID other.mtoa_constant_UnitLightSwitch other.oceanCusp}
fromInput2 {{0} B}
mappings "4 black -1 -1 rgba.alpha 0 3 other.lightColor 0 1 rgba.red 0 0 other.lightColor 0 1 rgba.green 0 1 other.lightColor 0 1 rgba.blue 0 2"
name Shuffle13
label "\[value in1]"
xpos 152
ypos -99
}
set N31045d00 [stack 0]
Difference {
inputs 2
name Difference1
xpos 29
ypos 4
}
FilterErode {
size 2
filter gaussian
name FilterErode3
xpos 29
ypos 42
}
Grade {
multiply 3
name Grade17
xpos 29
ypos 80
}
Grade {
channels alpha
multiply 2
white_clamp true
name Grade20
xpos 29
ypos 106
}
Premult {
name Premult3
xpos 29
ypos 161
}
Dot {
name Dot104
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 63
ypos 359
}
set N3100c800 [stack 0]
FilterErode {
size -2
name FilterErode5
xpos 74
ypos 356
}
push $N31046400
Grade {
channels rgba
whitepoint 0.9998067021
white 0.52
gamma 1.09
white_clamp true
name Grade5
xpos 217
ypos 13
}
set N3100b200 [stack 0]
push $N3133cf00
Shuffle2 {
fromInput1 {{0} B}
in1 {other.alpha_extra other.lightColor other.lightID other.lightSwitch other.mtoa_constant_UnitLightColor other.mtoa_constant_UnitLightID other.mtoa_constant_UnitLightSwitch other.oceanCusp}
fromInput2 {{0} B}
in2 alpha
mappings "4 other.lightID 0 2 rgba.red 0 0 other.lightID 0 2 rgba.green 0 1 other.lightID 0 2 rgba.blue 0 2 rgba.alpha 1 0 rgba.alpha 0 3"
name Shuffle12
label "\[value in1]"
xpos 289
ypos -128
}
set N30ffb900 [stack 0]
Grade {
channels rgba
blackpoint 0.1193237305
whitepoint 11067.95703
multiply 0.19
gamma 0.345
white_clamp true
name Grade7
xpos 289
ypos -46
}
Merge2 {
inputs 2
operation difference
name Merge19
xpos 289
ypos 65
}
push $N3100b200
push $N30ffb900
Grade {
channels rgba
blackpoint 0.1193237305
whitepoint 11067.95703
multiply 3.26
gamma 0.236
white_clamp true
name Grade9
xpos 424
ypos -42
}
Merge2 {
inputs 2
operation difference
name Merge20
xpos 424
ypos 61
}
set N30fcf900 [stack 0]
Difference {
inputs 2
name Difference2
xpos 357
ypos 118
}
FilterErode {
size 3
name FilterErode1
xpos 357
ypos 156
}
FilterErode {
size -5
name FilterErode2
xpos 357
ypos 207
}
push $N30fcf900
Shuffle2 {
fromInput1 {{0} B}
fromInput2 {{0} B}
mappings "4 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 black -1 -1 rgba.red 0 0 rgba.red 0 0 rgba.alpha 0 3"
name Shuffle14
label "\[value in1]"
xpos 494
ypos 138
}
ChannelMerge {
inputs 2
operation in
name ChannelMerge1
xpos 494
ypos 202
}
FilterErode {
size -0.02
filter quadratic
name FilterErode4
xpos 494
ypos 252
}
Grade {
channels alpha
whitepoint 0.5956
gamma 1.8
white_clamp true
name Grade12
xpos 494
ypos 279
}
set N311ab200 [stack 0]
push $N31045d00
Dot {
name Dot103
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 186
ypos 172
}
Shuffle2 {
fromInput1 {{0} B}
fromInput2 {{0} B}
mappings "4 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 black -1 -1 rgba.red 0 0 rgba.red 0 0 rgba.alpha 0 3"
name Shuffle16
label "\[value in1]"
xpos 152
ypos 190
}
ChannelMerge {
inputs 2
operation stencil
name ChannelMerge2
xpos 152
ypos 273
}
Multiply {
inputs 1+1
value 0
name Multiply4
xpos 152
ypos 366
}
Saturation {
saturation 0
name Saturation2
xpos 152
ypos 518
}
Multiply {
inputs 1+1
value {{1-flicker}}
name MultiplyFluro
xpos 155
ypos 609
addUserKnob {20 User}
addUserKnob {7 flicker}
flicker 0.3
}
set N3118cf00 [stack 0]
Viewer {
frame_range 1001-1237
fps 25
colour_sample_bbox {0.5437988043 -0.4518646896 0.5446661115 -0.4509974122}
samplepoints {{0.5437988043 -0.4483954906}
  }
viewerProcess "sRGB (ACES)"
name Viewer1
xpos 395
ypos 1412
}
push $N3133e400
Dot {
name Dot3
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -377
ypos -145
}
Dot {
name Dot2
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -377
ypos 1604
}
push $N3118cf00
FilterErode {
size {12 1}
filter gaussian
name FilterErode7
xpos 302
ypos 741
}
Grade {
channels alpha
blackpoint 0.026
whitepoint 0.85
gamma 0.765
white_clamp true
name Grade1
xpos 302
ypos 799
}
push $N3118cf00
Grade {
white {0.8422862291 0.9373040199 0.7385955453 1}
multiply 0.68
name GradeStrips
xpos 155
ypos 865
}
Multiply {
inputs 1+1
channels rgb
value 4
name MultiplyCore
xpos 154
ypos 913
}
Dot {
name windows2
tile_color 0x949494ff
label fluroStrips
note_font_size 22
note_font_color 0xffffffff
xpos 186
ypos 1158
}
set N31149d00 [stack 0]
push 0
push $N311ab200
Saturation {
saturation 0
name Saturation1
xpos 494
ypos 317
}
Premult {
name Premult6
xpos 494
ypos 356
}
Grade {
white {0.7426635027 0.8707515597 0.9373040199 1}
multiply 0.42
name GradeWindows
xpos 494
ypos 873
}
Dot {
name windows
tile_color 0x949494ff
label windows
note_font_size 22
note_font_color 0xffffffff
xpos 528
ypos 973
}
set N31124f00 [stack 0]
push $N3131f900
P_Noise3D {
name P_Noise3D1
xpos 1230
ypos 509
in pWorld
output alpha
size {0.2 {size.x} {size.x}}
offset {{frame} 0 0}
}
Grade {
channels alpha
multiply 3
gamma 0.4
white_clamp true
name Grade15
xpos 1230
ypos 570
}
push $N3131f900
P_Noise3D {
name P_Noise3D2
xpos 1349
ypos 501
in pWorld
output alpha
size {2 {size.x} {size.x}}
offset {{int(frame*0.1)} 0 0}
}
push $N3131f900
P_Noise3D {
name P_Noise3D3
xpos 1501
ypos 516
in pWorld
output alpha
size {2 {size.x} {size.x}}
offset {{int(frame*0.1)} 10 10}
}
Merge2 {
inputs 2
operation multiply
mix 0.76
name Merge23BulbMix
xpos 1431
ypos 563
}
Grade {
channels alpha
multiply 5
gamma 0.5
white_clamp true
name Grade16
xpos 1349
ypos 587
}
Merge2 {
inputs 2
operation multiply
name Merge22
xpos 1230
ypos 649
}
push $N3100c800
Dot {
name windows1
tile_color 0x949494ff
label bulbs
note_font_size 22
note_font_color 0xffffffff
xpos 63
ypos 475
}
push $N3133c800
Dot {
name Dot1
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 737
ypos 97
}
set N3124c100 [stack 0]
P_Matte {
name P_Matte1
xpos 822
ypos 170
in pWorld
output alpha
useAlpha false
center {25.96203423 36.25034 41.21370316}
scaling {4000 3 4000}
uniform_scale 6
falloffType Smooth
falloff 0.644
}
FilterErode {
size 5
name FilterErode6
xpos 822
ypos 208
}
push $N3124c100
Cryptomatte {
name Cryptomatte1
xpos 699
ypos 189
matteOutput alpha
matteList ""
cryptoLayer CryptoMaterial_a
expression ""
keyedName ""
previewExpression0 "((mantissa(abs(CryptoMaterial_a00.red)) * 1 % 0.25) * CryptoMaterial_a00.green + (mantissa(abs(CryptoMaterial_a00.blue)) * 1 % 0.25) * CryptoMaterial_a00.alpha + (mantissa(abs(CryptoMaterial_a01.red)) * 1 % 0.25) * CryptoMaterial_a01.green + (mantissa(abs(CryptoMaterial_a01.blue)) * 1 % 0.25) * CryptoMaterial_a01.alpha)"
previewExpression1 "((mantissa(abs(CryptoMaterial_a00.red)) * 16 % 0.25) * CryptoMaterial_a00.green + (mantissa(abs(CryptoMaterial_a00.blue)) * 16 % 0.25) * CryptoMaterial_a00.alpha + (mantissa(abs(CryptoMaterial_a01.red)) * 16 % 0.25) * CryptoMaterial_a01.green + (mantissa(abs(CryptoMaterial_a01.blue)) * 16 % 0.25) * CryptoMaterial_a01.alpha)"
previewExpression2 "((mantissa(abs(CryptoMaterial_a00.red)) * 64 % 0.25) * CryptoMaterial_a00.green + (mantissa(abs(CryptoMaterial_a00.blue)) * 64 % 0.25) * CryptoMaterial_a00.alpha + (mantissa(abs(CryptoMaterial_a01.red)) * 64 % 0.25) * CryptoMaterial_a01.green + (mantissa(abs(CryptoMaterial_a01.blue)) * 64 % 0.25) * CryptoMaterial_a01.alpha)"
previewExpression3 ""
previewChannel none
in00 CryptoMaterial_a00
in01 CryptoMaterial_a01
in02 CryptoMaterial_a02
in03 none
in04 none
in05 none
in06 none
in07 none
}
HueCorrect {
hue {sat {curve -0.001492381096 s-0.02999999933 v2.77112484 0.908650279 0.00398015976 s-0 u2.747416019 v2.909726858 0.5238806009 -0.001492500305 s0 u3 0.01492547989 -0.001492381096 s-0.02999999933 t-0 u0.6962256432}
  lum {curve 1 1 1 1 0.9690589905 1.007500768 1}
  red {curve 1 1.935820818 1 1.051434398 1 1 1}
  green {curve 1 1 1 1.397411227 1 1 1}
  blue {curve 0.6771144867 s0 t0.1400000006 0.75373137 0.75373137 0.5022648573 0.6120986938 0.024487257 0.6771144867 s0.1400000006 t0}
  r_sup {}
  g_sup {curve 1 1 1 1 0.9890546799 0.9890546799 1}
  b_sup {curve -0.00696516037 s0 1 0.1845772266 0.9671641588 0.983582139 0.2331717014 -0.00696516037}
  sat_thrsh {}}
name HueCorrect1
xpos 699
ypos 215
disable true
}
Saturation {
inputs 1+1
saturation 0
name Saturation3
xpos 697
ypos 278
}
HueCorrect {
hue {sat {curve 0.03134346008 s0 t0.008208990097 1.98507452 x1.804918051 0.07512450218 x3 1.722388029 x4 1.25721395 x5.877049446 0.02587080002 x6 0.03134346008}
  lum {curve 1.930348158 s0 1 1 1 1 1.809950113 1.930348158}
  red {}
  green {curve 1 1 1 0.9890546799 1 1 1}
  blue {curve 1 1 1 1.01094532 1 0.9945273399 1}
  r_sup {curve 1 1.399502516 1 1 1 1 1}
  g_sup {curve 1 1 0.6661691666 x2.949056864 1.601989985 x4 0.770149231 x5 1.01094532 1}
  b_sup {curve 0.04776120186 s0 0.5402985811 1 1.00547266 1 0.06417918205 0.04776120186}
  sat_thrsh {curve 0 0 0 0.05870652199 0 0 0}}
name HueCorrect2
xpos 699
ypos 339
}
Shuffle2 {
fromInput1 {{0} B}
fromInput2 {{0} B}
mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 white -1 -1 rgba.alpha 0 3"
name Shuffle18
label "\[value in1]"
xpos 699
ypos 406
}
Multiply {
inputs 1+1
value 0
invert_mask true
name Multiply3
xpos 699
ypos 465
}
Grade {
white {2.985129 1.626458 0.185129 2}
white_panelDropped true
multiply 2.2
name Gradebulbs
xpos 700
ypos 617
}
Multiply {
inputs 1+1
value {{1-flicker}}
name MultiplyBulb
xpos 699
ypos 657
addUserKnob {20 User}
addUserKnob {7 flicker l "" +STARTLINE}
flicker 0.51
}
Dot {
name windows3
tile_color 0x949494ff
label bulbs
note_font_size 22
note_font_color 0xffffffff
xpos 733
ypos 695
}
set N30ed7900 [stack 0]
Merge2 {
inputs 3+1
name Merge26
xpos 609
ypos 1165
}
set N30ed7200 [stack 0]
Group {
name apGlow
help "apGlow v1.1 by Adrian Pueyo\n\nExponential glow using a sub-frame iterative blur.\n\nWith the \"area\" input (optional) you can set only a part of the image to emit glow.\n\nCaveats:\n- This node will kill sub-frames as it relies on a floor NoTimeBlur. Do any other sub-frame operations before this!\n- NaN's will be turned black, but on rgba only.\n\nadrianpueyo.com, 2015-2018"
onCreate "n = nuke.thisNode()\nfor i in \['intensity','response','max_size','src_black','src_white','response']:\n    n\[i].setFlag(0x00000004)\nn\['max_size'].setRange(0,10000)\nn\['overscan'].setRange(0,1000)"
knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() in \[\"crop\",\"enableOverscan\"]:\n    kcv = n\[\"crop\"].value()\n    kov = n\[\"enableOverscan\"].value()\n    n\[\"enableOverscan\"].setEnabled(not kcv)\n    n\['overscan'].setEnabled(not kcv and kov)"
tile_color 0xe88543ff
xpos 411
ypos 1284
addUserKnob {20 apGlow}
addUserKnob {41 channels T KeepWhat.channels}
addUserKnob {7 intensity t "Intensity multiplier for the resulting glow." R 0 10}
intensity 0.72
addUserKnob {18 persistance t "Color gain of the largest step. Affects the other steps progressively, with 0 effect on the smallest one.\n\nUse as an inverse falloff or as a progressive color tint." R 0 10}
persistance 2.04
addUserKnob {6 persistance_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 persistance_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 tint t "Overall color multiplier for the intensity."}
tint 1
addUserKnob {6 tint_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 tint_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 effect_only l "effect only" +STARTLINE}
effect_only true
addUserKnob {26 ""}
addUserKnob {7 src_black l "src black" t "Black point of the source image's luminance.\nClip the effect below this luminance value." R 0 4}
src_black 0.005
addUserKnob {7 src_white l "src white" t "White point of the source image's luminance." R 0 4}
src_white 0.86
addUserKnob {41 white_clamp l clamp -STARTLINE T Grade1.white_clamp}
addUserKnob {7 response t "Gamma on the source image's luminance, to change the response curve falloff." R 0 4}
response 0.64
addUserKnob {26 ""}
addUserKnob {14 max_size l "max size" t "Maximum pixel size of the exponential glow." R 0 10000}
max_size 40
addUserKnob {14 falloff l "size falloff" t "Falloff adjustment on the exponential distribution of the blur sizes." R 0 10}
falloff 0.2
addUserKnob {3 steps t "Number of blur iterations to combine together."}
steps 10
addUserKnob {41 filter T Blur.filter}
addUserKnob {41 quality l "" -STARTLINE T Blur.quality}
addUserKnob {6 crop l "crop to format" -STARTLINE}
addUserKnob {14 overscan R 0 1000}
overscan 100
addUserKnob {6 enableOverscan l enable -STARTLINE}
enableOverscan true
addUserKnob {26 ""}
addUserKnob {41 maskChannelArea l area -STARTLINE T ExpressionArea.maskChannelMask}
addUserKnob {41 inject_area l inject -STARTLINE T ExpressionArea.inject}
addUserKnob {41 invert_area l invert -STARTLINE T ExpressionArea.invert_mask}
addUserKnob {41 fringe_area l fringe -STARTLINE T ExpressionArea.fringe}
addUserKnob {41 maskChannelMask l mask T Merge.maskChannelMask}
addUserKnob {41 inject -STARTLINE T Merge.inject}
addUserKnob {41 invert_mask l invert -STARTLINE T Merge.invert_mask}
addUserKnob {41 fringe -STARTLINE T Merge.fringe}
addUserKnob {41 mix T Merge.mix}
addUserKnob {26 version_author l "" t "apGlow v1.1\n2018" +STARTLINE T "<span style=\"color:#666\"><br/><b>apGlow v1.1</b> - <a href=\"http://www.adrianpueyo.com\" style=\"color:#666;text-decoration: none;\">adrianpueyo.com</a>, 2015-2018</span>"}
}
Input {
inputs 0
name Inputmask
xpos -748
ypos 847
number 2
}
Input {
inputs 0
name Inputarea
xpos -156
ypos 383
number 1
}
Input {
inputs 0
name Inputimg
xpos -638
ypos 220
}
NoTimeBlur {
rounding none
name NTB
xpos -638
ypos 267
}
Dot {
name Dot6
xpos -604
ypos 308
}
set N30cb3900 [stack 0]
Dot {
name Dot7
xpos -384
ypos 308
}
set N30cb3200 [stack 0]
Dot {
name Dot8
xpos -232
ypos 308
}
Remove {
name RemoveAll
xpos -266
ypos 345
}
Expression {
inputs 1+1
channel0 rgba
expr0 1
maskChannelMask -rgba.alpha
name ExpressionArea
xpos -266
ypos 383
disable {{"!\[exists parent.input1]"}}
}
Shuffle {
red white
green white
blue white
alpha white
name ShuffleWhite
xpos -266
ypos 409
disable {{"\[exists parent.input1]"}}
}
push $N30cb3200
Remove {
operation keep
channels rgba
name KeepWhat
xpos -418
ypos 377
}
Copy {
inputs 2
from0 rgba.alpha
to0 apGlowArea.red
name Copy1
xpos -418
ypos 403
disable {{"!\[exists parent.input1]"}}
}
Premult {
channels all
alpha apGlowArea.red
name Premult1
xpos -418
ypos 441
disable {{"!\[exists parent.input1]"}}
}
Remove {
channels apGlowArea
name RemoveArea
xpos -418
ypos 479
disable {{"!\[exists parent.input1]"}}
}
Dot {
name Dot5
xpos -384
ypos 532
}
set N30c83200 [stack 0]
Dot {
name Dot1
xpos -284
ypos 532
}
Saturation {
channels all
saturation 0
name Saturation1
xpos -318
ypos 572
}
set N30c82400 [stack 0]
Grade {
channels all
blackpoint {{parent.src_black}}
whitepoint {{parent.src_white}}
gamma {{parent.response}}
name Grade1
xpos -318
ypos 610
}
push $N30c83200
push $N30c82400
Merge2 {
inputs 2
operation divide
also_merge all
name Merge4
xpos -418
ypos 578
}
Merge2 {
inputs 2
operation multiply
also_merge all
name Merge3
xpos -418
ypos 616
}
Dot {
name DP
xpos -384
ypos 642
addUserKnob {20 User}
addUserKnob {14 j R 0 100}
j {{"pow(2, t*(log(parent.max_size*parent.falloff)/log(2)) )"} {"pow(2, t*(log(parent.max_size*parent.falloff)/log(2)) )"}}
}
Blur {
size {{"DP.j( (t%1)+1/parent.steps) / parent.falloff"} {"DP.j( (t%1)+1/parent.steps) / parent.falloff"}}
crop false
name Blur
xpos -418
ypos 660
}
Multiply {
value {{"parent.persistance * (t%1) + (1-t%1)"} {"parent.persistance * (t%1) + (1-t%1)"} {"parent.persistance * (t%1) + (1-t%1)"} {"parent.persistance * (t%1) + (1-t%1)"}}
name Multiply
xpos -418
ypos 699
}
TimeBlur {
divisions {{parent.steps}}
shutter 1
shutteroffset start
shuttercustomoffset 0
name TB
xpos -418
ypos 736
}
Multiply {
value {{parent.steps?parent.intensity*parent.tint:0} {parent.steps?parent.intensity*parent.tint:0} {parent.steps?parent.intensity*parent.tint:0} {parent.steps?parent.intensity*parent.tint:0}}
name MultiplyR
xpos -418
ypos 762
}
Expression {
expr0 isnan(r)?0:r
expr1 isnan(g)?0:g
expr2 isnan(b)?0:b
expr3 isnan(a)?0:a
name NanToBlack
xpos -418
ypos 800
}
push $N30cb3900
Dot {
name Dot4
xpos -604
ypos 582
}
set N30c49d00 [stack 0]
Dot {
name Dot2
xpos -494
ypos 582
}
Shuffle {
red black
green black
blue black
name Shuffle
xpos -528
ypos 660
disable {{!parent.effect_only}}
}
Remove {
operation keep
channels rgb
name Remove1
xpos -528
ypos 686
disable {{!parent.effect_only}}
}
Merge2 {
inputs 2
operation plus
output {rgba.red rgba.green rgba.blue -rgba.alpha}
also_merge all
name Merge1
xpos -528
ypos 800
}
Dot {
name Dot3
xpos -494
ypos 850
}
push $N30c49d00
Merge2 {
inputs 2+1
operation copy
output {rgba.red rgba.green rgba.blue -rgba.alpha}
also_merge all
maskChannelMask -rgba.alpha
name Merge
xpos -638
ypos 846
}
Crop {
box {{parent.crop?0:-parent.overscan} {parent.crop?0:-parent.overscan} {parent.crop?width:width+parent.overscan} {parent.crop?height:height+parent.overscan}}
intersect true
name CropOverscan
xpos -638
ypos 872
disable {{"!parent.enableOverscan && !parent.crop"}}
}
Output {
name Output
xpos -638
ypos 898
}
end_group
set N30ed6b00 [stack 0]
push $N30ed7200
Merge2 {
inputs 2
operation plus
name Plus1
xpos 596
ypos 1315
}
Shuffle2 {
fromInput1 {{0} B}
out1 incandescent
fromInput2 {{0} B}
mappings "3 rgba.red 0 0 incandescent.red 0 0 rgba.green 0 1 temp.green 0 1 rgba.blue 0 2 temp.blue 0 2"
name Shuffle1
label "\[value in1]"
xpos -83
ypos 1462
}
push $N30ed6b00
push $N30ed6b00
AddChannels {
channels LS_Incandecent_glow
name AddChannels4
xpos -108
ypos 1339
}
push $N31149d00
AddChannels {
channels LS_Incandecent_strips
name AddChannels3
xpos -111
ypos 1180
}
set N30c20100 [stack 0]
Dot {
name Dot136
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -77
ypos 1268
}
push $N30c20100
push $N31124f00
AddChannels {
channels LS_Incandecent_window
name AddChannels2
xpos -111
ypos 963
}
set N30bfab00 [stack 0]
Dot {
name Dot130
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -77
ypos 1051
}
push $N30bfab00
push $N30ed7900
AddChannels {
channels LS_Incandecent_bulb
name AddChannels1
xpos -114
ypos 704
}
set N30bf9600 [stack 0]
Dot {
name Dot126
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -80
ypos 792
}
push $N30bf9600
push $N3133e400
Dot {
name Dot116
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -194
ypos 400
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
channels LS_Incandecent_bulb
name Copy2
xpos -228
ypos 698
}
Merge2 {
inputs 2
name Merge21
xpos -228
ypos 788
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
channels LS_Incandecent_window
name Copy4
xpos -225
ypos 957
}
Merge2 {
inputs 2
name Merge23
xpos -225
ypos 1047
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
channels LS_Incandecent_strips
name Copy6
xpos -225
ypos 1174
}
Merge2 {
inputs 2
name Merge24
xpos -225
ypos 1264
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
channels LS_Incandecent_glow
name Copy1
xpos -222
ypos 1333
}
Merge2 {
inputs 2
operation plus
name Plus
xpos -225
ypos 1406
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
channels incandescent
name Copy5
xpos -225
ypos 1493
}
Merge2 {
operation plus
name Plus2
xpos -228
ypos 1566
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy3
xpos -236
ypos 1616
}
Output {
name Output1
xpos -236
ypos 1772
}
end_group
Unpremult {
channels all
name Unpremult5
selected true
xpos 9491
ypos -7743
}
Group {
name GradeAOV2
help "Colour correct the CG beauty using the secondary(aov) passes.with a subtractive process.\nto be used when:\n * the CG is good and only a few passes need adjusting\n * the secondaries don't add up to the beauty\n * rgb saturation (luminance mix on)\n * rgb contrast (with pivot)\n * matting with external mask input or main channel input or both with an operation.\n The order of correction is: Grade Node>Contrast Node>Saturation."
tile_color 0x8aa7dbff
label " \[value in]"
selected true
xpos 9491
ypos -7685
addUserKnob {20 User l GradeAOV}
addUserKnob {41 in l "Channel to use" T Shuffle5345.in}
addUserKnob {41 AlsoGradeChannel l "Also Grade Channel" t "as well as grading the beauty bake the grade into the selected channel" -STARTLINE T ShuffleCopy1544235.AlsoGradeChannel}
addUserKnob {41 solo T Switch3.solo}
addUserKnob {41 mute -STARTLINE T Switch3.mute}
addUserKnob {41 contact -STARTLINE T Switch3.contact}
addUserKnob {26 spacetxt l "                                                                                         " -STARTLINE T " "}
addUserKnob {22 NodeExpCopy l "Node Exp Copy" -STARTLINE T "knobsList = \[\"blackpoint\", \"whitepoint\", \"black\", \"white\", \"multiply\", \"add\", \"gamma\", \"reverse\", \"black_clamp\", \"white_clamp\", \"enable_mix_luminance\", \"mix_luminance\", \"value\", \"grey\", \"saturation\",\n \"enable_mix_luminance_1\", \"mix_luminance_1\", \"alpha\", \"mixBlend\"]\nnukescripts.clear_selection_recursive()\nn = nuke.thisNode()\nn\['selected'].setValue(True)\nwith nuke.root():\n nuke.nodeCopy(\"%clipboard%\")\n nuke.nodePaste(\"%clipboard%\")\n new_node = nuke.selectedNode()\n\n for j in new_node.knobs():\n\n  if j in  knobsList:\n   if isinstance(new_node.knob(j), nuke.Array_Knob):\n     new_node\[j].setSingleValue(False)\n   new_node\[j].setExpression( n.name() + '.' + j )\n\n\n"}
addUserKnob {26 ""}
addUserKnob {41 blackpoint T Grade273535.blackpoint}
addUserKnob {41 whitepoint T Grade273535.whitepoint}
addUserKnob {41 black l lift T Grade273535.black}
addUserKnob {41 white l gain T Grade273535.white}
addUserKnob {41 multiply T Grade273535.multiply}
addUserKnob {41 add l offset T Grade273535.add}
addUserKnob {41 gamma T Grade273535.gamma}
addUserKnob {41 reverse T Grade273535.reverse}
addUserKnob {41 black_clamp l "black clamp" -STARTLINE T Grade273535.black_clamp}
addUserKnob {41 white_clamp l "white clamp" -STARTLINE T Grade273535.white_clamp}
addUserKnob {26 text2 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance l "" -STARTLINE T Grade273535.enable_mix_luminance}
addUserKnob {41 mix_luminance l "" -STARTLINE T Grade273535.mix_luminance}
addUserKnob {26 "" l "  "}
addUserKnob {41 value l Contrast t " " T contrast.value}
addUserKnob {41 grey T contrast.grey}
addUserKnob {41 saturation T ColorCorrect6.saturation}
addUserKnob {26 text3 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance_1 l "" -STARTLINE T ColorCorrect6.enable_mix_luminance}
addUserKnob {41 mix_luminance_1 l "" -STARTLINE T ColorCorrect6.mix_luminance}
addUserKnob {26 ""}
addUserKnob {41 maskChannel l "mask channel" t "if the mask input is unplugged then the input channel can be used" T Keymix3.maskChannel}
addUserKnob {41 invertMask l invert -STARTLINE T Keymix3.invertMask}
addUserKnob {26 ""}
addUserKnob {41 alpha l "(un)premult by" T Unpremult13535.alpha}
addUserKnob {41 mixBlend l mix T Blend1.mixBlend}
addUserKnob {20 Info}
addUserKnob {22 documentation l " Documentation / Feedback " T "import webbrowser\nwebbrowser.open(\"http://opennuke.github.io/gradeAov_nkV/\")" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {26 version l version: T v1.2}
addUserKnob {26 created l created: T "1/1/2015 by <a href=\\'http://movingimagearts.com'> Rafal Kaniewski</a>"}
addUserKnob {26 modified l "modified: " T "01/10/2016 :update to fix back clamp by Rafal_Kan\n2017/12/19 :v1: forked, renamed, premult per channel, colourspaceShift\n2018/01/01: added copyExpNode and solo/mute"}
addUserKnob {26 source l source: T "<a href='https://github.com/vfxwiki/gradeAOV/'> Github.com</a>"}
addUserKnob {26 licence l licence: T "<a href=\"https://github.com/openNuke/toolset/blob/master/LICENCE\">READ ME</a>"}
}
Input {
inputs 0
name Input
xpos -220
ypos -721
}
set N30d91600 [stack 0]
Dot {
name Dot8
xpos -995
ypos -718
}
Dot {
name Dot5
xpos -995
ypos 105
}
set N30d90800 [stack 0]
Dot {
name Dot9
xpos -995
ypos 217
}
LayerContactSheet {
width {{width*6}}
height {{height*6}}
showLayerNames true
name LayerContactSheet1
xpos -632
ypos 213
}
push $N30d91600
Dot {
name Dot1
xpos -186
ypos -633
}
set N30d6b200 [stack 0]
Dot {
name Dot27
xpos -457
ypos -567
}
set N30d6ab00 [stack 0]
Dot {
name Dot26
xpos -646
ypos -567
}
Shuffle {
in LS_sun_LGT_all
in2 alpha
alpha red2
name Shuffle5345
xpos -680
ypos -533
}
Premult {
name Premult1
xpos -680
ypos -507
}
set N30d69600 [stack 0]
push $N30d6ab00
Merge2 {
inputs 2
operation from
Achannels rgb
Bchannels rgb
output rgb
name From
xpos -491
ypos -507
}
Dot {
name Dot15
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -457
ypos -422
}
set N30d68800 [stack 0]
Dot {
name Dot12
xpos -922
ypos -422
}
Dot {
name Dot14
xpos -922
ypos 172
}
push $N30d69600
Unpremult {
alpha -rgba.alpha
name Unpremult13535
xpos -680
ypos -469
disable {{!alpha}}
addUserKnob {20 User}
}
Grade {
channels all
white {1.025 1 0.975 1}
white_panelDropped true
black_clamp false
name Grade273535
xpos -680
ypos -380
addUserKnob {20 User}
addUserKnob {18 exposure R -1 1}
exposure {{multiply==0|white==0|multiply==0?0:log10(multiply)/log10(2)+log10(white)/log10(2)}}
addUserKnob {6 exposure_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
Expression {
expr0 "pow(r/grey, value+1)*grey"
expr1 "pow(g/grey, value+1)*grey"
expr2 "pow(b/grey, value+1)*grey"
name contrast
xpos -680
ypos -322
addUserKnob {20 User}
addUserKnob {7 grey}
grey 0.18
addUserKnob {18 value R -1 1}
value {0 0 0}
addUserKnob {6 value_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
ColorCorrect {
channels all
saturation 0.64
enable_mix_luminance false
name ColorCorrect6
xpos -680
ypos -273
}
set N30d39d00 [stack 0]
Dot {
name Dot4
xpos -833
ypos -263
}
Dot {
name Dot7
xpos -833
ypos 157
}
Dot {
name Dot10
xpos -403
ypos 186
}
Input {
inputs 0
name mask
label mask
xpos 65
ypos -760
number 1
}
Dot {
name Dot13
xpos 99
ypos 105
}
push $N30d90800
Dot {
name Dot11
xpos -435
ypos 105
}
set N30cfe400 [stack 0]
Switch {
inputs 2
which {{"\[exists parent.input1]"}}
name Switch1
xpos -177
ypos 101
disable {{"!\[exists parent.input1]"}}
}
Invert {
name Invert1
xpos -177
ypos 127
}
push $N30cfe400
push $N30d39d00
Dot {
name Dot6
xpos -646
ypos 39
}
push $N30d6b200
Dot {
name Dot2
xpos -186
ypos -321
}
Dot {
name Dot3
xpos -284
ypos -321
}
push $N30d39d00
push $N30d68800
Clamp {
channels rgb
minimum_enable {{parent.Grade273535.black_clamp}}
maximum 1e+14
maximum_enable {{parent.Grade273535.white_clamp}}
name Clamp135345
xpos -491
ypos -374
}
Merge2 {
inputs 2
operation plus
Achannels rgb
Bchannels rgb
output rgb
name Merge34
xpos -491
ypos -267
}
Premult {
alpha {{{Unpremult1.alpha}}}
name Premult435345345
xpos -487
ypos -142
disable {{Unpremult13535.disable}}
}
Blend {
inputs 2
channels rgb
weight0 {{mixBlend}}
weight1 {{1-weight0}}
name Blend1
xpos -318
ypos -142
addUserKnob {20 User}
addUserKnob {7 mixBlend}
mixBlend 1
}
ShuffleCopy {
inputs 2
in {{{Shuffle.in}}}
alpha alpha2
black red
white green
red2 blue
out2 {{{Shuffle.in}}}
name ShuffleCopy1544235
xpos -318
ypos 35
disable {{!AlsoGradeChannel}}
addUserKnob {20 User}
addUserKnob {6 AlsoGradeChannel l "Also Grade Channel" +STARTLINE}
AlsoGradeChannel true
}
Keymix {
inputs 3
channels rgb
maskChannel -rgba.alpha
name Keymix3
xpos -318
ypos 161
disable {{!maskChannel}}
}
Switch {
inputs 4
which {{contact?3:mute?2:solo?1:0}}
name Switch3
xpos -318
ypos 196
addUserKnob {20 User}
addUserKnob {4 output M {"rgb graded by channel" "preview channel (solo)" "preview without (mute)" "channel contact sheet" "" "" "" "" ""}}
output "preview channel (solo)"
addUserKnob {6 solo +STARTLINE}
addUserKnob {6 mute -STARTLINE}
addUserKnob {6 contact -STARTLINE}
}
Output {
name Output1
xpos -318
ypos 385
}
end_group
Group {
name GradeAOV3
help "Colour correct the CG beauty using the secondary(aov) passes.with a subtractive process.\nto be used when:\n * the CG is good and only a few passes need adjusting\n * the secondaries don't add up to the beauty\n * rgb saturation (luminance mix on)\n * rgb contrast (with pivot)\n * matting with external mask input or main channel input or both with an operation.\n The order of correction is: Grade Node>Contrast Node>Saturation."
tile_color 0x8aa7dbff
label " \[value in]"
selected true
xpos 9491
ypos -7626
addUserKnob {20 User l GradeAOV}
addUserKnob {41 in l "Channel to use" T Shuffle5345.in}
addUserKnob {41 AlsoGradeChannel l "Also Grade Channel" t "as well as grading the beauty bake the grade into the selected channel" -STARTLINE T ShuffleCopy1544235.AlsoGradeChannel}
addUserKnob {41 solo T Switch3.solo}
addUserKnob {41 mute -STARTLINE T Switch3.mute}
addUserKnob {41 contact -STARTLINE T Switch3.contact}
addUserKnob {26 spacetxt l "                                                                                         " -STARTLINE T " "}
addUserKnob {22 NodeExpCopy l "Node Exp Copy" -STARTLINE T "knobsList = \[\"blackpoint\", \"whitepoint\", \"black\", \"white\", \"multiply\", \"add\", \"gamma\", \"reverse\", \"black_clamp\", \"white_clamp\", \"enable_mix_luminance\", \"mix_luminance\", \"value\", \"grey\", \"saturation\",\n \"enable_mix_luminance_1\", \"mix_luminance_1\", \"alpha\", \"mixBlend\"]\nnukescripts.clear_selection_recursive()\nn = nuke.thisNode()\nn\['selected'].setValue(True)\nwith nuke.root():\n nuke.nodeCopy(\"%clipboard%\")\n nuke.nodePaste(\"%clipboard%\")\n new_node = nuke.selectedNode()\n\n for j in new_node.knobs():\n\n  if j in  knobsList:\n   if isinstance(new_node.knob(j), nuke.Array_Knob):\n     new_node\[j].setSingleValue(False)\n   new_node\[j].setExpression( n.name() + '.' + j )\n\n\n"}
addUserKnob {26 ""}
addUserKnob {41 blackpoint T Grade273535.blackpoint}
addUserKnob {41 whitepoint T Grade273535.whitepoint}
addUserKnob {41 black l lift T Grade273535.black}
addUserKnob {41 white l gain T Grade273535.white}
addUserKnob {41 multiply T Grade273535.multiply}
addUserKnob {41 add l offset T Grade273535.add}
addUserKnob {41 gamma T Grade273535.gamma}
addUserKnob {41 reverse T Grade273535.reverse}
addUserKnob {41 black_clamp l "black clamp" -STARTLINE T Grade273535.black_clamp}
addUserKnob {41 white_clamp l "white clamp" -STARTLINE T Grade273535.white_clamp}
addUserKnob {26 text2 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance l "" -STARTLINE T Grade273535.enable_mix_luminance}
addUserKnob {41 mix_luminance l "" -STARTLINE T Grade273535.mix_luminance}
addUserKnob {26 "" l "  "}
addUserKnob {41 value l Contrast t " " T contrast.value}
addUserKnob {41 grey T contrast.grey}
addUserKnob {41 saturation T ColorCorrect6.saturation}
addUserKnob {26 text3 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance_1 l "" -STARTLINE T ColorCorrect6.enable_mix_luminance}
addUserKnob {41 mix_luminance_1 l "" -STARTLINE T ColorCorrect6.mix_luminance}
addUserKnob {26 ""}
addUserKnob {41 maskChannel l "mask channel" t "if the mask input is unplugged then the input channel can be used" T Keymix3.maskChannel}
addUserKnob {41 invertMask l invert -STARTLINE T Keymix3.invertMask}
addUserKnob {26 ""}
addUserKnob {41 alpha l "(un)premult by" T Unpremult13535.alpha}
addUserKnob {41 mixBlend l mix T Blend1.mixBlend}
addUserKnob {20 Info}
addUserKnob {22 documentation l " Documentation / Feedback " T "import webbrowser\nwebbrowser.open(\"http://opennuke.github.io/gradeAov_nkV/\")" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {26 version l version: T v1.2}
addUserKnob {26 created l created: T "1/1/2015 by <a href=\\'http://movingimagearts.com'> Rafal Kaniewski</a>"}
addUserKnob {26 modified l "modified: " T "01/10/2016 :update to fix back clamp by Rafal_Kan\n2017/12/19 :v1: forked, renamed, premult per channel, colourspaceShift\n2018/01/01: added copyExpNode and solo/mute"}
addUserKnob {26 source l source: T "<a href='https://github.com/vfxwiki/gradeAOV/'> Github.com</a>"}
addUserKnob {26 licence l licence: T "<a href=\"https://github.com/openNuke/toolset/blob/master/LICENCE\">READ ME</a>"}
}
Input {
inputs 0
name Input
xpos -220
ypos -721
}
set N30eb5d00 [stack 0]
Dot {
name Dot8
xpos -995
ypos -718
}
Dot {
name Dot5
xpos -995
ypos 105
}
set N30eb4f00 [stack 0]
Dot {
name Dot9
xpos -995
ypos 217
}
LayerContactSheet {
width {{width*6}}
height {{height*6}}
showLayerNames true
name LayerContactSheet1
xpos -632
ypos 213
}
push $N30eb5d00
Dot {
name Dot1
xpos -186
ypos -633
}
set N30e9b900 [stack 0]
Dot {
name Dot27
xpos -457
ypos -567
}
set N30e9b200 [stack 0]
Dot {
name Dot26
xpos -646
ypos -567
}
Shuffle {
in LS_env_LGT_all
in2 alpha
alpha red2
name Shuffle5345
xpos -680
ypos -533
}
Premult {
name Premult1
xpos -680
ypos -507
}
set N30e99d00 [stack 0]
push $N30e9b200
Merge2 {
inputs 2
operation from
Achannels rgb
Bchannels rgb
output rgb
name From
xpos -491
ypos -507
}
Dot {
name Dot15
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -457
ypos -422
}
set N30e98f00 [stack 0]
Dot {
name Dot12
xpos -922
ypos -422
}
Dot {
name Dot14
xpos -922
ypos 172
}
push $N30e99d00
Unpremult {
alpha -rgba.alpha
name Unpremult13535
xpos -680
ypos -469
disable {{!alpha}}
addUserKnob {20 User}
}
Grade {
channels all
white {0.99 1 1.01 1}
white_panelDropped true
multiply 1.35
black_clamp false
name Grade273535
xpos -680
ypos -380
addUserKnob {20 User}
addUserKnob {18 exposure R -1 1}
exposure {{multiply==0|white==0|multiply==0?0:log10(multiply)/log10(2)+log10(white)/log10(2)}}
addUserKnob {6 exposure_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
Expression {
expr0 "pow(r/grey, value+1)*grey"
expr1 "pow(g/grey, value+1)*grey"
expr2 "pow(b/grey, value+1)*grey"
name contrast
xpos -680
ypos -322
addUserKnob {20 User}
addUserKnob {7 grey}
grey 0.18
addUserKnob {18 value R -1 1}
value {0 0 0}
addUserKnob {6 value_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
ColorCorrect {
channels all
enable_mix_luminance false
name ColorCorrect6
xpos -680
ypos -273
}
set N30e6a400 [stack 0]
Dot {
name Dot4
xpos -833
ypos -263
}
Dot {
name Dot7
xpos -833
ypos 157
}
Dot {
name Dot10
xpos -403
ypos 186
}
Input {
inputs 0
name mask
label mask
xpos 65
ypos -760
number 1
}
Dot {
name Dot13
xpos 99
ypos 105
}
push $N30eb4f00
Dot {
name Dot11
xpos -435
ypos 105
}
set N30e3ab00 [stack 0]
Switch {
inputs 2
which {{"\[exists parent.input1]"}}
name Switch1
xpos -177
ypos 101
disable {{"!\[exists parent.input1]"}}
}
Invert {
name Invert1
xpos -177
ypos 127
}
push $N30e3ab00
push $N30e6a400
Dot {
name Dot6
xpos -646
ypos 39
}
push $N30e9b900
Dot {
name Dot2
xpos -186
ypos -321
}
Dot {
name Dot3
xpos -284
ypos -321
}
push $N30e6a400
push $N30e98f00
Clamp {
channels rgb
minimum_enable {{parent.Grade273535.black_clamp}}
maximum 1e+14
maximum_enable {{parent.Grade273535.white_clamp}}
name Clamp135345
xpos -491
ypos -374
}
Merge2 {
inputs 2
operation plus
Achannels rgb
Bchannels rgb
output rgb
name Merge34
xpos -491
ypos -267
}
Premult {
alpha {{{Unpremult1.alpha}}}
name Premult435345345
xpos -487
ypos -142
disable {{Unpremult13535.disable}}
}
Blend {
inputs 2
channels rgb
weight0 {{mixBlend}}
weight1 {{1-weight0}}
name Blend1
xpos -318
ypos -142
addUserKnob {20 User}
addUserKnob {7 mixBlend}
mixBlend 1
}
ShuffleCopy {
inputs 2
in {{{Shuffle.in}}}
alpha alpha2
black red
white green
red2 blue
out2 {{{Shuffle.in}}}
name ShuffleCopy1544235
xpos -318
ypos 35
disable {{!AlsoGradeChannel}}
addUserKnob {20 User}
addUserKnob {6 AlsoGradeChannel l "Also Grade Channel" +STARTLINE}
AlsoGradeChannel true
}
Keymix {
inputs 3
channels rgb
maskChannel -rgba.alpha
name Keymix3
xpos -318
ypos 161
disable {{!maskChannel}}
}
Switch {
inputs 4
which {{contact?3:mute?2:solo?1:0}}
name Switch3
xpos -318
ypos 196
addUserKnob {20 User}
addUserKnob {4 output M {"rgb graded by channel" "preview channel (solo)" "preview without (mute)" "channel contact sheet" "" "" "" "" ""}}
output "preview channel (solo)"
addUserKnob {6 solo +STARTLINE}
addUserKnob {6 mute -STARTLINE}
addUserKnob {6 contact -STARTLINE}
}
Output {
name Output1
xpos -318
ypos 385
}
end_group
Group {
inputs 2
name GradeAOV4
help "Colour correct the CG beauty using the secondary(aov) passes.with a subtractive process.\nto be used when:\n * the CG is good and only a few passes need adjusting\n * the secondaries don't add up to the beauty\n * rgb saturation (luminance mix on)\n * rgb contrast (with pivot)\n * matting with external mask input or main channel input or both with an operation.\n The order of correction is: Grade Node>Contrast Node>Saturation."
tile_color 0x8aa7dbff
label " \[value in]"
selected true
xpos 9491
ypos -7545
addUserKnob {20 User l GradeAOV}
addUserKnob {41 in l "Channel to use" T Shuffle5345.in}
addUserKnob {41 AlsoGradeChannel l "Also Grade Channel" t "as well as grading the beauty bake the grade into the selected channel" -STARTLINE T ShuffleCopy1544235.AlsoGradeChannel}
addUserKnob {41 solo T Switch3.solo}
addUserKnob {41 mute -STARTLINE T Switch3.mute}
addUserKnob {41 contact -STARTLINE T Switch3.contact}
addUserKnob {26 spacetxt l "                                                                                         " -STARTLINE T " "}
addUserKnob {22 NodeExpCopy l "Node Exp Copy" -STARTLINE T "knobsList = \[\"blackpoint\", \"whitepoint\", \"black\", \"white\", \"multiply\", \"add\", \"gamma\", \"reverse\", \"black_clamp\", \"white_clamp\", \"enable_mix_luminance\", \"mix_luminance\", \"value\", \"grey\", \"saturation\",\n \"enable_mix_luminance_1\", \"mix_luminance_1\", \"alpha\", \"mixBlend\"]\nnukescripts.clear_selection_recursive()\nn = nuke.thisNode()\nn\['selected'].setValue(True)\nwith nuke.root():\n nuke.nodeCopy(\"%clipboard%\")\n nuke.nodePaste(\"%clipboard%\")\n new_node = nuke.selectedNode()\n\n for j in new_node.knobs():\n\n  if j in  knobsList:\n   if isinstance(new_node.knob(j), nuke.Array_Knob):\n     new_node\[j].setSingleValue(False)\n   new_node\[j].setExpression( n.name() + '.' + j )\n\n\n"}
addUserKnob {26 ""}
addUserKnob {41 blackpoint T Grade273535.blackpoint}
addUserKnob {41 whitepoint T Grade273535.whitepoint}
addUserKnob {41 black l lift T Grade273535.black}
addUserKnob {41 white l gain T Grade273535.white}
addUserKnob {41 multiply T Grade273535.multiply}
addUserKnob {41 add l offset T Grade273535.add}
addUserKnob {41 gamma T Grade273535.gamma}
addUserKnob {41 reverse T Grade273535.reverse}
addUserKnob {41 black_clamp l "black clamp" -STARTLINE T Grade273535.black_clamp}
addUserKnob {41 white_clamp l "white clamp" -STARTLINE T Grade273535.white_clamp}
addUserKnob {26 text2 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance l "" -STARTLINE T Grade273535.enable_mix_luminance}
addUserKnob {41 mix_luminance l "" -STARTLINE T Grade273535.mix_luminance}
addUserKnob {26 "" l "  "}
addUserKnob {41 value l Contrast t " " T contrast.value}
addUserKnob {41 grey T contrast.grey}
addUserKnob {41 saturation T ColorCorrect6.saturation}
addUserKnob {26 text3 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance_1 l "" -STARTLINE T ColorCorrect6.enable_mix_luminance}
addUserKnob {41 mix_luminance_1 l "" -STARTLINE T ColorCorrect6.mix_luminance}
addUserKnob {26 ""}
addUserKnob {41 maskChannel l "mask channel" t "if the mask input is unplugged then the input channel can be used" T Keymix3.maskChannel}
addUserKnob {41 invertMask l invert -STARTLINE T Keymix3.invertMask}
addUserKnob {26 ""}
addUserKnob {41 alpha l "(un)premult by" T Unpremult13535.alpha}
addUserKnob {41 mixBlend l mix T Blend1.mixBlend}
addUserKnob {20 Info}
addUserKnob {22 documentation l " Documentation / Feedback " T "import webbrowser\nwebbrowser.open(\"http://opennuke.github.io/gradeAov_nkV/\")" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {26 version l version: T v1.2}
addUserKnob {26 created l created: T "1/1/2015 by <a href=\\'http://movingimagearts.com'> Rafal Kaniewski</a>"}
addUserKnob {26 modified l "modified: " T "01/10/2016 :update to fix back clamp by Rafal_Kan\n2017/12/19 :v1: forked, renamed, premult per channel, colourspaceShift\n2018/01/01: added copyExpNode and solo/mute"}
addUserKnob {26 source l source: T "<a href='https://github.com/vfxwiki/gradeAOV/'> Github.com</a>"}
addUserKnob {26 licence l licence: T "<a href=\"https://github.com/openNuke/toolset/blob/master/LICENCE\">READ ME</a>"}
}
Input {
inputs 0
name Input
xpos -220
ypos -721
}
set N6d6e0800 [stack 0]
Dot {
name Dot8
xpos -995
ypos -718
}
Dot {
name Dot5
xpos -995
ypos 105
}
set Ndf4b3900 [stack 0]
Dot {
name Dot9
xpos -995
ypos 217
}
LayerContactSheet {
width {{width*6}}
height {{height*6}}
showLayerNames true
name LayerContactSheet1
xpos -632
ypos 213
}
push $N6d6e0800
Dot {
name Dot1
xpos -186
ypos -633
}
set Ndf4b2400 [stack 0]
Dot {
name Dot27
xpos -457
ypos -567
}
set Ndf4b1d00 [stack 0]
Dot {
name Dot26
xpos -646
ypos -567
}
Shuffle {
in S_direct_reflect
in2 alpha
alpha red2
name Shuffle5345
xpos -680
ypos -533
}
Premult {
name Premult1
xpos -680
ypos -507
}
set Ndf4b0800 [stack 0]
push $Ndf4b1d00
Merge2 {
inputs 2
operation from
Achannels rgb
Bchannels rgb
output rgb
name From
xpos -491
ypos -507
}
Dot {
name Dot15
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -457
ypos -422
}
set Nc1dff900 [stack 0]
Dot {
name Dot12
xpos -922
ypos -422
}
Dot {
name Dot14
xpos -922
ypos 172
}
push $Ndf4b0800
Unpremult {
alpha -rgba.alpha
name Unpremult13535
xpos -680
ypos -469
disable {{!alpha}}
addUserKnob {20 User}
}
Grade {
channels all
white {1.075 1 0.925 1}
white_panelDropped true
black_clamp false
name Grade273535
xpos -680
ypos -380
addUserKnob {20 User}
addUserKnob {18 exposure R -1 1}
exposure {{multiply==0|white==0|multiply==0?0:log10(multiply)/log10(2)+log10(white)/log10(2)}}
addUserKnob {6 exposure_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
Expression {
expr0 "pow(r/grey, value+1)*grey"
expr1 "pow(g/grey, value+1)*grey"
expr2 "pow(b/grey, value+1)*grey"
name contrast
xpos -680
ypos -322
addUserKnob {20 User}
addUserKnob {7 grey}
grey 0.18
addUserKnob {18 value R -1 1}
value {0 0 0}
addUserKnob {6 value_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
ColorCorrect {
channels all
enable_mix_luminance false
name ColorCorrect6
xpos -680
ypos -273
}
set Nde29cf00 [stack 0]
Dot {
name Dot4
xpos -833
ypos -263
}
Dot {
name Dot7
xpos -833
ypos 157
}
Dot {
name Dot10
xpos -403
ypos 186
}
Input {
inputs 0
name mask
label mask
xpos 65
ypos -760
number 1
}
Dot {
name Dot13
xpos 99
ypos 105
}
push $Ndf4b3900
Dot {
name Dot11
xpos -435
ypos 105
}
set Ndf671600 [stack 0]
Switch {
inputs 2
which {{"\[exists parent.input1]"}}
name Switch1
xpos -177
ypos 101
disable {{"!\[exists parent.input1]"}}
}
Invert {
name Invert1
xpos -177
ypos 127
}
push $Ndf671600
push $Nde29cf00
Dot {
name Dot6
xpos -646
ypos 39
}
push $Ndf4b2400
Dot {
name Dot2
xpos -186
ypos -321
}
Dot {
name Dot3
xpos -284
ypos -321
}
push $Nde29cf00
push $Nc1dff900
Clamp {
channels rgb
minimum_enable {{parent.Grade273535.black_clamp}}
maximum 1e+14
maximum_enable {{parent.Grade273535.white_clamp}}
name Clamp135345
xpos -491
ypos -374
}
Merge2 {
inputs 2
operation plus
Achannels rgb
Bchannels rgb
output rgb
name Merge34
xpos -491
ypos -267
}
Premult {
alpha {{{Unpremult1.alpha}}}
name Premult435345345
xpos -487
ypos -142
disable {{Unpremult13535.disable}}
}
Blend {
inputs 2
channels rgb
weight0 {{mixBlend}}
weight1 {{1-weight0}}
name Blend1
xpos -318
ypos -142
addUserKnob {20 User}
addUserKnob {7 mixBlend}
mixBlend 1
}
ShuffleCopy {
inputs 2
in {{{Shuffle.in}}}
alpha alpha2
black red
white green
red2 blue
out2 {{{Shuffle.in}}}
name ShuffleCopy1544235
xpos -318
ypos 35
disable {{!AlsoGradeChannel}}
addUserKnob {20 User}
addUserKnob {6 AlsoGradeChannel l "Also Grade Channel" +STARTLINE}
AlsoGradeChannel true
}
Keymix {
inputs 3
channels rgb
name Keymix3
xpos -318
ypos 161
disable {{!maskChannel}}
}
Switch {
inputs 4
which {{contact?3:mute?2:solo?1:0}}
name Switch3
xpos -318
ypos 196
addUserKnob {20 User}
addUserKnob {4 output M {"rgb graded by channel" "preview channel (solo)" "preview without (mute)" "channel contact sheet" "" "" "" "" ""}}
output "preview channel (solo)"
addUserKnob {6 solo +STARTLINE}
addUserKnob {6 mute -STARTLINE}
addUserKnob {6 contact -STARTLINE}
}
Output {
name Output1
xpos -318
ypos 385
}
end_group
Group {
name GradeAOV21
help "Colour correct the CG beauty using the secondary(aov) passes.with a subtractive process.\nto be used when:\n * the CG is good and only a few passes need adjusting\n * the secondaries don't add up to the beauty\n * rgb saturation (luminance mix on)\n * rgb contrast (with pivot)\n * matting with external mask input or main channel input or both with an operation.\n The order of correction is: Grade Node>Contrast Node>Saturation."
tile_color 0x8aa7dbff
label " \[value in]"
selected true
xpos 9491
ypos -7485
addUserKnob {20 User l GradeAOV}
addUserKnob {41 in l "Channel to use" T Shuffle5345.in}
addUserKnob {41 AlsoGradeChannel l "Also Grade Channel" t "as well as grading the beauty bake the grade into the selected channel" -STARTLINE T ShuffleCopy1544235.AlsoGradeChannel}
addUserKnob {41 solo T Switch3.solo}
addUserKnob {41 mute -STARTLINE T Switch3.mute}
addUserKnob {41 contact -STARTLINE T Switch3.contact}
addUserKnob {26 spacetxt l "                                                                                         " -STARTLINE T " "}
addUserKnob {22 NodeExpCopy l "Node Exp Copy" -STARTLINE T "knobsList = \[\"blackpoint\", \"whitepoint\", \"black\", \"white\", \"multiply\", \"add\", \"gamma\", \"reverse\", \"black_clamp\", \"white_clamp\", \"enable_mix_luminance\", \"mix_luminance\", \"value\", \"grey\", \"saturation\",\n \"enable_mix_luminance_1\", \"mix_luminance_1\", \"alpha\", \"mixBlend\"]\nnukescripts.clear_selection_recursive()\nn = nuke.thisNode()\nn\['selected'].setValue(True)\nwith nuke.root():\n nuke.nodeCopy(\"%clipboard%\")\n nuke.nodePaste(\"%clipboard%\")\n new_node = nuke.selectedNode()\n\n for j in new_node.knobs():\n\n  if j in  knobsList:\n   if isinstance(new_node.knob(j), nuke.Array_Knob):\n     new_node\[j].setSingleValue(False)\n   new_node\[j].setExpression( n.name() + '.' + j )\n\n\n"}
addUserKnob {26 ""}
addUserKnob {41 blackpoint T Grade273535.blackpoint}
addUserKnob {41 whitepoint T Grade273535.whitepoint}
addUserKnob {41 black l lift T Grade273535.black}
addUserKnob {41 white l gain T Grade273535.white}
addUserKnob {41 multiply T Grade273535.multiply}
addUserKnob {41 add l offset T Grade273535.add}
addUserKnob {41 gamma T Grade273535.gamma}
addUserKnob {41 reverse T Grade273535.reverse}
addUserKnob {41 black_clamp l "black clamp" -STARTLINE T Grade273535.black_clamp}
addUserKnob {41 white_clamp l "white clamp" -STARTLINE T Grade273535.white_clamp}
addUserKnob {26 text2 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance l "" -STARTLINE T Grade273535.enable_mix_luminance}
addUserKnob {41 mix_luminance l "" -STARTLINE T Grade273535.mix_luminance}
addUserKnob {26 "" l "  "}
addUserKnob {41 value l Contrast t " " T contrast.value}
addUserKnob {41 grey T contrast.grey}
addUserKnob {41 saturation T ColorCorrect6.saturation}
addUserKnob {26 text3 l "mix luminance" T " "}
addUserKnob {41 enable_mix_luminance_1 l "" -STARTLINE T ColorCorrect6.enable_mix_luminance}
addUserKnob {41 mix_luminance_1 l "" -STARTLINE T ColorCorrect6.mix_luminance}
addUserKnob {26 ""}
addUserKnob {41 maskChannel l "mask channel" t "if the mask input is unplugged then the input channel can be used" T Keymix3.maskChannel}
addUserKnob {41 invertMask l invert -STARTLINE T Keymix3.invertMask}
addUserKnob {26 ""}
addUserKnob {41 alpha l "(un)premult by" T Unpremult13535.alpha}
addUserKnob {41 mixBlend l mix T Blend1.mixBlend}
addUserKnob {20 Info}
addUserKnob {22 documentation l " Documentation / Feedback " T "import webbrowser\nwebbrowser.open(\"http://opennuke.github.io/gradeAov_nkV/\")" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {26 version l version: T v1.2}
addUserKnob {26 created l created: T "1/1/2015 by <a href=\\'http://movingimagearts.com'> Rafal Kaniewski</a>"}
addUserKnob {26 modified l "modified: " T "01/10/2016 :update to fix back clamp by Rafal_Kan\n2017/12/19 :v1: forked, renamed, premult per channel, colourspaceShift\n2018/01/01: added copyExpNode and solo/mute"}
addUserKnob {26 source l source: T "<a href='https://github.com/vfxwiki/gradeAOV/'> Github.com</a>"}
addUserKnob {26 licence l licence: T "<a href=\"https://github.com/openNuke/toolset/blob/master/LICENCE\">READ ME</a>"}
}
Input {
inputs 0
name Input
xpos -220
ypos -721
}
set N30de6b00 [stack 0]
Dot {
name Dot8
xpos -995
ypos -718
}
Dot {
name Dot5
xpos -995
ypos 105
}
set N30de5d00 [stack 0]
Dot {
name Dot9
xpos -995
ypos 217
}
LayerContactSheet {
width {{width*6}}
height {{height*6}}
showLayerNames true
name LayerContactSheet1
xpos -632
ypos 213
}
push $N30de6b00
Dot {
name Dot1
xpos -186
ypos -633
}
set N30de4800 [stack 0]
Dot {
name Dot27
xpos -457
ypos -567
}
set N30de4100 [stack 0]
Dot {
name Dot26
xpos -646
ypos -567
}
Shuffle {
in rgb
in2 alpha
alpha red2
name Shuffle5345
xpos -680
ypos -533
}
Premult {
name Premult1
xpos -680
ypos -507
}
set N309aeb00 [stack 0]
push $N30de4100
Merge2 {
inputs 2
operation from
Achannels rgb
Bchannels rgb
output rgb
name From
xpos -491
ypos -507
}
Dot {
name Dot15
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -457
ypos -422
}
set N309add00 [stack 0]
Dot {
name Dot12
xpos -922
ypos -422
}
Dot {
name Dot14
xpos -922
ypos 172
}
push $N309aeb00
Unpremult {
alpha -rgba.alpha
name Unpremult13535
xpos -680
ypos -469
disable {{!alpha}}
addUserKnob {20 User}
}
Grade {
channels all
white_panelDropped true
multiply 1.5
gamma 1.1
black_clamp false
name Grade273535
xpos -680
ypos -380
addUserKnob {20 User}
addUserKnob {18 exposure R -1 1}
exposure {{multiply==0|white==0|multiply==0?0:log10(multiply)/log10(2)+log10(white)/log10(2)}}
addUserKnob {6 exposure_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposure_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
Expression {
expr0 "pow(r/grey, value+1)*grey"
expr1 "pow(g/grey, value+1)*grey"
expr2 "pow(b/grey, value+1)*grey"
name contrast
xpos -680
ypos -322
addUserKnob {20 User}
addUserKnob {7 grey}
grey 0.18
addUserKnob {18 value R -1 1}
value {0 0 0}
addUserKnob {6 value_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 value_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
ColorCorrect {
channels all
enable_mix_luminance false
name ColorCorrect6
xpos -680
ypos -273
}
set N3096f200 [stack 0]
Dot {
name Dot4
xpos -833
ypos -263
}
Dot {
name Dot7
xpos -833
ypos 157
}
Dot {
name Dot10
xpos -403
ypos 186
}
Input {
inputs 0
name mask
label mask
xpos 65
ypos -760
number 1
}
Dot {
name Dot13
xpos 99
ypos 105
}
push $N30de5d00
Dot {
name Dot11
xpos -435
ypos 105
}
set N3095b900 [stack 0]
Switch {
inputs 2
which {{"\[exists parent.input1]"}}
name Switch1
xpos -177
ypos 101
disable {{"!\[exists parent.input1]"}}
}
Invert {
name Invert1
xpos -177
ypos 127
}
push $N3095b900
push $N3096f200
Dot {
name Dot6
xpos -646
ypos 39
}
push $N30de4800
Dot {
name Dot2
xpos -186
ypos -321
}
Dot {
name Dot3
xpos -284
ypos -321
}
push $N3096f200
push $N309add00
Clamp {
channels rgb
minimum_enable {{parent.Grade273535.black_clamp}}
maximum 1e+14
maximum_enable {{parent.Grade273535.white_clamp}}
name Clamp135345
xpos -491
ypos -374
}
Merge2 {
inputs 2
operation plus
Achannels rgb
Bchannels rgb
output rgb
name Merge34
xpos -491
ypos -267
}
Premult {
alpha {{{Unpremult1.alpha}}}
name Premult435345345
xpos -487
ypos -142
disable {{Unpremult13535.disable}}
}
Blend {
inputs 2
channels rgb
weight0 {{mixBlend}}
weight1 {{1-weight0}}
name Blend1
xpos -318
ypos -142
addUserKnob {20 User}
addUserKnob {7 mixBlend}
mixBlend 1
}
ShuffleCopy {
inputs 2
in {{{Shuffle.in}}}
alpha alpha2
black red
white green
red2 blue
out2 {{{Shuffle.in}}}
name ShuffleCopy1544235
xpos -318
ypos 35
disable {{!AlsoGradeChannel}}
addUserKnob {20 User}
addUserKnob {6 AlsoGradeChannel l "Also Grade Channel" +STARTLINE}
AlsoGradeChannel true
}
Keymix {
inputs 3
channels rgb
maskChannel -rgba.alpha
name Keymix3
xpos -318
ypos 161
disable {{!maskChannel}}
}
Switch {
inputs 4
which {{contact?3:mute?2:solo?1:0}}
name Switch3
xpos -318
ypos 196
addUserKnob {20 User}
addUserKnob {4 output M {"rgb graded by channel" "preview channel (solo)" "preview without (mute)" "channel contact sheet" "" "" "" "" ""}}
output "preview channel (solo)"
addUserKnob {6 solo +STARTLINE}
addUserKnob {6 mute -STARTLINE}
addUserKnob {6 contact -STARTLINE}
}
Output {
name Output1
xpos -318
ypos 385
}
end_group
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy8
selected true
xpos 9491
ypos -7388
}
Premult {
channels all
name Premult4
selected true
xpos 9491
ypos -7334
}
Copy {
inputs 2
from0 rgba.alpha
to0 -rgba.alpha
channels zDepth
name Copy1
selected true
xpos 9491
ypos -7278
}
Merge2 {
inputs 2
name Merge8
selected true
xpos 9489
ypos -6947
disable true
}
Group {
inputs 2
name combine_zDepth1
selected true
xpos 9488
ypos -6887
disable true
addUserKnob {20 User l combine_zDepth}
addUserKnob {41 in l "in 1" T Shuffle23.in}
}
Input {
inputs 0
name A
xpos -847
ypos -448
number 1
}
Shuffle1 {
in {{{parent.Shuffle23.in}}}
out rgb
name Shuffle1
label "\[value in]"
xpos -847
ypos -374
}
Expression {
expr0 (r>0?1/r==inf?0:1/r:0)
expr1 (g>0?1/g==inf?0:1/g:0)
expr2 (b>0?1/b==inf?0:1/b:0)
name NukeDepthToCG1
label alpha
xpos -847
ypos -336
addUserKnob {20 User}
addUserKnob {4 math l "input math" M {"infinity = 0 (nuke, renderMan)" "camera = 0 (arnold, vray)"}}
math "camera = 0 (arnold, vray)"
}
Input {
inputs 0
name B
xpos -978
ypos -444
}
Dot {
name Dot1
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -944
ypos -418
}
set N30904100 [stack 0]
Shuffle1 {
in zDepth
out rgb
name Shuffle23
label "\[value in]"
xpos -978
ypos -380
}
Expression {
expr0 (r>0?1/r==inf?0:1/r:0)
expr1 (g>0?1/g==inf?0:1/g:0)
expr2 (b>0?1/b==inf?0:1/b:0)
name NukeDepthToCG5
label alpha
xpos -978
ypos -329
addUserKnob {20 User}
addUserKnob {4 math l "input math" M {"infinity = 0 (nuke, renderMan)" "camera = 0 (arnold, vray)"}}
math "camera = 0 (arnold, vray)"
}
Merge2 {
inputs 2
operation max
Achannels rgb
Bchannels rgb
output rgb
name Max
xpos -907
ypos -275
}
Expression {
expr0 (r>0?1/r==inf?0:1/r:0)
expr1 (g>0?1/g==inf?0:1/g:0)
expr2 (b>0?1/b==inf?0:1/b:0)
name NukeDepthToCG2
label alpha
xpos -907
ypos -237
addUserKnob {20 User}
addUserKnob {4 math l "input math" M {"infinity = 0 (nuke, renderMan)" "camera = 0 (arnold, vray)"}}
math "camera = 0 (arnold, vray)"
}
Shuffle1 {
out {{{parent.Shuffle23.in}}}
name Shuffle2
label "\[value in]"
xpos -907
ypos -179
}
push $N30904100
Dot {
name Dot2
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -1138
ypos -413
}
Dot {
name Dot3
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -1121
ypos -140
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels zDepth
name Copy1
xpos -907
ypos -111
}
Output {
name Output1
xpos -907
ypos -32
}
end_group
Merge2 {
inputs 2
name Merge9
selected true
xpos 9488
ypos -6773
disable true
}
Group {
inputs 2
name combine_zDepth4
selected true
xpos 9487
ypos -6713
disable true
addUserKnob {20 User l combine_zDepth}
addUserKnob {41 in l "in 1" T Shuffle23.in}
}
Input {
inputs 0
name A
xpos -847
ypos -448
number 1
}
Shuffle1 {
in {{{parent.Shuffle23.in}}}
out rgb
name Shuffle1
label "\[value in]"
xpos -847
ypos -374
}
Expression {
expr0 (r>0?1/r==inf?0:1/r:0)
expr1 (g>0?1/g==inf?0:1/g:0)
expr2 (b>0?1/b==inf?0:1/b:0)
name NukeDepthToCG1
label alpha
xpos -847
ypos -336
addUserKnob {20 User}
addUserKnob {4 math l "input math" M {"infinity = 0 (nuke, renderMan)" "camera = 0 (arnold, vray)"}}
math "camera = 0 (arnold, vray)"
}
Input {
inputs 0
name B
xpos -978
ypos -444
}
Dot {
name Dot1
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -944
ypos -418
}
set N3069cf00 [stack 0]
Shuffle1 {
in zDepth
out rgb
name Shuffle23
label "\[value in]"
xpos -978
ypos -380
}
Expression {
expr0 (r>0?1/r==inf?0:1/r:0)
expr1 (g>0?1/g==inf?0:1/g:0)
expr2 (b>0?1/b==inf?0:1/b:0)
name NukeDepthToCG5
label alpha
xpos -978
ypos -329
addUserKnob {20 User}
addUserKnob {4 math l "input math" M {"infinity = 0 (nuke, renderMan)" "camera = 0 (arnold, vray)"}}
math "camera = 0 (arnold, vray)"
}
Merge2 {
inputs 2
operation max
Achannels rgb
Bchannels rgb
output rgb
name Max
xpos -907
ypos -275
}
Expression {
expr0 (r>0?1/r==inf?0:1/r:0)
expr1 (g>0?1/g==inf?0:1/g:0)
expr2 (b>0?1/b==inf?0:1/b:0)
name NukeDepthToCG2
label alpha
xpos -907
ypos -237
addUserKnob {20 User}
addUserKnob {4 math l "input math" M {"infinity = 0 (nuke, renderMan)" "camera = 0 (arnold, vray)"}}
math "camera = 0 (arnold, vray)"
}
Shuffle1 {
out {{{parent.Shuffle23.in}}}
name Shuffle2
label "\[value in]"
xpos -907
ypos -179
}
push $N3069cf00
Dot {
name Dot2
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -1138
ypos -413
}
Dot {
name Dot3
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -1121
ypos -140
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels zDepth
name Copy1
xpos -907
ypos -111
}
Output {
name Output1
xpos -907
ypos -32
}
end_group
Dot {
name Dot176
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9521
ypos -6485
}
set N33d83200 [stack 0]
ChannelMerge {
inputs 2
name ChannelMerge16
selected true
xpos 9549
ypos -6501
}
push $N33d83200
Group {
inputs 2
name DI_Shuffle13
tile_color 0xa43f88ff
gl_color 0x1d1d1dff
label "\[value layer]\n\[value matteName]"
selected true
xpos 9488
ypos -6433
disable true
addUserKnob {20 User l DI_Shuffle}
addUserKnob {41 layer l "new layer " T master.layer}
addUserKnob {1 matteName l " matte name:" -STARTLINE}
matteName cgModule
addUserKnob {41 DIChannelSource l "  from" T master.DIChannelSource}
addUserKnob {41 useRGBalpha l "  use RGB.alpha" -STARTLINE T master.useRGBalpha}
addUserKnob {26 txt l holdout}
addUserKnob {41 holdout l "holdout 1  |" T Copy1.holdout}
addUserKnob {41 holdout_1 l "holdout 2 |" -STARTLINE T Copy7.holdout}
addUserKnob {41 holdout_2 l "holdout 3  |" -STARTLINE T Copy8.holdout}
addUserKnob {41 holdout_3 l "holdout 4" -STARTLINE T Copy9.holdout}
addUserKnob {26 txt_1 l "matte from" T ""}
addUserKnob {41 selectHoldout l "" -STARTLINE T master.selectAlpha}
addUserKnob {41 from0 l " channel" -STARTLINE T Copy25.from0}
addUserKnob {26 txt_2 l " " T "The heldout input (A||B) is opposite of  'matte from' input ."}
addUserKnob {20 info}
addUserKnob {26 ver l ver: T 0.3}
addUserKnob {26 source l source: T "Rafs Kan. 13th Nov. 2019"}
addUserKnob {26 edit l edit: T " rafsKan 2019-19-11: add C&D\nrafsKan 2022/02/07: bug fixes"}
addUserKnob {7 UID_DI_Shuffle l UID +INVISIBLE}
UID_DI_Shuffle 1
}
Input {
inputs 0
name A
xpos 2714
ypos -356
number 1
}
Dot {
name Dot13
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2748
ypos -162
}
AddChannels {
channels DiMatte_1
name AddChannels5
xpos 2714
ypos -144
disable {{"!(\[numvalue master.layer]==0||\[numvalue master.layer]==1|\[numvalue master.layer]==2||\[numvalue master.layer]==3||\[numvalue master.layer]==16)"}}
}
AddChannels {
channels DiMatte_2
name AddChannels6
xpos 2714
ypos -106
disable {{"!(\[numvalue master.layer]==4||\[numvalue master.layer]==5|\[numvalue master.layer]==6||\[numvalue master.layer]==7||\[numvalue master.layer]==17)"}}
}
AddChannels {
channels DIMatte_3
name AddChannels7
xpos 2714
ypos -72
disable {{"!(\[numvalue master.layer]==8||\[numvalue master.layer]==9|\[numvalue master.layer]==10||\[numvalue master.layer]==11||\[numvalue master.layer]==18)"}}
}
AddChannels {
channels DIMatte_3
name AddChannels8
xpos 2714
ypos -36
disable {{"!(\[numvalue master.layer]==12||\[numvalue master.layer]==13|\[numvalue master.layer]==14||\[numvalue master.layer]==15||\[numvalue master.layer]==19)"}}
}
Dot {
name Dot3
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2748
ypos 2
}
set N30627900 [stack 0]
Input {
inputs 0
name B
xpos 3336
ypos -398
}
NoOp {
name master
label "\[value layer]\n\[numvalue master.layer]"
xpos 3336
ypos -319
addUserKnob {20 User}
addUserKnob {4 layer M {DiMatte_1.red DiMatte_1.green DiMatte_1.blue DiMatte_1.alpha DiMatte_2.red DiMatte_2.green DiMatte_2.blue DiMatte_2.alpha DiMatte_3.red DiMatte_3.green DiMatte_3.blue DiMatte_3.alpha DiMatte_4.red DiMatte_4.green DiMatte_4.blue DiMatte_4.alpha "none (holdout only)" "" "" "" "" "" "" "" "" "" ""}}
layer DiMatte_2.red
addUserKnob {6 useRGBalpha l "use RGB.alpha" -STARTLINE}
useRGBalpha true
addUserKnob {4 selectAlpha l "select alphaHoldout" M {"B input" "A input" ""}}
selectAlpha "A input"
addUserKnob {4 DIChannelSource l "DI ChannelSource" M {"A input" "B input" "Use constant" "" ""}}
}
AddChannels {
channels DiMatte_1
name AddChannels1
xpos 3907
ypos -156
disable {{"!(\[numvalue master.layer]==0||\[numvalue master.layer]==1|\[numvalue master.layer]==2||\[numvalue master.layer]==3||\[numvalue master.layer]==16)"}}
}
AddChannels {
channels DiMatte_2
name AddChannels2
xpos 3907
ypos -118
disable {{"!(\[numvalue master.layer]==4||\[numvalue master.layer]==5|\[numvalue master.layer]==6||\[numvalue master.layer]==7||\[numvalue master.layer]==17)"}}
}
AddChannels {
channels DIMatte_3
name AddChannels3
xpos 3907
ypos -84
disable {{"!(\[numvalue master.layer]==8||\[numvalue master.layer]==9|\[numvalue master.layer]==10||\[numvalue master.layer]==11||\[numvalue master.layer]==18)"}}
}
AddChannels {
channels DIMatte_D
name AddChannels4
xpos 3907
ypos -48
disable {{"!(\[numvalue master.layer]==12||\[numvalue master.layer]==13|\[numvalue master.layer]==14||\[numvalue master.layer]==15||\[numvalue master.layer]==19)"}}
}
Dot {
name Dot4
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3946
ypos 44
}
set N3061ab00 [stack 0]
Switch {
inputs 2
which {{master.DIChannelSource==1?0:1}}
name Switch1
label DIChannelSource
xpos 2842
ypos 690
}
Shuffle {
red white
green white
blue white
alpha white
name Shuffle1
label "\[value in]"
xpos 3529
ypos 1496
disable {{master.DIChannelSource==2?0:1}}
}
Dot {
name Dot33
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3563
ypos 1599
}
set N30619600 [stack 0]
Dot {
name Dot34
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3563
ypos 1858
}
set N30618f00 [stack 0]
Dot {
name Dot35
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3563
ypos 2179
}
set N30618800 [stack 0]
Dot {
name Dot36
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3563
ypos 2442
}
set N30618100 [stack 0]
Dot {
name Dot37
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3558
ypos 2735
}
set N305ef900 [stack 0]
Dot {
name Dot10
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3555
ypos 2814
}
set N305ef200 [stack 0]
Dot {
name Dot31
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3555
ypos 2907
}
set N305eeb00 [stack 0]
Dot {
name Dot32
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3550
ypos 2993
}
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DIMatte_D
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DIMatte_D.alpha 0 3 rgba.alpha 0 0 DIMatte_D.red 0 0 rgba.alpha 0 0 DIMatte_D.green 0 1 rgba.alpha 0 0 DIMatte_D.blue 0 2"
name Shuffle29
label "\[value in1]"
xpos 3605
ypos 2983
disable {{!useRGBalpha}}
}
push $N305eeb00
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DIMatte_3
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DIMatte_C.alpha 0 3 rgba.alpha 0 0 DIMatte_3.red 0 0 rgba.alpha 0 0 DIMatte_3.green 0 1 rgba.alpha 0 0 DIMatte_3.blue 0 2"
name Shuffle28
label "\[value in1]"
xpos 3608
ypos 2896
disable {{!useRGBalpha}}
}
push $N305ef200
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DiMatte_2
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DiMatte_2.alpha 0 3 rgba.alpha 0 0 DiMatte_2.red 0 0 rgba.alpha 0 0 DiMatte_2.green 0 1 rgba.alpha 0 0 DiMatte_2.blue 0 2"
name Shuffle27
label "\[value in1]"
xpos 3611
ypos 2808
disable {{!useRGBalpha}}
}
push $N305ef900
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DiMatte_1
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DiMatte_1.alpha 0 3 rgba.alpha 0 0 DiMatte_1.red 0 0 rgba.alpha 0 0 DiMatte_1.green 0 1 rgba.alpha 0 0 DiMatte_1.blue 0 2"
name Shuffle26
label "\[value in1]"
xpos 3620
ypos 2728
disable {{!useRGBalpha}}
}
push $N30618100
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DIMatte_D
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DIMatte_D.alpha 0 3 rgba.alpha 0 0 DIMatte_D.red 0 0 rgba.alpha 0 0 DIMatte_D.green 0 1 rgba.alpha 0 0 DIMatte_D.blue 0 2"
name Shuffle25
label "\[value in1]"
xpos 3615
ypos 2432
disable {{!useRGBalpha}}
}
Dot {
name Dot27
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3747
ypos 2438
}
set N305d3900 [stack 0]
Dot {
name Dot28
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3743
ypos 2511
}
set N305d3200 [stack 0]
Dot {
name Dot29
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3743
ypos 2578
}
set N305d2b00 [stack 0]
Dot {
name Dot30
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3740
ypos 2641
}
push $N305d2b00
push $N305d3200
push $N305d3900
push $N30618800
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DIMatte_3
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DIMatte_C.alpha 0 3 rgba.alpha 0 0 DIMatte_3.red 0 0 rgba.alpha 0 0 DIMatte_3.green 0 1 rgba.alpha 0 0 DIMatte_3.blue 0 2"
name Shuffle24
label "\[value in1]"
xpos 3618
ypos 2170
disable {{!useRGBalpha}}
}
Dot {
name Dot23
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3749
ypos 2179
}
set N305d1600 [stack 0]
Dot {
name Dot24
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3749
ypos 2240
}
set N305d0f00 [stack 0]
Dot {
name Dot25
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3749
ypos 2309
}
set N305d0800 [stack 0]
Dot {
name Dot26
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3749
ypos 2374
}
push $N305d0800
push $N305d0f00
push $N305d1600
push $N30618f00
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DiMatte_2
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DiMatte_2.alpha 0 3 rgba.alpha 0 0 DiMatte_2.red 0 0 rgba.alpha 0 0 DiMatte_2.green 0 1 rgba.alpha 0 0 DiMatte_2.blue 0 2"
name Shuffle23
label "\[value in1]"
xpos 3627
ypos 1850
disable {{!useRGBalpha}}
}
Dot {
name Dot19
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3759
ypos 1858
}
set N307ab200 [stack 0]
Dot {
name Dot20
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3759
ypos 1931
}
set N307aab00 [stack 0]
Dot {
name Dot21
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3759
ypos 1998
}
set N307aa400 [stack 0]
Dot {
name Dot22
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3756
ypos 2061
}
push $N307aa400
push $N307aab00
push $N307ab200
push $N30619600
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DiMatte_1
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DiMatte_1.alpha 0 3 rgba.alpha 0 0 DiMatte_1.red 0 0 rgba.alpha 0 0 DiMatte_1.green 0 1 rgba.alpha 0 0 DiMatte_1.blue 0 2"
name Shuffle22
label "\[value in1]"
xpos 3630
ypos 1589
disable {{!useRGBalpha}}
}
Dot {
name Dot15
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3760
ypos 1599
}
set N307a8f00 [stack 0]
Dot {
name Dot16
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3760
ypos 1660
}
set N307a8800 [stack 0]
Dot {
name Dot17
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3760
ypos 1729
}
set N307a8100 [stack 0]
Dot {
name Dot18
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3760
ypos 1794
}
push $N307a8100
push $N307a8800
push $N307a8f00
push $N3061ab00
push $N30627900
Dot {
name Dot38
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2492
ypos 2
}
Switch {
inputs 2
which {{master.selectAlpha==1?0:1}}
name Switch3
label "hold out"
xpos 2422
ypos 600
}
set N3078ab00 [stack 0]
push $N3078ab00
Copy {
inputs 2
to0 rgba.alpha
name Copy25
xpos 2422
ypos 660
}
Clamp {
name Clamp1
xpos 2422
ypos 724
}
Dot {
name Dot12
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2610
ypos 905
}
push $N30627900
push $N3061ab00
Switch {
inputs 2
which {{master.selectAlpha==1?0:1}}
name Switch2
label "hold out"
xpos 2612
ypos 674
}
Dot {
name Dot7
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2646
ypos 862
}
Multiply {
inputs 1+1
value 0
name Multiply1
xpos 2612
ypos 952
}
Dot {
name Dot1
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3697
ypos 955
}
set N30771600 [stack 0]
Dot {
name Dot2
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3697
ypos 1053
}
set N30770f00 [stack 0]
Dot {
name Dot5
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3699
ypos 1155
}
set N30770800 [stack 0]
Dot {
name Dot6
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3699
ypos 1277
}
push $N30770800
push $N30770f00
push $N30771600
push $N3061ab00
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels DiMatte_1
name Copy1
label "hold out"
xpos 3912
ypos 933
disable {{!holdout}}
addUserKnob {20 User}
addUserKnob {6 holdout +STARTLINE}
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels DiMatte_2
name Copy7
label "hold out"
xpos 3912
ypos 1031
disable {{!holdout}}
addUserKnob {20 User}
addUserKnob {6 holdout +STARTLINE}
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels DIMatte_3
name Copy8
label "hold out"
xpos 3912
ypos 1133
disable {{!holdout}}
addUserKnob {20 User}
addUserKnob {6 holdout +STARTLINE}
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels DIMatte_D
name Copy9
label "hold out"
xpos 3914
ypos 1255
disable {{!holdout}}
addUserKnob {20 User}
addUserKnob {6 holdout +STARTLINE}
}
Dot {
name Dot14
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3948
ypos 1492
}
Copy {
inputs 2
from0 DiMatte_1.red
to0 DiMatte_1.red
name Copy5
xpos 3914
ypos 1589
disable {{"!(\[numvalue master.layer]==0)"}}
}
Copy {
inputs 2
from0 DiMatte_1.green
to0 DiMatte_1.green
name Copy10
xpos 3914
ypos 1650
disable {{"!(\[numvalue master.layer]==1)"}}
}
Copy {
inputs 2
from0 DiMatte_1.blue
to0 DiMatte_1.blue
name Copy11
xpos 3914
ypos 1719
disable {{"!(\[numvalue master.layer]==2)"}}
}
Copy {
inputs 2
from0 DiMatte_1.alpha
to0 DiMatte_1.alpha
name Copy12
xpos 3914
ypos 1784
disable {{"!(\[numvalue master.layer]==3)"}}
}
Copy {
inputs 2
from0 DiMatte_2.red
to0 DiMatte_2.red
name Copy13
xpos 3914
ypos 1848
disable {{"!(\[numvalue master.layer]==4)"}}
}
Copy {
inputs 2
from0 DiMatte_2.green
to0 DiMatte_2.green
name Copy14
xpos 3914
ypos 1921
disable {{"!(\[numvalue master.layer]==5)"}}
}
Copy {
inputs 2
from0 DiMatte_2.blue
to0 DiMatte_2.blue
name Copy15
xpos 3914
ypos 1988
disable {{"!(\[numvalue master.layer]==6)"}}
}
Copy {
inputs 2
from0 DiMatte_2.alpha
to0 DiMatte_2.alpha
name Copy16
xpos 3911
ypos 2051
disable {{"!(\[numvalue master.layer]==7)"}}
}
Copy {
inputs 2
from0 DIMatte_3.red
to0 DIMatte_3.red
name Copy3
xpos 3911
ypos 2169
disable {{"!(\[numvalue master.layer]==8)"}}
}
Copy {
inputs 2
from0 DIMatte_3.green
to0 DIMatte_3.green
name Copy17
xpos 3911
ypos 2230
disable {{"!(\[numvalue master.layer]==9)"}}
}
Copy {
inputs 2
from0 DIMatte_3.blue
to0 DIMatte_3.blue
name Copy18
xpos 3911
ypos 2299
disable {{"!(\[numvalue master.layer]==10)"}}
}
Copy {
inputs 2
from0 DIMatte_C.alpha
to0 DIMatte_C.alpha
name Copy19
xpos 3911
ypos 2364
disable {{"!(\[numvalue master.layer]==11)"}}
}
Copy {
inputs 2
from0 DIMatte_D.red
to0 DIMatte_D.red
name Copy20
xpos 3911
ypos 2428
disable {{"!(\[numvalue master.layer]==12)"}}
}
Copy {
inputs 2
from0 DIMatte_D.green
to0 DIMatte_D.green
name Copy21
xpos 3911
ypos 2501
disable {{"!(\[numvalue master.layer]==13)"}}
}
Copy {
inputs 2
from0 DIMatte_D.blue
to0 DIMatte_D.blue
name Copy22
xpos 3911
ypos 2568
disable {{"!(\[numvalue master.layer]==14)"}}
}
Copy {
inputs 2
from0 DIMatte_D.alpha
to0 DIMatte_D.alpha
name Copy23
xpos 3908
ypos 2631
disable {{"!(\[numvalue master.layer]==15)"}}
}
set N306d2b00 [stack 0]
Copy {
inputs 2
channels DiMatte_1
name Copy2
xpos 3782
ypos 2726
disable {{"!(\[numvalue master.layer]==16)"}}
}
Copy {
inputs 2
channels DIMatte_3
name Copy4
xpos 3782
ypos 2802
disable {{"!(\[numvalue master.layer]==17)"}}
}
Copy {
inputs 2
channels DiMatte_2
name Copy6
xpos 3782
ypos 2895
disable {{"!(\[numvalue master.layer]==18)"}}
}
Copy {
inputs 2
channels DIMatte_D
name Copy24
xpos 3782
ypos 2981
disable {{"!(\[numvalue master.layer]==19)"}}
}
push $N306d2b00
Output {
name Output1
xpos 3908
ypos 3145
}
end_group
Merge2 {
inputs 2
operation disjoint-over
name Merge10
selected true
xpos 9488
ypos -6309
}
Group {
inputs 2
name combine_zDepth2
selected true
xpos 9490
ypos -6238
addUserKnob {20 User l combine_zDepth}
addUserKnob {41 in l "in 1" T Shuffle23.in}
}
Input {
inputs 0
name A
xpos -847
ypos -448
number 1
}
Shuffle1 {
in {{{parent.Shuffle23.in}}}
out rgb
name Shuffle1
label "\[value in]"
xpos -847
ypos -374
}
Expression {
expr0 (r>0?1/r==inf?0:1/r:0)
expr1 (g>0?1/g==inf?0:1/g:0)
expr2 (b>0?1/b==inf?0:1/b:0)
name NukeDepthToCG1
label alpha
xpos -847
ypos -336
addUserKnob {20 User}
addUserKnob {4 math l "input math" M {"infinity = 0 (nuke, renderMan)" "camera = 0 (arnold, vray)"}}
math "camera = 0 (arnold, vray)"
}
Input {
inputs 0
name B
xpos -978
ypos -444
}
Dot {
name Dot1
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -944
ypos -418
}
set N30885600 [stack 0]
Shuffle1 {
in zDepth
out rgb
name Shuffle23
label "\[value in]"
xpos -978
ypos -380
}
Expression {
expr0 (r>0?1/r==inf?0:1/r:0)
expr1 (g>0?1/g==inf?0:1/g:0)
expr2 (b>0?1/b==inf?0:1/b:0)
name NukeDepthToCG5
label alpha
xpos -978
ypos -329
addUserKnob {20 User}
addUserKnob {4 math l "input math" M {"infinity = 0 (nuke, renderMan)" "camera = 0 (arnold, vray)"}}
math "camera = 0 (arnold, vray)"
}
Merge2 {
inputs 2
operation max
Achannels rgb
Bchannels rgb
output rgb
name Max
xpos -907
ypos -275
}
Expression {
expr0 (r>0?1/r==inf?0:1/r:0)
expr1 (g>0?1/g==inf?0:1/g:0)
expr2 (b>0?1/b==inf?0:1/b:0)
name NukeDepthToCG2
label alpha
xpos -907
ypos -237
addUserKnob {20 User}
addUserKnob {4 math l "input math" M {"infinity = 0 (nuke, renderMan)" "camera = 0 (arnold, vray)"}}
math "camera = 0 (arnold, vray)"
}
Shuffle1 {
out {{{parent.Shuffle23.in}}}
name Shuffle2
label "\[value in]"
xpos -907
ypos -179
}
push $N30885600
Dot {
name Dot2
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -1138
ypos -413
}
Dot {
name Dot3
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -1121
ypos -140
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels zDepth
name Copy1
xpos -907
ypos -111
}
Output {
name Output1
xpos -907
ypos -32
}
end_group
set N30887900 [stack 0]
Dot {
name Dot346
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9523
ypos -5680
}
Dot {
name Dot347
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9523
ypos -5575
}
set N302b0100 [stack 0]
Dot {
name Dot348
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9381
ypos -5575
}
set N30277900 [stack 0]
Dot {
name Dot349
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9381
ypos -5063
}
push $N30277900
Dot {
name Dot350
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9153
ypos -5569
}
set N30276b00 [stack 0]
Dot {
name Dot351
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 8943
ypos -5569
}
Group {
name P_Ramp1
help "<b>P_Ramp</b> creates a gradient matte based on a pass/layer containing position data"
knobChanged "\nn = nuke.thisNode()\nk = nuke.thisKnob()\ns = nuke.toNode('SphereMatte')\nr = nuke.toNode('Start_End')\n\nif k.name() == \"falloffType\":\n    n\['falloff'].setVisible( k.value() != 'None' )\n    n\['exp'].setVisible( k.value() == 'Exponential' )\n\nif k.name() == \"rampDirection\":\n    for knob in \[n\['rotDivider'], n\['rotateAround'], n\['rot_order'], n\['rotate']]:\n        knob.setVisible(k.value() == 'Custom')\n\n"
selected true
xpos 8909
ypos -5462
addUserKnob {20 User}
addUserKnob {41 in l "position data" t "Choose a layer from the input that contains position data" T Shuffle_Input_Channels.in}
addUserKnob {41 output t "Resulting matte will be written to this layer only" T OutChannel.out}
addUserKnob {6 unpremultiply t "Check if your position layer is premultiplied" +STARTLINE}
addUserKnob {6 useAlpha l "ignore outside alpha" t "If your input has an alpha channel, checking this will force everything outside that alpha channel to be black" -STARTLINE}
useAlpha true
addUserKnob {26 ""}
addUserKnob {4 rampDirection t "Choose the axis/direction of the ramp\n\nX : ramp along the X axis\nY : ramp along the Y axis\nZ : ramp along the Z axis\nCustom : starting with a ramp along the Z axis, rotate the ramp at will using the rotation controls\nStart to End: ramp along the vector that goes from start to end points" M {X Y Z Custom "Start to End" "" "" "" ""}}
rampDirection Z
addUserKnob {41 start T Start_End.start}
addUserKnob {41 end T Start_End.end}
addUserKnob {26 rotDivider l "" +STARTLINE +HIDDEN}
addUserKnob {4 rotateAround l "rotate around" +HIDDEN M {"start\t" center end}}
rotateAround center
addUserKnob {4 rot_order l "rotation order" +HIDDEN M {XYZ XZY YXZ YZX ZXY ZYX "" "" ""}}
rot_order ZXY
addUserKnob {13 rotate +HIDDEN}
addUserKnob {26 ""}
addUserKnob {4 falloffType M {None Linear Smooth Quadratic Cubic Exponential ""}}
falloffType Exponential
addUserKnob {7 falloff}
falloff 1
addUserKnob {7 exp R 0.1 10}
exp 1
}
Input {
inputs 0
name img
xpos -810
ypos -370
}
AddChannels {
channels alpha
color 1
name AddChannels1
xpos -810
ypos -280
}
Shuffle {
in zDepth
alpha blue
out rgb
name Shuffle_Input_Channels
xpos -810
ypos -202
}
set N30274100 [stack 0]
Unpremult {
name Unpremult1
xpos -700
ypos -202
disable {{!parent.unpremultiply i}}
}
Dot {
name Dot4
xpos -226
ypos -198
}
NoOp {
name Ramps
xpos -260
ypos -178
}
set N3024eb00 [stack 0]
Add {
channels rgb
value {{-parent.start i} {-parent.start i} {-parent.start i} {curve i}}
name Set_Origin
xpos 180
ypos -178
}
ColorMatrix {
matrix {
    {{tt*wnorm.x**2+d i} {tt*wnorm.x*wnorm.y-s*wnorm.z i} {"tt*wnorm.x*wnorm.z + s*wnorm.y" i}}
    {{"tt*wnorm.x*wnorm.y + s*wnorm.z" i} {tt*wnorm.y**2+d i} {"tt*wnorm.y*wnorm.z - wnorm.x*s" i}}
    {{"tt*wnorm.x*wnorm.z - s*wnorm.y" i} {tt*wnorm.y*wnorm.z+s*wnorm.x i} {"tt*wnorm.z**2 + d" i}}
  }
name Rotate_Scale_Skew1
xpos 180
ypos -106
disable {{hasError i x200 1}}
addUserKnob {20 User}
addUserKnob {7 length}
length {{"sqrt ( ( (parent.end.r - parent.start.r) ** 2 )  + ( (parent.end.g - parent.start.g) ** 2 )  +  ( (parent.end.b - parent.start.b) ** 2 ))" i}}
addUserKnob {13 u}
u {0 1 0}
addUserKnob {13 v}
v {{"(parent.end.r - parent.start.r) / length" i} {"(parent.end.g - parent.start.g) / length" i} {"(parent.end.b - parent.start.b) / length" i}}
addUserKnob {13 w}
w {{"u.y * v.z - u.z * v.y" i} {"u.z * v.x - u.x * v.z" i} {"u.x * v.y - u.y * v.x" i}}
addUserKnob {13 wnorm}
wnorm {{"w.x / sqrt(w.x**2+w.y**2+w.z**2)" i} {"w.y / sqrt(w.x**2+w.y**2+w.z**2)" i} {"w.z / sqrt(w.x**2+w.y**2+w.z**2)" i}}
addUserKnob {7 phi}
phi {{acos(u.x*v.x+u.y*v.y+u.z*v.z) i}}
addUserKnob {7 tt}
tt {{1-cos(phi) i}}
addUserKnob {7 s}
s {{-sin(phi) i}}
addUserKnob {7 d}
d {{cos(phi) i}}
}
Multiply {
channels rgb
value {{1/Rotate_Scale_Skew1.length i}}
name Multiply1
xpos 180
ypos -58
}
Clamp {
channels rgb
name Clamp1
xpos 180
ypos -34
}
Expression {
expr0 "parent.useAlpha && a==0.0 ? 0 : r"
expr1 "parent.useAlpha && a==0.0 ? 0 : g"
expr2 "parent.useAlpha && a==0.0 ? 0 : b"
name IgnoreOutsideAlpha1
xpos 180
ypos 14
}
Shuffle {
alpha green
name Shuffle3
xpos 180
ypos 62
}
push $N3024eb00
Grade {
blackpoint {{start i} {start i} {start i} {curve i}}
whitepoint {{end i} {end i} {end i} {curve i}}
black_clamp false
maskChannelInput -rgba.alpha
unpremult -rgba.alpha
name Start_End
xpos -260
ypos -154
addUserKnob {20 User}
addUserKnob {18 start}
start {0 0 50}
addUserKnob {6 start_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 end}
end {0 0 500}
addUserKnob {6 end_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
}
set N30234f00 [stack 0]
Dot {
name Dot2
xpos -116
ypos -150
}
Add {
channels rgb
value {{-Axis1.world_matrix.3} {-Axis1.world_matrix.7} {-Axis1.world_matrix.11} {curve}}
name Translate1
xpos -150
ypos -82
}
ColorMatrix {
matrix {
    {{Axis1.world_matrix.0} {Axis1.world_matrix.1} {Axis1.world_matrix.2}}
    {{Axis1.world_matrix.4} {Axis1.world_matrix.5} {Axis1.world_matrix.6}}
    {{Axis1.world_matrix.8} {Axis1.world_matrix.9} {Axis1.world_matrix.10}}
  }
invert true
name Rotate_Scale_Skew3
xpos -150
ypos -58
disable {{hasError x200 1}}
}
Expression {
expr0 "parent.useAlpha && a==0.0 ? 0 : r"
expr1 "parent.useAlpha && a==0.0 ? 0 : g"
expr2 "parent.useAlpha && a==0.0 ? 0 : b"
name IgnoreOutsideAlpha3
xpos -150
ypos -34
}
Shuffle {
alpha blue
name Shuffle4
xpos -150
ypos 14
}
push $N30234f00
Expression {
expr0 "parent.useAlpha && a==0.0 ? 0 : r"
expr1 "parent.useAlpha && a==0.0 ? 0 : g"
expr2 "parent.useAlpha && a==0.0 ? 0 : b"
name IgnoreOutsideAlpha
xpos -260
ypos -106
}
set N30211d00 [stack 0]
Shuffle {
alpha blue
name Z
xpos -260
ypos -34
}
push $N30211d00
Shuffle {
alpha green
name Y
xpos -370
ypos -34
}
push $N30211d00
Shuffle {
alpha red
name X
xpos -480
ypos -34
}
Switch {
inputs 5
which {{parent.rampDirection}}
name Switch3
xpos -370
ypos 62
}
Grade {
channels alpha
whitepoint {{falloffType?falloff:0}}
white_clamp true
name Falloff
xpos -370
ypos 128
}
set N301e3900 [stack 0]
Expression {
expr3 pow(a,parent.exp)
name Exponential
xpos -40
ypos 230
}
push $N301e3900
Expression {
expr3 clamp((a**3),0,1)
name Cubic
xpos -150
ypos 230
}
push $N301e3900
Expression {
expr3 clamp(pow2(a),0,1)
name Quadratic
xpos -260
ypos 230
}
push $N301e3900
Expression {
expr3 smoothstep(0,1,a)
name Smooth
xpos -370
ypos 230
}
push $N301e3900
NoOp {
name Linear
xpos -480
ypos 230
}
push $N301e3900
NoOp {
name None
xpos -590
ypos 230
}
Switch {
inputs 6
which {{falloffType i}}
name Switch2
xpos -370
ypos 326
}
Remove {
operation keep
channels alpha
name Remove1
xpos -370
ypos 368
}
Shuffle {
in alpha
name OutChannel
xpos -370
ypos 446
}
push $N30274100
Dot {
name Dot1
xpos -776
ypos 522
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels all
name Copy1
xpos -370
ypos 506
}
Output {
name Output1
xpos -370
ypos 638
}
Axis2 {
inputs 0
rot_order {{parent.rot_order}}
rotate {{parent.rotate} {parent.rotate} {parent.rotate}}
pivot {{parent.rotateAround/2} {parent.rotateAround/2} {parent.rotateAround/2}}
name Axis1
xpos -30
ypos -102
}
end_group
Multiply {
channels alpha
value 0.5
name Multiply7
selected true
xpos 8909
ypos -5392
}
Dot {
name Dot352
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 8943
ypos -5322
}
push $N30276b00
Group {
name P_Ramp
help "<b>P_Ramp</b> creates a gradient matte based on a pass/layer containing position data"
knobChanged "\nn = nuke.thisNode()\nk = nuke.thisKnob()\ns = nuke.toNode('SphereMatte')\nr = nuke.toNode('Start_End')\n\nif k.name() == \"falloffType\":\n    n\['falloff'].setVisible( k.value() != 'None' )\n    n\['exp'].setVisible( k.value() == 'Exponential' )\n\nif k.name() == \"rampDirection\":\n    for knob in \[n\['rotDivider'], n\['rotateAround'], n\['rot_order'], n\['rotate']]:\n        knob.setVisible(k.value() == 'Custom')\n\n"
selected true
xpos 9119
ypos -5454
addUserKnob {20 User}
addUserKnob {41 in l "position data" t "Choose a layer from the input that contains position data" T Shuffle_Input_Channels.in}
addUserKnob {41 output t "Resulting matte will be written to this layer only" T OutChannel.out}
addUserKnob {6 unpremultiply t "Check if your position layer is premultiplied" +STARTLINE}
addUserKnob {6 useAlpha l "ignore outside alpha" t "If your input has an alpha channel, checking this will force everything outside that alpha channel to be black" -STARTLINE}
useAlpha true
addUserKnob {26 ""}
addUserKnob {4 rampDirection t "Choose the axis/direction of the ramp\n\nX : ramp along the X axis\nY : ramp along the Y axis\nZ : ramp along the Z axis\nCustom : starting with a ramp along the Z axis, rotate the ramp at will using the rotation controls\nStart to End: ramp along the vector that goes from start to end points" M {X Y Z Custom "Start to End" "" "" "" ""}}
rampDirection Y
addUserKnob {41 start T Start_End.start}
addUserKnob {41 end T Start_End.end}
addUserKnob {26 rotDivider l "" +STARTLINE +HIDDEN}
addUserKnob {4 rotateAround l "rotate around" +HIDDEN M {"start\t" center end}}
rotateAround center
addUserKnob {4 rot_order l "rotation order" +HIDDEN M {XYZ XZY YXZ YZX ZXY ZYX "" "" ""}}
rot_order ZXY
addUserKnob {13 rotate +HIDDEN}
addUserKnob {26 ""}
addUserKnob {4 falloffType M {None Linear Smooth Quadratic Cubic Exponential ""}}
falloffType Exponential
addUserKnob {7 falloff}
falloff 1
addUserKnob {7 exp R 0.1 10}
exp 1
}
Input {
inputs 0
name img
xpos -810
ypos -370
}
AddChannels {
channels alpha
color 1
name AddChannels1
xpos -810
ypos -280
}
Shuffle {
in pWorld
alpha blue
out rgb
name Shuffle_Input_Channels
xpos -810
ypos -202
}
set N3035f200 [stack 0]
Unpremult {
name Unpremult1
xpos -700
ypos -202
disable {{!parent.unpremultiply i}}
}
Dot {
name Dot4
xpos -226
ypos -198
}
NoOp {
name Ramps
xpos -260
ypos -178
}
set N3035dd00 [stack 0]
Add {
channels rgb
value {{-parent.start i} {-parent.start i} {-parent.start i} {curve i}}
name Set_Origin
xpos 180
ypos -178
}
ColorMatrix {
matrix {
    {{tt*wnorm.x**2+d i} {tt*wnorm.x*wnorm.y-s*wnorm.z i} {"tt*wnorm.x*wnorm.z + s*wnorm.y" i}}
    {{"tt*wnorm.x*wnorm.y + s*wnorm.z" i} {tt*wnorm.y**2+d i} {"tt*wnorm.y*wnorm.z - wnorm.x*s" i}}
    {{"tt*wnorm.x*wnorm.z - s*wnorm.y" i} {tt*wnorm.y*wnorm.z+s*wnorm.x i} {"tt*wnorm.z**2 + d" i}}
  }
name Rotate_Scale_Skew1
xpos 180
ypos -106
disable {{hasError i x200 1}}
addUserKnob {20 User}
addUserKnob {7 length}
length {{"sqrt ( ( (parent.end.r - parent.start.r) ** 2 )  + ( (parent.end.g - parent.start.g) ** 2 )  +  ( (parent.end.b - parent.start.b) ** 2 ))" i}}
addUserKnob {13 u}
u {0 1 0}
addUserKnob {13 v}
v {{"(parent.end.r - parent.start.r) / length" i} {"(parent.end.g - parent.start.g) / length" i} {"(parent.end.b - parent.start.b) / length" i}}
addUserKnob {13 w}
w {{"u.y * v.z - u.z * v.y" i} {"u.z * v.x - u.x * v.z" i} {"u.x * v.y - u.y * v.x" i}}
addUserKnob {13 wnorm}
wnorm {{"w.x / sqrt(w.x**2+w.y**2+w.z**2)" i} {"w.y / sqrt(w.x**2+w.y**2+w.z**2)" i} {"w.z / sqrt(w.x**2+w.y**2+w.z**2)" i}}
addUserKnob {7 phi}
phi {{acos(u.x*v.x+u.y*v.y+u.z*v.z) i}}
addUserKnob {7 tt}
tt {{1-cos(phi) i}}
addUserKnob {7 s}
s {{-sin(phi) i}}
addUserKnob {7 d}
d {{cos(phi) i}}
}
Multiply {
channels rgb
value {{1/Rotate_Scale_Skew1.length i}}
name Multiply1
xpos 180
ypos -58
}
Clamp {
channels rgb
name Clamp1
xpos 180
ypos -34
}
Expression {
expr0 "parent.useAlpha && a==0.0 ? 0 : r"
expr1 "parent.useAlpha && a==0.0 ? 0 : g"
expr2 "parent.useAlpha && a==0.0 ? 0 : b"
name IgnoreOutsideAlpha1
xpos 180
ypos 14
}
Shuffle {
alpha green
name Shuffle3
xpos 180
ypos 62
}
push $N3035dd00
Grade {
blackpoint {{start i} {start i} {start i} {curve i}}
whitepoint {{end i} {end i} {end i} {curve i}}
black_clamp false
maskChannelInput -rgba.alpha
unpremult -rgba.alpha
name Start_End
xpos -260
ypos -154
addUserKnob {20 User}
addUserKnob {18 start}
start {0 55 0}
addUserKnob {6 start_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 end}
end {0 250 0}
addUserKnob {6 end_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
}
set N3033c100 [stack 0]
Dot {
name Dot2
xpos -116
ypos -150
}
Add {
channels rgb
value {{-Axis1.world_matrix.3} {-Axis1.world_matrix.7} {-Axis1.world_matrix.11} {curve}}
name Translate1
xpos -150
ypos -82
}
ColorMatrix {
matrix {
    {{Axis1.world_matrix.0} {Axis1.world_matrix.1} {Axis1.world_matrix.2}}
    {{Axis1.world_matrix.4} {Axis1.world_matrix.5} {Axis1.world_matrix.6}}
    {{Axis1.world_matrix.8} {Axis1.world_matrix.9} {Axis1.world_matrix.10}}
  }
invert true
name Rotate_Scale_Skew3
xpos -150
ypos -58
disable {{hasError x200 1}}
}
Expression {
expr0 "parent.useAlpha && a==0.0 ? 0 : r"
expr1 "parent.useAlpha && a==0.0 ? 0 : g"
expr2 "parent.useAlpha && a==0.0 ? 0 : b"
name IgnoreOutsideAlpha3
xpos -150
ypos -34
}
Shuffle {
alpha blue
name Shuffle4
xpos -150
ypos 14
}
push $N3033c100
Expression {
expr0 "parent.useAlpha && a==0.0 ? 0 : r"
expr1 "parent.useAlpha && a==0.0 ? 0 : g"
expr2 "parent.useAlpha && a==0.0 ? 0 : b"
name IgnoreOutsideAlpha
xpos -260
ypos -106
}
set N30314f00 [stack 0]
Shuffle {
alpha blue
name Z
xpos -260
ypos -34
}
push $N30314f00
Shuffle {
alpha green
name Y
xpos -370
ypos -34
}
push $N30314f00
Shuffle {
alpha red
name X
xpos -480
ypos -34
}
Switch {
inputs 5
which {{parent.rampDirection}}
name Switch3
xpos -370
ypos 62
}
Grade {
channels alpha
whitepoint {{falloffType?falloff:0}}
white_clamp true
name Falloff
xpos -370
ypos 128
}
set N302eab00 [stack 0]
Expression {
expr3 pow(a,parent.exp)
name Exponential
xpos -40
ypos 230
}
push $N302eab00
Expression {
expr3 clamp((a**3),0,1)
name Cubic
xpos -150
ypos 230
}
push $N302eab00
Expression {
expr3 clamp(pow2(a),0,1)
name Quadratic
xpos -260
ypos 230
}
push $N302eab00
Expression {
expr3 smoothstep(0,1,a)
name Smooth
xpos -370
ypos 230
}
push $N302eab00
NoOp {
name Linear
xpos -480
ypos 230
}
push $N302eab00
NoOp {
name None
xpos -590
ypos 230
}
Switch {
inputs 6
which {{falloffType i}}
name Switch2
xpos -370
ypos 326
}
Remove {
operation keep
channels alpha
name Remove1
xpos -370
ypos 368
}
Shuffle {
in alpha
name OutChannel
xpos -370
ypos 446
}
push $N3035f200
Dot {
name Dot1
xpos -776
ypos 522
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels all
name Copy1
xpos -370
ypos 506
}
Output {
name Output1
xpos -370
ypos 638
}
Axis2 {
inputs 0
rot_order {{parent.rot_order}}
rotate {{parent.rotate} {parent.rotate} {parent.rotate}}
pivot {{parent.rotateAround/2} {parent.rotateAround/2} {parent.rotateAround/2}}
name Axis1
xpos -30
ypos -102
}
end_group
Multiply {
channels alpha
value 0.58
name Multiply8
selected true
xpos 9119
ypos -5389
}
Dot {
name Dot353
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9153
ypos -5323
}
Merge2 {
inputs 2
operation max
name Merge11
selected true
xpos 9022
ypos -5301
}
Clamp {
channels rgb
name Clamp2
selected true
xpos 9022
ypos -5248
}
Dot {
name Dot354
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9056
ypos -5211
}
Multiply {
channels rgb
value 0.25
name Multiply9
selected true
xpos 9022
ypos -5183
}
push $N34d45d00
Dot {
name Dot396
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 10705
ypos -12304
}
Dot {
name Dot355
tile_color 0x949494ff
label sky
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 10705
ypos -11252
}
Dot {
name Dot397
tile_color 0x949494ff
label sky
note_font_size 42
note_font_color 0xffffffff
selected true
xpos 576
ypos -11201
}
Dot {
name Dot481
tile_color 0x949494ff
label sky
note_font_size 42
note_font_color 0xffffffff
selected true
xpos 616
ypos -5870
}
Dot {
name Dot63
tile_color 0xd8b700ff
label "\n From: sky"
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 8109
ypos -5823
hide_input true
}
Dot {
name Dot356
tile_color 0x949494ff
label sky
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9678
ypos -5807
}
FrameHold {
first_frame 1001
name FrameHold5
selected true
xpos 9644
ypos -5322
}
Reformat {
type scale
scale 0.01
black_outside true
name Reformat2
selected true
xpos 9644
ypos -5284
}
Blur {
channels rgb
size 20
quality 10
name Blur4
selected true
xpos 9644
ypos -5258
}
Reformat {
format {{{parent.Reformat_OverscanMASTER.ReformatMASTER.format}}}
black_outside true
name Reformat3
selected true
xpos 9644
ypos -5231
}
Dot {
name Dot357
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9678
ypos -5179
}
push $N302b0100
Unpremult {
channels all
name Unpremult16
selected true
xpos 9491
ypos -5398
}
Merge2 {
inputs 2+1
operation plus
name Merge12
selected true
xpos 9491
ypos -5183
}
Premult {
channels all
name Premult21
selected true
xpos 9491
ypos -5128
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
channels zDepth
name Copy19
selected true
xpos 9491
ypos -5079
}
Dot {
name Dot358
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9525
ypos -5020
}
Group {
name Reformat_Overscan17
selected true
xpos 9491
ypos -4588
addUserKnob {20 User l Reformat_Overscan}
addUserKnob {41 format l "output format" T ReformatMASTER.format}
addUserKnob {41 overscanPercent T ReformatOverscanMASTER.overscanPercent}
addUserKnob {20 info}
addUserKnob {26 version l ver: T "v1 rafal 10/02/2020"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust4
tile_color 0xaaaaaaff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 42
xpos -987
ypos -496
bdwidth 280
bdheight 332
z_order -92960
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "Flat plate res"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Black
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
Input {
inputs 0
name Input1
xpos -884
ypos -382
}
Reformat {
format {{{parent.parent.Reformat_OverscanMASTER.ReformatMASTER.format}}}
pbb true
name ReformatMASTER
xpos -884
ypos -342
}
Reformat {
type scale
scale {{overscanPercent==0?1:1-(1/overscanPercent)}}
resize none
pbb true
name ReformatOverscanMASTER
xpos -884
ypos -288
addUserKnob {20 User l percent}
addUserKnob {7 overscanPercent R 0 80}
overscanPercent {{parent.parent.Reformat_OverscanMASTER.ReformatOverscanMASTER.overscanPercent}}
}
Crop {
box {{-ceil(((input.height*((1-ReformatOverscanMASTER.scale)))*0.5))} {-ceil(((input.width*((1-ReformatOverscanMASTER.scale)))*0.5))} {ceil(input.width+((input.width*(1-ReformatOverscanMASTER.scale))*0.5))} {ceil(input.height+((input.height*(1-ReformatOverscanMASTER.scale))*0.5))}}
name CropOverscanMASTER
xpos -884
ypos -244
addUserKnob {20 User}
}
set N303fab00 [stack 0]
Output {
name Output1
xpos -884
ypos -144
}
push $N303fab00
Viewer {
frame_range 994-1161
fps 25
viewerProcess "sRGB (ACES)"
name Viewer1
xpos -624
ypos -303
}
end_group
Group {
name UnlimitedRemove8
tile_color 0x9e3a61ff
selected true
xpos 9491
ypos -4562
lock_connections true
addUserKnob {20 user l UnlimitedRemove}
addUserKnob {20 info l Info n 1}
info 0
addUserKnob {26 text_info l "" +STARTLINE T "<font color=#e1f2a2>UnlimitedRemove v1.2</font> | author: Guillermo Algora\n<br>\nThe functionality of the native Remove node with the possibility of unlimited channel slots.\n<br>"}
addUserKnob {20 endGroup n -1}
addUserKnob {4 operation t "Remove: the named channels are deleted\nKeep: all but the named channels are deleted" M {remove keep "" "" "" "" "" "" "" "" "" ""}}
operation keep
addUserKnob {26 description l "" -STARTLINE T "                   Channel slots:"}
addUserKnob {22 add l "Add (+4)" t "Add four additional channel slots" -STARTLINE T "def add_remove_node(switch_node):\n\n    last_remove_node = switch_node.input(0)\n\n    nukescripts.clear_selection_recursive()\n    last_remove_node.setSelected(True)\n    new_remove_node = nuke.createNode(\"Remove\", inpanel=False)\n    nukescripts.clear_selection_recursive()\n\n    new_remove_node\['operation'].setValue(\"remove\")\n    for knob_name in (\"channels\", \"channels2\", \"channels3\", \"channels4\"):\n        new_remove_node\[knob_name].setValue(\"none\")\n\n    new_remove_node\['xpos'].setExpression('\{\}'.format(last_remove_node\['xpos'].value()))\n    new_remove_node\['ypos'].setExpression('\{\}'.format(last_remove_node\['ypos'].value()+50))\n\n    return new_remove_node\n\ndef add_keep_node(switch_node, new_remove_node):\n\n    last_keep_node = switch_node.input(1)\n\n    nukescripts.clear_selection_recursive()\n    last_keep_node.setSelected(True)\n    new_keep_node = nuke.createNode(\"Remove\", inpanel=False)\n\n    new_keep_node\['operation'].setValue(\"keep\")\n    for knob_name in (\"channels\", \"channels2\", \"channels3\", \"channels4\"):\n        new_keep_node\[knob_name].setValue(\"none\")\n\n    new_keep_node\['xpos'].setExpression('\{\}'.format(last_keep_node\['xpos'].value()-100))\n    new_keep_node\['ypos'].setExpression('\{\}'.format(last_keep_node\['ypos'].value()+50))\n\n    new_keep_node.setSelected(True)\n    copy_node = nuke.createNode(\"Copy\", inpanel=False)\n    nukescripts.clear_selection_recursive()\n\n    for knob_name in (\"from0\", \"from1\", \"from2\", \"from3\"):\n        copy_node\[knob_name].setValue(\"none\")\n    for knob_name in (\"to0\", \"to1\", \"to2\", \"to3\"):\n        copy_node\[knob_name].setValue(\"none\")\n   \n    copy_node\['channels'].setValue(\"all\")\n    copy_node\['metainput'].setValue(\"All\")\n    copy_node\['rangeinput'].setValue(\"All\")\n    copy_node\['bbox'].setValue(\"union\")\n     \n    copy_node\['xpos'].setExpression('\{\}'.format(new_keep_node\['xpos'].value()+100))\n    copy_node\['ypos'].setExpression('\{\}'.format(new_keep_node\['ypos'].value()))\n\n    copy_node.setInput(0, last_keep_node)\n    new_keep_node.setInput(0, nuke.toNode(\"Dot1\"))\n\n    for knob_name in (\"channels\", \"channels2\", \"channels3\", \"channels4\"):\n        new_keep_node\[knob_name].setExpression(new_remove_node.name() + '.\{\}'.format(knob_name))\n\ndef add_channels(this_node, new_remove_node):\n\n    highest = \[]\n    for knob in this_node.allKnobs():\n        if \"channel\" in knob.name():\n            number = knob.name().split(\"channels\")\[1]\n            if number.isdigit():\n                highest.append(int(number))\n    highest = max(highest)\n\n    for knob_name in (\"channels\", \"channels2\", \"channels3\", \"channels4\"):\n        highest += 1\n        knob = nuke.Link_Knob(\"channels\" + '\{\}'.format(highest))\n        knob.setLink(new_remove_node.name() +'.\{\}'.format(knob_name))\n        this_node.addKnob(knob)\n\nundo = nuke.Undo()\nundo.disable()\n\ntry:\n    this_node = nuke.thisNode()\n\n    group = this_node\n    group.begin()\n\n    switch_node = nuke.toNode(\"Switch1\")\n    switch_node\['xpos'].setExpression('\{\}'.format(switch_node\['xpos'].value()))\n    switch_node\['ypos'].setExpression('\{\}'.format(switch_node\['ypos'].value()+50))\n\n    output_node = nuke.toNode(\"Output1\")\n    output_node\['xpos'].setExpression('\{\}'.format(output_node\['xpos'].value()))\n    output_node\['ypos'].setExpression('\{\}'.format(output_node\['ypos'].value()+50))\n\n    new_remove_node = add_remove_node(switch_node)\n    add_keep_node(switch_node, new_remove_node)\n\n    group.end()\n\n    add_channels(this_node, new_remove_node)\n\nfinally:\n    undo.enable()"}
addUserKnob {22 remove l "Remove (last 4)" t "Remove the last four additional channel slots" -STARTLINE T "def get_highest(this_node):\n\n    highest = \[]\n    for knob in this_node.allKnobs():\n        if \"channel\" in knob.name():\n            number = knob.name().split(\"channels\")\[1]\n            if number.isdigit():\n                highest.append(int(number))\n    highest = max(highest) + 1\n    return highest\n\ndef remove_channels(this_node, highest):\n\n        for i in range (0,4):\n            highest -= 1\n            this_node.removeKnob(this_node.knobs()\[(\"channels\" + '\{\}'.format(highest))])\n\ndef remove_nodes(switch_node):\n    copy_node = switch_node.input(1)\n    keep_node = copy_node.input(1)\n    remove_node = switch_node.input(0)\n\n    nuke.delete(copy_node)\n    nuke.delete(keep_node)\n    nuke.delete(remove_node)\n\nundo = nuke.Undo()\nundo.disable()\n\ntry:\n    this_node = nuke.thisNode()\n    highest = get_highest(this_node)\n\n    if highest > 5:\n        \n        remove_channels(this_node, highest)\n\n        group = this_node\n        group.begin()\n\n        switch_node = nuke.toNode(\"Switch1\")\n        switch_node\['xpos'].setExpression('\{\}'.format(switch_node\['xpos'].value()))\n        switch_node\['ypos'].setExpression('\{\}'.format(switch_node\['ypos'].value()-50))\n\n        output_node = nuke.toNode(\"Output1\")\n        output_node\['xpos'].setExpression('\{\}'.format(output_node\['xpos'].value()))\n        output_node\['ypos'].setExpression('\{\}'.format(output_node\['ypos'].value()-50))\n\n        remove_nodes(switch_node)\n\n        group.end()\n\nfinally:\n    undo.enable()"}
addUserKnob {41 channels T Remove1.channels}
addUserKnob {41 channels2 T Remove1.channels2}
addUserKnob {41 channels3 T Remove1.channels3}
addUserKnob {41 channels4 T Remove1.channels4}
addUserKnob {41 channels5 T Remove3.channels}
addUserKnob {41 channels6 T Remove3.channels2}
addUserKnob {41 channels7 T Remove3.channels3}
addUserKnob {41 channels8 T Remove3.channels4}
}
Input {
inputs 0
name Input
xpos {{0.0 x1001 0}}
ypos {{0.0 x1001 -1}}
}
Dot {
name Dot1
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos {{34.0 x1001 26}}
ypos {{125.0 x1001 125}}
}
set N303f8800 [stack 0]
Remove {
operation keep
channels {{{Remove3.channels}}}
channels2 {{{Remove3.channels2}}}
channels3 {{{Remove3.channels3}}}
channels4 {{{Remove3.channels4}}}
name Remove4
xpos 89
ypos 165
}
push $N303f8800
Remove {
operation keep
channels {{{Remove1.channels}}}
channels2 {{{Remove1.channels2}}}
channels3 {{{Remove1.channels3}}}
channels4 {{{Remove1.channels4}}}
name Remove2
xpos {{189.0 x1001 188}}
ypos {{115.0 x1001 115}}
}
Copy {
inputs 2
channels all
metainput All
rangeinput All
name Copy1
xpos 189
ypos 165
}
push $N303f8800
Remove {
channels rgba
channels2 zDepth
channels3 DiMatte_1
channels4 DiMatte_2
name Remove1
xpos {{-185.0 x1001 -183}}
ypos {{115.0 x1001 115}}
}
Remove {
channels DIMatte_3
channels2 DIMatte_D
name Remove3
xpos -185
ypos 165
}
Switch {
inputs 2
which {{UnlimitedRemove8.operation}}
name Switch1
xpos {{0.0 x1001 0}}
ypos {{282.0 x1001 233}}
}
Output {
name Output1
xpos {{0.0 x1001 -7}}
ypos {{392.0 x1001 342}}
}
end_group
Remove {
channels DiMatte_1
channels2 DiMatte_2
channels3 DIMatte_3
channels4 DIMatte_4
name Remove10
selected true
xpos 9491
ypos -4521
addUserKnob {20 User +INVISIBLE}
addUserKnob {7 UID_DI_Shuffle l UID}
}
Dot {
name Dot359
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9525
ypos -4202
}
set N301b8800 [stack 0]
Dot {
name Dot360
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9362
ypos -4202
}
set N301b8100 [stack 0]
Dot {
name Dot361
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9225
ypos -4202
}
Transform {
translate {{"\[value \[value matchmove_nodeName].translate.x]*reduceTx"} {"\[value \[value matchmove_nodeName].translate.y]*reduceTy"}}
rotate {{"\[value \[value matchmove_nodeName].rotate]*reduceRot"}}
scale {{"((\[value \[value matchmove_nodeName].scale.w]-1)*reduceSw)+1"} {"((\[value \[value matchmove_nodeName].scale.h]-1)*reduceSh)+1"}}
skewX {{"\[value \[value matchmove_nodeName].skewX]*reduceSkwx"}}
skewY {{"\[value \[value matchmove_nodeName].skewY]*reduceSkwx"}}
center {{"\[value \[value matchmove_nodeName].center.x]"} {"\[value \[value matchmove_nodeName].center.y]"}}
shutteroffset centred
name ReduceMM_Transform5
knobChanged "\n\n"
selected true
xpos 9188
ypos -4052
addUserKnob {20 settings l "Offset MatchMove"}
addUserKnob {1 matchmove_nodeName l "<font color=#e1f2a2>Match-Move Node name:</font>"}
matchmove_nodeName Transform_MatchMove6
addUserKnob {22 add_selectedNode l "<font color=#1ced09>Add selected Node name</font>" t "- Add the selected node name." -STARTLINE T "node_name = nuke.selectedNode().name()\nnuke.thisNode()\['matchmove_nodeName'].setValue(node_name)"}
addUserKnob {26 ""}
addUserKnob {26 data_info l "" +STARTLINE T "<br>\n<font color=#e1f2a2>Reduce values (multiplier):</font> \{1 = original data; 0 = no data\}\n<br>\n"}
addUserKnob {7 reduceTx l "Translate X:"}
reduceTx 0.42
addUserKnob {7 reduceTy l "Translate Y:" -STARTLINE}
reduceTy 0.62
addUserKnob {6 gangT l gang -STARTLINE +INVISIBLE}
addUserKnob {7 reduceRot l Rotation:}
addUserKnob {7 reduceSw l "Scale W:"}
reduceSw 0.78
addUserKnob {7 reduceSh l "Scale H:" -STARTLINE}
reduceSh 0.78
addUserKnob {6 gangS l gang -STARTLINE +INVISIBLE}
addUserKnob {7 reduceSkwx l "Skew X:"}
addUserKnob {7 reduceSkwy l "Skew Y:"}
addUserKnob {20 info_tab l Info}
addUserKnob {26 info l "" +STARTLINE T "<font color=#e1f2a2>ReduceMM_Transform v.1.1.0</font>\n<br>\nauthor: Guillermo Algora"}
}
push $N301b8100
CornerPin2D {
to1 {{"((\[value \[value matchmove_nodeName].to1.x] - \[value \[value matchmove_nodeName].from1.x]) * reduceValues) + \[value \[value matchmove_nodeName].from1.x]"} {"((\[value \[value matchmove_nodeName].to1.y] - \[value \[value matchmove_nodeName].from1.y]) * reduceValues) + \[value \[value matchmove_nodeName].from1.y]"}}
to2 {{"((\[value \[value matchmove_nodeName].to2.x] - \[value \[value matchmove_nodeName].from2.x]) * reduceValues) + \[value \[value matchmove_nodeName].from2.x]"} {"((\[value \[value matchmove_nodeName].to2.y] - \[value \[value matchmove_nodeName].from2.y]) * reduceValues) + \[value \[value matchmove_nodeName].from2.y]"}}
to3 {{"((\[value \[value matchmove_nodeName].to3.x] - \[value \[value matchmove_nodeName].from3.x]) * reduceValues) + \[value \[value matchmove_nodeName].from3.x]"} {"((\[value \[value matchmove_nodeName].to3.y] - \[value \[value matchmove_nodeName].from3.y]) * reduceValues) + \[value \[value matchmove_nodeName].from3.y]"}}
to4 {{"((\[value \[value matchmove_nodeName].to4.x] - \[value \[value matchmove_nodeName].from4.x]) * reduceValues) + \[value \[value matchmove_nodeName].from4.x]"} {"((\[value \[value matchmove_nodeName].to4.y] - \[value \[value matchmove_nodeName].from4.y]) * reduceValues) + \[value \[value matchmove_nodeName].from4.y]"}}
invert false
shutteroffset centred
from1 {{"\[value \[value matchmove_nodeName].from1.x]"} {"\[value \[value matchmove_nodeName].from1.y]"}}
from2 {{"\[value \[value matchmove_nodeName].from2.x]"} {"\[value \[value matchmove_nodeName].from2.y]"}}
from3 {{"\[value \[value matchmove_nodeName].from3.x]"} {"\[value \[value matchmove_nodeName].from3.y]"}}
from4 {{"\[value \[value matchmove_nodeName].from4.x]"} {"\[value \[value matchmove_nodeName].from4.y]"}}
name ReduceMM_CornerPin2D5
selected true
xpos 9325
ypos -4144
disable true
addUserKnob {20 settings l "Offset MatchMove"}
addUserKnob {1 matchmove_nodeName l "<font color=#e1f2a2>MatchMove Node name:</font>"}
matchmove_nodeName CornerPin2D1
addUserKnob {22 add_selectedNode l "<font color=#1ced09>Add selected Node name</font>" -STARTLINE T "node_name = nuke.selectedNode().name()\nnuke.thisNode()\['matchmove_nodeName'].setValue(node_name)"}
addUserKnob {7 reduceValues l "<font color=#e1f2a2>Reduce values (multiplier):</font>"}
reduceValues 1
addUserKnob {26 data_info l "" -STARTLINE T "<font color=#e1f2a2>(1 = original data; 0 = no data)</font>"}
addUserKnob {20 info_tab l Info}
addUserKnob {26 info l "" +STARTLINE T "<font color=#e1f2a2>ReduceMM_CornerPin2D v.1.1.0</font>\n<br>\nauthor: Guillermo Algora"}
}
Switch {
inputs 2
name Switch10
selected true
xpos 9325
ypos -4052
disable true
}
push $N301b8800
Switch {
inputs 2
name Switch11
selected true
xpos 9488
ypos -4052
disable true
}
Dot {
name Dot362
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9522
ypos -4007
}
Dot {
name Dot363
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9522
ypos -3878
}
Dot {
name Dot364
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11469
ypos -3878
}
set N30190100 [stack 0]
Dot {
name Dot365
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11469
ypos -3741
}
set N3016b900 [stack 0]
Dot {
name cg
tile_color 0x949494ff
label cg
note_font_size 12
note_font_color 0xffffffff
selected true
xpos 11469
ypos -3652
}
set N3016b200 [stack 0]
Dot {
name Dot403
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11463
ypos -2590
}
Dot {
name Dot402
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11662
ypos -2590
}
set N3016a400 [stack 0]
Dot {
name Dot401
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11662
ypos -2525
}
push $N3016a400
push $N3016b200
push $N3016b900
push $N340c7200
Group {
inputs 2
name L_Fuse1
help "<b><u>L_Fuse_v05</b></u>\t\nFuse is a replacement for the merge(over) node.  \n\n<b>\"Light Flare” - </b> wraps a luma keyed background over the foreground.  Only the brighter parts of the image are wrapped.  \n\n<b>\"Wrap All” - </b>wraps all of the background values over the foreground. \n\n<b>\"Bleed Color” -  </b>wraps hue values from the background over the foreground.  It replaces foreground hue values with background values.  \n\n<b>\"Edge Blur” - </b>blurs the edge areas of the composite.  This edge is determined by alpha transparency. So any parts of the alpha that are semi-transparent will be blurred. \n\n<b>\"Apply operations in Log” -  </b>will layer the foreground over the background in a Log colorspace resulting sometimes in a preferable result. \n\n<i>(For any questions, comments or suggestions please email gizmos@luma-pictures.com)</i>"
selected true
xpos 11565
ypos -3745
addUserKnob {20 Fuse}
addUserKnob {26 "" l "<b><u>Light Flare</u></b>"}
addUserKnob {7 WrapFlare_amount l Amount}
WrapFlare_amount 0.3
addUserKnob {14 WrapFlare_size l Size R 0 100}
WrapFlare_size 2
addUserKnob {7 WrapFlare_keyHighThresh l High}
WrapFlare_keyHighThresh 0.6
addUserKnob {7 WrapFlare_keyLowThresh l Low}
WrapFlare_keyLowThresh 0.1
addUserKnob {18 Mult_Flare l Mult R 0 2}
Mult_Flare 1
addUserKnob {6 Mult_Flare_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 "" l "<b><u>Wrap All</u></b>"}
addUserKnob {7 WrapAll_amount l Amount}
WrapAll_amount 0.1
addUserKnob {14 WrapAll_size l Size R 0 20}
WrapAll_size 5
addUserKnob {18 WrapAllMult l Mult R 0 2}
WrapAllMult 1
addUserKnob {6 WrapAllMult_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 "" l "<b><u>Bleed Color</u></b>"}
addUserKnob {7 iColor_amount l Amount}
iColor_amount 0.3
addUserKnob {14 iColor_size l Size R 0 10}
iColor_size 5
addUserKnob {18 ColorBleedMult l Mult R 0 2}
ColorBleedMult 1
addUserKnob {6 ColorBleedMult_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 "" l "<b><u>Edge Blur</u></b>"}
addUserKnob {7 EdgeBlur_amount l Amount R 0 10}
EdgeBlur_amount 2
addUserKnob {26 ""}
addUserKnob {41 bbox_1 l "set bbox to " T Merge7.bbox}
addUserKnob {6 operationsInLog l "Apply operations in Log" +STARTLINE}
addUserKnob {7 overallMix l mix}
overallMix 1
addUserKnob {6 regularOver l "Regular Over" +STARTLINE}
addUserKnob {41 lightwrapOnly T Switch2.lightwrapOnly}
addUserKnob {26 ""}
addUserKnob {22 Button l "     Luma Pictures     " T "import os\nimport sys\n\ntry:\n    import subprocess\n    def _run(cmd, shell, wait):\n        opener = subprocess.Popen(cmd, shell=shell)\n        if wait:\n            opener.wait()\n        return opener.pid\nexcept ImportError:\n    import popen2\n    def _run(cmd, shell, wait):\n        opener = popen2.Popen3(cmd)\n        if wait:\n            opener.wait()\n        return opener.pid\n\ndef _open(url, wait=0):\n    if sys.platform == \"darwin\":\n        cmd = \[\"open\", url]\n    elif hasattr(os, \"startfile\"):\n        return os.startfile(url)\n    elif os.environ.has_key(\"KDE_FULL_SESSION\") or os.environ.has_key(\"KDE_MULTIHEAD\") or \\\n        os.environ.has_key(\"GNOME_DESKTOP_SESSION_ID\") or os.environ.has_key(\"GNOME_KEYRING_SOCKET\"):\n        cmd = \[\"xdg-open\", url]\n    else:\n        raise OSError, \"Desktop not supported.\"\n\n    return _run(cmd, 0, wait)\n\n_open('http://www.luma-pictures.com/tools/nuke/')" +STARTLINE}
addUserKnob {20 info}
addUserKnob {26 txt l ver: T "v1.0 rafal 20/01/22 gbk fork lightwrapOnly"}
}
Input {
inputs 0
name FG
label "\n"
xpos -150
ypos -10
number 1
}
Log2Lin {
operation lin2log
unpremult rgba.alpha
name Log2Lin1
xpos -150
ypos 56
disable {{1-operationsInLog i x1 0}}
}
Dot {
name Dot1
xpos -116
ypos 378
}
set N30151600 [stack 0]
Dot {
name Dot15
xpos -446
ypos 378
}
Dot {
name Dot21
xpos -446
ypos 2706
}
set N30150800 [stack 0]
push $N30151600
Unpremult {
name Unpremult1
xpos -150
ypos 998
}
set N30150100 [stack 0]
Dot {
name Dot13
xpos -336
ypos 1002
}
Dot {
name Dot14
xpos -336
ypos 2082
}
push $N30151600
Input {
inputs 0
name BG
xpos 2490
ypos 14
}
Log2Lin {
operation lin2log
name Log2Lin2
xpos 2490
ypos 62
disable {{1-operationsInLog i x1 0}}
}
Dot {
name Dot2
xpos 2524
ypos 234
}
set N30138800 [stack 0]
Dot {
name Dot3
xpos 1754
ypos 234
}
set N30138100 [stack 0]
Dot {
name Dot20
xpos 1094
ypos 234
}
ShuffleCopy {
inputs 2
name ShuffleCopy1
xpos 1060
ypos 374
}
Invert {
channels alpha
name Invert1
xpos 1060
ypos 416
}
Premult {
name Premult2
xpos 1060
ypos 470
}
Dot {
name Dot9
xpos 1094
ypos 690
}
set N3011dd00 [stack 0]
push $N30138100
Keyer {
operation "luminance key"
range {{WrapFlare_keyLowThresh i x1 0} {WrapFlare_keyHighThresh i x1 0.5} {1 i x1 0} {1 i x1 0.02088665026}}
name KeyerFlare
xpos 1720
ypos 536
}
Premult {
name Premult1
xpos 1720
ypos 614
}
Merge2 {
inputs 2
operation mask
name Merge3
xpos 1720
ypos 686
}
Dot {
name Dot11
xpos 1754
ypos 786
}
set N3011c100 [stack 0]
Blur {
size {{WrapFlare_size i} {WrapFlare_size i}}
name BlurFlare
label "\[value size]"
xpos 1610
ypos 866
}
push $N3011c100
Blur {
size {{BlurFlare.size*2 i} {BlurFlare.size*2 i}}
name Blur6
label "\[value size]"
xpos 1720
ypos 866
}
Merge2 {
inputs 2
name Merge4
xpos 1610
ypos 998
}
push $N3011c100
Blur {
size {{Blur6.size*2 i} {Blur6.size*2 i}}
name Blur7
label "\[value size]"
xpos 1830
ypos 866
}
Merge2 {
inputs 2
name Merge12
xpos 1720
ypos 1046
}
push $N3011c100
Blur {
size {{Blur7.size*2 i} {Blur7.size*2 i}}
name Blur8
label "\[value size]"
xpos 1940
ypos 866
}
Merge2 {
inputs 2
name Merge14
xpos 1720
ypos 1094
}
Multiply {
value {{Mult_Flare.r i} {Mult_Flare.g i} {Mult_Flare.b i} 1}
name Multiply1
xpos 1610
ypos 1136
}
Grade {
channels all
white {{WrapFlare_amount i}}
name FlareAmount
xpos 1610
ypos 1184
}
Dot {
name Dot8
xpos 1644
ypos 1962
}
push $N3011dd00
Dot {
name Dot5
xpos 1094
ypos 786
}
set N2fea3900 [stack 0]
Blur {
size {{WrapAll_size i} {WrapAll_size i}}
name BlurBgWrapSize
label "\[value size]"
xpos 950
ypos 866
}
push $N2fea3900
Blur {
size {{BlurBgWrapSize.size*2 i} {BlurBgWrapSize.size*2 i}}
name Blur2
label "\[value size]"
xpos 1060
ypos 866
}
Merge2 {
inputs 2
name Merge2
xpos 950
ypos 998
}
push $N2fea3900
Blur {
size {{Blur2.size*2 i} {Blur2.size*2 i}}
name Blur3
label "\[value size]"
xpos 1170
ypos 866
}
Merge2 {
inputs 2
name Merge10
xpos 1060
ypos 1046
}
push $N2fea3900
Blur {
size {{Blur3.size*2 i} {Blur3.size*2 i}}
name Blur4
label "\[value size]"
xpos 1390
ypos 866
}
Merge2 {
inputs 2
name Merge11
xpos 1170
ypos 1094
}
Multiply {
value {{WrapAllMult.r i} {WrapAllMult.g i} {WrapAllMult.b i} 1}
name Multiply2
xpos 950
ypos 1136
}
Grade {
channels all
white {{WrapAll_amount i}}
name GradeBgWrapAmount
xpos 950
ypos 1184
}
Dot {
name Dot6
xpos 984
ypos 1698
}
push $N3011dd00
Dot {
name Dot10
xpos 434
ypos 690
}
Dot {
name Dot4
xpos 434
ypos 786
}
set N2fe62b00 [stack 0]
Blur {
size {{iColor_size i} {iColor_size i}}
name iColor
label "\[value size]"
xpos 290
ypos 890
}
push $N2fe62b00
Blur {
size {{iColor.size*2 i} {iColor.size*2 i}}
name Blur1
label "\[value size]"
xpos 510
ypos 890
}
Merge2 {
inputs 2
name Merge1
xpos 290
ypos 998
}
push $N2fe62b00
Blur {
size {{Blur1.size*2 i} {Blur1.size*2 i}}
name Blur5
label "\[value size]"
xpos 620
ypos 890
}
Merge2 {
inputs 2
name Merge8
xpos 400
ypos 1046
}
push $N2fe62b00
Blur {
size {{Blur5.size*2 i} {Blur5.size*2 i}}
name Blur9
label "\[value size]"
xpos 730
ypos 890
}
Merge2 {
inputs 2
name Merge9
xpos 510
ypos 1094
}
Clamp {
minimum 0.001
maximum 100
name Clamp1
xpos 290
ypos 1136
}
set N2fe1f200 [stack 0]
push $N2fe1f200
Expression {
expr0 (1/(r*.3+g*.59+b*.11))*r
expr1 (1/(r*.3+g*.59+b*.11))*g
expr2 (1/(r*.3+g*.59+b*.11))*b
name Expression1
xpos 70
ypos 1142
}
push $N30150100
Dot {
name Dot12
xpos -6
ypos 1002
}
Saturation {
saturation {{-iColor_amount+1 i}}
name Saturation1
xpos -40
ypos 1070
}
Merge2 {
inputs 2
operation multiply
mix {{iColor_amount i}}
name Multiply4
xpos -40
ypos 1142
}
Multiply {
value {{ColorBleedMult.r i} {ColorBleedMult.g i} {ColorBleedMult.b i} 1}
name Multiply3
xpos -40
ypos 1184
}
push $N30150100
Keymix {
inputs 3
name Keymix1
xpos -150
ypos 1520
}
Merge2 {
inputs 2
name Merge5
xpos -150
ypos 1694
}
Merge2 {
inputs 2
name Merge6
xpos -150
ypos 1934
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy1
xpos -150
ypos 2072
}
Premult {
name Premult3
xpos -150
ypos 2153
}
Dot {
name Dot22
xpos -116
ypos 2274
}
set N2fdfc100 [stack 0]
Merge2 {
inputs 2
operation from
name Merge16
xpos 1660
ypos 2815
}
push $N30150800
Dot {
name Dot24
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 1758
ypos 2688
}
push $N30138800
Dot {
name Dot17
xpos 2524
ypos 2178
}
set N2fddab00 [stack 0]
Dot {
name Dot23
xpos 1974
ypos 2178
}
Merge2 {
inputs 2
name Merge15
xpos 1940
ypos 2678
}
push $N2fdfc100
push $N2fddab00
Merge2 {
inputs 2
name Merge7
xpos 2490
ypos 2246
}
Dot {
name Dot16
xpos 2524
ypos 2418
}
set N2fdd8f00 [stack 0]
Blur {
size 3
name Blur11
label "\[value size]"
xpos 2270
ypos 2378
}
set N2fdd8800 [stack 0]
push $N2fdd8800
Merge2 {
inputs 2
operation xor
name Merge13
xpos 2270
ypos 2438
}
Grade {
channels rgba
whitepoint 0.9
white_clamp true
name Grade1
xpos 2270
ypos 2486
}
Dot {
name Dot7
xpos 2304
ypos 2538
}
push $N2fdd8f00
Blur {
inputs 1+1
size {{EdgeBlur_amount i}}
name EdgeBlur
label "\[value size]"
xpos 2490
ypos 2522
}
Switch {
inputs 2
which {{regularOver}}
name Switch1
xpos 2490
ypos 2678
}
push $N2fddab00
Dot {
name Dot18
xpos 2634
ypos 2178
}
Dot {
name Dot19
xpos 2634
ypos 2778
}
Dissolve {
inputs 2
which {{overallMix i}}
name overallMix
xpos 2490
ypos 2768
}
Switch {
inputs 2
which {{lightwrapOnly}}
name Switch2
xpos 2490
ypos 2880
addUserKnob {20 User}
addUserKnob {6 lightwrapOnly +STARTLINE}
lightwrapOnly true
}
Log2Lin {
name Log2Lin3
xpos 2490
ypos 2987
disable {{1-operationsInLog i x1 0}}
}
Output {
name Output1
xpos 2490
ypos 3035
}
end_group
push $N30190100
push $N340c7900
Merge2 {
inputs 2
name Merge13
selected true
xpos 11712
ypos -3882
}
Merge2 {
inputs 2
operation plus
Achannels {rgba.red rgba.green rgba.blue -rgba.alpha}
mix 0.25
name Merge14
selected true
xpos 11712
ypos -3745
}
Grade {
channels zDepth
multiply 5.8
name Grade26
selected true
xpos 11713
ypos -3706
}
Group {
inputs 2
name combine_zDepth3
selected true
xpos 11712
ypos -3656
addUserKnob {20 User l combine_zDepth}
addUserKnob {41 in l "in 1" T Shuffle23.in}
}
Input {
inputs 0
name A
xpos -847
ypos -448
number 1
}
Shuffle1 {
in {{{parent.Shuffle23.in}}}
out rgb
name Shuffle1
label "\[value in]"
xpos -847
ypos -374
}
Expression {
expr0 (r>0?1/r==inf?0:1/r:0)
expr1 (g>0?1/g==inf?0:1/g:0)
expr2 (b>0?1/b==inf?0:1/b:0)
name NukeDepthToCG1
label alpha
xpos -847
ypos -336
addUserKnob {20 User}
addUserKnob {4 math l "input math" M {"infinity = 0 (nuke, renderMan)" "camera = 0 (arnold, vray)"}}
math "camera = 0 (arnold, vray)"
}
Input {
inputs 0
name B
xpos -978
ypos -444
}
Dot {
name Dot1
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -944
ypos -418
}
set N2ff50100 [stack 0]
Shuffle1 {
in zDepth
out rgb
name Shuffle23
label "\[value in]"
xpos -978
ypos -380
}
Expression {
expr0 (r>0?1/r==inf?0:1/r:0)
expr1 (g>0?1/g==inf?0:1/g:0)
expr2 (b>0?1/b==inf?0:1/b:0)
name NukeDepthToCG5
label alpha
xpos -978
ypos -329
addUserKnob {20 User}
addUserKnob {4 math l "input math" M {"infinity = 0 (nuke, renderMan)" "camera = 0 (arnold, vray)"}}
math "camera = 0 (arnold, vray)"
}
Merge2 {
inputs 2
operation max
Achannels rgb
Bchannels rgb
output rgb
name Max
xpos -907
ypos -275
}
Expression {
expr0 (r>0?1/r==inf?0:1/r:0)
expr1 (g>0?1/g==inf?0:1/g:0)
expr2 (b>0?1/b==inf?0:1/b:0)
name NukeDepthToCG2
label alpha
xpos -907
ypos -237
addUserKnob {20 User}
addUserKnob {4 math l "input math" M {"infinity = 0 (nuke, renderMan)" "camera = 0 (arnold, vray)"}}
math "camera = 0 (arnold, vray)"
}
Shuffle1 {
out {{{parent.Shuffle23.in}}}
name Shuffle2
label "\[value in]"
xpos -907
ypos -179
}
push $N2ff50100
Dot {
name Dot2
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -1138
ypos -413
}
Dot {
name Dot3
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -1121
ypos -140
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels zDepth
name Copy1
xpos -907
ypos -111
}
Output {
name Output1
xpos -907
ypos -32
}
end_group
Dot {
name Dot400
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11740
ypos -2692
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels DiMatte_2
name Copy20
selected true
xpos 11706
ypos -2606
}
Group {
inputs 2
name DI_Shuffle17
tile_color 0xa43f88ff
gl_color 0x1d1d1dff
label "\[value layer]\n\[value matteName]Holdout CG"
selected true
xpos 11706
ypos -2541
disable true
addUserKnob {20 User l DI_Shuffle}
addUserKnob {41 layer l "shuffle in" T master.layer}
addUserKnob {1 matteName l " matte name:" -STARTLINE}
addUserKnob {41 DIChannelSource l "  from" T master.DIChannelSource}
addUserKnob {41 useRGBalpha l "  use RGB.alpha" -STARTLINE T master.useRGBalpha}
addUserKnob {26 txt l holdout}
addUserKnob {41 holdout l "holdout 1  |" T Copy1.holdout}
addUserKnob {41 holdout_1 l "holdout 2 |" -STARTLINE T Copy7.holdout}
addUserKnob {41 holdout_2 l "holdout 3  |" -STARTLINE T Copy8.holdout}
addUserKnob {41 holdout_3 l "holdout 4" -STARTLINE T Copy9.holdout}
addUserKnob {26 txt_1 l "matte from" T ""}
addUserKnob {41 selectHoldout l "" -STARTLINE T master.selectAlpha}
addUserKnob {41 from0 l " channel" -STARTLINE T Copy25.from0}
addUserKnob {26 txt_2 l " " T "The heldout input (A||B) is opposite of  'matte from' input ."}
addUserKnob {26 txt_3 l " " T "The 'matte from' channel is is never heldout."}
addUserKnob {20 info}
addUserKnob {26 ver l ver: T 0.3}
addUserKnob {26 source l source: T "Rafs Kan. 13th Nov. 2019"}
addUserKnob {26 edit l edit: T " rafsKan 2019-19-11: add C&D\nrafsKan 2022/02/07: bug fixes"}
addUserKnob {7 UID_DI_Shuffle l UID +INVISIBLE}
UID_DI_Shuffle 1
}
Input {
inputs 0
name A
xpos 2714
ypos -356
number 1
}
Dot {
name Dot13
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2748
ypos -162
}
AddChannels {
channels DiMatte_1
name AddChannels5
xpos 2714
ypos -144
disable {{"!(\[numvalue master.layer]==0||\[numvalue master.layer]==1|\[numvalue master.layer]==2||\[numvalue master.layer]==3||\[numvalue master.layer]==16)"}}
}
AddChannels {
channels DiMatte_2
name AddChannels6
xpos 2714
ypos -106
disable {{"!(\[numvalue master.layer]==4||\[numvalue master.layer]==5|\[numvalue master.layer]==6||\[numvalue master.layer]==7||\[numvalue master.layer]==17)"}}
}
AddChannels {
channels DIMatte_3
name AddChannels7
xpos 2714
ypos -72
disable {{"!(\[numvalue master.layer]==8||\[numvalue master.layer]==9|\[numvalue master.layer]==10||\[numvalue master.layer]==11||\[numvalue master.layer]==18)"}}
}
AddChannels {
channels DIMatte_4
name AddChannels8
xpos 2714
ypos -36
disable {{"!(\[numvalue master.layer]==12||\[numvalue master.layer]==13|\[numvalue master.layer]==14||\[numvalue master.layer]==15||\[numvalue master.layer]==19)"}}
}
Dot {
name Dot3
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2748
ypos 2
}
set N2fecdd00 [stack 0]
Input {
inputs 0
name B
xpos 3881
ypos -401
}
Dot {
name Dot11
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3915
ypos -375
}
Dot {
name Dot8
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3941
ypos -231
}
Dot {
name Dot9
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3941
ypos -213
}
AddChannels {
channels DiMatte_1
name AddChannels1
xpos 3907
ypos -195
disable {{"!(\[numvalue master.layer]==0||\[numvalue master.layer]==1|\[numvalue master.layer]==2||\[numvalue master.layer]==3||\[numvalue master.layer]==16)"}}
}
AddChannels {
channels DiMatte_2
name AddChannels2
xpos 3907
ypos -157
disable {{"!(\[numvalue master.layer]==4||\[numvalue master.layer]==5|\[numvalue master.layer]==6||\[numvalue master.layer]==7||\[numvalue master.layer]==17)"}}
}
AddChannels {
channels DIMatte_3
name AddChannels3
xpos 3907
ypos -123
disable {{"!(\[numvalue master.layer]==8||\[numvalue master.layer]==9|\[numvalue master.layer]==10||\[numvalue master.layer]==11||\[numvalue master.layer]==18)"}}
}
AddChannels {
channels DIMatte_4
name AddChannels4
xpos 3907
ypos -87
disable {{"!(\[numvalue master.layer]==12||\[numvalue master.layer]==13|\[numvalue master.layer]==14||\[numvalue master.layer]==15||\[numvalue master.layer]==19)"}}
}
Dot {
name Dot4
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3946
ypos 44
}
set N300b0100 [stack 0]
Switch {
inputs 2
which {{master.DIChannelSource==1?0:1}}
name Switch1
label DIChannelSource
xpos 2842
ypos 690
}
Shuffle {
red white
green white
blue white
alpha white
name Shuffle1
label "\[value in]"
xpos 3529
ypos 1496
disable {{master.DIChannelSource==2?0:1}}
}
Dot {
name Dot33
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3563
ypos 1599
}
set N3009ab00 [stack 0]
Dot {
name Dot34
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3563
ypos 1858
}
set N3009a400 [stack 0]
Dot {
name Dot35
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3563
ypos 2179
}
set N30099d00 [stack 0]
Dot {
name Dot36
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3563
ypos 2442
}
set N30099600 [stack 0]
Dot {
name Dot37
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3558
ypos 2735
}
set N30098f00 [stack 0]
Dot {
name Dot10
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3555
ypos 2814
}
set N30098800 [stack 0]
Dot {
name Dot31
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3555
ypos 2907
}
set N30098100 [stack 0]
Dot {
name Dot32
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3550
ypos 2993
}
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DIMatte_D
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DIMatte_D.alpha 0 3 rgba.alpha 0 0 DIMatte_D.red 0 0 rgba.alpha 0 0 DIMatte_D.green 0 1 rgba.alpha 0 0 DIMatte_D.blue 0 2"
name Shuffle29
label "\[value in1]"
xpos 3605
ypos 2983
disable {{!useRGBalpha}}
}
push $N30098100
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DIMatte_3
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DIMatte_C.alpha 0 3 rgba.alpha 0 0 DIMatte_3.red 0 0 rgba.alpha 0 0 DIMatte_3.green 0 1 rgba.alpha 0 0 DIMatte_3.blue 0 2"
name Shuffle28
label "\[value in1]"
xpos 3608
ypos 2896
disable {{!useRGBalpha}}
}
push $N30098800
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DiMatte_2
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DiMatte_2.alpha 0 3 rgba.alpha 0 0 DiMatte_2.red 0 0 rgba.alpha 0 0 DiMatte_2.green 0 1 rgba.alpha 0 0 DiMatte_2.blue 0 2"
name Shuffle27
label "\[value in1]"
xpos 3611
ypos 2808
disable {{!useRGBalpha}}
}
push $N30098f00
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DiMatte_1
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DiMatte_1.alpha 0 3 rgba.alpha 0 0 DiMatte_1.red 0 0 rgba.alpha 0 0 DiMatte_1.green 0 1 rgba.alpha 0 0 DiMatte_1.blue 0 2"
name Shuffle26
label "\[value in1]"
xpos 3620
ypos 2728
disable {{!useRGBalpha}}
}
push $N30099600
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DIMatte_D
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DIMatte_D.alpha 0 3 rgba.alpha 0 0 DIMatte_D.red 0 0 rgba.alpha 0 0 DIMatte_D.green 0 1 rgba.alpha 0 0 DIMatte_D.blue 0 2"
name Shuffle25
label "\[value in1]"
xpos 3615
ypos 2432
disable {{!useRGBalpha}}
}
Dot {
name Dot27
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3747
ypos 2438
}
set N30078f00 [stack 0]
Dot {
name Dot28
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3743
ypos 2511
}
set N30078800 [stack 0]
Dot {
name Dot29
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3743
ypos 2578
}
set N30078100 [stack 0]
Dot {
name Dot30
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3740
ypos 2641
}
push $N30078100
push $N30078800
push $N30078f00
push $N30099d00
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DIMatte_3
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DIMatte_C.alpha 0 3 rgba.alpha 0 0 DIMatte_3.red 0 0 rgba.alpha 0 0 DIMatte_3.green 0 1 rgba.alpha 0 0 DIMatte_3.blue 0 2"
name Shuffle24
label "\[value in1]"
xpos 3618
ypos 2170
disable {{!useRGBalpha}}
}
Dot {
name Dot23
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3749
ypos 2179
}
set N3004eb00 [stack 0]
Dot {
name Dot24
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3749
ypos 2240
}
set N3004e400 [stack 0]
Dot {
name Dot25
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3749
ypos 2309
}
set N3004dd00 [stack 0]
Dot {
name Dot26
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3749
ypos 2374
}
push $N3004dd00
push $N3004e400
push $N3004eb00
push $N3009a400
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DiMatte_2
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DiMatte_2.alpha 0 3 rgba.alpha 0 0 DiMatte_2.red 0 0 rgba.alpha 0 0 DiMatte_2.green 0 1 rgba.alpha 0 0 DiMatte_2.blue 0 2"
name Shuffle23
label "\[value in1]"
xpos 3627
ypos 1850
disable {{!useRGBalpha}}
}
Dot {
name Dot19
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3759
ypos 1858
}
set N3004c800 [stack 0]
Dot {
name Dot20
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3759
ypos 1931
}
set N3004c100 [stack 0]
Dot {
name Dot21
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3759
ypos 1998
}
set N3002f900 [stack 0]
Dot {
name Dot22
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3756
ypos 2061
}
push $N3002f900
push $N3004c100
push $N3004c800
push $N3009ab00
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DiMatte_1
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DiMatte_1.alpha 0 3 rgba.alpha 0 0 DiMatte_1.red 0 0 rgba.alpha 0 0 DiMatte_1.green 0 1 rgba.alpha 0 0 DiMatte_1.blue 0 2"
name Shuffle22
label "\[value in1]"
xpos 3630
ypos 1589
disable {{!useRGBalpha}}
}
Dot {
name Dot15
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3760
ypos 1599
}
set N3002e400 [stack 0]
Dot {
name Dot16
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3760
ypos 1660
}
set N3002dd00 [stack 0]
Dot {
name Dot17
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3760
ypos 1729
}
set N3002d600 [stack 0]
Dot {
name Dot18
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3760
ypos 1794
}
push $N3002d600
push $N3002dd00
push $N3002e400
push $N300b0100
push $N2fecdd00
Dot {
name Dot38
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2492
ypos 2
}
Switch {
inputs 2
which {{master.selectAlpha==1?0:1}}
name Switch3
label "hold out"
xpos 2422
ypos 600
}
Dot {
name Dot40
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2456
ypos 656
}
set N3001b900 [stack 0]
Dot {
name Dot39
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2372
ypos 656
}
Dot {
name Dot41
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2372
ypos 754
}
set N3001ab00 [stack 0]
Dot {
name Dot42
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2372
ypos 1042
}
push $N3001ab00
push $N3001b900
Multiply {
value 0
name Multiply2
xpos 2422
ypos 684
disable true
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy25
xpos 2422
ypos 744
}
Clamp {
name Clamp1
xpos 2422
ypos 847
}
Dot {
name Dot12
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2610
ypos 905
}
push $N2fecdd00
push $N300b0100
Switch {
inputs 2
which {{master.selectAlpha==1?0:1}}
name Switch2
label "hold out"
xpos 2612
ypos 676
}
Dot {
name Dot7
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2646
ypos 862
}
Multiply {
inputs 1+1
value 0
name Multiply1
xpos 2612
ypos 952
}
Copy {
inputs 2
from0 {{{parent.Copy25.from0}}}
to0 {{{parent.Copy25.from0}}}
name Copy26
xpos 2616
ypos 1032
disable {{Copy25.from0==0}}
}
Dot {
name Dot1
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3697
ypos 955
}
set N2ffd7900 [stack 0]
Dot {
name Dot2
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3697
ypos 1053
}
set N2ffd7200 [stack 0]
Dot {
name Dot5
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3699
ypos 1155
}
set N2ffd6b00 [stack 0]
Dot {
name Dot6
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3699
ypos 1277
}
push $N2ffd6b00
push $N2ffd7200
push $N2ffd7900
push $N300b0100
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels DiMatte_1
name Copy1
label "hold out"
xpos 3912
ypos 933
disable {{!holdout}}
addUserKnob {20 User}
addUserKnob {6 holdout +STARTLINE}
holdout true
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels DiMatte_2
name Copy7
label "hold out"
xpos 3912
ypos 1031
disable {{!holdout}}
addUserKnob {20 User}
addUserKnob {6 holdout +STARTLINE}
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels DIMatte_3
name Copy8
label "hold out"
xpos 3912
ypos 1133
disable {{!holdout}}
addUserKnob {20 User}
addUserKnob {6 holdout +STARTLINE}
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels DIMatte_D
name Copy9
label "hold out"
xpos 3914
ypos 1255
disable {{!holdout}}
addUserKnob {20 User}
addUserKnob {6 holdout +STARTLINE}
}
Dot {
name Dot14
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3948
ypos 1492
}
Copy {
inputs 2
from0 DiMatte_1.red
to0 DiMatte_1.red
name Copy5
xpos 3914
ypos 1589
disable {{"!(\[numvalue master.layer]==0)"}}
}
Copy {
inputs 2
from0 DiMatte_1.green
to0 DiMatte_1.green
name Copy10
xpos 3914
ypos 1650
disable {{"!(\[numvalue master.layer]==1)"}}
}
Copy {
inputs 2
from0 DiMatte_1.blue
to0 DiMatte_1.blue
name Copy11
xpos 3914
ypos 1719
disable {{"!(\[numvalue master.layer]==2)"}}
}
Copy {
inputs 2
from0 DiMatte_1.alpha
to0 DiMatte_1.alpha
name Copy12
xpos 3914
ypos 1784
disable {{"!(\[numvalue master.layer]==3)"}}
}
Copy {
inputs 2
from0 DiMatte_2.red
to0 DiMatte_2.red
name Copy13
xpos 3914
ypos 1848
disable {{"!(\[numvalue master.layer]==4)"}}
}
Copy {
inputs 2
from0 DiMatte_2.green
to0 DiMatte_2.green
name Copy14
xpos 3914
ypos 1921
disable {{"!(\[numvalue master.layer]==5)"}}
}
Copy {
inputs 2
from0 DiMatte_2.blue
to0 DiMatte_2.blue
name Copy15
xpos 3914
ypos 1988
disable {{"!(\[numvalue master.layer]==6)"}}
}
Copy {
inputs 2
from0 DiMatte_2.alpha
to0 DiMatte_2.alpha
name Copy16
xpos 3911
ypos 2051
disable {{"!(\[numvalue master.layer]==7)"}}
}
Copy {
inputs 2
from0 DIMatte_3.red
to0 DIMatte_3.red
name Copy3
xpos 3911
ypos 2169
disable {{"!(\[numvalue master.layer]==8)"}}
}
Copy {
inputs 2
from0 DIMatte_3.green
to0 DIMatte_3.green
name Copy17
xpos 3911
ypos 2230
disable {{"!(\[numvalue master.layer]==9)"}}
}
Copy {
inputs 2
from0 DIMatte_3.blue
to0 DIMatte_3.blue
name Copy18
xpos 3911
ypos 2299
disable {{"!(\[numvalue master.layer]==10)"}}
}
Copy {
inputs 2
from0 DIMatte_C.alpha
to0 DIMatte_C.alpha
name Copy19
xpos 3911
ypos 2364
disable {{"!(\[numvalue master.layer]==11)"}}
}
Copy {
inputs 2
from0 DIMatte_D.red
to0 DIMatte_D.red
name Copy20
xpos 3911
ypos 2428
disable {{"!(\[numvalue master.layer]==12)"}}
}
Copy {
inputs 2
from0 DIMatte_D.green
to0 DIMatte_D.green
name Copy21
xpos 3911
ypos 2501
disable {{"!(\[numvalue master.layer]==13)"}}
}
Copy {
inputs 2
from0 DIMatte_D.blue
to0 DIMatte_D.blue
name Copy22
xpos 3911
ypos 2568
disable {{"!(\[numvalue master.layer]==14)"}}
}
Copy {
inputs 2
from0 DIMatte_D.alpha
to0 DIMatte_D.alpha
name Copy23
xpos 3908
ypos 2631
disable {{"!(\[numvalue master.layer]==15)"}}
}
Copy {
inputs 2
channels DiMatte_1
name Copy2
xpos 3782
ypos 2726
disable {{"!(\[numvalue master.layer]==16)"}}
}
Copy {
inputs 2
channels DiMatte_2
name Copy4
xpos 3782
ypos 2802
disable {{"!(\[numvalue master.layer]==17)"}}
}
Copy {
inputs 2
channels DIMatte_3
name Copy6
xpos 3782
ypos 2895
disable {{"!(\[numvalue master.layer]==18)"}}
}
Copy {
inputs 2
channels DIMatte_D
name Copy24
xpos 3782
ypos 2981
disable {{"!(\[numvalue master.layer]==19)"}}
}
Output {
name Output1
xpos 3908
ypos 3145
}
NoOp {
inputs 0
name master
label "\[value layer]\n\[numvalue master.layer]"
xpos 3336
ypos -319
addUserKnob {20 User}
addUserKnob {4 layer M {DiMatte_1.red DiMatte_1.green DiMatte_1.blue DiMatte_1.alpha DiMatte_2.red DiMatte_2.green DiMatte_2.blue DiMatte_2.alpha DiMatte_3.red DiMatte_3.green DiMatte_3.blue DiMatte_3.alpha DiMatte_4.red DiMatte_4.green DiMatte_4.blue DiMatte_4.alpha "DiMatte_1.rgba (all)" "DiMatte_2.rgba (all)" "DiMatte_3.rgba (all)" "DiMatte_4.rgba (all)" "none (holdout only)" "" "" "" "" "" "" "" "" "" "" "" ""}}
layer "DiMatte_2.rgba (all)"
addUserKnob {6 useRGBalpha l "use RGB.alpha" -STARTLINE}
addUserKnob {4 selectAlpha l "select alphaHoldout" M {"B input" "A input" ""}}
selectAlpha "A input"
addUserKnob {4 DIChannelSource l "DI ChannelSource" M {"A input" "B input" "Use constant" "" ""}}
}
end_group
Dot {
name Dot366
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11740
ypos -2179
}
ModifyMetaData {
metadata {
 {set gbk/scriptname "\[value root.name]"}
 {set exr/task_id "\[getenv FTRACK_TASKID]"}
 {remove exr/chunkCount ""}
 {remove exr/compressionName ""}
}
name ModifyMetaData8
selected true
xpos 11706
ypos -2137
}
Write {
channels all
file /coppi/proj/thrg/shottree/s01e01/015-0250/output2d/comp/comp30_precomp/thrg_s01e01_015-0250_comp30_precomp_b4_Defocus_lin_ap0_v001/thrg_s01e01_015-0250_comp30_precomp_b4_Defocus_lin_ap0_v001.%04d.exr
colorspace "ACES - ACES2065-1"
file_type exr
dw_compression_level 80
metadata "all metadata"
first_part rgba
render_order 100
version 13
beforeRender "from nuketools import beforerenderfunctions;beforerenderfunctions.beforeRender()"
name WritePreComp7
note_font "Bitstream Vera Sans Bold"
selected true
xpos 11706
ypos -2111
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
addUserKnob {20 fwrite l "GBK Write"}
addUserKnob {1 ffile l File}
ffile /coppi/proj/thrg/shottree/s01e01/015-0250/output2d/comp/comp30_precomp/thrg_s01e01_015-0250_comp30_precomp_b4_Defocus_lin_ap0_v001/thrg_s01e01_015-0250_comp30_precomp_b4_Defocus_lin_ap0_v001.%04d.exr
addUserKnob {1 fproxy l Proxy}
addUserKnob {6 fproxycheck l "Set Proxy Path" +STARTLINE}
addUserKnob {26 divider l "" +STARTLINE}
addUserKnob {4 task l Task M {comp alwy am came char conc cont cran edit fire flar glas inge ocea pm prod sbv scre skye util source}}
addUserKnob {1 fassetname l "Asset Name Preview:" +DISABLED}
fassetname comp30_precomp
addUserKnob {1 fassetbasename l "Asset Name:"}
fassetbasename comp30
addUserKnob {1 fecompname l "Component Name:"}
fecompname b4_Defocus
addUserKnob {1 flatestversion l "Latest published version:" +DISABLED}
flatestversion 0
addUserKnob {22 getlatest l Refresh -STARTLINE T "from nuketools import writetab \nwritetab.getLatestPubVersion() \n"}
addUserKnob {6 precomp l Precomp +STARTLINE}
precomp true
addUserKnob {6 denoised l Denoised(dn) +STARTLINE}
addUserKnob {6 delensed l Delensed(dl) +STARTLINE}
addUserKnob {6 neutralgrade l Neutralgrade(ng) +STARTLINE}
addUserKnob {6 matte l Matte +STARTLINE}
addUserKnob {6 no_frame_number l "No Frame Numbering" +STARTLINE}
addUserKnob {3 fversion l Version}
fversion 1
addUserKnob {4 format l Format M {exr dpx png tif jpg tga mov}}
addUserKnob {4 channel l Channel M {rgb rgba all}}
channel all
addUserKnob {4 fcompression l Compression M {none "Zip (1 scanline)" "Zip (16 scanlines)" "PIZ Wavelet (32 scanlines)" RLE B44 B44A DWAA DWAB}}
fcompression "Zip (1 scanline)"
addUserKnob {1 fview l View}
addUserKnob {26 saveSettingsMsg l "" -STARTLINE T "  "}
addUserKnob {3 frenderorder l "Render order"}
frenderorder 1
addUserKnob {22 frender l Render -STARTLINE T "from nuketools import writetab \nwritetab.render() \n"}
addUserKnob {3 fframeranges l "Frame range" +DISABLED}
fframeranges 1
addUserKnob {3 fframerangee l "" -STARTLINE +DISABLED}
fframerangee 1
addUserKnob {6 flimitrange l "Limit to range" -STARTLINE}
addUserKnob {22 rfromw l "Read from Write" -STARTLINE T "from nuketools import readfromwrite \nreadfromwrite.readFromWrite()"}
addUserKnob {22 rendcurr l "Render current frame" -STARTLINE T "from nuketools import writetab \nwritetab.renderCurrentFrame()"}
addUserKnob {6 fcopyscript l "Don't Copy Nuke Script" +STARTLINE}
addUserKnob {6 fwriteinit l "Is everything added" -STARTLINE +HIDDEN}
fwriteinit true
}
nuke_dispatch {
name nuke_dispatch__b4_Defocus
selected true
xpos 11706
ypos -2032
jobtitle comp30_precomp
framestart 1001
frameend 1161
customframes ""
maxtime 3:00:00
StartAfterTime ""
ThreadCount 0
ServiceKeyExpr ""
removelicense true
depthindex 3
depthrender true
}
Group {
name PrecompDispatch_b4_Defocus
tile_color 0xff0000ff
label "\[if \{\[value disable]==true\}  \{return OFF\}  \{return ON\}]"
note_font "Bitstream Vera Sans"
note_font_size 21
selected true
xpos 11706
ypos -1997
postage_stamp true
addUserKnob {20 User l PrecompDispatch}
addUserKnob {41 file l File T ReadPreComp.file}
addUserKnob {41 localizationPolicy l "Localization Policy" T ReadPreComp.localizationPolicy}
addUserKnob {41 updateLocalization l Update T ReadPreComp.updateLocalization}
addUserKnob {41 localizationPriority l "localization priority" T ReadPreComp.localizationPriority}
addUserKnob {41 format l Format T ReadPreComp.format}
addUserKnob {41 proxy l Proxy T ReadPreComp.proxy}
addUserKnob {41 proxy_format l "Proxy Format" T ReadPreComp.proxy_format}
addUserKnob {41 first l "Frame Range" T ReadPreComp.first}
addUserKnob {41 before l "" -STARTLINE T ReadPreComp.before}
addUserKnob {41 last l "" -STARTLINE T ReadPreComp.last}
addUserKnob {41 after l "" -STARTLINE T ReadPreComp.after}
addUserKnob {41 frame_mode l Frame T ReadPreComp.frame_mode}
addUserKnob {41 frame l "" -STARTLINE T ReadPreComp.frame}
addUserKnob {41 origfirst l "Original Range" T ReadPreComp.origfirst}
addUserKnob {41 origlast l "" -STARTLINE T ReadPreComp.origlast}
addUserKnob {41 origset l "Original Range Set" T ReadPreComp.origset}
addUserKnob {41 on_error l "Missing Frames" T ReadPreComp.on_error}
addUserKnob {41 reload T ReadPreComp.reload}
addUserKnob {41 colorspace l Colorspace T ReadPreComp.colorspace}
addUserKnob {41 premultiplied l Premultiplied T ReadPreComp.premultiplied}
addUserKnob {41 raw l "Raw Data" T ReadPreComp.raw}
addUserKnob {41 auto_alpha l "Auto Alpha" T ReadPreComp.auto_alpha}
addUserKnob {26 "" l "<b>EXR Options</b>"}
addUserKnob {41 offset_negative_display_window l "offset negative display window" T ReadPreComp.offset_negative_display_window}
addUserKnob {41 noprefix l "do not attach prefix" T ReadPreComp.noprefix}
addUserKnob {41 edge_pixels l "edge pixels" T ReadPreComp.edge_pixels}
addUserKnob {20 info}
addUserKnob {26 txt_1 l notes T "Connect to a 'nuke_dispatch' node. \na) rename 'component name' on write node\nb) rename the 'nuke_dispatch'  name adding a number on the end. \n(this set the render order, so you can manually set the order with F7)\nc) Enable node when rendering.\nd) click F7 and set render order dependency before render\nreorder the dispatchNode list. Top is reendered first\ne) after rendering refresh  the precompDispatch nodes and disable it. (use python script)\n* The frame range is set from the dispatch node.\n* Place the precomp before expensive nodes for efficiency."}
addUserKnob {26 ""}
addUserKnob {26 txt l ver: T "0.1 2020.12.21 RafKan"}
addUserKnob {6 UID_precompDispatch l "" +STARTLINE +INVISIBLE +STARTLINE}
}
Input {
inputs 0
name Input1
xpos -477
ypos -239
}
Read {
inputs 0
file_type exr
file "\[value this.parent.input.input.file]"
localizationPolicy off
format "4448 3096 0 0 4448 3096 1 Output Resolution_1_1"
first {{"\[value this.parent.input.framestart]" x1031 1001}}
last {{"\[value this.parent.input.frameend]" x1031 1237}}
origfirst {{"\[value this.parent.input.framestart]" x1001 1001}}
origlast {{"\[value this.parent.input.frameend]" x1001 1237}}
origset true
version 89
colorspace gbk_plate
auto_alpha true
name ReadPreComp
note_font_color 0xf368e4ff
xpos -477
ypos -164
disable {{"!\[exists parent.input]"}}
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
}
Output {
name Output1
xpos -477
ypos -5
}
end_group
Dot {
name Dot367
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11740
ypos -1871
}
Dot {
name Dot368
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11749
ypos -1419
}
set N2fcce400 [stack 0]
Dot {
name Dot369
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11898
ypos -1419
}
set N2fccdd00 [stack 0]
Dot {
name Dot378
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11898
ypos -1226
}
push $N2fcce400
Group {
name ZDefocusOptik2
help "<b>OpticalZDefocus</b> is a physically accurate ZDefocus, which controls circle of confusion (coc) size based on lens geometry using the depth of field equation. \n\nSet your lens and film-back characteristics, your focus distance, and adjust the size of your bokeh with the aperture size, just like a real lens."
selected true
xpos 11715
ypos -1299
mapsize {0.0708035004 1}
addUserKnob {20 OpticalZDefocus l ZDefocusOptik}
addUserKnob {1 nodeClass l INVISIBLE +INVISIBLE}
nodeClass ZDefocusOptik
addUserKnob {26 ""}
addUserKnob {41 channels T _ZDEFOCUS_.channels}
addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T _ZDEFOCUS_.useGPUIfAvailable}
addUserKnob {26 l l intersect T " "}
addUserKnob {41 intersectFormat l "" -STARTLINE T _MergeFormat_.intersectFormat}
addUserKnob {41 format l "" -STARTLINE T _Reformat_.format}
addUserKnob {26 ""}
addUserKnob {41 from0 l "Depth channel" -STARTLINE T _CHOOSE_CHANNELS_.from0}
addUserKnob {41 math l "depth chan math" T Expression2.math}
addUserKnob {4 depth_unit l "  unit" t "Set the unit of your zdepth." -STARTLINE M {mm cm dm m inch ft "" "" ""}}
depth_unit m
addUserKnob {41 outputSW l output T CONTROL.outputSW}
addUserKnob {26 txt_2 l "<b>lens geometry" t "Set the focus parameters here. These are overriden if there is a camera node connected to the 'Cam' input."}
addUserKnob {41 frontMultiplier T Generate_Direct_Z.frontMultiplier}
addUserKnob {41 backMultiplier T Generate_Direct_Z.backMultiplier}
addUserKnob {7 offsetFD l "offset Focal dist." R -23 23}
addUserKnob {7 offsetFstop l "offset fStop" R 8 -8}
addUserKnob {26 ""}
addUserKnob {41 focalPlane l "focus distance (m)" T Generate_Direct_Z.focalPlane}
addUserKnob {41 fStop T Generate_Direct_Z.fStop}
addUserKnob {41 focalLength l "focal length  (mm)" T Generate_Direct_Z.focalLength}
addUserKnob {41 hAperture l "hAperture  (mm)" T Generate_Direct_Z.hAperture}
addUserKnob {7 vAperture l "vAperture (mm)" R 0 50}
vAperture {{parent.camera_sensor2.vaperture}}
addUserKnob {26 ""}
addUserKnob {20 quality n 1}
quality 0
addUserKnob {41 maxCoc T Generate_Direct_Z.maxCoc}
addUserKnob {41 minimum l minCoc T _Clamp_.minimum}
addUserKnob {41 autoLayerSpacing l "automatic layer spacing" T _ZDEFOCUS_.autoLayerSpacing}
addUserKnob {41 layerCurve l "layer curve" T _ZDEFOCUS_.layerCurve}
addUserKnob {41 layers l "depth layers" T _ZDEFOCUS_.layers}
addUserKnob {26 ""}
addUserKnob {26 txt_1 l "Extend Depth Edges" T ""}
addUserKnob {6 extendDepthEdges l "" -STARTLINE}
extendDepthEdges true
addUserKnob {20 endGroup_1 l endGroup n -1}
addUserKnob {20 Filter}
addUserKnob {26 txt_8 l <b>kernal}
addUserKnob {41 filter_type_1 l "filter type" T _ZDEFOCUS_.filter_type}
addUserKnob {7 aspect_ratio R 0 2}
aspect_ratio 1
addUserKnob {7 filter_shape}
filter_shape 1
addUserKnob {3 blades}
blades 6
addUserKnob {7 roundness}
roundness 0.22
addUserKnob {26 txt_10 l "<b>filter image" t "If 'use input channels' is used the colour of the convolve will grade the defocuced areas. Warning: this is buggy when the input is not connected."}
addUserKnob {41 filter_channel l "filter channel" T _ZDEFOCUS_.filter_channel}
addUserKnob {41 use_input_channels l "use input channels" t "This uses a colour convolve, so the bokeh can be coloured. This is slow and has a bug that if the filter input is unpluged it can crash nuke." -STARTLINE T _ZDEFOCUS_.use_input_channels}
addUserKnob {26 txt_9 l <b>highlights}
addUserKnob {26 txt22 l gamma T " "}
addUserKnob {41 gammaCorrection l " " -STARTLINE T _GammaDefocus_.gammaCorrection}
addUserKnob {41 gamma l "" -STARTLINE T _GammaDefocus_.gamma}
addUserKnob {26 txt22_1 l " "}
addUserKnob {26 txt35 l bloom T " "}
addUserKnob {41 bloom l " " -STARTLINE T _ZDEFOCUS_.bloom}
addUserKnob {41 bloom_gain l "" -STARTLINE T _ZDEFOCUS_.bloom_gain}
addUserKnob {41 bloom_threshold l "bloom threshold" T _ZDEFOCUS_.bloom_threshold}
addUserKnob {26 txt_4 l "<b>bokeh distortion "}
addUserKnob {26 txt_6 l "Use Bokeh Distortion" t "- this will soften the edges of the image nicley" T " "}
addUserKnob {41 useBokehDistortion l "" -STARTLINE T CONTROL.useBokehDistortion}
addUserKnob {26 txt6 l "use local focal" T " "}
addUserKnob {41 overrideLensBokehDistort l " " -STARTLINE T CONTROL.overrideLensBokehDistort}
addUserKnob {41 localFocal_x T CONTROL.localFocal_x}
addUserKnob {41 localFocal_y T CONTROL.localFocal_y}
addUserKnob {41 squeeze T CONTROL.squeeze}
addUserKnob {41 protectFocus l "protect in focus" T CONTROL.protectFocus}
addUserKnob {20 Info}
addUserKnob {26 docs l docs: T "<a href=\"http://google.com\">WIKI Documnetation</a>"}
addUserKnob {26 forked l forked: T "17/05/31 Jedediah Smith <a href=\\\"https://gist.github.com/jedypod/50a3b68f9b5bbe487e1a\\\">jedypod Github</a>"}
addUserKnob {26 modified l modified: T "v2.6(beta) 17/08/08 Rafal Kan (bbox options)\nv2.8(beta) 17/08/22 Rafal Kan (new ui/mode for camera selection; pgbokeh match)\nv2.9(beta) 17/089/01 Rafal Kan (fixed camera not updating expression node, added crop)\nv3.1(beta) 17-09-04 use python link to grab topnode values\nv3.2(beta) 17-09-05 added front/back multipliers / fixed clash with DMP node\nv3.3(beta) 17-09-12 fixed sample Z expression that broke on last update\nv3.4(beta) 17-09-14 added inFocusMultiplier, changed bokeh distortion to stmap to preserve sharpness\nv3.5(beta) working for ALL CHANNELS \nv3.6.3(beta) 17-10-03 BBOX optimization \nv3.7,2(beta)    17-10-24 rebuild using new method more eficient\nv3.7,1(beta)    22-01-06 RafalKan - simplified tool, removing camera link scripts\nv3.7.2 17/02/22 fix defocua all channels, and bugs\nv3.8 9/3/22 added focal offset"}
}
BackdropNode {
inputs 0
name BackdropNode1
tile_color 0xaaaaaa00
label DEPTH
note_font_size 72
xpos -1906
ypos -110
bdwidth 593
bdheight 3137
}
BackdropNode {
inputs 0
name BackdropNode3
tile_color 0x388e8e00
label Filter
note_font_size 42
xpos 212
ypos 274
bdwidth 363
bdheight 1010
}
BackdropNode {
inputs 0
name BackdropNode4
tile_color 0x8e4b37ff
label bloom
note_font_size 42
xpos -409
ypos 1868
bdwidth 142
bdheight 124
}
BackdropNode {
inputs 0
name BackdropNode5
tile_color 0x8e4b37ff
label bloom
note_font_size 42
xpos -414
ypos -694
bdwidth 127
bdheight 92
}
BackdropNode {
inputs 0
name BackdropNode9
tile_color 0x388e8e00
label CONTROLS
note_font_size 42
xpos -1267
ypos 691
bdwidth 228
bdheight 227
}
BackdropNode {
inputs 0
name BackdropNode2
tile_color 0x2a6b6bff
label "match filters to pgBokeh"
note_font_size 42
xpos 221
ypos 1026
bdwidth 154
bdheight 203
z_order 1
}
Input {
inputs 0
name Input
label "\[value number]"
xpos -392
ypos -879
}
Dot {
name Dot32
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -358
ypos -781
}
set N2faa1600 [stack 0]
Gamma {
channels rgb
value {{1/gamma}}
name _GammaDefocus_
xpos -392
ypos -632
disable {{!gammaCorrection x1041 1}}
addUserKnob {20 User}
addUserKnob {7 gamma R -1 3}
gamma 1.5
addUserKnob {6 gammaCorrection +STARTLINE}
}
Dot {
name Dot31
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -358
ypos -555
}
set N2faa0100 [stack 0]
Dot {
name Dot21
xpos -345
ypos -102
}
set N2fa7f900 [stack 0]
push $N2fa7f900
Copy {
inputs 2
from0 zDepth.combo
to0 depth.Z
bbox B
name _CHOOSE_CHANNELS_
xpos -379
ypos -39
}
Remove {
operation keep
channels {{{parent._ZDEFOCUS_.channels}}}
channels2 depth
name Remove3
xpos -379
ypos 69
disable true
}
set N2fa7eb00 [stack 0]
Dot {
name Dot19
xpos -1380
ypos 73
}
set N2fa7e400 [stack 0]
Dot {
name Dot14
xpos -1520
ypos 73
}
Shuffle {
in depth
in2 alpha
green black
blue black
alpha red2
name Shuffle4
xpos -1554
ypos 100
}
Expression {
expr0 r==0?0:1/r
channel1 none
channel2 none
channel3 {none none none -rgba.alpha}
name Expression2
xpos -1554
ypos 144
disable {{math x1011 1 x1037 1}}
addUserKnob {20 User}
addUserKnob {4 math M {"infinity = 0 (nuke, renderMan)" "camera = 0 (arnold, vray)" "" "" "" "" ""}}
math "camera = 0 (arnold, vray)"
}
Expression {
temp_name0 zdepth
temp_expr0 "(r==0?0:r)   * this.unitMultiplier< this.min_zdepth ? this.min_zdepth : (r==0?0:r)  * this.unitMultiplier"
temp_name1 focus_dist
temp_expr1 "focalPlane * this.unitMultiplier"
temp_name2 coc_px
temp_expr2 "fabs((fabs(focus_dist - zdepth) * pow(focalLength,2) / (fStop * zdepth * (focus_dist - focalLength))) / hAperture * input.width / 2)"
temp_name3 cocInfocus
temp_expr3 "((1/focus_dist -1/ zdepth) * pow(focalLength,2) / (fStop * 1 / zdepth * (1/focus_dist - focalLength)))*-1"
channel0 {rgba.red -rgba.green -rgba.blue -rgba.alpha}
expr0 r>0?(min(maxCoc*400,(coc_px*0.94))):0
channel1 {-rgba.red rgba.green -rgba.blue -rgba.alpha}
expr1 cocInfocus
channel2 {-rgba.red -rgba.green rgba.blue -rgba.alpha}
expr2 "clamp((fabs(fabs((clamp(cocInfocus*-1) ) ) / hAperture) * input.width / 2) ) * frontMultiplier"
channel3 {-rgba.red -rgba.green -rgba.blue rgba.alpha}
expr3 "clamp((fabs(fabs((clamp(cocInfocus) )  ) / hAperture  ) * input.width / 2) ) * backMultiplier"
name Generate_Direct_Z
xpos -1554
ypos 197
addUserKnob {20 Optical l "Optical Characteristics"}
addUserKnob {7 focalLength l "focal length" R 0 500}
focalLength {{parent.parent.Camera_Metadata2.focalLength}}
addUserKnob {7 fStop l focalLength-stop R 0 44}
fStop {{parent.parent.Camera_Metadata2.fStop+offsetFstop}}
addUserKnob {7 hAperture R 0 50}
hAperture {{parent.parent.camera_sensor2.haperture}}
addUserKnob {7 focalPlane l "focus distance" R 0 1000}
focalPlane {{parent.parent.Camera_Metadata2.focalDistance+offsetFD}}
addUserKnob {26 ""}
addUserKnob {7 frontMultiplier R 0 5}
frontMultiplier 2
addUserKnob {7 backMultiplier R 0 5}
backMultiplier 2
addUserKnob {26 ""}
addUserKnob {7 min_zdepth}
min_zdepth 0.2
addUserKnob {7 maxCoc R 10 200}
maxCoc 200
addUserKnob {7 unitMultiplier R 0 10000}
unitMultiplier {{"(parent.depth_unit == 1 ? 10 : parent.depth_unit == 2 ? 100 : parent.depth_unit == 3 ? 1000 : parent.depth_unit == 4 ? 25.4 : parent.depth_unit == 5 ? 304.8 : 1)"}}
}
set N2fa7c800 [stack 0]
Dot {
name Dot17
xpos -1786
ypos 201
}
Expression {
expr0 (b*r)
channel1 {-rgba.red -rgba.green rgba.blue none}
expr1 (a*r)
channel2 {-rgba.red rgba.green -rgba.blue none}
expr2 clamp(abs((g*-1)))*-1+1
name Expression4
xpos -1820
ypos 282
}
Dot {
name Dot18
xpos -1786
ypos 387
}
set N2fa4f200 [stack 0]
Shuffle {
red alpha
green alpha
blue alpha
alpha green
name Shuffle1
xpos -1754
ypos 383
}
Dot {
name Dot13
xpos -1688
ypos 2065
}
Dot {
name Dot26
xpos -188
ypos 2065
}
push $N2faa1600
Dot {
name Dot25
xpos -102
ypos -781
}
Dot {
name Dot9
xpos -102
ypos 2144
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy2
xpos -222
ypos 2134
}
set N2fa4c800 [stack 0]
Dot {
name Dot15
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -188
ypos 2248
}
push $N2faa0100
Dot {
name Dot22
xpos -1200
ypos -555
}
Dot {
name Dot24
xpos -1200
ypos 31
}
set N2fa33200 [stack 0]
Dot {
name Dot30
xpos -1223
ypos 771
}
NoOp {
name CONTROL
xpos -1257
ypos 886
addUserKnob {20 User}
addUserKnob {26 ""}
addUserKnob {7 focalLengthOld}
focalLengthOld 24
addUserKnob {7 fStopOld}
fStopOld 0.1
addUserKnob {7 hApertureOld}
hApertureOld 23.74900055
addUserKnob {7 focalPlaneOld}
focalPlaneOld 36.23530579
addUserKnob {1 focalPlaneKnob}
focalPlaneKnob FocusDistanceValue
addUserKnob {1 focalLengthKnob}
focalLengthKnob focal
addUserKnob {1 fStopKnob}
fStopKnob FStopValue
addUserKnob {1 hApertureKnob}
hApertureKnob haperture
addUserKnob {26 ""}
addUserKnob {4 outputSW M {result "focal plane setup" "layer setup" "filter shape setup" coc}}
addUserKnob {26 ""}
addUserKnob {6 useBokehDistortion +STARTLINE}
addUserKnob {6 overrideLensBokehDistort +STARTLINE}
addUserKnob {7 extDistort R 0 100}
extDistort {{Generate_Direct_Z.focalLength x1009 51}}
addUserKnob {7 localFocal_x R -0.01 0.01}
localFocal_x 0.07
addUserKnob {7 localFocal_y R -0.01 1}
localFocal_y 0.06
addUserKnob {7 squeeze R 0.01 2}
squeeze 0.5
addUserKnob {6 protectFocus +STARTLINE}
}
push $N2fa7c800
Expression {
channel0 {rgba.red -rgba.green -rgba.blue rgba.alpha}
expr0 (a*r)+(b*r)
channel1 none
channel2 none
name Expression
label "front_back multiplier"
xpos -1554
ypos 232
}
Dot {
name Dot3
note_font_size 42
note_font_color 0x7f7f7f01
xpos -1519
ypos 277
}
set N2fa31600 [stack 0]
Dot {
name Dot10
xpos -1661
ypos 277
}
Shuffle {
green red
blue red
alpha red
name Shuffle9
xpos -1695
ypos 318
}
Dot {
name Dot2
note_font_size 42
note_font_color 0x7f7f7f01
xpos -1661
ypos 2680
}
Dot {
name Dot28
xpos -1661
ypos 2950
}
Dot {
name Dot37
xpos -438
ypos 2950
}
Input {
inputs 0
name InputFilter
label "\[value number]"
xpos 222
ypos -424
number 1
}
Constant {
inputs 0
channels rgb
name Constant1
xpos 442
ypos 306
postage_stamp false
}
Dot {
name Dot1
label " Default Filter Input"
note_font_size 24
note_font_color 0xff000000
xpos 476
ypos 394
}
Reformat {
type "to box"
box_width 256
box_height 256
box_fixed true
name Reformat1
xpos 442
ypos 425
}
Flare {
position {{width/2} {height/2}}
radius {73.5 88.78 91.25}
inner_color 0.6
name Flare3
xpos 442
ypos 518
}
Switch {
inputs 2
which {{"\[exists parent.input1]"}}
name Switch3
xpos 222
ypos 518
}
Remove {
operation keep
channels {{{parent._ZDEFOCUS_.channels}}}
name Remove4
xpos 222
ypos 859
}
Reformat {
type scale
scale {{parent.aspect_ratio} 1}
resize distort
black_outside true
name _aspect_ratio_2
xpos 222
ypos 923
}
Reformat {
type "to box"
format "2048 1152 0 0 2048 1152 1 SK_FullRes"
box_width 256
box_height 256
box_fixed true
black_outside true
name Reformat2
xpos 222
ypos 958
}
Dot {
name Dot6
label " "
note_font_size 24
note_font_color 0xff000000
xpos 263
ypos 1060
}
set N2f9f0100 [stack 0]
Dot {
name Dot33
xpos 114
ypos 1060
}
Dot {
name Dot36
xpos 107
ypos 2922
}
Dot {
name Dot11
xpos -423
ypos 2922
}
push $N2fa33200
Dot {
name Dot7
note_font_size 42
note_font_color 0x7f7f7f01
xpos -1893
ypos 31
}
Dot {
name Dot20
xpos -1893
ypos 2718
}
Dot {
name Dot12
xpos -1893
ypos 2835
}
push $N2fa4c800
push $N2f9f0100
Mirror2 {
flip true
name Mirror2_2
xpos 222
ypos 1101
}
Transform {
scale 0.6
center {{width/2} {height/2}}
invert_matrix true
name Transform1
xpos 222
ypos 1135
}
Grade {
gamma 1.2
white_clamp true
name Grade1
xpos 222
ypos 1161
}
Reformat {
type scale
scale 1.04
black_outside true
name Reformat3
xpos 222
ypos 1187
}
push $N2fa7e400
Dot {
name Dot27
xpos -1380
ypos 401
}
push $N2fa31600
Shuffle {
in rgb
green black
blue black
alpha black
name Shuffle6
xpos -1553
ypos 313
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy3
xpos -1553
ypos 391
}
Expression {
channel0 alpha
expr0 r>0?a>0?1:0:0
channel1 none
channel2 none
name Expression1
xpos -1553
ypos 429
}
Premult {
name Premult2
xpos -1553
ypos 481
}
Group {
name edgeExtendBlur
tile_color 0xe0671fff
xpos -1553
ypos 515
disable {{!parent.extendDepthEdges}}
addUserKnob {20 User}
addUserKnob {26 dilation}
addUserKnob {41 size T Blur17.size}
addUserKnob {41 filter T Blur17.filter}
addUserKnob {41 quality l "" -STARTLINE T Blur17.quality}
}
Input {
inputs 0
name Input1
xpos -520
ypos -1162
}
Dot {
name Dot29
xpos -487
ypos -1063
}
Expression {
expr3 a?a:0
name Expression1
label "alpha fix"
xpos -520
ypos -1024
}
set N2fb90800 [stack 0]
Dot {
name Dot26
xpos 327
ypos -583
}
set N2fb90100 [stack 0]
push $N2fb90800
Dot {
name Dot2
xpos -486
ypos -559
}
Blur {
size {{parent.parent.Generate_Direct_Z.maxCoc-1}}
quality 8
name Blur17
xpos -520
ypos -425
}
Dot {
name Dot5
xpos -487
ypos -368
}
set N2fb56b00 [stack 0]
Shuffle {
red alpha
green alpha
blue alpha
name Shuffle10
label "\[value in]"
xpos -664
ypos -329
}
Unpremult {
name Unpremult5
xpos -664
ypos -275
}
push $N2fb56b00
Unpremult {
name Unpremult4
xpos -520
ypos -322
}
ShuffleCopy {
inputs 2
alpha red
name ShuffleCopy3
label "\[value in] to \[value out]"
xpos -520
ypos -232
}
Dot {
name Dot7
xpos -487
ypos -32
}
Dot {
name Dot12
xpos -487
ypos 473
}
Dot {
name Dot13
xpos -201
ypos 473
}
set N2fb33900 [stack 0]
Merge2 {
inputs 2
operation max
name Merge3
xpos -234
ypos 758
}
Dot {
name Dot19
xpos -201
ypos 1097
}
push $N2fb90100
Dot {
name Dot1
xpos 149
ypos 895
}
push $N2fb33900
Merge2 {
inputs 2
name Merge1
xpos 102
ypos 998
}
ShuffleCopy {
inputs 2
name ShuffleCopy5
label "\[value in] to \[value out]"
xpos 198
ypos 1376
}
Output {
name Output1
xpos 198
ypos 1526
}
end_group
Clamp {
channels {rgba.red -rgba.green -rgba.blue none}
minimum 0.2
minimum_enable false
maximum {{Generate_Direct_Z.maxCoc}}
MinClampTo 20
name _Clamp_
xpos -1553
ypos 548
addUserKnob {20 User}
addUserKnob {7 edgeSoftness l "edgeSoftness (zDefocusOnly)" R 0 2}
edgeSoftness 0.475
}
Multiply {
channels rgb
value 0.5
name Multiply3
label "to stop crashing (this is linked to the Zdefocus)"
xpos -1553
ypos 581
disable true
}
Dot {
name Dot23
xpos -530
ypos 591
}
push $N2fa7eb00
Copy {
inputs 2
from0 rgba.red
to0 depth.Z
bbox B
name _Copy_ZDepth_
xpos -379
ypos 581
}
Group {
name BokehDistortOut13
tile_color 0xff00ff
label "\[value invertDistortion]"
xpos -379
ypos 725
disable {{!CONTROL.useBokehDistortion}}
addUserKnob {20 User l BokehDistort}
addUserKnob {26 "" l " "}
addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T LensDistortion.useGPUIfAvailable}
addUserKnob {26 ""}
addUserKnob {41 from0 l "depth pass" T Copy6.from0}
addUserKnob {41 invertDistortion l mode T _ControlLensDist_.invertDistortion}
addUserKnob {41 PgBokehFormatExpand T _ControlLensDist_.PgBokehFormatExpand}
addUserKnob {26 ""}
addUserKnob {41 extFocal l extFocal(mm) T _ControlLensDist_.extFocal}
addUserKnob {20 group l "local focal" n 1}
addUserKnob {41 useLocalFocal_1 l useLocalFocal T _ControlLensDist_.useLocalFocal}
addUserKnob {26 txt l These T "settings only work in before mode"}
addUserKnob {41 localFocal_x T _ControlLensDist_.localFocal_x}
addUserKnob {41 localFocal_y T _ControlLensDist_.localFocal_y}
addUserKnob {41 squeeze T _ControlLensDist_.squeeze}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {41 _1 l "" -STARTLINE T _ControlLensDist_.protectInFocus}
addUserKnob {26 text6 l " ( for 'after' mode- requires alpha mask)" -STARTLINE T " "}
addUserKnob {20 info}
addUserKnob {26 info_1 l info T ""}
addUserKnob {26 ""}
addUserKnob {26 ver l ver: T "v0.1 22/10/01 rafal kan."}
}
Input {
inputs 0
name protect
label "\[value number]"
xpos 574
ypos -954
number 1
}
Dot {
name Dot2
xpos 608
ypos -596
}
Dot {
name Dot1
xpos 953
ypos -514
}
set N2faf3200 [stack 0]
Dot {
name Dot4
xpos 953
ypos -459
}
push $N2faf3200
Input {
inputs 0
name Input
label "\[value number]"
xpos 1009
ypos -1227
}
Dot {
name Dot6
xpos 1037
ypos -1094
}
set N2faf1d00 [stack 0]
ModifyMetaData {
metadata {
 {set defocus/squeeze "\[value _ControlLensDist_.squeeze]"}
}
name ModifyMetaData2
xpos 1374
ypos -1069
disable {{_ControlLensDist_.invertDistortion==1?1:0}}
}
Dot {
name Dot3
xpos 1408
ypos -984
}
LensDistortion2 {
useGPUIfAvailable {{parent.parent._ZDEFOCUS_.useGPUIfAvailable}}
lens Anamorphic
anamorphicSqueeze {{parent.parent.CONTROL.squeeze}}
distortionDenominator0 -0.05
distortionDenominator1 -0.05
distortionDenominatorX00 {{parent._ControlLensDist_.distortion2}}
distortionDenominatorY00 {{parent._ControlLensDist_.distortion1}}
outputBBox {-1199 -249 5743 3413}
bboxBackup {1400 -198 2440 2358}
bboxBackupSet true
featuresKnob "
version 1
entries 0
entries 0
"
distortionModelDisplayX "xu = xd / (1 + k0 * rd^2 + k1 * rd^4 + k2 * yd^2)"
distortionModelDisplayY "yu = yd / (1 + k0 * rd^2 + k1 * rd^4 + k3 * xd^2)"
name LensDistortion
label "\[value _ControlLensDist_.squeeze]"
xpos 1374
ypos -938
}
set N2faf0800 [stack 0]
push $N2faf0800
Shuffle2 {
fromInput1 {{0} B}
in1 backward
out1 forward
fromInput2 {{0} B}
mappings "2 backward.u 0 0 forward.u 0 0 backward.v 0 1 forward.v 0 1"
name Shuffle1
label "\[value in1]"
xpos 1481
ypos -938
}
Dot {
name Dot5
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 1515
ypos -840
}
Switch {
inputs 2
which {{!_ControlLensDist_.invertDistortion}}
name Switch4
xpos 1374
ypos -844
}
set N2fca7200 [stack 0]
push $N2faf1d00
ModifyMetaData {
metadata {
 {set defocus/reformatHeight "\[value Reformat.height]"}
 {set defocus/reformatWidth "\[value Reformat.width]"}
 {set defocus/squeeze "\[value _ControlLensDist_.squeeze]"}
}
name ModifyMetaData1
xpos 1003
ypos -1061
disable {{_ControlLensDist_.invertDistortion==1?1:0}}
}
Dot {
name Dot99
xpos 1037
ypos -969
}
set N2fca6400 [stack 0]
STMap {
inputs 2
channels {{{parent.Copy6.to0}}}
uv forward
filter impulse
name STMap2
xpos 1098
ypos -763
}
push $N2fca7200
push $N2fca6400
STMap {
inputs 2
uv forward
name STMap1
xpos 1003
ypos -806
}
set N2fca5600 [stack 0]
Copy {
inputs 2
from0 depth.Z
to0 {{{from0}}}
bbox B
name Copy6
xpos 1080
ypos -689
disable {{!parent._ControlLensDist_.useImpulseForDepth}}
}
Reformat {
type "to box"
box_width {{input.bbox.width}}
box_height {{input.bbox.height}}
resize none
name Reformat
xpos 1080
ypos -570
disable {{_ControlLensDist_.PgBokehFormatExpand==1?_ControlLensDist_.invertDistortion==0?0:1:1}}
}
push $N2fca5600
Switch {
inputs 2
which {{parent._ControlLensDist_.useImpulseForDepth}}
name Switch5
xpos 1005
ypos -524
}
Keymix {
inputs 3
channels rgb
bbox B
name Keymix1
xpos 1003
ypos -469
disable {{_ControlLensDist_.invertDistortion?_ControlLensDist_.protectInFocus?0:1:1 x1001 1}}
addUserKnob {20 User}
}
Remove {
channels motion
name Remove1
xpos 1003
ypos -345
}
Output {
name Output1
xpos 1003
ypos -281
}
NoOp {
inputs 0
name _ControlLensDist_
xpos 1662
ypos -686
addUserKnob {20 User l BokehDistort}
addUserKnob {6 PgBokehFormatExpand +STARTLINE}
addUserKnob {6 protectInFocus +STARTLINE}
addUserKnob {6 useImpulseForDepth +STARTLINE}
useImpulseForDepth {{!invertDistortion}}
addUserKnob {4 invertDistortion l mode M {before after "" "" ""}}
addUserKnob {6 diableInUi l "Disable in UI" +STARTLINE}
addUserKnob {7 focal}
focal {{useLocalFocal?localFocal:extFocal}}
addUserKnob {6 disable +STARTLINE}
disable {{"\[exists input0]==1?\[exists input1]==1?\$gui==0?0:diableInUi==1?1:0:1:1"}}
addUserKnob {7 distortion1 R -0.3 0.2}
distortion1 {{"useLocalFocal==1?localFocal_x:(focal<=18) ? 0.2 : ((focal<=21) ? 0.175 : ((focal<=25) ? 0.15 :( (focal<=27)? 0.125 : ( (focal<=35) ? 0.1 : ( (focal<=40) ? 0.075 : (  (focal<=50) ? 0.05 : 0.025       )      )     )     )) )" x1001 -0.15}}
addUserKnob {7 distortion2 R -0.1 0.1}
distortion2 {{useLocalFocal==1?localFocal_y:distortion1/2}}
addUserKnob {26 ""}
addUserKnob {6 useLocalFocal +STARTLINE}
useLocalFocal {{CONTROL.overrideLensBokehDistort}}
addUserKnob {7 localFocal R 0 100}
localFocal 36.2
addUserKnob {7 localFocal_x R -0.1 0.05}
localFocal_x {{CONTROL.localFocal_x}}
addUserKnob {7 localFocal_y R -0.2 0.2}
localFocal_y {{CONTROL.localFocal_y}}
addUserKnob {7 extFocal R 0 100}
extFocal {{CONTROL.extDistort}}
addUserKnob {7 squeeze R 0.01 3}
squeeze {{CONTROL.squeeze}}
}
end_group
BlackOutside {
name BlackOutside1
xpos -379
ypos 916
}
Dot {
name Dot8
xpos -345
ypos 1092
}
ZDefocus2 {
inputs 2
channels rgba
useGPUIfAvailable false
math direct
output {{CONTROL.outputSW x1037 1 x1041 0 x1061 1}}
focal_point {1 1}
size {{1 x1037 2}}
max_size {{parent.Generate_Direct_Z.maxCoc}}
filter_type bladed
legacy_resize_mode false
show_legacy_resize_mode false
filter_channel rgba.red
clamp_image_filter true
aspect {{parent.aspect_ratio}}
blades {{parent.blades}}
roundness {{parent.roundness}}
inner_feather 0.28
catadioptric_size 0.375
bloom_threshold 0.3
bloom_gain 1.3
name _ZDEFOCUS_
xpos -379
ypos 1289
}
Remove {
operation keep
channels {{{parent._ZDEFOCUS_.channels}}}
channels2 depth
name Remove5
xpos -379
ypos 1450
disable true
}
Gamma {
channels rgb
value {{1/parent._GammaDefocus_.value}}
name Gamma2
xpos -379
ypos 1953
disable {{parent._GammaDefocus_.disable x1041 1}}
}
Group {
inputs 2
name BokehDistortOut2
tile_color 0xff00ff
label "\[value invertDistortion]"
xpos -381
ypos 2234
disable {{!CONTROL.useBokehDistortion}}
addUserKnob {20 User l BokehDistort}
addUserKnob {26 "" l " "}
addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T LensDistortion.useGPUIfAvailable}
addUserKnob {26 ""}
addUserKnob {41 from0 l "depth pass" T Copy6.from0}
addUserKnob {41 invertDistortion l mode T _ControlLensDist_.invertDistortion}
addUserKnob {41 PgBokehFormatExpand T _ControlLensDist_.PgBokehFormatExpand}
addUserKnob {26 ""}
addUserKnob {41 extFocal l extFocal(mm) T _ControlLensDist_.extFocal}
addUserKnob {20 group l "local focal" n 1}
addUserKnob {41 useLocalFocal_1 l useLocalFocal T _ControlLensDist_.useLocalFocal}
addUserKnob {26 txt l These T "settings only work in before mode"}
addUserKnob {41 localFocal_x T _ControlLensDist_.localFocal_x}
addUserKnob {41 localFocal_y T _ControlLensDist_.localFocal_y}
addUserKnob {41 squeeze T _ControlLensDist_.squeeze}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {41 _1 l "" -STARTLINE T _ControlLensDist_.protectInFocus}
addUserKnob {26 text6 l " ( for 'after' mode- requires alpha mask)" -STARTLINE T " "}
addUserKnob {20 info}
addUserKnob {26 info_1 l info T ""}
addUserKnob {26 ""}
addUserKnob {26 ver l ver: T "v0.1 22/10/01 rafal kan."}
}
Input {
inputs 0
name protect
label "\[value number]"
xpos 574
ypos -954
number 1
}
Dot {
name Dot2
xpos 608
ypos -596
}
Dot {
name Dot1
xpos 953
ypos -514
}
set N2fc4d600 [stack 0]
Dot {
name Dot4
xpos 953
ypos -459
}
push $N2fc4d600
Input {
inputs 0
name Input
label "\[value number]"
xpos 1009
ypos -1227
}
Dot {
name Dot6
xpos 1037
ypos -1094
}
set N2fc4c100 [stack 0]
ModifyMetaData {
metadata {
 {set defocus/squeeze "\[value _ControlLensDist_.squeeze]"}
}
name ModifyMetaData2
xpos 1374
ypos -1069
disable {{_ControlLensDist_.invertDistortion==1?1:0}}
}
Dot {
name Dot3
xpos 1408
ypos -984
}
LensDistortion2 {
useGPUIfAvailable {{parent.parent._ZDEFOCUS_.useGPUIfAvailable}}
lens Anamorphic
anamorphicSqueeze {{parent.parent.CONTROL.squeeze}}
distortionDenominator0 -0.05
distortionDenominator1 -0.05
distortionDenominatorX00 {{parent._ControlLensDist_.distortion2}}
distortionDenominatorY00 {{parent._ControlLensDist_.distortion1}}
outputBBox {-1199 -249 5743 3413}
bboxBackup {1400 -198 2440 2358}
bboxBackupSet true
featuresKnob "
version 1
entries 0
entries 0
"
distortionModelDisplayX "xu = xd / (1 + k0 * rd^2 + k1 * rd^4 + k2 * yd^2)"
distortionModelDisplayY "yu = yd / (1 + k0 * rd^2 + k1 * rd^4 + k3 * xd^2)"
name LensDistortion
label "\[value _ControlLensDist_.squeeze]"
xpos 1374
ypos -938
}
set N2fc36b00 [stack 0]
push $N2fc36b00
Shuffle2 {
fromInput1 {{0} B}
in1 backward
out1 forward
fromInput2 {{0} B}
mappings "2 backward.u 0 0 forward.u 0 0 backward.v 0 1 forward.v 0 1"
name Shuffle1
label "\[value in1]"
xpos 1481
ypos -938
}
Dot {
name Dot5
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 1515
ypos -840
}
Switch {
inputs 2
which {{!_ControlLensDist_.invertDistortion}}
name Switch4
xpos 1374
ypos -844
}
set N2fc35600 [stack 0]
push $N2fc4c100
ModifyMetaData {
metadata {
 {set defocus/reformatHeight "\[value Reformat.height]"}
 {set defocus/reformatWidth "\[value Reformat.width]"}
 {set defocus/squeeze "\[value _ControlLensDist_.squeeze]"}
}
name ModifyMetaData1
xpos 1003
ypos -1061
disable {{_ControlLensDist_.invertDistortion==1?1:0}}
}
Dot {
name Dot99
xpos 1037
ypos -969
}
set N2fc34800 [stack 0]
STMap {
inputs 2
channels {{{parent.Copy6.to0}}}
uv forward
filter impulse
name STMap2
xpos 1098
ypos -763
}
push $N2fc35600
push $N2fc34800
STMap {
inputs 2
uv forward
name STMap1
xpos 1003
ypos -806
}
set N2fbfb900 [stack 0]
Copy {
inputs 2
from0 depth.Z
to0 {{{from0}}}
bbox B
name Copy6
xpos 1080
ypos -689
disable {{!parent._ControlLensDist_.useImpulseForDepth}}
}
Reformat {
type "to box"
box_width {{input.bbox.width}}
box_height {{input.bbox.height}}
resize none
name Reformat
xpos 1109
ypos -590
disable {{_ControlLensDist_.PgBokehFormatExpand==1?_ControlLensDist_.invertDistortion==0?0:1:1}}
}
push $N2fbfb900
Switch {
inputs 2
which {{parent._ControlLensDist_.useImpulseForDepth}}
name Switch5
xpos 1005
ypos -524
}
Keymix {
inputs 3
channels rgb
bbox B
name Keymix1
xpos 1003
ypos -469
disable {{_ControlLensDist_.invertDistortion?_ControlLensDist_.protectInFocus?0:1:1 x1001 1}}
addUserKnob {20 User}
}
Remove {
channels motion
name Remove1
xpos 1003
ypos -345
}
Output {
name Output1
xpos 1003
ypos -281
}
NoOp {
inputs 0
name _ControlLensDist_
xpos 1662
ypos -686
addUserKnob {20 User l BokehDistort}
addUserKnob {6 PgBokehFormatExpand +STARTLINE}
addUserKnob {6 protectInFocus +STARTLINE}
protectInFocus {{CONTROL.protectFocus}}
addUserKnob {6 useImpulseForDepth +STARTLINE}
useImpulseForDepth {{!invertDistortion}}
addUserKnob {4 invertDistortion l mode M {before after "" "" ""}}
invertDistortion after
addUserKnob {6 diableInUi l "Disable in UI" +STARTLINE}
addUserKnob {7 focal}
focal {{useLocalFocal?localFocal:extFocal}}
addUserKnob {6 disable +STARTLINE}
disable {{"\[exists input0]==1?\[exists input1]==1?\$gui==0?0:diableInUi==1?1:0:1:1"}}
addUserKnob {7 distortion1 R -0.3 0.2}
distortion1 {{"useLocalFocal==1?localFocal_x:(focal<=18) ? 0.2 : ((focal<=21) ? 0.175 : ((focal<=25) ? 0.15 :( (focal<=27)? 0.125 : ( (focal<=35) ? 0.1 : ( (focal<=40) ? 0.075 : (  (focal<=50) ? 0.05 : 0.025       )      )     )     )) )" x1001 -0.15}}
addUserKnob {7 distortion2 R -0.1 0.1}
distortion2 {{useLocalFocal==1?localFocal_y:distortion1/2}}
addUserKnob {26 ""}
addUserKnob {6 useLocalFocal +STARTLINE}
useLocalFocal {{CONTROL.overrideLensBokehDistort}}
addUserKnob {7 localFocal R 0 100}
localFocal 36.2
addUserKnob {7 localFocal_x R -0.1 0.05}
localFocal_x {{CONTROL.localFocal_x}}
addUserKnob {7 localFocal_y R -0.2 0.2}
localFocal_y {{CONTROL.localFocal_y}}
addUserKnob {7 extFocal R 0 100}
extFocal {{CONTROL.extDistort}}
addUserKnob {7 squeeze R 0.01 3}
squeeze {{CONTROL.squeeze}}
}
end_group
Dot {
name Dot16
xpos -347
ypos 2428
}
set N2fbf8100 [stack 0]
Shuffle {
red black
green black
blue black
alpha black
name Shuffle2
xpos -546
ypos 2424
}
Reformat {
name _Reformat_
xpos -546
ypos 2469
}
AdjBBox {
numpixels 20
name AdjBBox3
xpos -546
ypos 2511
}
push $N2fbf8100
Merge2 {
inputs 2
operation max
bbox intersection
metainput All
rangeinput All
name _MergeFormat_
xpos -381
ypos 2511
disable {{!intersectFormat x1061 1}}
addUserKnob {20 User}
addUserKnob {6 intersectFormat +STARTLINE}
}
Remove {
channels depth
name Remove1
xpos -379
ypos 2735
}
Copy {
inputs 2
from0 {{{parent._CHOOSE_CHANNELS_.from0}}}
to0 {{{parent._CHOOSE_CHANNELS_.from0}}}
name Copy1
xpos -379
ypos 2825
}
Dot {
name Dot39
xpos -345
ypos 2897
}
set N2fbc8f00 [stack 0]
Dot {
name Dot5
xpos -312
ypos 2921
}
push $N2fa4f200
Dot {
name Dot4
xpos -1786
ypos 2982
}
Dot {
name Dot38
xpos -460
ypos 2982
}
push $N2fbc8f00
Dot {
name Dot29
xpos -379
ypos 2920
}
Switch {
inputs 5
which {{CONTROL.outputSW}}
name _SWITCH_
xpos -378
ypos 2978
}
Output {
name Output1
xpos -378
ypos 3194
}
end_group
CopyBBox {
inputs 2
name CopyBBox1
selected true
xpos 11715
ypos -1230
}
Dot {
name Dot379
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11749
ypos -1185
}
Unpremult {
name Unpremult17
selected true
xpos 11715
ypos -745
}
Group {
name blackLevelFix1
selected true
xpos 11714
ypos -267
addUserKnob {20 User}
addUserKnob {41 channels T Grade2.channels}
addUserKnob {7 pinBlack l "Pin Blacks"}
pinBlack 0.1
addUserKnob {18 FromColor l "Source Color"}
FromColor {0.002404473489 0.001619562274 0.001679650159}
addUserKnob {6 FromColor_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 ToColor l "Target Color"}
ToColor {0.01999999955 0.01709841564 0.01397101767}
addUserKnob {6 ToColor_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 clamp l "clamp to target" t "Clamp the lower end of the range to the Target Color" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {41 unpremult l "(un)premult by" T Grade2.unpremult}
addUserKnob {41 invert_unpremult l invert -STARTLINE T Grade2.invert_unpremult}
addUserKnob {7 mix}
mix 1
addUserKnob {6 invertMask -STARTLINE}
}
Input {
inputs 0
name Mask
xpos 604
ypos 147
number 1
}
Invert {
name Invert1
xpos 604
ypos 270
}
AddChannels {
channels alpha
name AddChannels1
xpos 604
ypos 312
}
Invert {
name Invert2
xpos 604
ypos 409
}
Input {
inputs 0
name Input
xpos 393
ypos 140
}
set N29b6cf00 [stack 0]
Clamp {
channels rgb
minimum_enable false
maximum {{pinBlack} {pinBlack} {pinBlack} {curve}}
MaxClampTo {{pinBlack} {pinBlack} {pinBlack} {curve}}
MaxClampTo_enable true
unpremult -rgba.alpha
name Clamp4
xpos 170
ypos 140
}
Grade {
blackpoint {{min(pinBlack,FromColor)} {min(pinBlack,FromColor)} {min(pinBlack,FromColor)} {curve}}
whitepoint {{"max(pinBlack, FromColor)"}}
black {{parent.ToColor} {parent.ToColor} {parent.ToColor} 0}
white {{max(pinBlack,FromColor)}}
black_clamp false
unpremult -rgba.alpha
name Grade2
knobChanged "\n\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"channels\":\n    nuke.toNode('Clamp3')\['channels'].fromScript(k.toScript())\n    nuke.toNode('Clamp4')\['channels'].fromScript(k.toScript())\n    nuke.toNode('Clamp5')\['channels'].fromScript(k.toScript())\n    nuke.toNode('Merge2')\['Achannels'].fromScript(k.toScript())\n    nuke.toNode('Merge2')\['Bchannels'].fromScript(k.toScript())\n    nuke.toNode('Merge2')\['output'].fromScript(k.toScript())\n    nuke.toNode('Keymix1')\['channels'].fromScript(k.toScript())\n\nif k.name() == \"unpremult\":\n    nuke.toNode('Clamp3')\['unpremult'].fromScript(k.toScript())\n    nuke.toNode('Clamp4')\['unpremult'].fromScript(k.toScript())\n    nuke.toNode('Clamp5')\['unpremult'].fromScript(k.toScript())\n\nif k.name() == \"invert_unpremult\":\n    nuke.toNode('Clamp3')\['invert_unpremult'].fromScript(k.toScript())\n    nuke.toNode('Clamp4')\['invert_unpremult'].fromScript(k.toScript())\n    nuke.toNode('Clamp5')\['invert_unpremult'].fromScript(k.toScript())\n"
xpos 170
ypos 229
}
Clamp {
channels rgb
minimum {{min(pinBlack,ToColor)} {min(pinBlack,ToColor)} {min(pinBlack,ToColor)} 0}
minimum_enable {{parent.clamp}}
maximum {{max(pinBlack,ToColor)} {max(pinBlack,ToColor)} {max(pinBlack,ToColor)} {curve}}
maximum_enable {{parent.clamp}}
unpremult -rgba.alpha
name Clamp5
xpos 170
ypos 328
}
push $N29b6cf00
Clamp {
channels rgb
minimum {{pinBlack} {pinBlack} {pinBlack} {curve}}
maximum_enable false
MinClampTo_enable true
unpremult -rgba.alpha
name Clamp3
xpos 291
ypos 267
}
Merge2 {
inputs 2
operation max
Achannels rgb
Bchannels rgb
output rgb
name Merge2
xpos 170
ypos 416
}
push $N29b6cf00
Keymix {
inputs 3
channels rgb
invertMask {{"\[exists parent.input1] && parent.invertMask"}}
mix {{parent.mix}}
name Keymix1
xpos 393
ypos 416
}
Output {
name Output1
xpos 393
ypos 516
}
end_group
Premult {
name Premult22
selected true
xpos 11714
ypos -181
}
Dot {
name Dot380
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11748
ypos -134
}
Group {
name U_Halation
selected true
xpos 11714
ypos 204
addUserKnob {20 User l Halation t "This Gizmo re-produces the red fringing you \nget on film around bright source. \nEspecially noticable on a contrasty edge.\n\n"}
addUserKnob {41 size l "red wide glow size" T red_wide_glow.size}
addUserKnob {41 size_1 l "green wide glow size" T green_wide_glow.size}
addUserKnob {26 ""}
addUserKnob {41 size_2 l "red core glow size" T red_core_glow.size}
addUserKnob {41 size_3 l "green core glow size" T green_core_glow.size}
addUserKnob {26 ""}
addUserKnob {41 size_5 l "Soften wide size" T Soften_wide.size}
addUserKnob {41 size_4 l "Soften core size" T Soften_core.size}
addUserKnob {26 ""}
addUserKnob {41 value l "Wide glow gain" T Multiply_wide.value}
addUserKnob {41 value_1 l "Core glow gain" T Multiply_core.value}
addUserKnob {26 ""}
addUserKnob {41 which l "Wide glow percent" T add_wide_percent1.which}
addUserKnob {41 which_1 l "Core glow percent" T add_core_percent.which}
addUserKnob {26 ""}
addUserKnob {41 gamma l Sensitivity T Log2Lin1.gamma}
addUserKnob {41 selector l Operation T Switch1.selector}
addUserKnob {26 "" -STARTLINE T "Written by Marian Mavrovic (C) 2009"}
}
Input {
inputs 0
name Input
xpos -480
ypos -394
}
Log2Lin {
operation lin2log
black 0
white 665
name Log2Lin2
xpos -480
ypos -322
}
set N29b13200 [stack 0]
push $N29b13200
Log2Lin {
black 0
white 400
gamma 0.74
name Log2Lin1
xpos -700
ypos -250
}
set N29b11600 [stack 0]
Blur {
channels {rgba.red -rgba.green -rgba.blue none}
size 3
name red_wide_glow
xpos -700
ypos -154
}
Blur {
channels {-rgba.red rgba.green -rgba.blue none}
size 2.6
name green_wide_glow
xpos -700
ypos -82
}
Log2Lin {
operation lin2log
black 0
white {{parent.Log2Lin1.white i} {parent.Log2Lin1.white i} {parent.Log2Lin1.white i}}
gamma {{parent.Log2Lin1.gamma i}}
name Log2Lin4
xpos -700
ypos -10
}
Clamp {
name Clamp1
xpos -700
ypos 104
}
push $N29b13200
Merge2 {
inputs 2
operation minus
name Merge1
xpos -590
ypos 158
}
Blur {
size 1
name Soften_wide
xpos -590
ypos 200
}
Multiply {
name Multiply_wide
xpos -590
ypos 248
}
set N29ae1d00 [stack 0]
Merge2 {
inputs 2
operation minus
name Merge3
xpos -590
ypos 302
}
push $N29b13200
Dissolve {
inputs 2
which 0.29
name add_wide_percent1
xpos -590
ypos 368
}
set C29ae0800 [stack 0]
set N29ae0800 [stack 0]
push $N29b11600
Blur {
channels {rgba.red -rgba.green -rgba.blue none}
size 1.7
name red_core_glow
xpos -150
ypos -154
}
Blur {
channels {-rgba.red rgba.green -rgba.blue none}
size 2
name green_core_glow
xpos -150
ypos -82
}
Log2Lin {
operation lin2log
black 0
white {{parent.Log2Lin1.white i}}
gamma {{parent.Log2Lin1.gamma i}}
name Log2Lin3
xpos -150
ypos -34
}
Clamp {
name Clamp2
xpos -150
ypos 8
}
push $N29b13200
Merge2 {
inputs 2
operation minus
name Merge2
xpos -150
ypos 110
}
Blur {
size 1
name Soften_core
xpos -150
ypos 152
}
Multiply {
name Multiply_core
xpos -150
ypos 200
}
set N29892400 [stack 0]
Merge2 {
inputs 2
operation minus
name Merge4
xpos -590
ypos 446
}
push $N29ae0800
Dissolve {
inputs 2
which 0.145
name add_core_percent
xpos -590
ypos 536
}
set C29890f00 [stack 0]
push $N29892400
push $N29b13200
Merge2 {
inputs 2
operation plus
name Merge5
xpos -260
ypos 278
}
push $N29b13200
clone $C29890f00 {
inputs 2
xpos -150
ypos 296
selected false
}
set N29890100 [stack 0]
push $N29ae1d00
Merge2 {
inputs 2
operation plus
name Merge6
xpos -150
ypos 422
}
push $N29890100
clone $C29ae0800 {
inputs 2
xpos -150
ypos 560
selected false
}
Switch {
inputs 2
which {{selector}}
name Switch1
xpos -370
ypos 734
addUserKnob {20 User}
addUserKnob {4 selector l Operation M {Apply Remove}}
}
Log2Lin {
black 0
white 665
name Log2Lin5
xpos -370
ypos 782
}
Output {
name Output1
xpos -370
ypos 854
}
end_group
Group {
name apChroma1
help "Advanced chromatic drift gizmo, that works through a sub-frame blend of different values on an STMap and Transform, while creating a color spectrum.\n\napChroma v1.0\nadrianpueyo.com"
knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\nkn = k.name()\nif kn == \"monochrome\":\n    k.setValue(min(1,max(0,k.value())))\nelif kn == \"output_dist_matte\":\n    n.knob(\"output_matte_channel\").setEnabled(k.value())"
tile_color 0x736efdff
selected true
xpos 11714
ypos 330
addUserKnob {20 apChroma}
addUserKnob {26 text l "<b> Transform"}
addUserKnob {41 translate T Transform17.translate}
addUserKnob {41 rotate T Transform17.rotate}
addUserKnob {41 scale T Transform17.scale}
addUserKnob {41 center T Transform17.center}
addUserKnob {22 center_on_input l "center on input" -STARTLINE T "n = nuke.thisNode()\ntry:\n    ni = n.input(0)\n    n\[\"center\"].setValue(\[ni.width()/2,ni.height()/2])\nexcept:\n    pass"}
addUserKnob {7 smooth l "smooth<i style=\"color:#888\"></i>" t "Helps keep a lower sample number for large distortions by adding motion blur. The higher this value, the higher the motion blur quality.\n\nFor typical aberrations this won't be needed, so better avoid smoothing when possible by keeping it 0, as it is super heavy to compute!"}
addUserKnob {41 invert_matrix l invert T Transform17.invert_matrix}
addUserKnob {6 black_outside l "black outside" t "When disabled, the edges of your image will be extended in the aberration instead of seeing black entering through the first frequencies." -STARTLINE}
addUserKnob {22 create_uv_map l " Create UV Map " T "n = nuke.thisNode()\nn.end()\nns = nuke.selectedNodes()\n\[i.setSelected(False) for i in ns]\nuv = nuke.nodes.Expression()\nuv.setXYpos(n.xpos()+140, n.ypos()-100)\nuv.setSelected(True)\nuv\[\"expr0\"].setValue(\"(x+0.5)/width\")\nuv\[\"expr1\"].setValue(\"(y+0.5)/height\")\nn.setInput(1,uv)\nd = nuke.createNode(\"Dot\")\nd.hideControlPanel()\nd.setYpos(int(n.ypos()+n.screenHeight()/2 - d.screenHeight()/2))\nuv.setSelected(False)\nd.setSelected(False)\n\[i.setSelected(True) for i in ns]" +STARTLINE}
addUserKnob {26 breathe l "" +STARTLINE T " "}
addUserKnob {26 text_1 l "<b> Settings"}
addUserKnob {6 blur_enable +STARTLINE}
addUserKnob {3 samples}
samples 10
addUserKnob {7 ab l aberration t "This drives the amount of color aberration.\n0 = No aberration at all, works as regular STMap.\n1 = Amount of aberration equal to the values of the input UV Map." R 0 2}
ab 1
addUserKnob {7 compensate t "Inverse the values of the distortion map so that the overall effect stays at the same position." R -1 1}
compensate 1
addUserKnob {7 monochrome t "With the same amount of \"color leak\", this desaturates the spectrum in that leak.\nAt value 1, the effect is similar to a directional blur."}
addUserKnob {14 overscan R 0 100}
addUserKnob {6 invert_spectrum l "invert spectrum" +STARTLINE}
addUserKnob {6 calculate_multi_alpha l "calculate per-channel alpha" t "Also generates a channel layer called apChroma wich includes the transformed alphas for each of the rgba channels. This is necessary if you want to merge the result of this node onto a background. You'll need apChromaMerge or a similar gizmo in order to perform the special merge." -STARTLINE}
calculate_multi_alpha true
addUserKnob {6 output_dist_matte l "output distortion matte" t "Useful if you want to add a grading or iBlur afterwards, driven by the amount of chromatic aberration." +STARTLINE}
addUserKnob {41 output_matte_channel l "" -STARTLINE T CopyAlpha.to0}
addUserKnob {26 breathe3 l "" +STARTLINE T " "}
addUserKnob {26 ""}
addUserKnob {41 maskChannelMask l "mask " T MergeRGB.maskChannelMask}
addUserKnob {41 inject -STARTLINE T MergeRGB.inject}
addUserKnob {41 invert_mask l invert -STARTLINE T MergeRGB.invert_mask}
addUserKnob {41 fringe -STARTLINE T MergeRGB.fringe}
addUserKnob {41 mix T MergeRGB.mix}
addUserKnob {26 version_author l "" t "apChroma v1.0\n2016-2019" +STARTLINE T "<span style=\"color:#666\"><br/><b>apChroma v1.0</b> - <a href=\"http://www.adrianpueyo.com\" style=\"color:#666;text-decoration: none;\">adrianpueyo.com</a>, 2016-2019</span>"}
addUserKnob {20 Spectrum}
addUserKnob {41 lut l "" +STARTLINE T CLP.lut}
addUserKnob {22 lutPrepare l INVISIBLE +INVISIBLE T "n = nuke.thisNode()\ntry:\n    n.knob(\"lut\").delCurve(\"master\")\n    n.knob(\"lut\").delCurve(\"alpha\")\nexcept:\n    pass" +STARTLINE}
addUserKnob {52 lutPrepareGo T "nuke.thisNode()\[\"lutPrepare\"].execute()" +STARTLINE}
}
ColorLookup {
inputs 0
use_precomputed false
lut {master {}
  red {curve C 0 s0 x0.3128865659 1 s-0 v0.7904256582 x0.7806204557 -0.0007482314769 s0 u1.743535638 v1.742119074 x0.9418143034 0.06970721483 s-0.05000000075 x1 0 s0}
  green {curve C x0.1143286526 0 s0.01999999955 v1.837088585 x0.530087471 1 s-0.05000000075 u1.36422956 v1.020811915 x0.9743717909 0 s-0 u2.045060158}
  blue {curve C x0.6321670413 0 s0 x0.8160832524 0.99800843 s0 x1 0 s0}
  alpha {}}
name CLP
label "Natural Spectrum"
xpos 137
ypos -191
}
Input {
inputs 0
name Inputmask
xpos -498
ypos 550
number 2
}
Dot {
name Dot25
note_font_size 41
xpos -464
ypos 595
}
set N29839d00 [stack 0]
Dot {
name Dot21
xpos -464
ypos 633
}
set N29839600 [stack 0]
Dot {
name Dot24
note_font_size 41
xpos -464
ypos 677
}
Input {
inputs 0
name Inputimg
xpos -388
ypos -433
}
NoTimeBlur {
rounding none
name NoTB
xpos -388
ypos -407
}
AdjBBox {
numpixels {{parent.overscan} {parent.overscan}}
name AdjBBox
xpos -388
ypos -381
}
set N2981f900 [stack 0]
Dot {
name Dot1
xpos -47
ypos -377
}
set N2981f200 [stack 0]
Expression {
expr0 (x+0.5)/width
expr1 (y+0.5)/height
expr2 0
name ExpressionUVDefault
xpos 118
ypos -381
}
Input {
inputs 0
name Inputuv
xpos 279
ypos -437
number 1
}
Switch {
inputs 2
which 1
name SwitchUV
xpos 279
ypos -381
disable {{"\[exists parent.input1]"}}
}
NoTimeBlur {
rounding none
name NoTB1
xpos 279
ypos -355
}
Dot {
name Dot3
note_font_size 41
xpos 313
ypos -275
}
set N2981cf00 [stack 0]
Dot {
name Dot11
note_font_size 41
xpos 447
ypos -275
}
Remove {
name Remove1
xpos 413
ypos -257
}
Expression {
expr0 (x+0.5)/width
expr1 (y+0.5)/height
expr2 0
expr3 0
name ExpressionUV
xpos 413
ypos -219
}
Dot {
name Dot13
note_font_size 41
xpos 447
ypos -183
}
set N297ff200 [stack 0]
Dot {
name Dot15
note_font_size 41
xpos 690
ypos -183
}
set N297feb00 [stack 0]
Multiply {
channels {rgba.red rgba.green -rgba.blue none}
value {{1-parent.ab} {1-parent.ab} 1 1}
name Multiply6
xpos 656
ypos -98
}
Dot {
name Dot16
xpos 690
ypos -38
}
push $N2981cf00
Dot {
name Dot27
note_font_size 41
xpos 214
ypos -275
}
Dot {
name Dot5
note_font_size 41
xpos 214
ypos -233
}
push $N2981cf00
Merge2 {
inputs 2
operation copy
name Merge3
xpos 279
ypos -237
}
Dot {
name Dot8
note_font_size 41
xpos 313
ypos -164
}
set N297d3900 [stack 0]
Dot {
name Dot14
note_font_size 41
xpos 600
ypos -164
}
Multiply {
channels {rgba.red rgba.green -rgba.blue none}
value {{parent.ab} {parent.ab} 0 0}
name Multiply5
xpos 566
ypos -98
}
Merge2 {
inputs 2
operation plus
bbox B
output rgb
name Merge4
xpos 566
ypos -42
}
Transform {
center {1024 576}
motionblur {{parent.smooth}}
shutter {{1/parent.samples}}
shutteroffset centred
name Transform17
label control
xpos 566
}
set N297d1600 [stack 0]
push $N297feb00
Dot {
name Dot18
note_font_size 41
xpos 831
ypos -183
}
CopyBBox {
inputs 2
name CopyBBox1
xpos 797
ypos 6
}
Dot {
name Dot19
xpos 831
ypos 77
}
push $N297d1600
Merge2 {
inputs 2
operation difference
bbox B
name Merge5
xpos 566
ypos 73
}
Expression {
expr3 sqrt(pow2(r)+pow2(g))
name ExpressionDiff
xpos 566
ypos 99
}
Dot {
name Dot9
xpos 600
ypos 439
}
push $N2981f200
add_layer {apChroma apChroma.red apChroma.green apChroma.blue apChroma.alpha}
Shuffle {
alpha white
black alpha
white alpha
red2 alpha
out2 {apChroma.red apChroma.green apChroma.blue -apChroma.alpha}
name ShuffleAlpha1
xpos -81
ypos -330
}
Remove {
channels apChroma
name Remove_apChroma
xpos -81
ypos -278
disable {{parent.calculate_multi_alpha}}
}
add_layer {apChromaWeight apChromaWeight.red apChromaWeight.green apChromaWeight.blue apChromaWeight.alpha}
AddChannels {
channels apChromaWeight
color 1
name AddChannels1
xpos -81
ypos -240
}
Multiply {
value {{!parent.invert_spectrum?CL.lut.red(TB.frf):CL.lut.red(1-TB.frf)} {!parent.invert_spectrum?CL.lut.green(TB.frf):CL.lut.green(1-TB.frf)} {!parent.invert_spectrum?CL.lut.blue(TB.frf):CL.lut.blue(1-TB.frf)} {!parent.invert_spectrum?CL.lut.red(TB.frf):CL.lut.red(1-TB.frf)}}
name Multiply1
xpos -81
ypos -189
addUserKnob {20 User}
addUserKnob {19 fullcolor}
fullcolor {{!parent.invert_spectrum?CLP.lut.red(TB.frf):CLP.lut.red(1-TB.frf)} {!parent.invert_spectrum?CLP.lut.green(TB.frf):CLP.lut.green(1-TB.frf)} {!parent.invert_spectrum?CLP.lut.blue(TB.frf):CLP.lut.blue(1-TB.frf)} {!parent.invert_spectrum?CLP.lut.red(TB.frf):CLP.lut.red(1-TB.frf)}}
addUserKnob {6 fullcolor_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 fullcolor_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 fullcolor_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 fullcolor_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 fullcolor_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 fullcolor_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 fullcolor_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
Dot {
name Dot6
note_font_size 41
xpos -47
ypos -141
}
set N29973200 [stack 0]
Dot {
name Dot7
note_font_size 41
xpos -139
ypos -141
}
Dot {
name Dot10
note_font_size 41
xpos -139
ypos 90
}
push $N297d3900
Multiply {
channels {rgba.red rgba.green -rgba.blue none}
value {{"(TB.frf-.5)*parent.ab + 0.5*(1-parent.compensate)"} {"(TB.frf-.5)*parent.ab + 0.5*(1-parent.compensate)"} 0 0}
name Multiply3
xpos 279
ypos -146
}
Dot {
name Dot12
note_font_size 41
xpos 313
ypos -108
}
push $N297ff200
Multiply {
channels {rgba.red rgba.green -rgba.blue none}
value {{"(1- ((TB.frf-.5)*parent.ab + 0.5*(1-parent.compensate)) )"} {"(1- ((TB.frf-.5)*parent.ab + 0.5*(1-parent.compensate)) )"} 1 1}
name Multiply4
xpos 413
ypos -145
}
Merge2 {
inputs 2
operation plus
Achannels {rgba.red rgba.green -rgba.blue -rgba.alpha}
Bchannels {rgba.red rgba.green -rgba.blue -rgba.alpha}
output {rgba.red rgba.green -rgba.blue -rgba.alpha}
name Merge1
xpos 413
ypos -112
}
Dot {
name Dot4
xpos 447
ypos 43
}
push $N29973200
Remove {
channels apChromaWeight
name Remove3
xpos -81
ypos -104
}
Transform {
translate {{"parent.Transform17.translate*((TB.frf-0.5)*parent.ab+ 0.5*(1-parent.compensate))"} {"parent.Transform17.translate*((TB.frf-0.5)*parent.ab+ 0.5*(1-parent.compensate))"}}
rotate {{"parent.Transform17.rotate*((TB.frf-0.5)*parent.ab+ 0.5*(1-parent.compensate))"}}
scale {{"parent.Transform17.scale*((TB.frf-0.5)*parent.ab+ 0.5*(1-parent.compensate)) + 1 - ((TB.frf-0.5)*parent.ab+ 0.5*(1-parent.compensate)) "} {"parent.Transform17.scale*((TB.frf-0.5)*parent.ab+ 0.5*(1-parent.compensate)) + 1 - ((TB.frf-0.5)*parent.ab+ 0.5*(1-parent.compensate)) "}}
center {{parent.Transform17.center} {parent.Transform17.center}}
invert_matrix {{parent.Transform17.invert_matrix}}
black_outside {{parent.black_outside}}
motionblur {{parent.smooth}}
shutter {{1/parent.samples}}
name TransformI
xpos -81
ypos -66
}
Blur {
channels rgba
name Blur1
xpos -81
ypos -40
addUserKnob {20 User}
addUserKnob {26 info l "" +STARTLINE T "needed to break concatenation and make sure mblur works with the stmaps"}
}
STMap {
inputs 2
uv rgb
blur_scale 0
name STMap1
xpos -81
ypos 33
disable {{"!\[exists parent.input1]"}}
}
Copy {
inputs 2
channels apChromaWeight
name Copy2
xpos -81
ypos 74
}
TimeBlur {
divisions {{parent.samples}}
shutter 1
shutteroffset start
shuttercustomoffset 0
name TB
xpos -81
ypos 124
addUserKnob {20 User}
addUserKnob {7 frf}
frf {{(frame%1)*(parent.samples+1)/parent.samples}}
}
set N29958800 [stack 0]
push $N29958800
Shuffle {
in apChromaWeight
name Shuffle2
label "\[value in]"
xpos 89
ypos 118
}
set N29958100 [stack 0]
Merge2 {
inputs 2
operation divide
bbox A
metainput A
rangeinput A
Achannels apChroma
output apChroma
name Merge6
xpos 89
ypos 227
}
push $N29958800
push $N29958100
Merge2 {
inputs 2
operation divide
bbox A
metainput A
rangeinput A
name Merge2
xpos -81
ypos 195
}
Copy {
inputs 2
channels apChroma
name Copy3
xpos -81
ypos 221
}
Copy {
inputs 2
from0 rgba.alpha
to0 apChroma.alpha
from1 rgba.alpha
to1 rgba.alpha
bbox B
name Copy1
xpos -81
ypos 423
disable {{!parent.blur_enable}}
}
Dot {
name Dot22
note_font_size 41
xpos -47
ypos 595
}
set N29921d00 [stack 0]
Dot {
name Dot20
xpos -47
ypos 633
}
set N29921600 [stack 0]
Dot {
name Dot23
note_font_size 41
xpos -47
ypos 677
}
push $N29839600
push $N29921600
push $N29839d00
push $N29921d00
push $N2981f900
Merge2 {
inputs 2+1
operation copy
Achannels rgb
Bchannels rgb
output rgb
also_merge apChroma
name MergeRGB
xpos -388
ypos 591
}
Copy {
inputs 2+1
channels apChroma
maskChannelMask {{{parent.MergeRGB.maskChannelMask}}}
maskChannelInput {{{parent.MergeRGB.maskChannelInput}}}
inject {{parent.MergeRGB.inject}}
invert_mask {{parent.MergeRGB.invert_mask}}
fringe {{parent.MergeRGB.fringe}}
mix {{parent.MergeRGB.mix}}
name Copy_apChroma
xpos -388
ypos 617
disable {{!parent.calculate_multi_alpha}}
}
Copy {
inputs 2+1
from0 rgba.alpha
to0 rgba.alpha
name CopyAlpha
xpos -388
ypos 667
disable {{!parent.output_dist_matte}}
}
Output {
name Output
xpos -388
ypos 705
}
ColorLookup {
inputs 0
channels rgb
lut {master {}
  red {"CLP.lut.red * (1-parent.monochrome) + parent.monochrome" C 0 1}
  green {"CLP.lut.green * (1-parent.monochrome) + parent.monochrome" C 0 1}
  blue {"CLP.lut.blue * (1-parent.monochrome) + parent.monochrome" C 0 1}
  alpha {"CLP.lut.alpha * (1-parent.monochrome) + parent.monochrome" C 0 1}}
name CL
label monochrome
xpos 27
ypos -149
}
end_group
Dot {
name Dot381
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11751
ypos 554
}
Dot {
name Dot120
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11762
ypos 17106
}
set N298ecf00 [stack 0]
Dot {
name Dot505
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11768
ypos 17561
}
Group {
inputs 2
name DI_Shuffle16
tile_color 0xa43f88ff
gl_color 0x1d1d1dff
label "\[value layer]\n\[value matteName]Holdout CG&BG"
selected true
xpos 11734
ypos 17597
disable true
addUserKnob {20 User l DI_Shuffle}
addUserKnob {41 layer l "shuffle in" T master.layer}
addUserKnob {1 matteName l " matte name:" -STARTLINE}
addUserKnob {41 DIChannelSource l "  from" T master.DIChannelSource}
addUserKnob {41 useRGBalpha l "  use RGB.alpha" -STARTLINE T master.useRGBalpha}
addUserKnob {26 txt l holdout}
addUserKnob {41 holdout l "holdout 1  |" T Copy1.holdout}
addUserKnob {41 holdout_1 l "holdout 2 |" -STARTLINE T Copy7.holdout}
addUserKnob {41 holdout_2 l "holdout 3  |" -STARTLINE T Copy8.holdout}
addUserKnob {41 holdout_3 l "holdout 4" -STARTLINE T Copy9.holdout}
addUserKnob {26 txt_1 l "matte from" T ""}
addUserKnob {41 selectHoldout l "" -STARTLINE T master.selectAlpha}
addUserKnob {41 from0 l " channel" -STARTLINE T Copy25.from0}
addUserKnob {26 txt_2 l " " T "The heldout input (A||B) is opposite of  'matte from' input ."}
addUserKnob {26 txt_3 l " " T "The 'matte from' channel is is never heldout."}
addUserKnob {20 info}
addUserKnob {26 ver l ver: T 0.3}
addUserKnob {26 source l source: T "Rafs Kan. 13th Nov. 2019"}
addUserKnob {26 edit l edit: T " rafsKan 2019-19-11: add C&D\nrafsKan 2022/02/07: bug fixes"}
addUserKnob {7 UID_DI_Shuffle l UID +INVISIBLE}
UID_DI_Shuffle 1
}
Input {
inputs 0
name A
xpos 2714
ypos -356
number 1
}
Dot {
name Dot13
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2748
ypos -162
}
AddChannels {
channels DiMatte_1
name AddChannels5
xpos 2714
ypos -144
disable {{"!(\[numvalue master.layer]==0||\[numvalue master.layer]==1|\[numvalue master.layer]==2||\[numvalue master.layer]==3||\[numvalue master.layer]==16)"}}
}
AddChannels {
channels DiMatte_2
name AddChannels6
xpos 2714
ypos -106
disable {{"!(\[numvalue master.layer]==4||\[numvalue master.layer]==5|\[numvalue master.layer]==6||\[numvalue master.layer]==7||\[numvalue master.layer]==17)"}}
}
AddChannels {
channels DIMatte_3
name AddChannels7
xpos 2714
ypos -72
disable {{"!(\[numvalue master.layer]==8||\[numvalue master.layer]==9|\[numvalue master.layer]==10||\[numvalue master.layer]==11||\[numvalue master.layer]==18)"}}
}
AddChannels {
channels DIMatte_4
name AddChannels8
xpos 2714
ypos -36
disable {{"!(\[numvalue master.layer]==12||\[numvalue master.layer]==13|\[numvalue master.layer]==14||\[numvalue master.layer]==15||\[numvalue master.layer]==19)"}}
}
Dot {
name Dot3
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2748
ypos 2
}
set N29ab7200 [stack 0]
Input {
inputs 0
name B
xpos 3881
ypos -401
}
Dot {
name Dot11
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3915
ypos -375
}
Dot {
name Dot8
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3941
ypos -231
}
Dot {
name Dot9
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3941
ypos -213
}
AddChannels {
channels DiMatte_1
name AddChannels1
xpos 3907
ypos -195
disable {{"!(\[numvalue master.layer]==0||\[numvalue master.layer]==1|\[numvalue master.layer]==2||\[numvalue master.layer]==3||\[numvalue master.layer]==16)"}}
}
AddChannels {
channels DiMatte_2
name AddChannels2
xpos 3907
ypos -157
disable {{"!(\[numvalue master.layer]==4||\[numvalue master.layer]==5|\[numvalue master.layer]==6||\[numvalue master.layer]==7||\[numvalue master.layer]==17)"}}
}
AddChannels {
channels DIMatte_3
name AddChannels3
xpos 3907
ypos -123
disable {{"!(\[numvalue master.layer]==8||\[numvalue master.layer]==9|\[numvalue master.layer]==10||\[numvalue master.layer]==11||\[numvalue master.layer]==18)"}}
}
AddChannels {
channels DIMatte_4
name AddChannels4
xpos 3907
ypos -87
disable {{"!(\[numvalue master.layer]==12||\[numvalue master.layer]==13|\[numvalue master.layer]==14||\[numvalue master.layer]==15||\[numvalue master.layer]==19)"}}
}
Dot {
name Dot4
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3946
ypos 44
}
set N29a99600 [stack 0]
Switch {
inputs 2
which {{master.DIChannelSource==1?0:1}}
name Switch1
label DIChannelSource
xpos 2842
ypos 690
}
Shuffle {
red white
green white
blue white
alpha white
name Shuffle1
label "\[value in]"
xpos 3529
ypos 1496
disable {{master.DIChannelSource==2?0:1}}
}
Dot {
name Dot33
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3563
ypos 1599
}
set N29a98100 [stack 0]
Dot {
name Dot34
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3563
ypos 1858
}
set N29a7f900 [stack 0]
Dot {
name Dot35
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3563
ypos 2179
}
set N29a7f200 [stack 0]
Dot {
name Dot36
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3563
ypos 2442
}
set N29a7eb00 [stack 0]
Dot {
name Dot37
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3558
ypos 2735
}
set N29a7e400 [stack 0]
Dot {
name Dot10
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3555
ypos 2814
}
set N29a7dd00 [stack 0]
Dot {
name Dot31
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3555
ypos 2907
}
set N29a7d600 [stack 0]
Dot {
name Dot32
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3550
ypos 2993
}
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DIMatte_D
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DIMatte_D.alpha 0 3 rgba.alpha 0 0 DIMatte_D.red 0 0 rgba.alpha 0 0 DIMatte_D.green 0 1 rgba.alpha 0 0 DIMatte_D.blue 0 2"
name Shuffle29
label "\[value in1]"
xpos 3605
ypos 2983
disable {{!useRGBalpha}}
}
push $N29a7d600
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DIMatte_3
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DIMatte_C.alpha 0 3 rgba.alpha 0 0 DIMatte_3.red 0 0 rgba.alpha 0 0 DIMatte_3.green 0 1 rgba.alpha 0 0 DIMatte_3.blue 0 2"
name Shuffle28
label "\[value in1]"
xpos 3608
ypos 2896
disable {{!useRGBalpha}}
}
push $N29a7dd00
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DiMatte_2
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DiMatte_2.alpha 0 3 rgba.alpha 0 0 DiMatte_2.red 0 0 rgba.alpha 0 0 DiMatte_2.green 0 1 rgba.alpha 0 0 DiMatte_2.blue 0 2"
name Shuffle27
label "\[value in1]"
xpos 3611
ypos 2808
disable {{!useRGBalpha}}
}
push $N29a7e400
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DiMatte_1
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DiMatte_1.alpha 0 3 rgba.alpha 0 0 DiMatte_1.red 0 0 rgba.alpha 0 0 DiMatte_1.green 0 1 rgba.alpha 0 0 DiMatte_1.blue 0 2"
name Shuffle26
label "\[value in1]"
xpos 3620
ypos 2728
disable {{!useRGBalpha}}
}
push $N29a7eb00
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DIMatte_D
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DIMatte_D.alpha 0 3 rgba.alpha 0 0 DIMatte_D.red 0 0 rgba.alpha 0 0 DIMatte_D.green 0 1 rgba.alpha 0 0 DIMatte_D.blue 0 2"
name Shuffle25
label "\[value in1]"
xpos 3615
ypos 2432
disable {{!useRGBalpha}}
}
Dot {
name Dot27
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3747
ypos 2438
}
set N29a5a400 [stack 0]
Dot {
name Dot28
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3743
ypos 2511
}
set N29a59d00 [stack 0]
Dot {
name Dot29
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3743
ypos 2578
}
set N29a59600 [stack 0]
Dot {
name Dot30
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3740
ypos 2641
}
push $N29a59600
push $N29a59d00
push $N29a5a400
push $N29a7f200
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DIMatte_3
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DIMatte_C.alpha 0 3 rgba.alpha 0 0 DIMatte_3.red 0 0 rgba.alpha 0 0 DIMatte_3.green 0 1 rgba.alpha 0 0 DIMatte_3.blue 0 2"
name Shuffle24
label "\[value in1]"
xpos 3618
ypos 2170
disable {{!useRGBalpha}}
}
Dot {
name Dot23
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3749
ypos 2179
}
set N29a58100 [stack 0]
Dot {
name Dot24
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3749
ypos 2240
}
set N29a33900 [stack 0]
Dot {
name Dot25
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3749
ypos 2309
}
set N29a33200 [stack 0]
Dot {
name Dot26
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3749
ypos 2374
}
push $N29a33200
push $N29a33900
push $N29a58100
push $N29a7f900
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DiMatte_2
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DiMatte_2.alpha 0 3 rgba.alpha 0 0 DiMatte_2.red 0 0 rgba.alpha 0 0 DiMatte_2.green 0 1 rgba.alpha 0 0 DiMatte_2.blue 0 2"
name Shuffle23
label "\[value in1]"
xpos 3627
ypos 1850
disable {{!useRGBalpha}}
}
Dot {
name Dot19
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3759
ypos 1858
}
set N29a31d00 [stack 0]
Dot {
name Dot20
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3759
ypos 1931
}
set N29a31600 [stack 0]
Dot {
name Dot21
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3759
ypos 1998
}
set N29a30f00 [stack 0]
Dot {
name Dot22
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3756
ypos 2061
}
push $N29a30f00
push $N29a31600
push $N29a31d00
push $N29a98100
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DiMatte_1
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DiMatte_1.alpha 0 3 rgba.alpha 0 0 DiMatte_1.red 0 0 rgba.alpha 0 0 DiMatte_1.green 0 1 rgba.alpha 0 0 DiMatte_1.blue 0 2"
name Shuffle22
label "\[value in1]"
xpos 3630
ypos 1589
disable {{!useRGBalpha}}
}
Dot {
name Dot15
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3760
ypos 1599
}
set N29a1f900 [stack 0]
Dot {
name Dot16
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3760
ypos 1660
}
set N29a1f200 [stack 0]
Dot {
name Dot17
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3760
ypos 1729
}
set N29a1eb00 [stack 0]
Dot {
name Dot18
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3760
ypos 1794
}
push $N29a1eb00
push $N29a1f200
push $N29a1f900
push $N29a99600
push $N29ab7200
Dot {
name Dot38
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2492
ypos 2
}
Switch {
inputs 2
which {{master.selectAlpha==1?0:1}}
name Switch3
label "hold out"
xpos 2422
ypos 600
}
Dot {
name Dot40
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2456
ypos 656
}
set N29a1cf00 [stack 0]
Dot {
name Dot39
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2372
ypos 656
}
Dot {
name Dot41
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2372
ypos 754
}
set N29a1c100 [stack 0]
Dot {
name Dot42
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2372
ypos 1042
}
push $N29a1c100
push $N29a1cf00
Multiply {
value 0
name Multiply2
xpos 2422
ypos 684
disable true
}
Copy {
inputs 2
from0 DiMatte_2.blue
to0 rgba.alpha
name Copy25
xpos 2422
ypos 744
}
Clamp {
name Clamp1
xpos 2422
ypos 847
}
Dot {
name Dot12
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2610
ypos 905
}
push $N29ab7200
push $N29a99600
Switch {
inputs 2
which {{master.selectAlpha==1?0:1}}
name Switch2
label "hold out"
xpos 2612
ypos 676
}
Dot {
name Dot7
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2646
ypos 862
}
Multiply {
inputs 1+1
value 0
name Multiply1
xpos 2612
ypos 952
}
Copy {
inputs 2
from0 {{{parent.Copy25.from0}}}
to0 {{{parent.Copy25.from0}}}
name Copy26
xpos 2616
ypos 1032
disable {{Copy25.from0==0}}
}
Dot {
name Dot1
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3697
ypos 955
}
set N299e4f00 [stack 0]
Dot {
name Dot2
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3697
ypos 1053
}
set N299e4800 [stack 0]
Dot {
name Dot5
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3699
ypos 1155
}
set N299e4100 [stack 0]
Dot {
name Dot6
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3699
ypos 1277
}
push $N299e4100
push $N299e4800
push $N299e4f00
push $N29a99600
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels DiMatte_1
name Copy1
label "hold out"
xpos 3912
ypos 933
disable {{!holdout}}
addUserKnob {20 User}
addUserKnob {6 holdout +STARTLINE}
holdout true
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels DiMatte_2
name Copy7
label "hold out"
xpos 3912
ypos 1031
disable {{!holdout}}
addUserKnob {20 User}
addUserKnob {6 holdout +STARTLINE}
holdout true
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels DIMatte_3
name Copy8
label "hold out"
xpos 3912
ypos 1133
disable {{!holdout}}
addUserKnob {20 User}
addUserKnob {6 holdout +STARTLINE}
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels DIMatte_D
name Copy9
label "hold out"
xpos 3914
ypos 1255
disable {{!holdout}}
addUserKnob {20 User}
addUserKnob {6 holdout +STARTLINE}
}
Dot {
name Dot14
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3948
ypos 1492
}
Copy {
inputs 2
from0 DiMatte_1.red
to0 DiMatte_1.red
name Copy5
xpos 3914
ypos 1589
disable {{"!(\[numvalue master.layer]==0)"}}
}
Copy {
inputs 2
from0 DiMatte_1.green
to0 DiMatte_1.green
name Copy10
xpos 3914
ypos 1650
disable {{"!(\[numvalue master.layer]==1)"}}
}
Copy {
inputs 2
from0 DiMatte_1.blue
to0 DiMatte_1.blue
name Copy11
xpos 3914
ypos 1719
disable {{"!(\[numvalue master.layer]==2)"}}
}
Copy {
inputs 2
from0 DiMatte_1.alpha
to0 DiMatte_1.alpha
name Copy12
xpos 3914
ypos 1784
disable {{"!(\[numvalue master.layer]==3)"}}
}
Copy {
inputs 2
from0 DiMatte_2.red
to0 DiMatte_2.red
name Copy13
xpos 3914
ypos 1848
disable {{"!(\[numvalue master.layer]==4)"}}
}
Copy {
inputs 2
from0 DiMatte_2.green
to0 DiMatte_2.green
name Copy14
xpos 3914
ypos 1921
disable {{"!(\[numvalue master.layer]==5)"}}
}
Copy {
inputs 2
from0 DiMatte_2.blue
to0 DiMatte_2.blue
name Copy15
xpos 3914
ypos 1988
disable {{"!(\[numvalue master.layer]==6)"}}
}
Copy {
inputs 2
from0 DiMatte_2.alpha
to0 DiMatte_2.alpha
name Copy16
xpos 3911
ypos 2051
disable {{"!(\[numvalue master.layer]==7)"}}
}
Copy {
inputs 2
from0 DIMatte_3.red
to0 DIMatte_3.red
name Copy3
xpos 3911
ypos 2169
disable {{"!(\[numvalue master.layer]==8)"}}
}
Copy {
inputs 2
from0 DIMatte_3.green
to0 DIMatte_3.green
name Copy17
xpos 3911
ypos 2230
disable {{"!(\[numvalue master.layer]==9)"}}
}
Copy {
inputs 2
from0 DIMatte_3.blue
to0 DIMatte_3.blue
name Copy18
xpos 3911
ypos 2299
disable {{"!(\[numvalue master.layer]==10)"}}
}
Copy {
inputs 2
from0 DIMatte_C.alpha
to0 DIMatte_C.alpha
name Copy19
xpos 3911
ypos 2364
disable {{"!(\[numvalue master.layer]==11)"}}
}
Copy {
inputs 2
from0 DIMatte_D.red
to0 DIMatte_D.red
name Copy20
xpos 3911
ypos 2428
disable {{"!(\[numvalue master.layer]==12)"}}
}
Copy {
inputs 2
from0 DIMatte_D.green
to0 DIMatte_D.green
name Copy21
xpos 3911
ypos 2501
disable {{"!(\[numvalue master.layer]==13)"}}
}
Copy {
inputs 2
from0 DIMatte_D.blue
to0 DIMatte_D.blue
name Copy22
xpos 3911
ypos 2568
disable {{"!(\[numvalue master.layer]==14)"}}
}
Copy {
inputs 2
from0 DIMatte_D.alpha
to0 DIMatte_D.alpha
name Copy23
xpos 3908
ypos 2631
disable {{"!(\[numvalue master.layer]==15)"}}
}
Copy {
inputs 2
channels DiMatte_1
name Copy2
xpos 3782
ypos 2726
disable {{"!(\[numvalue master.layer]==16)"}}
}
Copy {
inputs 2
channels DiMatte_2
name Copy4
xpos 3782
ypos 2802
disable {{"!(\[numvalue master.layer]==17)"}}
}
Copy {
inputs 2
channels DIMatte_3
name Copy6
xpos 3782
ypos 2895
disable {{"!(\[numvalue master.layer]==18)"}}
}
Copy {
inputs 2
channels DIMatte_D
name Copy24
xpos 3782
ypos 2981
disable {{"!(\[numvalue master.layer]==19)"}}
}
Output {
name Output1
xpos 3908
ypos 3145
}
NoOp {
inputs 0
name master
label "\[value layer]\n\[numvalue master.layer]"
xpos 3336
ypos -319
addUserKnob {20 User}
addUserKnob {4 layer M {DiMatte_1.red DiMatte_1.green DiMatte_1.blue DiMatte_1.alpha DiMatte_2.red DiMatte_2.green DiMatte_2.blue DiMatte_2.alpha DiMatte_3.red DiMatte_3.green DiMatte_3.blue DiMatte_3.alpha DiMatte_4.red DiMatte_4.green DiMatte_4.blue DiMatte_4.alpha "DiMatte_1.rgba (all)" "DiMatte_2.rgba (all)" "DiMatte_3.rgba (all)" "DiMatte_4.rgba (all)" "none (holdout only)" "" "" "" "" "" "" "" "" "" "" "" ""}}
layer "none (holdout only)"
addUserKnob {6 useRGBalpha l "use RGB.alpha" -STARTLINE}
addUserKnob {4 selectAlpha l "select alphaHoldout" M {"B input" "A input" ""}}
selectAlpha "A input"
addUserKnob {4 DIChannelSource l "DI ChannelSource" M {"A input" "B input" "Use constant" "" ""}}
}
end_group
Dot {
name Dot506
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11770
ypos 18113
}
set N294ef200 [stack 0]
Dot {
name Dot68
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11398
ypos 18113
}
Dot {
name Dot86
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11398
ypos 18191
}
Group {
inputs 3
name AdditiveKeyer
tile_color 0xff00ff
selected true
xpos 11214
ypos 18258
addUserKnob {20 AdditiveKeyer}
addUserKnob {26 ""}
addUserKnob {7 DarkValue R 0 2}
DarkValue 1.1
addUserKnob {7 ConstrainDarks R 0 100}
ConstrainDarks 100
addUserKnob {7 LightValue R 0 2}
LightValue 1.2
addUserKnob {7 ConstrainLights R 0 100}
ConstrainLights 100
addUserKnob {41 saturation l Saturation T Saturation1.saturation}
addUserKnob {18 darkTint l DarkTint}
darkTint 1
addUserKnob {6 darkTint_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 lightTint l LightTint}
lightTint 1
addUserKnob {6 lightTint_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
}
Input {
inputs 0
name fg
label "\[value number]"
xpos -231
ypos -422
number 1
}
Log2Lin {
operation lin2log
name Log2Lin5
xpos -231
ypos -349
}
Remove {
channels alpha
name Remove2
xpos -231
ypos -242
}
Dot {
name Dot8
xpos -197
ypos -142
}
set N294e1d00 [stack 0]
Input {
inputs 0
name ref
label "\[value number]"
xpos -128
ypos -432
number 2
}
Log2Lin {
operation lin2log
name Log2Lin1
xpos -128
ypos -394
}
Remove {
channels alpha
name Remove3
xpos -128
ypos -242
}
set N294c7200 [stack 0]
Dot {
name Dot6
xpos 200
ypos -230
}
Merge2 {
inputs 2
operation difference
Achannels rgb
Bchannels rgb
name Merge6
xpos 166
ypos -147
}
Colorspace {
colorspace_out HSL
name Colorspace1
xpos 166
ypos -85
}
Input {
inputs 0
name bg
label "\[value number]"
xpos -845
ypos -413
}
Log2Lin {
operation lin2log
name Log2Lin6
xpos -843
ypos -338
}
Remove {
channels alpha
name Remove1
xpos -845
ypos -119
}
set N292a3200 [stack 0]
Colorspace {
colorspace_out HSL
name Colorspace2
xpos -697
ypos -123
}
Shuffle {
in rgb
red blue
green blue
alpha blue
out rgb
name LumaOnly
xpos -697
ypos -78
}
Dot {
name Dot2
xpos -663
ypos 153
}
set N292a1d00 [stack 0]
Dot {
name Dot4
xpos -663
ypos 218
}
push $N294e1d00
Dot {
name Dot7
xpos -197
ypos -84
}
push $N294c7200
Merge2 {
inputs 2
operation minus
Achannels rgb
Bchannels rgb
output rgb
name Merge1
xpos -128
ypos -89
}
Saturation {
saturation 0.2
mode "Ccir 601"
name Saturation1
xpos -128
ypos -42
}
Dot {
name Dot1
xpos -94
ypos 15
}
set N29267900 [stack 0]
Clamp {
channels rgb
maximum 15.203
name Clamp_POS
xpos 11
ypos 10
}
Multiply {
channels rgb
value {{parent.LightValue} {parent.LightValue} {parent.LightValue} 0}
name LIGHT_VALUE
xpos 11
ypos 48
}
Multiply {
channels rgb
value {{parent.lightTint.r} {parent.lightTint.g} {parent.lightTint.b} 0}
name LIGHT_TINT
xpos 11
ypos 91
}
Merge2 {
inputs 2
operation multiply
Achannels rgb
Bchannels rgb
output rgb
mix {{parent.ConstrainLights/100}}
name CONSTRAIN_LIGHTS
xpos 11
ypos 213
}
push $N292a1d00
push $N29267900
Clamp {
channels rgb
minimum -15.203
maximum 0
name Clamp_NEG
xpos -310
ypos 10
}
Multiply {
channels rgb
value {{parent.DarkValue} {parent.DarkValue} {parent.DarkValue} 0}
name DARK_VALUE
xpos -310
ypos 49
}
Multiply {
channels rgb
value {{parent.darkTint.r} {parent.darkTint.g} {parent.darkTint.b} 0}
name DARK_TINT
xpos -310
ypos 91
}
Merge2 {
inputs 2
operation multiply
Achannels rgb
Bchannels rgb
output rgb
mix {{parent.ConstrainDarks/100}}
name __CONSTRAIN_DARKS__
xpos -310
ypos 148
}
Dot {
name Dot3
xpos -276
ypos 325
}
Merge2 {
inputs 2
operation plus
Achannels rgb
Bchannels rgb
output rgb
name Merge4
xpos 11
ypos 320
}
push $N292a3200
Dot {
name Dot5
xpos -811
ypos 374
}
Merge2 {
inputs 2
operation plus
name Merge5
xpos 11
ypos 369
}
Copy {
inputs 2
from0 rgba.blue
to0 rgba.alpha
name __LUMA_INTO_ALPHA__
xpos 166
ypos 362
}
Log2Lin {
name Log2Lin2
xpos 169
ypos 409
}
Output {
name Output1
xpos 166
ypos 448
}
end_group
Dot {
name Dot75
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11248
ypos 18681
}
push $N294ef200
Dot {
name Dot69
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11770
ypos 18268
}
Keymix {
inputs 3
name Keymix2
selected true
xpos 11736
ypos 18671
}
Unpremult {
name Unpremult10
selected true
xpos 11736
ypos 18999
disable true
}
Grade {
inputs 1+1
whitepoint {{white(1001)} {white(1001)} {white(1001)} {white(1001)}}
white {{parent.CurveTool1.intensitydata} {parent.CurveTool1.intensitydata} {parent.CurveTool1.intensitydata} {parent.CurveTool1.intensitydata}}
name Grade29
selected true
xpos 11736
ypos 19047
disable true
}
Grade {
inputs 1+1
whitepoint {{white(1001)} {white(1001)} {white(1001)} {white(1001)}}
white {{parent.CurveTool2.intensitydata} {parent.CurveTool2.intensitydata} {parent.CurveTool2.intensitydata} {parent.CurveTool2.intensitydata}}
name Grade30
selected true
xpos 11736
ypos 19171
disable true
}
Grade {
inputs 1+1
whitepoint {{white(1015)} {white(1015)} {white(1015)} {white(1015)}}
white {{parent.CurveTool3.intensitydata} {parent.CurveTool3.intensitydata} {parent.CurveTool3.intensitydata} {parent.CurveTool3.intensitydata}}
name Grade31
selected true
xpos 11736
ypos 19334
disable true
}
Premult {
name Premult2
selected true
xpos 11736
ypos 19360
disable true
}
Dot {
name Dot87
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11770
ypos 21433
}
set N291e0f00 [stack 0]
Dot {
name Dot90
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11864
ypos 21433
}
Dot {
name Dot89
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11864
ypos 21554
}
set N291e0100 [stack 0]
Dot {
name Dot91
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11864
ypos 21639
}
push $N291e0100
push $N291e0f00
push $N2f1cf200
Dot {
name Dot110
tile_color 0x949494ff
label matte1
note_font_size 42
note_font_color 0xffffffff
selected true
xpos -813
ypos 19652
}
Dot {
name Dot48
tile_color 0xd8b700ff
label "\n From: fgHoldout"
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 10510
ypos 19879
hide_input true
}
Group {
name key_chew10
help "======== KeyChew beta ========\n=============================\n\nThis is a port of the KeyChew macro for Shake to Nuke.\n\nThere might be tiny differences on the results given in both apps. Some of them are caused by the internal algorithms of each app, and others by the way I faked the JSplineV\nexpression of Shake in Nuke. If you know a better way to solve this, let\nme know!!\n\n=============================\n             2009 Cuco Bures\n============================="
selected true
xpos 10798
ypos 19915
addUserKnob {20 Controls}
addUserKnob {7 chew t "\t\t" R -200 200}
chew -10
addUserKnob {7 soften R 0 200}
soften 100
addUserKnob {6 matteMult +STARTLINE}
}
Input {
inputs 0
name Input
xpos -40
ypos -9
}
set N291d0f00 [stack 0]
Dot {
name Dot1
xpos 324
ypos -6
}
set N291d0800 [stack 0]
push $N291d0800
Invert {
name Invert1
xpos 176
ypos 33
}
push $N291d0800
Switch {
inputs 2
which {{"\[value chew]>=0?0:1"}}
name Switch1
xpos 180
ypos 87
}
Blur {
size {{"(floor(abs(\[value chew]))/4)+(floor(abs(\[value chew]))/8)"}}
name FgEdgeBlur
xpos 180
ypos 129
}
Grade {
channels alpha
multiply {1 1 1 {max(FgEdgeBlur.size*1.5,1)}}
black_clamp false
name FgEdgeMult
xpos 180
ypos 177
}
Grade {
channels alpha
gamma {1 1 1 {JSplineVFake(floor(abs(chew)))}}
name FgEdgeGamma1
xpos 180
ypos 225
addUserKnob {20 User}
addUserKnob {7 JSplineVFake}
JSplineVFake {{curve l 0.9958 k x5 0.95 0.8 x20 0.5 x40 0.3 x80 0.2 l x200 0.1}}
}
set N29393200 [stack 0]
Merge2 {
inputs 2
operation minus
name Merge1
xpos 290
ypos 231
}
push $N29393200
Switch {
inputs 2
which {{"\[value chew]>=0?0:1"}}
name Switch2
xpos 180
ypos 279
}
Clamp {
name Clamp2
xpos 180
ypos 321
}
Blur {
size {{"(floor(abs(\[value soften]))/4)+(floor(abs(\[value soften]))/8)"}}
name BlurResult
xpos 180
ypos 441
}
push $N291d0f00
ShuffleCopy {
inputs 2
name ShuffleCopy1
xpos -40
ypos 447
}
Premult {
name Premult1
xpos -40
ypos 495
disable {{"1-\[value matteMult]"}}
}
Output {
name Output1
xpos -40
ypos 567
}
end_group
push $N31dbb900
Dot {
name Dot114
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 10765
ypos 19806
}
set N2935eb00 [stack 0]
Dot {
name Dot119
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 10971
ypos 19806
}
Group {
name EdgeDetect
selected true
xpos 10937
ypos 19870
addUserKnob {20 EdgeDetectDN}
addUserKnob {41 size T Blur2.size}
addUserKnob {41 size_1 l expand T Erode2.size}
addUserKnob {41 contrast l hardness T ColorCorrect2.contrast}
addUserKnob {6 clamp +STARTLINE}
clamp true
addUserKnob {6 maskSwitch l enableMask +STARTLINE}
}
Input {
inputs 0
name mask
xpos 15
ypos 159
number 1
}
Input {
inputs 0
name Input1
xpos -77
ypos 160
}
Erode {
channels all
size 0
name Erode2
xpos -77
ypos 275
}
Blur {
size 300
name Blur2
xpos -77
ypos 349
}
ColorLookup {
lut {master {curve C 0 S x0.5 1 C 0}
  red {}
  green {}
  blue {}
  alpha {}}
name ColorLookup2
xpos -77
ypos 423
}
ColorCorrect {
channels rgba
contrast 1.01
name ColorCorrect2
xpos -77
ypos 474
}
set N2932e400 [stack 0]
Clamp {
name Clamp1
xpos -31
ypos 517
}
push $N2932e400
Switch {
inputs 2
which {{parent.clamp i}}
name Switch2
xpos -77
ypos 585
}
set N29316b00 [stack 0]
Merge2 {
inputs 2
operation mask
name Merge2
xpos 15
ypos 624
}
push $N29316b00
Switch {
inputs 2
which {{parent.maskSwitch}}
name Switch1
xpos -77
ypos 659
}
Output {
name Output1
xpos -77
ypos 718
}
Output {
name Output2
xpos -77
ypos 784
}
end_group
ChannelMerge {
inputs 2
operation stencil
name ChannelMerge13
selected true
xpos 10937
ypos 19927
}
push $N298ecf00
Dot {
name Dot121
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 10439
ypos 17131
}
Dot {
name Dot122
tile_color 0x949494ff
label BG
note_font_size 32
note_font_color 0xffffffff
selected true
xpos 10439
ypos 19779
}
Dot {
name Dot123
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11176
ypos 19779
}
Grade {
name Grade12
selected true
xpos 11142
ypos 19963
disable true
}
Group {
name apGlow
help "apGlow v1.2 by Adrian Pueyo\n\nExponential glow with advanced controls, using the traditional multi-blur approach.\n\nWith the \"area\" input (optional) you can set only a part of the image to emit glow.\nNaN's will be turned black, on rgba only.\n\nadrianpueyo.com, 2015-2022."
onCreate "n = nuke.thisNode()\nfor i in \['intensity','response','max_size','src_black','src_white','response']:\n    n\[i].setFlag(0x00000004)\nn\['max_size'].setRange(0,10000)\nn\['overscan'].setRange(0,1000)"
knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() in \[\"crop\",\"enableOverscan\"]:\n    kcv = n\[\"crop\"].value()\n    kov = n\[\"enableOverscan\"].value()\n    n\[\"enableOverscan\"].setEnabled(not kcv)\n    n\['overscan'].setEnabled(not kcv and kov)\nelif k.name() == \"s\":\n    s = int(k.value())\n    if s<1:\n        k.setValue(1)\n    else:\n        nd = nuke.toNode(\"DP\")\n        nm = nuke.toNode(\"MergeBlurs\")\n        b0 = nuke.toNode(\"Blur0\")\n        b0x = b0.xpos()\n        b0y = b0.ypos()\n        b0n = b0.name()\n        for i in range(1,nm.inputs()):\n            nm.setInput(i,None)\n        \[nuke.delete(i) for i in nuke.allNodes() if i.xpos()>nd.xpos()]\n        for i in range(1,s):\n            # Blur\n            b = nuke.nodes.Blur()\n            b.setXYpos(b0x+i*100,b0y)\n            b.setInput(0,nd)\n            b\[\"channels\"].setValue(\"all\")\n            for bk in \[\"filter\",\"quality\"]:\n                b\[bk].setExpression(b0n+\".\"+bk)\n            b\[\"crop\"].setValue(0)\n            b\[\"size\"].setValue(\[0,0])\n            b\[\"size\"].setExpression(\"DP.j((1/parent.s)*%s)/ parent.f\"%(i+1))\n            # Multiply\n            m = nuke.nodes.Multiply()\n            m.setXYpos(b0x+i*100,b0y+38)\n            m.setInput(0,b)\n            m\[\"channels\"].setValue(\"all\")\n            m\[\"value\"].setValue(\[0,0,0,0])\n            m\[\"value\"].setExpression( \"parent.p*%s+%s\"%((i+1)/(s),1-(i+1)/(s)))\n            # Merge\n            nm.setInput(i if i<2 else i+1, m)"
tile_color 0xe88543ff
selected true
xpos 11150
ypos 20025
addUserKnob {20 apGlow}
addUserKnob {41 channels T KeepWhat.channels}
addUserKnob {7 intensity t "Intensity multiplier for the resulting glow." R 0 10}
intensity 0.21
addUserKnob {18 p l persistance t "Color gain of the largest step. Affects the other steps progressively, with the least effect on the smallest one.\n\nUse as an inverse falloff or as a progressive color tint." R 0 10}
p 1.5
addUserKnob {6 p_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 tint t "Overall color multiplier for the intensity."}
tint 1
addUserKnob {6 tint_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 effect_only l "effect only" +STARTLINE}
effect_only true
addUserKnob {26 ""}
addUserKnob {7 src_black l "src black" t "Black point of the source image's luminance.\nClip the effect below this luminance value." R 0 4}
src_black 1
addUserKnob {7 src_white l "src white" t "White point of the source image's luminance." R 0 4}
src_white 2.34
addUserKnob {41 white_clamp l clamp -STARTLINE T Grade1.white_clamp}
addUserKnob {7 response t "Gamma on the source image's luminance, to change the response curve falloff." R 0 4}
response 0.68
addUserKnob {26 ""}
addUserKnob {14 max_size l "max size" t "Maximum pixel size of the exponential glow." R 0 10000}
max_size 4000
addUserKnob {14 f l "size falloff" t "Falloff adjustment on the exponential distribution of the blur sizes.\n\nReduce this to have the glow more diffuse (starting with larger blurs).\nIncrease to have the glow tighter and more defined (start with smaller blurs)." R 0 10}
f 8.65
addUserKnob {3 s l steps t "Number of blur iterations to combine together."}
s 10
addUserKnob {41 filter T Blur0.filter}
addUserKnob {41 quality l "" -STARTLINE T Blur0.quality}
addUserKnob {6 crop l "crop to format" -STARTLINE}
addUserKnob {14 overscan R 0 1000}
overscan 5
addUserKnob {6 enableOverscan l enable -STARTLINE}
enableOverscan true
addUserKnob {26 ""}
addUserKnob {41 maskChannelArea l area -STARTLINE T ExpressionArea.maskChannelMask}
addUserKnob {41 inject_area l inject -STARTLINE T ExpressionArea.inject}
addUserKnob {41 invert_area l invert -STARTLINE T ExpressionArea.invert_mask}
addUserKnob {41 fringe_area l fringe -STARTLINE T ExpressionArea.fringe}
addUserKnob {41 maskChannelMask l mask T Merge.maskChannelMask}
addUserKnob {41 inject -STARTLINE T Merge.inject}
addUserKnob {41 invert_mask l invert -STARTLINE T Merge.invert_mask}
addUserKnob {41 fringe -STARTLINE T Merge.fringe}
addUserKnob {41 mix T Merge.mix}
addUserKnob {26 version_author l "" t "apGlow v1.2" +STARTLINE T "<span style=\"color:#666\"><br/><b>apGlow v1.2</b> - <a href=\"http://www.adrianpueyo.com\" style=\"color:#666;text-decoration: none;\">adrianpueyo.com</a>, 2015-2022</span>"}
}
Input {
inputs 0
name Inputmask
xpos -883
ypos 975
number 2
}
Input {
inputs 0
name Inputarea
xpos -638
ypos 383
number 1
}
Input {
inputs 0
name Inputimg
xpos -773
ypos 220
}
Dot {
name Dot6
xpos -739
ypos 308
}
set N292e8800 [stack 0]
Dot {
name Dot8
xpos -494
ypos 308
}
set N292e8100 [stack 0]
Remove {
name RemoveAll
xpos -528
ypos 345
}
Expression {
inputs 1+1
channel0 rgba
expr0 1
name ExpressionArea
xpos -528
ypos 383
disable {{"!\[exists parent.input1]"}}
}
Shuffle {
red white
green white
blue white
alpha white
name ShuffleWhite
xpos -528
ypos 409
disable {{"\[exists parent.input1]"}}
}
push $N292e8100
Dot {
name Dot7
xpos -384
ypos 308
}
Remove {
operation keep
channels rgba
name KeepWhat
xpos -418
ypos 377
}
Copy {
inputs 2
from0 rgba.alpha
to0 apGlowArea.red
name Copy1
xpos -418
ypos 403
disable {{"!\[exists parent.input1]"}}
}
Premult {
channels all
alpha apGlowArea.red
name Premult1
xpos -418
ypos 441
disable {{"!\[exists parent.input1]"}}
}
Remove {
channels apGlowArea
name RemoveArea
xpos -418
ypos 479
disable {{"!\[exists parent.input1]"}}
}
Dot {
name Dot5
xpos -384
ypos 538
}
set N292c4100 [stack 0]
Dot {
name Dot1
xpos -494
ypos 538
}
Saturation {
channels all
saturation 0
name Saturation1
xpos -528
ypos 556
}
set N29493200 [stack 0]
Grade {
channels all
blackpoint {{parent.src_black}}
whitepoint {{parent.src_white}}
gamma {{parent.response}}
name Grade1
xpos -528
ypos 594
}
push $N292c4100
push $N29493200
Merge2 {
inputs 2
operation divide
also_merge all
name Merge4
xpos -418
ypos 562
}
Merge2 {
inputs 2
operation multiply
also_merge all
name Merge3
xpos -418
ypos 600
}
Dot {
name DP
xpos -384
ypos 671
addUserKnob {20 User}
addUserKnob {14 j R 0 100}
j {{"pow(2, t*(log(parent.max_size*parent.f)/log(2)) )"} {"pow(2, t*(log(parent.max_size*parent.f)/log(2)) )"}}
}
set N2948a400 [stack 0]
Blur {
size {{"DP.j((1/parent.s)*10)/ parent.f"} {"DP.j((1/parent.s)*10)/ parent.f"}}
filter {{Blur0.filter}}
quality {{Blur0.quality}}
crop false
name Blur9
xpos 482
ypos 729
}
Multiply {
value {{parent.p*1.0+0.0} {parent.p*1.0+0.0} {parent.p*1.0+0.0} {parent.p*1.0+0.0}}
name Multiply9
xpos 482
ypos 767
}
push $N2948a400
Blur {
size {{"DP.j((1/parent.s)*9)/ parent.f"} {"DP.j((1/parent.s)*9)/ parent.f"}}
filter {{Blur0.filter}}
quality {{Blur0.quality}}
crop false
name Blur8
xpos 382
ypos 729
}
Multiply {
value {{parent.p*0.9+0.1} {parent.p*0.9+0.1} {parent.p*0.9+0.1} {parent.p*0.9+0.1}}
name Multiply8
xpos 382
ypos 767
}
push $N2948a400
Blur {
size {{"DP.j((1/parent.s)*8)/ parent.f"} {"DP.j((1/parent.s)*8)/ parent.f"}}
filter {{Blur0.filter}}
quality {{Blur0.quality}}
crop false
name Blur7
xpos 282
ypos 729
}
Multiply {
value {{parent.p*0.8+0.2} {parent.p*0.8+0.2} {parent.p*0.8+0.2} {parent.p*0.8+0.2}}
name Multiply7
xpos 282
ypos 767
}
push $N2948a400
Blur {
size {{"DP.j((1/parent.s)*7)/ parent.f"} {"DP.j((1/parent.s)*7)/ parent.f"}}
filter {{Blur0.filter}}
quality {{Blur0.quality}}
crop false
name Blur6
xpos 182
ypos 729
}
Multiply {
value {{parent.p*0.7+0.3} {parent.p*0.7+0.3} {parent.p*0.7+0.3} {parent.p*0.7+0.3}}
name Multiply6
xpos 182
ypos 767
}
push $N2948a400
Blur {
size {{"DP.j((1/parent.s)*6)/ parent.f"} {"DP.j((1/parent.s)*6)/ parent.f"}}
filter {{Blur0.filter}}
quality {{Blur0.quality}}
crop false
name Blur5
xpos 82
ypos 729
}
Multiply {
value {{parent.p*0.6+0.4} {parent.p*0.6+0.4} {parent.p*0.6+0.4} {parent.p*0.6+0.4}}
name Multiply5
xpos 82
ypos 767
}
push $N2948a400
Blur {
size {{"DP.j((1/parent.s)*5)/ parent.f"} {"DP.j((1/parent.s)*5)/ parent.f"}}
filter {{Blur0.filter}}
quality {{Blur0.quality}}
crop false
name Blur4
xpos -18
ypos 729
}
Multiply {
value {{parent.p*0.5+0.5} {parent.p*0.5+0.5} {parent.p*0.5+0.5} {parent.p*0.5+0.5}}
name Multiply4
xpos -18
ypos 767
}
push $N2948a400
Blur {
size {{"DP.j((1/parent.s)*4)/ parent.f"} {"DP.j((1/parent.s)*4)/ parent.f"}}
filter {{Blur0.filter}}
quality {{Blur0.quality}}
crop false
name Blur3
xpos -118
ypos 729
}
Multiply {
value {{parent.p*0.4+0.6} {parent.p*0.4+0.6} {parent.p*0.4+0.6} {parent.p*0.4+0.6}}
name Multiply3
xpos -118
ypos 767
}
push $N2948a400
Blur {
size {{"DP.j((1/parent.s)*3)/ parent.f"} {"DP.j((1/parent.s)*3)/ parent.f"}}
filter {{Blur0.filter}}
quality {{Blur0.quality}}
crop false
name Blur2
xpos -218
ypos 729
}
Multiply {
value {{parent.p*0.3+0.7} {parent.p*0.3+0.7} {parent.p*0.3+0.7} {parent.p*0.3+0.7}}
name Multiply2
xpos -218
ypos 767
}
push 0
push $N2948a400
Blur {
size {{"DP.j((1/parent.s)*2)/ parent.f"} {"DP.j((1/parent.s)*2)/ parent.f"}}
filter {{Blur0.filter}}
quality {{Blur0.quality}}
crop false
name Blur1
xpos -318
ypos 729
}
Multiply {
value {{parent.p*0.2+0.8} {parent.p*0.2+0.8} {parent.p*0.2+0.8} {parent.p*0.2+0.8}}
name Multiply1
xpos -318
ypos 767
}
push $N2948a400
Blur {
size {{"DP.j(1/parent.s + 0) / parent.f"} {"DP.j(1/parent.s + 0) / parent.f"}}
crop false
name Blur0
xpos -418
ypos 729
}
Multiply {
value {{"parent.p * 1/parent.s + (1-1/parent.s)"}}
name Multiply0
xpos -418
ypos 767
}
Merge2 {
inputs 10+1
operation plus
name MergeBlurs
xpos -418
ypos 864
}
Multiply {
value {{parent.intensity*parent.tint/parent.s} {parent.intensity*parent.tint/parent.s} {parent.intensity*parent.tint/parent.s} {parent.intensity*parent.tint/parent.s}}
name MultiplyR
xpos -418
ypos 890
}
Expression {
expr0 isnan(r)?0:r
expr1 isnan(g)?0:g
expr2 isnan(b)?0:b
expr3 isnan(a)?0:a
name NanToBlack
xpos -418
ypos 928
}
push $N292e8800
Dot {
name Dot4
xpos -739
ypos 769
}
set N293dab00 [stack 0]
Dot {
name Dot2
xpos -629
ypos 769
}
Shuffle {
red black
green black
blue black
name Shuffle
xpos -663
ypos 847
disable {{!parent.effect_only}}
}
Remove {
operation keep
channels rgb
name Remove1
xpos -663
ypos 873
disable {{!parent.effect_only}}
}
Merge2 {
inputs 2
operation plus
output {rgba.red rgba.green rgba.blue -rgba.alpha}
also_merge all
name Merge1
xpos -663
ypos 928
}
Dot {
name Dot3
xpos -629
ypos 978
}
push $N293dab00
Merge2 {
inputs 2+1
operation copy
output {rgba.red rgba.green rgba.blue -rgba.alpha}
also_merge all
name Merge
xpos -773
ypos 974
}
Crop {
box {{parent.crop?0:-parent.overscan} {parent.crop?0:-parent.overscan} {parent.crop?width:width+parent.overscan} {parent.crop?height:height+parent.overscan}}
intersect true
name CropOverscan
xpos -773
ypos 1000
disable {{"!parent.enableOverscan && !parent.crop"}}
}
Output {
name Output
xpos -773
ypos 1026
}
end_group
Dot {
name Dot124
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11184
ypos 20063
}
push $N2935eb00
Unpremult {
name Unpremult1
selected true
xpos 10731
ypos 19986
}
Merge2 {
inputs 2+1
operation plus
mix 0.15
name Plus
selected true
xpos 10727
ypos 20059
}
Premult {
name Premult5
selected true
xpos 10727
ypos 20125
}
Dot {
name Dot32
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 10753
ypos 21479
}
Dot {
name Dot503
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11626
ypos 21479
}
Merge2 {
inputs 2
operation under
bbox B
name Merge18
selected true
xpos 11736
ypos 21475
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels DiMatte_1
name Copy2
selected true
xpos 11736
ypos 21538
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels DiMatte_2
name Copy3
selected true
xpos 11736
ypos 21623
}
Group {
inputs 2
name LensDistortionUV3
help "To undistort or re-distort footage; \nImport lensDistortionUV-map with \nftrackImportAsset and connect to \nthe UV input. \n\nUndistort values are in RGB layer and the redistort values in redistortUV layer.\n\nNote that the output will take on \nthe format of the UV map.This is \ncorrect in most cases. "
tile_color 0xffbf00ff
label "\[value direction]"
selected true
xpos 11749
ypos 24019
addUserKnob {20 lensDistortion l "Lens Distortion"}
addUserKnob {4 direction l mode M {undistort redistort "" ""}}
direction redistort
addUserKnob {4 alpha t "None or bleed: Plate or rendered elements that fill the entire frame. Selected filter is applied to entire image.\n\nElement with alpha: CG renders of other elements with alpha. This mode will use cubic filtering for the alpha and makes sure no sharpening artifacts are introduced around the edges. " M {"none or bleed" "element with alpha" "" "" "" "" "" "" ""}}
addUserKnob {41 filter T STMap1.filter}
addUserKnob {6 applyInLog l "apply in log" t "Applying filtering in log space will reduce the risk of oversharpening around bright spots when using filters like lanczos6. When impulse is selected this setting is bypassed." -STARTLINE}
applyInLog true
addUserKnob {26 ""}
addUserKnob {6 warnWhenMissingUV l "Disable missing UV warning" t "Warning will always be disabled on farm renders." +STARTLINE}
addUserKnob {20 info}
addUserKnob {26 version l "" +STARTLINE T "LensDistortionUV \nversion:1.3"}
addUserKnob {26 ""}
addUserKnob {26 help_1 l "" +STARTLINE T "Alpha: \n  None or bleed: Alpha is filtered in the same way as rgb\n  \n  Element with alpha: CG renders of other elements with alpha. \n  This mode will use cubic filtering for the alpha and makes sure \n  no sharpening artifacts are introduced around the edges. \n\nTo undistort or re-distort footage; \n  Import lensDistortionUV-map with \n  ftrackImportAsset and connect to \n  the UV input. \n\nUndistort values are in RGB layer and the redistort \nvalues in redistortUV layer.\n\nNote that the output will take on \nthe format of the UV map.This is \ncorrect in most cases. "}
addUserKnob {20 endGroup n -1}
}
Input {
inputs 0
name Input1
xpos 290
ypos -222
}
set N28f5a400 [stack 0]
Dot {
name Dot5
xpos 941
ypos -218
}
set N28f59d00 [stack 0]
Dot {
name Dot20
xpos 1109
ypos -218
}
set N28f59600 [stack 0]
Remove {
name Remove1
xpos 1081
ypos -155
}
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
message "Please connect lens distortion map!"
old_message {{80 108 101 97 115 101 32 99 111 110 110 101 99 116 32 108 101 110 115 32 100 105 115 116 111 114 116 105 111 110 32 109 97 112 33}
  }
box {0 {(height/2)-(height/3)} {width} {(height/2)+(height/3)}}
xjustify center
yjustify center
transforms {{0 2}
  }
cursor_position 31
font {{ Futura : Regular : fustav/Futura.otf : 0 }}
global_font_scale {{width/3840*1.5}}
center {1003 569}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{0 2160}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 1003 569 0 0 1 1 0 0 0 0}
  }
color {1 0 0 1}
color_panelDropped true
name Text1
label "Missing UV Warning"
xpos 1081
ypos -69
}
push $N28f59600
Dot {
name Dot19
xpos 1239
ypos -218
}
Merge2 {
inputs 2
name Merge1
xpos 1211
ypos -63
disable {{"parent.warnWhenMissingUV && \$gui"}}
}
Dot {
name Dot2
xpos 1245
ypos 1036
}
Input {
inputs 0
name uvMap
xpos -10
ypos -218
number 1
}
set N28f30f00 [stack 0]
Shuffle {
in redistortUV
name Shuffle1
label redistort
xpos 101
ypos -148
}
Reformat {
type "to box"
box_width {{"rint(\[metadata exr/nuke/plateSizeWidth]*(width/\[metadata exr/nuke/plateUdSizeWidth]))"}}
box_height {{"rint(\[metadata exr/nuke/plateSizeHeight]*(height/\[metadata exr/nuke/plateUdSizeHeight]))"}}
resize none
name Reformat1
label "Reformatting to the original plate size \nusing meta data for working with scaled UV maps"
xpos 101
ypos -96
}
push $N28f30f00
Switch {
inputs 2
which {{parent.direction}}
name Switch1
xpos -10
ypos 19
}
Dot {
name Dot1
xpos 18
ypos 335
}
set N28f13200 [stack 0]
Dot {
name Dot4
xpos 823
ypos 335
}
push $N28f59d00
STMap {
inputs 2
uv rgb
filter {{"STMap1.filter != 0? 1 : 0"}}
name STMap4
label "filter linked to STMap1\n\"STMap1.filter != 0? 1 : 0\""
xpos 907
ypos 357
}
Dot {
name Dot9
xpos 935
ypos 456
}
push $N28f13200
push $N28f5a400
Unpremult {
name Unpremult1
xpos 572
ypos -199
}
Grade {
whitepoint 500
gamma 2.5
black_clamp false
name Grade4
xpos 572
ypos -173
}
Premult {
name Premult1
xpos 572
ypos -147
}
push $N28f5a400
Dot {
name Dot11
xpos 474
ypos -183
}
Switch {
inputs 2
which {{"parent.filter && parent.applyInLog"}}
name Switch6
label "Apply filter in log"
xpos 446
ypos -153
}
Group {
name UnpremultAlpha
xpos 446
ypos -64
}
Input {
inputs 0
name Input1
xpos -277
ypos -347
}
Dot {
name Dot2
xpos -243
ypos -307
}
set N28edb200 [stack 0]
Shuffle {
red alpha
green alpha
blue alpha
name Shuffle1
xpos -153
ypos -311
}
Unpremult {
name Unpremult2
xpos -153
ypos -272
}
push $N28edb200
Unpremult {
name Unpremult3
xpos -277
ypos -275
}
Copy {
inputs 2
from0 rgba.red
to0 rgba.alpha
name Copy1
xpos -277
ypos -237
}
Output {
name Output1
xpos -277
ypos -137
}
end_group
set N28efc100 [stack 0]
Dot {
name Dot17
xpos 742
ypos -69
}
set N28ed8800 [stack 0]
Dot {
name Dot12
xpos 830
ypos -69
}
Blur {
size {{(width/1920)*bsize}}
name Blur2
xpos 802
ypos 1
addUserKnob {20 User}
addUserKnob {7 bsize R 0 10}
bsize 1
}
Group {
name UnpremultAlpha2
xpos 802
ypos 39
}
Input {
inputs 0
name Input1
xpos -277
ypos -347
}
Dot {
name Dot2
xpos -243
ypos -307
}
set N28ebe400 [stack 0]
Shuffle {
red alpha
green alpha
blue alpha
name Shuffle1
xpos -153
ypos -311
}
Unpremult {
name Unpremult2
xpos -153
ypos -272
}
push $N28ebe400
Unpremult {
name Unpremult3
xpos -277
ypos -275
}
Copy {
inputs 2
from0 rgba.red
to0 rgba.alpha
name Copy1
xpos -277
ypos -237
}
Output {
name Output1
xpos -277
ypos -137
}
end_group
push $N28ed8800
Merge2 {
inputs 2
operation under
name Merge2
xpos 714
ypos 75
}
Dot {
name Dot18
xpos 742
ypos 199
}
push $N28efc100
Merge2 {
inputs 2
operation under
name Merge6
xpos 446
ypos 201
}
Dot {
name Dot14
xpos 474
ypos 268
}
push $N28f5a400
Grade {
whitepoint 500
gamma 2.5
black_clamp false
name Grade1
xpos 349
ypos -154
}
push $N28f5a400
Switch {
inputs 2
which {{"parent.filter && parent.applyInLog"}}
name Switch7
label "Apply filter in log"
xpos 290
ypos -83
}
Switch {
inputs 2
which {{parent.alpha}}
name Switch5
label type
xpos 290
ypos 258
}
STMap {
inputs 2
uv rgb
filter Lanczos6
name STMap1
xpos 290
ypos 371
}
set N28c69600 [stack 0]
Dot {
name Dot8
xpos 473
ypos 375
}
Clamp {
channels alpha
name Clamp1
xpos 445
ypos 414
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy1
xpos 445
ypos 452
}
set N28c52400 [stack 0]
Grade {
whitepoint {{parent.Grade4.whitepoint}}
gamma {{parent.Grade4.gamma}}
reverse true
black_clamp false
name Grade3
xpos 537
ypos 528
}
push $N28c52400
Switch {
inputs 2
which {{"parent.filter && parent.applyInLog"}}
name Switch8
label "Apply filter in log"
xpos 445
ypos 606
}
Premult {
name Premult2
xpos 445
ypos 678
}
push $N28c69600
Grade {
whitepoint {{parent.Grade1.whitepoint}}
gamma {{parent.Grade1.gamma}}
reverse true
black_clamp false
name Grade2
xpos 349
ypos 526
}
push $N28c69600
Switch {
inputs 2
which {{"parent.filter && parent.applyInLog"}}
name Switch3
label "Apply filter in log"
xpos 290
ypos 611
}
Switch {
inputs 2
which {{parent.alpha}}
name Switch2
label type
xpos 290
ypos 748
}
Switch {
inputs 2
which {{2-parent.inputs}}
name Switch4
xpos 290
ypos 1038
}
Output {
name Output1
xpos 290
ypos 1116
}
end_group
Dot {
name Dot476
label DPaint
selected true
xpos 11772
ypos 24722
}
set N28c34100 [stack 0]
Dot {
name Dot477
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 12033
ypos 24722
}
push $N31bccf00
Group {
inputs 2
name common_key1
selected true
xpos 11999
ypos 24886
addUserKnob {20 CommonKey}
addUserKnob {41 tolerance T MergeExpression1.tolerance}
}
Input {
inputs 0
name Input2
xpos -189
ypos -333
number 1
}
Input {
inputs 0
name Input1
xpos 9
ypos -333
}
MergeExpression {
inputs 2
expr3 "abs(Br-Ar) > tolerance || abs(Bg-Ag) > tolerance || abs(Bb-Ab)\n > tolerance?1:0"
name MergeExpression1
xpos -98
ypos -271
addUserKnob {20 User}
addUserKnob {7 tolerance R 0 0.1}
tolerance 0.001
}
Shuffle {
red alpha
green alpha
blue alpha
name Shuffle1
xpos -98
ypos -242
}
Clamp {
name Clamp1
xpos -98
ypos -216
}
Output {
name Output1
xpos -98
ypos -99
}
end_group
push $N28c34100
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy23
selected true
xpos 11741
ypos 24880
}
Dot {
name Dot483
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11782
ypos 25536
}
OCIOColorSpace {
in_colorspace neutral_grade
out_colorspace scene_linear
name OCIOColorSpace8
label "Neutral Grade \nREVERSE"
selected true
xpos 11748
ypos 25564
}
Dot {
name Dot484
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11783
ypos 25630
}
Group {
inputs 5
name DasGrain1
help "DasGrain makes re-graining as simple as clicking a few buttons.\n\nFollow the steps in the Help tab and you'll have a perfect regrain in no time!"
onCreate "import random\n\ntestimonials = \[\n    \"Such an elegant solution, love it!\",\n    \"Your gizmo is beyond expectation\",\n    \"Totally awesome!\",\n    \"DasGrain is officially the best thing ever\",\n    \"It's really working!\",\n    \"Das bringt Tr&auml;nen in meine Augen\",\n    \"DasGrain is the salvation we waited for\",\n    \"It's really working\",\n    \"I save a lot of time, and definitely my nerves :)\",\n    \"It's alright\",\n    \"My new favourite node, thanks!<br>Having said that, ...\"\n    ]\n\nnode = nuke.thisNode()\nnode\['testimonial'].setValue('<br><br><br><i>&laquo;%s&raquo;</i><br>&mdash; anonymous<br><br>' % random.choice(testimonials))\nnode\['box'].setFlag(nuke.NO_ANIMATION)"
knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == 'box':\n    this_frame = nuke.frame()\n    n\['sample_frame'].setValue(this_frame)"
tile_color 0x7f7f7fff
label "v1.7 | 2020-02-27"
selected true
xpos 11741
ypos 26927
addUserKnob {20 Analyse_tab l Analyse}
addUserKnob {41 output t "<strong>regrained comp</strong> it is what it sais\n\n<strong>original grain</strong> plate minus degrained plate\n<strong>normalised grain</strong> check if the normalisation worked. It should be as even as possible. This is what you want to output if you want to prerender a grain plate. Later you can plug it into the <i>external grain</i> input of another DasGrain\n<strong>adapted grain</strong> check if the adaptation worked. Output this if you want to further manipulate the grain (who knows what the sup is gonna come up with...). After simply plus it to your comp.\n<strong>grain QC</strong> check if voronoi seams are visible (-> edgeblend), or the scattered grain looks different to the original plate grain (-> maybe bad sample area or wrong luminance degrain amount)" T Output.output}
addUserKnob {26 spacer01_1 l " " T " "}
addUserKnob {26 text l <strong>Colorspace}
addUserKnob {41 in_colorspace l input T OCIOColorSpace1.in_colorspace}
addUserKnob {22 python_button l "What's this all about?" -STARTLINE T "nuke.message(\"Regraining in other color spaces than the camera native linear space can lead to unexpected behaviour.\\nFor example very saturated colors can result in negative values when converted to ACEScg. If the plate has been shot on an Alexa, changing the color space to ARRI Linear ALEXA Wide Gamut will probably help.\")"}
addUserKnob {41 out_colorspace l internal T OCIOColorSpace1.out_colorspace}
addUserKnob {26 text_2 l " " T " "}
addUserKnob {26 level l "<strong>Degrain amount"}
addUserKnob {78 luminance t "Leave this at 1, if you're working on a completely degrained plate.\n\nIn case you decided to leave some luminance grain in the degrained plate (use the DegrainHelper node for this!), set this to the same value as in the DegrainHelper in order to compensate.\n\nIf the luminance degrain amount was set to 0.8, this needs to be set to 0.8 as well.\n\nDon't forget to use a mask of all elements that cover the plate." n 1}
luminance 1
addUserKnob {26 divider01 l " "}
addUserKnob {41 maskChannelMask1 l "degrain amount mask" T Multiply1.maskChannelMask}
addUserKnob {41 invert_mask l invert -STARTLINE T Multiply1.invert_mask}
addUserKnob {26 spacer02 l " " T " "}
addUserKnob {26 divider02 l <strong>Analyse}
addUserKnob {3 number_of_frames l "number of frames" t "Set the number of sample frames to be spread across the input range.\n\nMore frames lead to higher accuracy.\n\nIf there are particularly bright or dark frames, set them manually in the knob below.\n\nIf you want to set all sample frames manually, set this to 0 and add the frames in the knob below."}
number_of_frames 2
addUserKnob {1 additional_frames l "additional frames" t "Set additional frames like this:\n\n1001,1020,1053 (single frames)\n1020-1040 (frame ranges)\n1020-1040x4 (frame ranges with step)"}
addUserKnob {3 sample_count l "sample count" t "The samples are spread across the sample range (which gets calculated automatically) based on the AlexaV3LogC curve. This results in more samples in the dark areas and less samples in the brights.\n\nMore samples lead to a more detailed response curve (while the accuracy is limited by the quality of the degrain)."}
sample_count 30
addUserKnob {22 analyse l Analyse t "this is where the magic happens" T "import nuke\n\n\ndef _sample_count(this):\n\n    # returns the sample count\n\n    sample_count = int(this\['sample_count'].value())\n    if sample_count <= 0:\n        raise RuntimeError('Enter a sample count greater than 0')\n\n    else:\n\n        return sample_count\n\n\ndef _generate_frame_list(this):\n\n    # converts the frames submitted by the user into a list\n\n    frame_list = \[]\n\n    number_of_frames = int(this\['number_of_frames'].value())\n    additional_frames = this\['additional_frames'].value()\n\n    if number_of_frames < 1 and additional_frames is '':\n        raise RuntimeError('Either set the number of frames > 0\\nor define additional frames')\n\n    first_frame = max(this.input(1).firstFrame(),\n                      this.input(2).firstFrame())\n    last_frame = min(this.input(1).lastFrame(),\n                     this.input(2).lastFrame())\n\n    if number_of_frames > 0:\n        distance = (last_frame - first_frame) / (number_of_frames)\n        frame = first_frame + distance / 2\n\n        for x in xrange(number_of_frames):\n            int_frame = int(round(frame))\n            if int_frame not in frame_list:\n                frame_list.append(int_frame)\n            frame += distance\n\n    frange = nuke.FrameRanges(additional_frames.split(','))\n    for r in frange:\n        for f in r:\n            if f >= first_frame and f <= last_frame:\n                if f not in frame_list:\n                    frame_list.append(f)\n    frame_list.sort()\n    return frame_list\n\n\ndef _setup_for_multiframe(frame_list):\n\n    # arranges all sample frames next to each other, starting at frame 0\n    # sets the frame number knob of the FrameBlend node\n\n    TimeWarp = nuke.toNode('TimeWarp1')\n    TimeWarp\['lookup'].clearAnimated()\n    TimeWarp\['lookup'].setAnimated()\n    anim_list = \[]\n    for n, frame in enumerate(frame_list):\n        anim_list.append(nuke.AnimationKey(n, frame))\n    anim = TimeWarp\['lookup'].animation(0)\n    anim.addKey(anim_list)\n\n    FrameBlend = nuke.toNode('FrameBlend1')\n    FrameBlend\['endframe'].setValue(len(frame_list)-1)\n\n\ndef _generate_sample_list(\n    sample_count,\n    sample_range,\n    sample_radius\n    ):\n\n    # generate a list of sample values spread equally between the\n    # min and max values of the sample range\n\n    sample_list = \[]\n    for item in range(0, sample_count):\n        sample_list.append(float(item) / sample_count\n                           * (sample_range\[1] - sample_range\[0])\n                           + sample_range\[0] + sample_radius)\n    return sample_list\n\n\ndef _get_sample_range(\n    channel,\n    channel_list,\n    frame_list\n    ):\n\n\n    # samples the minimum and maximum values of the given frame range and\n    # sets the sample range to those values\n\n    CurveTool = nuke.toNode('CurveTool_Range')\n    min_knob = CurveTool\['minlumapixvalue']\n    max_knob = CurveTool\['maxlumapixvalue']\n\n    if channel == 'red':\n        min_knob.clearAnimated()\n        max_knob.clearAnimated()\n\n        min_knob.setAnimated()\n        max_knob.setAnimated()\n\n        nuke.execute(CurveTool, nuke.FrameRanges(frame_list))\n\n    min_list = \[]\n    max_list = \[]\n\n    index = channel_list.index(channel)\n    for key in min_knob.animation(index).keys():\n        min_list.append(key.y)\n\n    for key in max_knob.animation(index).keys():\n        max_list.append(key.y)\n\n    min_value = min(min_list)\n    max_value = max(max_list)\n\n    if channel == 'blue':\n        min_knob.clearAnimated()\n        max_knob.clearAnimated()\n        CurveTool\['minlumapixdata'].clearAnimated()\n        CurveTool\['maxlumapixdata'].clearAnimated()\n\n    return \[min_value, max_value]\n\n\ndef _log2lin(value):\n\n    # converts values from AlexaV3LogC to linear\n\n    if value > 5.367655 * 0.010591 + 0.092809:\n        new_value = (10.0 ** ((value - 0.385537) / 0.247190) - 0.052272) / 5.555556\n    else:\n        new_value = (value - 0.092809) / 5.367655\n    return new_value\n\n\ndef _sample_it(\n    Keyer,\n    CurveTool,\n    frame_list,\n    channel_list,\n    channel,\n    sample,\n    sample_radius,\n    ):\n\n    # analyse the grain level per channel and sample value in the sample range\n\n    Keyer\['temp_expr0'].setValue(str(sample - sample_radius))\n    Keyer\['temp_expr1'].setValue(str(sample + sample_radius))\n\n    intensity_knob = CurveTool\['intensitydata']\n    intensity_knob.clearAnimated()\n    intensity_knob.setAnimated()\n\n    nuke.execute(CurveTool, nuke.frame(), nuke.frame())\n    sample_values = intensity_knob.value()\n    intensity_knob.clearAnimated()\n\n    if sample_values\[3] > 0:\n        value = sample_values\[0] / sample_values\[3]\n\n        if value > 0:\n            return value\n        else:\n\n            return None\n    else:\n\n        return None\n\n\ndef check_inputs(this):\n    if this.input(1) is None:\n        raise RuntimeError('no plate connected')\n    if this.input(2) is None:\n        raise RuntimeError('no degrained plate connected')\n\n    def format_to_tuple(g):\n        \"\"\"returns (1024, 786, 2.0)\n        \"\"\"\n        return (g.format().width(), g.format().height(), g.format().pixelAspect())\n\n    format_set = set(\[\n        format_to_tuple(this.input(1)),\n        format_to_tuple(this.input(2)),\n        ])\n    if len(format_set) != 1:\n        raise RuntimeError(\"Format missmatch: Make sure the formats of plate and degrained plate match.\")\n\ndef start():\n\n    # let's do this!\n\n    this = nuke.thisNode()\n\n    check_inputs(this)\n\n    with this:\n        frame_list = _generate_frame_list(this)\n        _setup_for_multiframe(frame_list)\n        sample_count = _sample_count(this)\n\n        blank = 'bWFzdGVyIHt9CiAgICAgICAgcmVkIHtjdXJ2ZX0KICAgICAgICBncmVlbiB7Y3VydmV9CiAgICAgICAgYmx1ZSB7Y3VydmV9CiAgICAgICAgYWxwaGEge30='.decode(\"base64\")\n\n        lut = nuke.toNode('ColorLookup')\['lut']\n        lut.fromScript(blank)\n\n        channel_list = \['red', 'green', 'blue']\n\n        Keyer = nuke.toNode('Expression2')\n        Copy = nuke.toNode('Copy2')\n\n        CurveTool = nuke.toNode('CurveTool')\n\n        task = nuke.ProgressTask('Analysing...')\n        step = 100.0 / 3 / sample_count\n        progress = step\n\n        TimeWarp = nuke.toNode('TimeWarp1')\n        FrameBlend = nuke.toNode('FrameBlend1')\n\n        TimeWarp\['disable'].setValue(False)\n        FrameBlend\['disable'].setValue(False)\n\n        for channel in channel_list:\n            Copy\['from0'].setValue('rgba.\{\}'.format(channel))\n\n            sample_range = _get_sample_range(channel, channel_list, frame_list)\n            sample_radius = (sample_range\[1] - sample_range\[0]) / sample_count / 2\n            sample_list = _generate_sample_list(sample_count, sample_range, sample_radius)\n\n            for sample in sample_list:\n                if task.isCancelled():\n                    return\n\n                task.setProgress(int(progress))\n                task.setMessage('\{\} channel at \{\}'.format(channel, round(_log2lin(sample), 2)))\n\n                value = _sample_it(\n                    Keyer,\n                    CurveTool,\n                    frame_list,\n                    channel_list,\n                    channel,\n                    sample,\n                    sample_radius,\n                    )\n\n                if value is not None:\n                    lut.setValueAt(value, _log2lin(sample),\n                            channel_list.index(channel) + 1)\n\n                progress += step\n\n        TimeWarp\['lookup'].clearAnimated()\n        TimeWarp\['disable'].setValue(True) #hopefully prevents slowing down the comp\n        FrameBlend\['disable'].setValue(True) #hopefully prevents slowing down the comp\n\n        del task\n\n\nstart()\n" +STARTLINE}
addUserKnob {26 divider03 l " "}
addUserKnob {41 maskChannelMask l "analysis mask" T ChannelMerge1.A}
addUserKnob {6 invert_1 l invert -STARTLINE}
addUserKnob {20 Adjust_tab l Adjust}
addUserKnob {41 output_1 l output t "<strong>regrained comp</strong> it is what it sais\n\n<strong>original grain</strong> plate minus degrained plate\n<strong>normalised grain</strong> check if the normalisation worked. It should be as even as possible. This is what you want to output if you want to prerender a grain plate. Later you can plug it into the <i>external grain</i> input of another DasGrain\n<strong>adapted grain</strong> check if the adaptation worked. Output this if you want to further manipulate the grain (who knows what the sup is gonna come up with...). After simply plus it to your comp.\n<strong>grain QC</strong> check if voronoi seams are visible (-> edgeblend), or the scattered grain looks different to the original plate grain (-> maybe bad sample area or wrong luminance degrain amount)" T Output.output}
addUserKnob {26 spacer03_2 l " " T " "}
addUserKnob {26 divider04 l <strong>Adjust}
addUserKnob {22 whatsthis l "What am I looking at?" T "nuke.message(\"In the RGB channels are the sampled grain response curves. On the x-axis is the brightness of the image, on the y-axis is the grain intensity.<br><br>The quality of the curves depends entirely on the quality of the degrain. If the curves look wrong, try to improve the degrain first. If they still look wrong and the resulting regrain doesn't work well enough, you can try to improve the curves here.<br><br>You can also extend the curves if the comp has values that don't exist in the plate. Don't touch the master curve though.\\n\\nNote: Slope of curves should always be positive (always going up &#8599;)\")" +STARTLINE}
addUserKnob {41 lut l "" +STARTLINE T ColorLookup.lut}
addUserKnob {20 Replace_tab l Replace}
addUserKnob {41 output_2 l output t "<strong>regrained comp</strong> it is what it sais\n\n<strong>original grain</strong> plate minus degrained plate\n<strong>normalised grain</strong> check if the normalisation worked. It should be as even as possible. This is what you want to output if you want to prerender a grain plate. Later you can plug it into the <i>external grain</i> input of another DasGrain\n<strong>adapted grain</strong> check if the adaptation worked. Output this if you want to further manipulate the grain (who knows what the sup is gonna come up with...). After simply plus it to your comp.\n<strong>grain QC</strong> check if voronoi seams are visible (-> edgeblend), or the scattered grain looks different to the original plate grain (-> maybe bad sample area or wrong luminance degrain amount)" T Output.output}
addUserKnob {26 spacer04 l " " T " "}
addUserKnob {26 divider05 l "<strong>External Grain"}
addUserKnob {6 external_grain l "use external grain" t "Use external grain from a second DasGrain, with the output set to 'normalised grain', to replace masked area.\nConnect it to the 'external grain' input of this DasGrain (it's a bit hidden on the left side of the node)." +STARTLINE}
external_grain true
addUserKnob {26 spacer05 l " " T " "}
addUserKnob {26 divider06 l <strong>Scatter}
addUserKnob {6 scatter l activate t "Activates the scatter function. It generates a new grain based on the grain in the sample box using a Voronoi noise." +STARTLINE}
addUserKnob {4 stereo l "stereo behaviour" t "randomize offset per view: same voronoy pattern for all views, but different offset\n\nrandomize pattern per view: different voronoy pattern for every view" M {none "randomize offset per view" "randomize pattern per view" ""}}
addUserKnob {15 box l "sample box" t "Define an area that is used as a source for the scatter function. The grain in this area should be as even as possible, without any visible plate detail."}
box {0 0 1088 792}
addUserKnob {3 sample_frame l "sample frame" t "The frame at which the grain is being sampled. Is set automatically once the sample box is changed." +DISABLED}
sample_frame 1001
addUserKnob {26 spacer06 l "" +STARTLINE T " "}
addUserKnob {6 overlay l "overlay cell pattern" t "Overlay the cell pattern of the voronoy noise. Useful to check where the seams are and if distortion or blending is necessary." +STARTLINE}
addUserKnob {7 cell_size l "cell size" t "Cell size of the scatter. Shoudn't be too small, as lower grain frequencies might break.\nCan't be too big either, to prevent it from breaking the border of the samplebox (will error if it does)." R 5 100}
cell_size 40
addUserKnob {26 spacer07 l "" +STARTLINE T " "}
addUserKnob {20 concealer l "edge concealer" n 1}
concealer 0
addUserKnob {26 concealer_help l " " T "If you can see the voronoi pattern in the grain QC output,\nincrease the edge blend size."}
addUserKnob {3 edge_blend_size l "edge blend size" t "Set the output to grain QC. If you see the cell seams, increase the edge blend size to conceal them.\n\nThis is a bit hacky and slow."}
addUserKnob {26 tip l "" -STARTLINE T "sloooow - keep this below 3 if possible"}
addUserKnob {26 distortion_help l " " T "\nDistortion might help as well, if somehow the straight\nseams are visible (you might want to toggle the overlay\nwhile adjusting)."}
addUserKnob {7 amplitude R 0 50}
addUserKnob {7 frequency R 0 50}
frequency 15
addUserKnob {20 endGroup n -1}
addUserKnob {26 divider07 l "" +STARTLINE}
addUserKnob {41 maskChannelMask_1 l "replace mask" -STARTLINE T Merge9.maskChannelMask}
addUserKnob {41 invert_mask_1 l invert -STARTLINE T Merge9.invert_mask}
addUserKnob {20 Help_tab l Help}
addUserKnob {26 basic_setup l "" +STARTLINE T "<font size=\"5\">Basic setup</font>"}
addUserKnob {26 ""}
addUserKnob {26 explanation l "" +STARTLINE T "<strong>Bold</strong> steps are always necessary"}
addUserKnob {26 steps l "" +STARTLINE T "<br><strong>1. This should be the only regrain node in your comp.<br>2. Connect <i>plate</i>, <i>degrained plate</i> and <i>comp</i>.<br>&nbsp;&nbsp;&nbsp;&nbsp;The comp should be done on the degrained plate!</strong><br>3. Set the <i>luminance degrain amount</i>.<br><strong>4. Press the <i>Analyse</i> button.</strong><br>5. Correct the <i>response curves</i> in the Adjust tab.<br>6. Move the <i>sample box</i> to an area without any plate detail and activate <i>scatter</i>.<br>7. If necessary, activate <i>edge blend</i> and/or <i>distortion</i> to conceal seams."}
addUserKnob {26 in_depth l "" +STARTLINE T "<br>For an in depth explanation of the steps, read the tooltips and check out this video:<br><a href=\"https://vimeo.com/284820390/\"><span style=\"color:#C8C8C8;\">https://vimeo.com/284820390</a>"}
addUserKnob {26 pushthebutton l "" +STARTLINE T "<br><br>If the result is not as expected and you don't know why, push this button:"}
addUserKnob {22 troubleshoot l Troubleshoot t HEEEEEEELP T "messages = \[]\n\nthis = nuke.thisNode()\n\n#########################\n\nif this.input(0) is None or this.input(1) is None or this.input(2) is None:\n    messages.append(\"<font color='red'><strong>ERROR</strong></font> Plate, degrained plate and comp need to be connected to the appropriate inputs.\")\n\n#########################\n\nelse:\n\n    def format_to_tuple(g):\n        \"\"\"returns (1024, 786, 2.0)\n        \"\"\"\n        return (g.format().width(), g.format().height(), g.format().pixelAspect())\n\n    format_set = set(\[\n        format_to_tuple(this.input(0)),\n        format_to_tuple(this.input(1)),\n        format_to_tuple(this.input(2)),\n        ])\n    if len(format_set) != 1:\n        messages.append(\"<font color='orange'><strong>WARNING</strong></font> Format missmatch: Make sure formats of plate, degrained plate and comp match.\")\n\n    if (this.input(1).firstFrame() != this.input(2).firstFrame()) or (this.input(1).lastFrame() != this.input(2).lastFrame()):\n        messages.append(\"<font color='orange'><strong>WARNING</strong></font> The frame ranges of plate and degrained plate don't match. Double check that they belong together.\")\n\n#########################\n\nmessages.append(\"Double check that plate and degrained plate haven't been modified in any way (paint, despill, etc).\")\n\n#########################\n\nif this\['luminance'].getValue() == 1:\n    messages.append(\"Are you working on a completely degrained plate? If not, you might have to set the luminance degrain amount.\")\n\n#########################\n\nblank = 'bWFzdGVyIHt9CnJlZCB7fQpncmVlbiB7fQpibHVlIHt9CmFscGhhIHt9'.decode(\"base64\")\n\nwith this:\n    ColorLookup = nuke.toNode('ColorLookup')     \n    if ColorLookup\['lut'].toScript() == blank:\n        messages.append(\"<font color='red'><strong>ERROR</strong></font> You haven't pressed the Analyse button yet!\")\n\n#########################\n\nclass BadThings(Exception): pass\n\ndef thingy():\n    with this:\n        ColorLookup = nuke.toNode('ColorLookup')\n        list = this\['lut'].toScript().replace('\}','').split('\\n')\n        for item in list\[1:-1]:\n            sample_value = 0\n            for value in item.split(' '):\n                try:\n                    value == float(value)\n                    if value < sample_value:\n                        raise BadThings(\"<font color='orange'><strong>WARNING</strong></font> Check and fix the response curves. Their slopes should always be positive (the curves should always go up &#8599;).\")\n                        \n                    else:\n                        sample_value = value\n                except ValueError:\n                    # Ignore non-numeric things like x-values of \"x5.46\" and channel names like \"red\{\" etc\n                    pass\ntry:\n    thingy()\nexcept BadThings as e:\n    messages.append(str(e))\n    \n#########################\n\nif this\['scatter'].value() == True:\n    if this\['box'].getValue() == \[100.0, 100.0, 500.0, 300.0]:\n        messages.append(\"<font color='orange'><strong>WARNING</strong></font> Scatter has been activated, but the sample box is still in its default position. Are you sure that's a good area to sample?\")\n\n#########################\n\nmessages.append(\"Did you copy/paste DasGrain from another script? Make sure to reanalyse and to reset the sample area if you are using scatter.\")\n\n#########################\n\nif len(messages) > 0:\n    nuke.message(\"<font size=\\\"5\\\">Things worth checking</font><br><br>\"\n                               \"%s<br><br><br>If any of this doesn't make sense to you, it might be worth checking out the video on vimeo.\" % (\n                                  \"<hr>\".join(\"%s: %s\" % (i+1, m) for i, m in enumerate(messages))))\n" +STARTLINE}
addUserKnob {26 dont_despair l "" +STARTLINE T "<br>If it still doesn't work and you're about to flip the table, send me a <a href=\"mailto:holtzf+nuke@gmail.com\"><span style=\"color:#C8C8C8;\">mail</a>.<br>I'm happy to help! :)"}
addUserKnob {20 Info_tab l Info}
addUserKnob {26 dasname l "" +STARTLINE T "<font size='5'>DasGrain</font> v1.7<br>"}
addUserKnob {26 ""}
addUserKnob {26 info l "" +STARTLINE T "Last change: 2020-02-27\n"}
addUserKnob {26 name_1 l "" +STARTLINE T "\nFabian Holtz"}
addUserKnob {26 mail l "" +STARTLINE T "<a href=\"mailto:holtzf+nuke@gmail.com\"><span style=\"color:#C8C8C8;\">holtzf+nuke@gmail.com</a>"}
addUserKnob {26 testimonial l "" +STARTLINE T "<br><br><br><i>&laquo;DasGrain is the salvation we waited for&raquo;</i><br>&mdash; anonymous<br><br>"}
addUserKnob {26 ""}
addUserKnob {26 credit l "" +STARTLINE T "<br>VoronoiScatter based on Ivan Busquets' implementation of libNoise's\nVoronoi generator"}
addUserKnob {26 website l "" +STARTLINE T "<a href=\"http://www.nukepedia.com/blink/image/voronoi/\"><span style=\"color:#C8C8C8;\">http://www.nukepedia.com/blink/image/voronoi/</a>"}
addUserKnob {26 ""}
addUserKnob {26 thanks l "" +STARTLINE T "<br>Special thanks to Ben Dickson for bearing with my questions and<br>problems and RSP comp for the valuable feedback."}
}
BackdropNode {
inputs 0
name BackdropNode1
tile_color 0x7f7f7fff
label "normalise grain"
note_font_size 30
xpos 280
ypos 1470
bdwidth 320
bdheight 110
}
BackdropNode {
inputs 0
name BackdropNode11
tile_color 0x7f7f7fff
label "add grain"
note_font_size 30
xpos 830
ypos 2574
bdwidth 320
bdheight 110
}
BackdropNode {
inputs 0
name BackdropNode13
tile_color 0x7f7f7fff
label scatter
note_font_size 30
xpos -50
ypos 1830
bdwidth 320
bdheight 110
}
BackdropNode {
inputs 0
name BackdropNode14
tile_color 0x7f7f7fff
label "analyse grain"
note_font_size 30
xpos -159
ypos 606
bdwidth 319
bdheight 720
}
BackdropNode {
inputs 0
name BackdropNode2
tile_color 0x7f7f7fff
label "grain response curve"
note_font_size 30
xpos 610
ypos 2382
bdwidth 320
bdheight 110
}
BackdropNode {
inputs 0
name BackdropNode3
tile_color 0x7f7f7fff
label QC
note_font_size 30
xpos 1050
ypos 3030
bdwidth 320
bdheight 110
}
BackdropNode {
inputs 0
name BackdropNode4
tile_color 0x7f7f7fff
label "grain response curve"
note_font_size 30
xpos 610
ypos 1230
bdwidth 320
bdheight 110
}
BackdropNode {
inputs 0
name BackdropNode5
tile_color 0x7f7f7fff
label "adapt grain"
note_font_size 30
xpos 280
ypos 2382
bdwidth 320
bdheight 110
}
BackdropNode {
inputs 0
name BackdropNode6
tile_color 0x7f7f7fff
label "sample range"
note_font_size 30
xpos -490
ypos 606
bdwidth 320
bdheight 110
}
BackdropNode {
inputs 0
name BackdropNode7
tile_color 0x7f7f7fff
label "luminance level"
note_font_size 30
xpos 280
ypos -282
bdwidth 760
bdheight 685
}
BackdropNode {
inputs 0
name BackdropNode8
tile_color 0x7f7f7fff
label "original grain"
note_font_size 30
xpos 280
ypos 606
bdwidth 320
bdheight 110
}
BackdropNode {
inputs 0
name BackdropNode9
tile_color 0x7f7f7fff
label replace
note_font_size 30
xpos 60
ypos 1999
bdwidth 540
bdheight 226
}
Input {
inputs 0
name mask
label "\[value number]"
note_font_size 30
xpos 1170
ypos -680
number 3
}
Dot {
name Dot39
xpos 1204
ypos 258
}
set N28ba6400 [stack 0]
Dot {
name Dot26
xpos 1204
ypos 1074
}
set N28ba5d00 [stack 0]
Dot {
name Dot38
xpos 1204
ypos 1650
}
Dot {
name Dot37
xpos 544
ypos 1650
}
Dot {
name Dot22
xpos 544
ypos 2079
}
set N28ba4800 [stack 0]
Dot {
name Dot20
xpos 544
ypos 2199
}
push $N28ba4800
Dot {
name Dot17
xpos 434
ypos 2079
}
set N28d87900 [stack 0]
Dot {
name Dot13
xpos 214
ypos 2079
}
Input {
inputs 0
name external_grain
label "\[value number]"
note_font_size 30
xpos -150
ypos 1524
number 4
}
Dot {
name Dot21
xpos -116
ypos 1746
}
Input {
inputs 0
name DEGRAINED_PLATE
label "\[value number]"
note_font_size 30
xpos 730
ypos -680
number 2
}
OCIOColorSpace {
in_colorspace {{OCIOColorSpace1.in_colorspace}}
out_colorspace {{OCIOColorSpace1.out_colorspace}}
name OCIOColorSpace2
xpos 730
ypos -490
}
Dot {
name Dot9
xpos 764
ypos -390
}
set N28d84f00 [stack 0]
Dot {
name Dot28
xpos 764
ypos -198
}
set N28d84800 [stack 0]
Dot {
name Dot32
xpos 764
ypos 234
}
set N28d84100 [stack 0]
push $N28d84800
Dot {
name Dot27
xpos 624
ypos -198
}
Colorspace {
colorspace_out YCbCr
name Colorspace1
xpos 590
ypos -130
}
Dot {
name Dot7
xpos 624
ypos -54
}
set N28d62b00 [stack 0]
Input {
inputs 0
name PLATE
label "\[value number]"
note_font_size 30
xpos 290
ypos -676
number 1
}
OCIOColorSpace {
in_colorspace rendering
out_colorspace "Input - ARRI - Linear - ALEXA Wide Gamut"
name OCIOColorSpace1
xpos 290
ypos -490
}
Dot {
name Dot29
xpos 324
ypos -198
}
set N28d61600 [stack 0]
Dot {
name Dot6
xpos 464
ypos -198
}
Colorspace {
colorspace_out YCbCr
name Colorspace2
xpos 430
ypos -130
}
Merge2 {
inputs 2
operation from
bbox B
Achannels rgb
Bchannels rgb
output rgb
name Merge4
xpos 430
ypos -58
}
Multiply {
channels rgb
value {{1/parent.luminance-1} 0 0 0}
name Multiply6
xpos 430
ypos 14
}
Dot {
name Dot31
xpos 464
ypos 90
}
push $N28d62b00
Merge2 {
inputs 2
operation plus
bbox B
Achannels rgb
Bchannels rgb
output rgb
name Merge5
xpos 590
ypos 86
}
Colorspace {
colorspace_in YCbCr
name Colorspace3
xpos 590
ypos 158
}
Merge2 {
inputs 2
operation from
bbox B
Achannels rgb
Bchannels rgb
output rgb
name Merge6
xpos 590
ypos 230
}
Dot {
name Dot35
xpos 624
ypos 306
}
set N28d3cf00 [stack 0]
push $N28d84100
Merge2 {
inputs 2
operation from
bbox B
Achannels rgb
Bchannels rgb
output rgb
name Merge7
xpos 730
ypos 302
disable {{Multiply6.value.r==0}}
}
Dot {
name Dot2
xpos 764
ypos 522
}
set N28d3c100 [stack 0]
ColorLookup {
channels rgb
lut {master {}
  red {curve x0.001976580126 0.001652111962 x0.005100477487 0.001789755237 x0.008224374615 0.001891026672 x0.0113628367 0.001969284396 x0.0148743866 0.002059237827 x0.01897957548 0.002134917452 x0.02377876453 0.002254399133 x0.02938927151 0.002318547169 x0.03594825789 0.002472313735 x0.04361606389 0.002657919178 x0.05258014053 0.002747238898 x0.06305962801 0.002886305656 x0.07531071454 0.003099139276 x0.08963289112 0.003352727135 x0.1063762829 0.003638383797 x0.1259502172 0.0039251051 x0.1488331854 0.004283749033 x0.1755845994 0.004730625748 x0.2068584561 0.005101435408 x0.2434192747 0.005449686132 x0.2861608267 0.005920863089 x0.3361279964 0.00641262513 x0.3945423067 0.006969113181 x0.4628317654 0.007741705331 x0.5426658392 0.008027931415 x0.6359961033 0.005641904104 x0.7451042533 0.007001427002 x0.8726575375 0.007402378134 x1.021774173 0.01326214936 x1.19609952 0.01357011362}
  green {curve x0.001481085434 0.001451688465 x0.004625510424 0.001546921189 x0.007769935764 0.001649226045 x0.01091703493 0.00171078503 x0.01437762193 0.001795365864 x0.01842738874 0.001878376116 x0.02316664532 0.001996823055 x0.02871277928 0.00206770669 x0.03520317003 0.002199085742 x0.04279857129 0.002314950403 x0.05168712512 0.002342473047 x0.06208899617 0.002488408766 x0.07426182181 0.002671652231 x0.08850713074 0.002954678347 x0.1051777601 0.003213768537 x0.124686636 0.003481607873 x0.1475169808 0.003828112597 x0.174234286 0.004137497194 x0.2055003345 0.004406490714 x0.2420895547 0.004812805569 x0.2849082351 0.005160732321 x0.3350169957 0.005633262151 x0.3936569691 0.006156278097 x0.4622806609 0.006892550861 x0.5425878167 0.007276290576 x0.6365676522 0.004630047923 x0.7465478778 0.005774529651 x0.8752527833 0.006407608448 x1.025870204 0.01312821257 x1.202130795 0.01260131683}
  blue {curve x0.000134920745 0.001761333627 x0.003018910065 0.001819382544 x0.005902899429 0.00196789656 0.002087437045 x0.01170060877 0.002189537969 x0.0149750039 0.002319691581 x0.01875730418 0.002437706944 x0.02312629297 0.002511091203 x0.02817297541 0.002522190993 x0.03400246799 0.002625874468 x0.04073619843 0.002786913029 x0.04851442948 0.002948945874 x0.05749917403 0.003095058493 x0.06787757576 0.003295416957 x0.07986582071 0.003554305343 x0.09371361136 0.003822865383 x0.109709397 0.004142881083 x0.1281863451 0.004450408332 x0.1495293379 0.00478415846 x0.1741829365 0.005163608683 x0.2026606649 0.005543419209 x0.2355556786 0.005850833835 x0.2735531926 0.00617153892 x0.3174446523 0.007002670603 x0.3681443036 0.007812583604 x0.4267082214 0.008342049714 x0.494356215 0.008599084956 x0.5724973679 0.008822092601 x0.662759304 0.00964985928 x0.7670221925 0.007374388166}
  alpha {}}
name ColorLookup
xpos 730
ypos 1304
}
set C28d0f900 [stack 0]
Dot {
name Dot24
xpos 764
ypos 1554
}
Expression {
temp_name0 target
temp_expr0 .01
expr0 target/r
expr1 target/g
expr2 target/b
channel3 none
name Expression
xpos 400
ypos 1550
}
push $N28d3c100
Dot {
name Dot30
xpos 544
ypos 690
}
push $N28d61600
Merge2 {
inputs 2
operation from
bbox B
Achannels rgb
Bchannels rgb
output rgb
name Merge27
xpos 290
ypos 686
}
Dot {
name Dot3
xpos 324
ypos 786
}
set N28d0c800 [stack 0]
Dot {
name Dot33
xpos 324
ypos 1386
}
Merge2 {
inputs 2
operation multiply
bbox B
Achannels rgb
Bchannels rgb
output rgb
name Merge2
xpos 290
ypos 1550
}
Dot {
name Dot15
xpos 324
ypos 1650
}
set N28ce3200 [stack 0]
Dot {
name Dot25
xpos 104
ypos 1650
}
Switch {
inputs 2
which {{parent.external_grain}}
name Switch2
xpos 70
ypos 1742
}
Group {
name VoronoiScatter
xpos 70
ypos 1910
disable {{!parent.scatter}}
addUserKnob {20 User}
addUserKnob {15 box}
box {{parent.box} {parent.box} {parent.box} {parent.box}}
addUserKnob {3 sample_frame l "sample frame"}
sample_frame {{parent.sample_frame}}
addUserKnob {7 cell_size l "cell size" R 0 100}
cell_size {{parent.cell_size}}
addUserKnob {6 overlay_pattern l "overlay pattern" -STARTLINE}
overlay_pattern {{parent.overlay}}
addUserKnob {3 edge_blend_size l "edge blend size"}
edge_blend_size {{parent.edge_blend_size}}
addUserKnob {7 amplitude R 0 100}
amplitude {{parent.amplitude}}
addUserKnob {7 frequency R 0 100}
frequency {{parent.frequency}}
addUserKnob {41 VoroNoise_Seed l Seed T VoroNoise.VoroNoise_Seed}
}
Input {
inputs 0
name Input1
xpos 180
ypos -879
}
Dot {
name Dot14
xpos 214
ypos -750
}
set N28ce0f00 [stack 0]
Dot {
name Dot16
xpos 434
ypos -750
}
Remove {
name Remove1
xpos 400
ypos -687
}
Dot {
name Dot6
xpos 434
ypos -606
}
set N28cbb900 [stack 0]
Dot {
name Dot15
xpos 654
ypos -606
}
set N28cbb200 [stack 0]
Dot {
name Dot7
xpos 874
ypos -606
}
Noise {
output {rgba.red -rgba.green -rgba.blue none}
replace true
size {{parent.frequency} {size.0*pixel_aspect}}
zoffset {{x+1000}}
nyquist false
gamma 1
center {960 453.5}
name Noise1
xpos 840
ypos -514
}
Noise {
output {-rgba.red rgba.green -rgba.blue none}
replace true
size {{parent.Noise1.size} {parent.Noise1.size}}
zoffset {{x}}
gamma 1
center {960 453.5}
name Noise2
xpos 840
ypos -466
}
Clamp {
name Clamp1
xpos 840
ypos -424
}
Dot {
name Dot11
xpos 874
ypos -366
}
push $N28cbb200
BlinkScript {
kernelSourceFile C:/Users/fab/Downloads/voronoi.blink
recompileCount 91
ProgramGroup 1
KernelDescription "2 \"VoroNoise\" iterate pixelWise c117be128a07c11b6d82fd34148d66b3bcac41976ec9c2082affe38e890c2c0f 2 \"src\" Read Point \"dst\" Write Point 6 \"Frequency\" Float 1 AABIQg== \"Seed\" Int 1 AAAAAA== \"aspect ratio\" Float 1 AACAPw== \"width\" Int 1 AAAAAA== \"height\" Int 1 AAAAAA== \"Randomness\" Float 1 AAAAPw== 6 \"frequency\" 1 1 \"seed\" 1 1 \"aspect_ratio\" 1 1 \"width\" 1 1 \"height\" 1 1 \"randomness\" 1 1 0"
kernelSource "// Voronoi.blink\n// A test implementation of libNoise's Voronoi generator using Blink\n// Ivan Busquets - August 2013\n// Modified for DasGrain by Fabian Holtz - April 2019\n\n#define X_NOISE_GEN  1619\n#define Y_NOISE_GEN  31337\n#define Z_NOISE_GEN  6971\n#define SEED_NOISE_GEN  1013\n#define SQRT_3 1.73205081\n\ninline int IntValueNoise3D (int x, int y, int z, int seed)\n\{\n  // All constants are primes and must remain prime in order for this noise\n  // function to work correctly.\n  int n = (\n      X_NOISE_GEN    * x\n    + Y_NOISE_GEN    * y\n    + Z_NOISE_GEN    * z\n    + SEED_NOISE_GEN * seed)\n    & 0x7fffffff;\n  n = (n >> 13) ^ n;\n  return (n * (n * n * 60493 + 19990303) + 1376312589) & 0x7fffffff;\n\}\n\ninline float ValueNoise3D (int x, int y, int z, int seed)\n\{\n  return 1.0 - ((float)IntValueNoise3D (x, y, z, seed) / 1073741824.0);\n\}\n\nkernel VoroNoise : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead> src;\n  Image<eWrite, eAccessPoint> dst;\n\nparam:\n  float frequency;\n  int seed;\n  float aspect_ratio;\n  int width;\n  int height;\n  float randomness;\n\n\n  void define() \{\n    defineParam(frequency, \"Frequency\", 50.0f);\n    defineParam(aspect_ratio, \"aspect ratio\", 1.0f);\n    defineParam(seed, \"Seed\", 0);\n    defineParam(randomness, \"Randomness\", 0.5f);\n  \}\n\n\n\n\n  void process(int2 pos) \{\n   float x = pos.x * aspect_ratio * frequency / width;\n   float y = pos.y * frequency / width;\n   int xInt = (x > 0.0) ? x : x - 1;\n   int yInt = (y > 0.0) ? y : y - 1;\n\n\n    float minDist = 2147483647.0;\n    float xCandidate = 0;\n    float yCandidate = 0;\n\n    float dist;\n\nfor (int yCur = yInt - 2; yCur <= yInt + 2; yCur++) \{\n      for (int xCur = xInt - 2; xCur <= xInt + 2; xCur++) \{\n\n        // Calculate the position and distance to the seed point inside of\n        // this unit cube. Limited by the randomness value\n        float xPos = xCur + (ValueNoise3D (xCur, yCur, 0, seed    ) + 1 ) * randomness + (1-randomness) - 1;\n        float yPos = yCur + (ValueNoise3D (xCur, yCur, 0, seed + 1) + 1 ) * randomness + (1-randomness) - 1;\n\n        float xDist = xPos - x;\n        float yDist = yPos - y;\n\n        dist = pow(xDist, 2) + pow(yDist, 2);\n        if (dist < minDist) \{\n          // This seed point is closer to any others found so far, so record\n          // this seed point.\n          minDist = dist;\n          xCandidate = xPos;\n          yCandidate = yPos;\n\t\}\n    \}\n\}\n\n    SampleType(dst) sample(0.0f);\n\n    sample.x = xCandidate / aspect_ratio / frequency;\n    sample.y = yCandidate / height * width / frequency;\n    sample.z = 0;\n\n    dst() = sample;\n\}\n\};"
rebuild ""
VoroNoise_Frequency {{width/parent.cell_size}}
VoroNoise_Seed {{"(x+(parent.parent.stereo==2 ? \[lsearch \[value root.views] \[view]] / 2 : 0))*5"}}
"VoroNoise_aspect ratio" {{pixel_aspect}}
VoroNoise_width {{width}}
VoroNoise_height {{height}}
rebuild_finalise ""
name VoroNoise
xpos 620
ypos -520
}
Copy {
inputs 2
from0 rgba.red
to0 forward.u
from1 rgba.green
to1 forward.v
name Copy1
xpos 620
ypos -382
disable {{parent.amplitude==0}}
}
IDistort {
uv forward
uv_offset 0.5
uv_scale {{parent.amplitude} {uv_scale.w*pixel_aspect}}
filter impulse
name IDistort1
xpos 620
ypos -280
disable {{parent.amplitude==0}}
}
Dot {
name Dot5
xpos 654
ypos -174
}
set N28e7f200 [stack 0]
Dot {
name Dot12
xpos 764
ypos -174
}
set N28e7eb00 [stack 0]
Dot {
name Dot13
xpos 764
ypos 114
}
push $N28e7eb00
Dot {
name Dot8
xpos 874
ypos -174
}
Blur {
channels rgb
size {{pixel_aspect} 1}
name Blur1
label "\[value size]"
xpos 840
ypos -88
}
Difference {
inputs 2
name Difference2
xpos 840
ypos 104
}
Expression {
channel0 {none none none rgba.alpha}
expr0 a>1e-9
channel1 none
channel2 none
channel3 none
name Expression2
xpos 840
ypos 206
}
Shuffle {
red alpha
green alpha
blue alpha
name Shuffle1
label "\[value in]:\[value out]"
xpos 840
ypos 296
}
Dot {
name Dot4
xpos 874
ypos 834
}
push $N28e7f200
NoTimeBlur {
name NoTimeBlur3
xpos 620
ypos -82
}
Transform {
translate {{floor((x*size)%1*(size))-int(size/2) x1082 0} {floor(x%1*(size))-int(size/2) x1082 0}}
center {1064 714}
filter impulse
black_outside false
name Transform1
xpos 620
ypos 14
disable {{parent.edge_blend_size<1}}
addUserKnob {20 User}
addUserKnob {3 size}
size {{parent.edge_blend_size+1}}
}
Dot {
name Dot9
xpos 654
ypos 114
}
set N28e4e400 [stack 0]
push $N28cbb900
Expression {
expr0 (x+.5)/width
expr1 (y+.5)/height
expr2 0
name STMapGenerator
xpos 400
ypos -514
}
NoTimeBlur {
name NoTimeBlur2
xpos 400
ypos -82
}
Merge2 {
inputs 2
operation from
Achannels {rgba.red rgba.green -rgba.blue none}
Bchannels {rgba.red rgba.green -rgba.blue none}
output {rgba.red rgba.green -rgba.blue none}
name Merge2
xpos 400
ypos 110
}
Dot {
name Dot10
xpos 434
ypos 282
}
push $N28e4e400
Expression {
temp_name0 view_index
temp_expr0 "parent.parent.stereo==1 ? \[lsearch \[value root.views] \[view]] / 2 : 0"
expr0 random((r+view_index)*1000000,0)*(maxx-minx)+minx
expr1 random((g+view_index)*1000000,0)*(maxy-miny)+miny
channel2 none
channel3 none
name Expression3
xpos 620
ypos 182
addUserKnob {20 User}
addUserKnob {7 frequency R 0 100}
frequency {{parent.parent.cell_size}}
addUserKnob {7 multiplier R 0 3}
multiplier 0.5
addUserKnob {15 shrink}
shrink {{frequency*multiplier+ceil(parent.edge_blend_size/2)+IDistort1.uv_scale.w/2} {frequency*multiplier+ceil(parent.edge_blend_size/2)+IDistort1.uv_scale.h/2} {frequency*multiplier+floor(parent.edge_blend_size/2)+IDistort1.uv_scale.w/2} {frequency*multiplier+floor(parent.edge_blend_size/2)+IDistort1.uv_scale.h/2}}
addUserKnob {26 ""}
addUserKnob {7 minx}
minx {{(parent.box.x+shrink.x+.5)/width}}
addUserKnob {7 maxx}
maxx {{(parent.box.r-shrink.r-.5)/width}}
addUserKnob {7 miny}
miny {{(parent.box.y+shrink.y+.5)/height}}
addUserKnob {7 maxy}
maxy {{(parent.box.t-shrink.t-.5)/height}}
}
Merge2 {
inputs 2
operation plus
Achannels {rgba.red rgba.green -rgba.blue none}
Bchannels {rgba.red rgba.green -rgba.blue none}
output {rgba.red rgba.green -rgba.blue none}
name Merge3
xpos 620
ypos 278
}
Expression {
expr0 (r+1-minx)%(maxx-minx)+minx
expr1 (g+1-miny)%(maxy-miny)+miny
channel2 none
channel3 none
name Expression7
xpos 620
ypos 350
addUserKnob {20 User}
addUserKnob {7 minx}
minx {{(parent.box.x+rint(x%1*parent.edge_blend_size)+.5)/width}}
addUserKnob {7 maxx}
maxx {{(parent.box.r+rint(x%1*parent.edge_blend_size)-.5)/width}}
addUserKnob {7 miny}
miny {{(parent.box.y+rint(x%1*parent.edge_blend_size)+.5)/height}}
addUserKnob {7 maxy}
maxy {{(parent.box.t+rint(x%1*parent.edge_blend_size)-.5)/height}}
}
Dot {
name Dot3
xpos 654
ypos 426
}
push $N28ce0f00
FrameHold {
first_frame {{parent.sample_frame}}
name FrameHold1
xpos 180
ypos -184
}
NoTimeBlur {
name NoTimeBlur1
xpos 180
ypos -82
}
STMap {
inputs 2
channels rgb
uv rgb
filter impulse
name STMap1
xpos 180
ypos 422
}
set N28e1d600 [stack 0]
TimeBlur {
divisions {{max(Transform1.size==1?2:pow2(Transform1.size),1)}}
shutter 1
shuttercustomoffset {{1/divisions/2}}
name TimeBlur1
xpos 180
ypos 518
disable {{parent.edge_blend_size<1}}
}
set N28e1cf00 [stack 0]
push $N28e1d600
Dot {
name Dot1
xpos -6
ypos 426
}
Difference {
inputs 2
name Difference1
xpos -40
ypos 512
}
Expression {
channel0 {none none none rgba.alpha}
expr0 a>1e-10
channel1 none
channel2 none
channel3 none
name Expression1
xpos -40
ypos 566
}
Blur {
channels alpha
size {{parent.parent.edge_blend_size}}
name Blur2
xpos -40
ypos 608
}
Grade {
channels alpha
blackpoint 0.5
white_clamp true
name Grade2
xpos -40
ypos 656
}
Dot {
name Dot2
xpos -6
ypos 738
}
push $N28e1cf00
Grade {
inputs 1+1
white 1.4
black_clamp false
name Grade1
xpos 180
ypos 734
disable {{parent.edge_blend_size<1}}
}
Merge2 {
inputs 2
Achannels rgb
Bchannels rgb
output rgb
name Merge1
xpos 180
ypos 830
disable {{!parent.overlay_pattern}}
}
Assert {
expression {{"Expression3.maxx>Expression3.minx && Expression3.maxy>Expression3.miny"}}
message "increase sample box size or decrease cell size"
name error
xpos 180
ypos 926
}
Output {
name Output1
xpos 180
ypos 1022
}
end_group
Multiply {
inputs 1+1
channels rgb
value 1.8
maskChannelMask {{{parent.Merge9.maskChannelMask}}}
invert_mask {{!Merge9.invert_mask}}
name Multiply7
xpos 70
ypos 2123
disable {{"!maskChannelMask || !\[exists parent.input3.name]"}}
}
Dot {
name Dot23
xpos 104
ypos 2199
}
push $N28d87900
push $N28ce3200
Multiply {
inputs 1+1
channels rgb
value 1.8
maskChannelMask {{{parent.Merge9.maskChannelMask}}}
invert_mask {{parent.Merge9.invert_mask}}
name Multiply2
xpos 290
ypos 2123
disable {{"!maskChannelMask || (!parent.scatter && !parent.external_grain)"}}
}
Merge2 {
inputs 2+1
operation copy
Achannels rgb
Bchannels rgb
output rgb
maskChannelMask -rgba.alpha
name Merge9
xpos 290
ypos 2195
disable {{"!(parent.scatter || parent.external_grain)"}}
}
Dot {
name Dot11
xpos 324
ypos 2298
}
set N28da7200 [stack 0]
push $N28ba6400
Dot {
name Dot40
xpos 874
ypos 258
}
push $N28d3cf00
Dot {
name Dot34
xpos 624
ypos 378
}
Multiply {
inputs 1+1
channels rgb
value 0
maskChannelMask -rgba.red
name Multiply1
xpos 840
ypos 374
}
Input {
inputs 0
name COMP
label "\[value number]"
note_font_size 30
xpos 950
ypos -680
}
OCIOColorSpace {
in_colorspace {{OCIOColorSpace1.in_colorspace}}
out_colorspace {{OCIOColorSpace1.out_colorspace}}
name OCIOColorSpace3
xpos 950
ypos -490
}
Dot {
name Dot44
xpos 984
ypos -390
}
set N28da4100 [stack 0]
Merge2 {
inputs 2
operation from
bbox B
Achannels rgb
Bchannels rgb
output rgb
name Merge8
xpos 950
ypos 374
disable {{Multiply6.value.r==0}}
}
Dot {
name Dot18
xpos 984
ypos 2466
}
set N2896b200 [stack 0]
clone $C28d0f900 {
xpos 730
ypos 2462
selected false
}
Multiply {
channels rgb
value {{1/Expression.temp_expr0}}
name Multiply5
xpos 400
ypos 2462
}
Merge2 {
inputs 2
operation multiply
bbox B
Achannels rgb
Bchannels rgb
output rgb
name Merge1
xpos 290
ypos 2462
}
Dot {
name Dot8
xpos 324
ypos 2658
}
push $N2896b200
Merge2 {
inputs 2
operation plus
bbox B
Achannels rgb
Bchannels rgb
output rgb
name Merge3
xpos 950
ypos 2654
}
Dot {
name Dot42
xpos 984
ypos 2826
}
set N2894b200 [stack 0]
OCIOColorSpace {
in_colorspace {{OCIOColorSpace1.out_colorspace}}
out_colorspace {{OCIOColorSpace1.in_colorspace}}
name OCIOColorSpace4
xpos 950
ypos 2894
}
Dot {
name Dot19
xpos 984
ypos 2970
}
set N2894a400 [stack 0]
Dot {
name Dot41
xpos 1204
ypos 2970
}
set N28949d00 [stack 0]
Dot {
name Dot36
xpos 1314
ypos 2970
}
Blur {
channels rgb
size 1
name Blur1
xpos 1280
ypos 3062
}
push $N28949d00
Merge2 {
inputs 2
operation difference
bbox B
Achannels rgb
Bchannels rgb
output rgb
name Merge10
xpos 1170
ypos 3062
}
Multiply {
channels rgb
value 50
name Multiply3
xpos 1170
ypos 3110
}
Dot {
name Dot43
xpos 1204
ypos 3210
}
push $N28da4100
Dot {
name Dot45
xpos 1424
ypos -390
}
push $N2894b200
Merge2 {
inputs 2
operation from
Achannels rgb
Bchannels rgb
output rgb
name Merge11
xpos 1390
ypos 2822
}
Dot {
name Dot46
xpos 1424
ypos 3330
}
push $N28da7200
Dot {
name Dot14
xpos 104
ypos 2298
}
Dot {
name Dot12
xpos 104
ypos 3210
}
push $N28d84f00
Dot {
name Dot47
xpos -556
ypos -390
}
push $N28d61600
Merge2 {
inputs 2
operation from
Achannels rgb
Bchannels rgb
output rgb
name Merge12
xpos -590
ypos -202
}
Dot {
name Dot10
xpos -556
ypos 3330
}
push $N2894a400
Switch {
inputs 5
which {{output}}
name Output
xpos 950
ypos 3464
addUserKnob {20 User}
addUserKnob {4 output M {"regrained comp" "original grain" "normalised grain" "adapted grain" "grain QC"}}
}
Output {
name Output1
xpos 950
ypos 3662
}
push $N28ba5d00
Invert {
name Invert2
xpos 180
ypos 1064
disable {{!parent.invert_1}}
}
push $N28d0c800
Dot {
name Dot5
xpos 104
ypos 786
}
set N288f9d00 [stack 0]
push $N288f9d00
Copy {
inputs 2
from0 {{{parent.Copy2.from0}}}
to0 rgba.red
name Copy3
xpos 70
ypos 848
}
Expression {
expr0 abs(r)
channel1 {none none none rgba.alpha}
expr1 r==0
channel2 none
channel3 none
name Expression4
xpos 70
ypos 926
}
set N288f8f00 [stack 0]
push $N28d3c100
Colorspace {
colorspace_out AlexaV3LogC
name Colorspace5
xpos 70
ypos 518
}
Clamp {
maximum_enable false
name Clamp2
xpos -40
ypos 512
}
Dot {
name Dot1
xpos -116
ypos 522
}
set N288c9d00 [stack 0]
Dot {
name Dot48
xpos -116
ypos 786
}
set N288c9600 [stack 0]
push $N288c9600
Copy {
inputs 2
from0 rgba.blue
to0 rgba.red
name Copy2
xpos -150
ypos 848
}
Expression {
temp_name0 min
temp_expr0 0.53472061952
temp_name1 max
temp_expr1 0.550200879574
channel0 {none none none rgba.alpha}
expr0 "r>=min && r<=max"
channel1 none
channel2 none
channel3 none
name Expression2
xpos -150
ypos 926
}
Dot {
name Dot4
xpos -116
ypos 1002
}
ChannelMerge {
inputs 2
operation stencil
name ChannelMerge2
xpos -40
ypos 985
}
push $N288f8f00
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy1
xpos 70
ypos 992
}
ChannelMerge {
inputs 2
A -rgba.green
operation multiply
name ChannelMerge1
xpos 70
ypos 1057
disable {{!A}}
}
Premult {
channels {rgba.red -rgba.green -rgba.blue none}
name Premult1
xpos 70
ypos 1142
}
TimeWarp {
lookup 1131
time ""
filter nearest
name TimeWarp1
xpos 70
ypos 1190
disable true
}
FrameBlend {
channels {rgba.red -rgba.green -rgba.blue rgba.alpha}
numframes 32
startframe 0
endframe 1
userange true
name FrameBlend1
xpos 70
ypos 1232
disable true
}
CurveTool {
avgframes 0
channels {rgba.red -rgba.green -rgba.blue rgba.alpha}
ROI {0 0 {width} {height}}
autocropdata {512 389 1536 1167}
intensitydata {0.0006298681477 0 0 0.0733424434}
name CurveTool
xpos 70
ypos 1280
}
push $N288c9d00
Dot {
name Dot16
xpos -336
ypos 522
}
CurveTool {
operation "Max Luma Pixel"
ROI {0 0 {width} {height}}
autocropdata {512 389 1536 1167}
maxlumapixdata {2450 1258}
maxlumapixvalue {0.5912061334 0.5918933749 0.5417898893}
minlumapixdata {1416 471}
minlumapixvalue {0.0950345993 0.09231986105 0.1038527265}
name CurveTool_Range
xpos -370
ypos 686
}
end_group
push $N31b84800
AddMix {
inputs 2
name AddMix1
selected true
xpos 11741
ypos 27127
}
CopyBBox {
inputs 2
name CopyBBox4
selected true
xpos 11741
ypos 27220
}
CopyMetaData {
inputs 2
name CopyMetaData1
selected true
xpos 11741
ypos 27301
}
Dot {
name Dot491
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11775
ypos 27620
}
Dot {
name Dot492
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11775
ypos 27749
}
Dot {
name Dot125
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11775
ypos 27955
}
set N28675600 [stack 0]
Dot {
name Dot128
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 12025
ypos 27951
}
Group {
inputs 2
name GBK_QC_Tool
selected true
xpos 11991
ypos 28048
addUserKnob {20 QC l "QC Tool" -STARTLINE}
addUserKnob {41 QCView l "QC View" T QCMenu1.QCView}
addUserKnob {41 Resolution T Reso.Resolution}
addUserKnob {41 QuarterView l "Quarter View" T Quarter_View.QuarterView}
addUserKnob {41 rows_1 l rows/columns T ContactSheet1.rows}
addUserKnob {41 columns_1 l "" -STARTLINE T ContactSheet1.columns}
addUserKnob {26 tex l "" -STARTLINE T "For 'QC View / All Views'"}
addUserKnob {26 ""}
addUserKnob {6 Flip l "Flip Quadrants" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {3 new_gain l "Gain Up / Down"}
new_gain 3
addUserKnob {26 text l "" -STARTLINE T "For Gain +/- views"}
addUserKnob {3 saturation1 l Saturation}
saturation1 4
addUserKnob {26 text_1 l "" -STARTLINE T "For Saturation view"}
addUserKnob {26 _1 l "For Illegal Values"}
addUserKnob {7 maxVal l "Maximum Value" R -10 100}
maxVal 25
addUserKnob {7 minVal l "Minimum Value " R -10 100}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.02 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">GBK QC Tool - 2019</font>"}
addUserKnob {20 Overlays}
addUserKnob {6 labelToggle l Labels +STARTLINE}
labelToggle true
addUserKnob {6 dataWinToggle l "dataWindow (in Comp view)" +STARTLINE}
dataWinToggle true
addUserKnob {6 frameRanges l "Frame Ranges (in Comp view)" +STARTLINE}
frameRanges true
addUserKnob {26 ""}
addUserKnob {3 textSize l "Text Size"}
textSize 70
addUserKnob {20 tips l "QC Checking Tips"}
addUserKnob {20 colourchecks l "Colour Checks" n 1}
colourchecks 0
addUserKnob {26 ""}
addUserKnob {26 tip_colour l "" +STARTLINE T "\nNegative blacks - Check for black values that are below zero,\n even black values close to zero are likely too low for approval.\n\nCheck that these values aren't caused by the viewer LUT by\n testing the plate input to both QC Tool inputs. \n\nCheck despilled elements against their original scans to make sure\ndespilling hasn't effected the element too much (particularly skin tones)\nMake sure neutral grades aren't broken by any grading done in the\ncomp compare the final comp colour space to the original scan. \n\nMake sure that the comp 'Write node' has the same settings as your 'Read node'. \nSwitch colour spaces while watching the shot, Log, sRGB, rec709,\nthis will ensure the added elements will react the same as the original scan.\n"}
addUserKnob {26 ""}
addUserKnob {20 endGroup n -1}
addUserKnob {20 group l "Grain Checks" n 1}
group 0
addUserKnob {26 ""}
addUserKnob {26 tip_grain l "" +STARTLINE T "\nIMPORTANT TO NOTE!!!!\n\nGrain should only EVER be checked with the QC Tool set to\nfull resolution and with your viewer set to 1:1 ratio!!\n\nAny viewer sampling with alter the results and mask \ndetails the noise view is meant to highlight.\n\nSpill suppression many times will increase the apparent grain of a keyed element.\n\nCheck all your edges and keyed elements for this artefact\n\nLook for doubled up grain where the patterns move differently than one another.\n\nLook for static grain on DMP, backgrounds, clean-up patches, and elsewhere.\n"}
addUserKnob {26 ""}
addUserKnob {20 endGroup_1 l endGroup n -1}
addUserKnob {20 group_1 l "Focus Check" n 1}
group_1 0
addUserKnob {26 ""}
addUserKnob {26 tip_focus l "" +STARTLINE T "\nCompare CG elements added to the plate to the things they replaced to. \n\nMake sure the focus on the cg elements makes sense.\n\nDoes the rack focus on the CG match the plate exactly,\nscrub through slowly, back and forth, looking for \ndifferences in the animation curve for the focus.\n"}
addUserKnob {26 ""}
addUserKnob {20 endGroup_2 l endGroup n -1}
addUserKnob {20 group_2 l "Matte Checks" n 1}
group_2 0
addUserKnob {26 ""}
addUserKnob {26 tip_matte l "" +STARTLINE T "\nCheck edges of keys -  If they're too smooth they won't look natural,\nif they're too noisy, they will draw attention to themselves.\n\nCompare edges to the original scan to make sure it retains as much hair\nand fine detail as it possibly can.\n\nCheck all roto, make sure it's not too sharp, not too defocused, \n\nCheck no background colour is coming through.\n\nLook for matte lines that are apparent where they aren't supposed to be, \nespecially on parts of the frame where comp or CG hasn't been done. \nThe Noise view is helpful for this.\n"}
addUserKnob {26 ""}
addUserKnob {20 endGroup_3 l endGroup n -1}
addUserKnob {20 group_3 l "Tracking Checks" n 1}
group_3 0
addUserKnob {26 ""}
addUserKnob {26 tip_tracking l "" +STARTLINE T "\nVerify that tracked in elements do not wiggle or drift from\nnearby features in the scan.\n\nDon't assume the matchmove camera is working, Verify that it is\n"}
addUserKnob {26 ""}
addUserKnob {20 endGroup_4 l endGroup n -1}
addUserKnob {20 group_4 l "Frame Checks" n 1}
group_4 0
addUserKnob {26 ""}
addUserKnob {26 tip_frame l "" +STARTLINE T "\nMake sure the frame range matches the delivery range.  \nTurn on the 'Frame Ranges' in Overlays to verify against \nwhat's in the shot database (ftrack / Shotgun)\n\nMake sure the frame size matches the show spec for client delivery. \nTurn on 'dataWindow' in Overlays and watch the four values to make\nsure they are correct and do not change throughout the\nsequence of frames as you play it back.\n\nLook for stretching pixels or gaps between the last pixel and the edge of the frame.\n\nLook for all the pixels to be there, no missing scanlines, no dropped pixels,\nno dropped frames, etc.  This can only be done using\nFull resolution and a 1:1 viewer aspect ratio!  Do not resample!!\n\nCan you see lightwrap that is leaking in from the edges of the frame?\n\nIn Nuke (or RV/Cezanne), set up a wipe between the scan and the comp,\nwipe between the two, do you see any shifting of pixels that shouldn't be there,\nand grade changes that shouldn't be there.\n\nIf there is added camera shake to a plate, make sure you can't see the\nedges of the plate coming inside show crop.\n\nRetime artefacts - Please check these frame by frame. \n\nLook for unnaturally sharp edges.\n\nWatch in loop n speed up.\n"}
addUserKnob {26 ""}
addUserKnob {20 endGroup_5 l endGroup n -1}
addUserKnob {20 customview l CustomView}
addUserKnob {6 en_cus_view l "<font size=5><b>___Enable Custom View___" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {6 difference l "<font color=#888888><b>_Difference" +STARTLINE}
difference true
addUserKnob {6 plate l "<font color=#888888><b>_Plate" +STARTLINE}
plate true
addUserKnob {6 difference_b l "<font color=#888888><b>_Difference B" +STARTLINE}
difference_b true
addUserKnob {6 difference_a l "<font color=#888888><b>_Difference A" +STARTLINE}
difference_a true
addUserKnob {6 gain_plus l "<font color=#888888><b>_Gain +" +STARTLINE}
gain_plus true
addUserKnob {6 gain_minus l "<font color=#888888><b>_Gain -" +STARTLINE}
gain_minus true
addUserKnob {6 noise1 l "<font color=#888888><b>_Noise" +STARTLINE}
noise1 true
addUserKnob {6 saturation_1 l "<font color=#888888><b>_Saturation" +STARTLINE}
saturation_1 true
addUserKnob {6 illegal_values l "<font color=#888888><b>_Illegal Values" +STARTLINE}
illegal_values true
addUserKnob {6 comp l "<font color=#888888><b>_Comp" +STARTLINE}
comp true
addUserKnob {26 ""}
addUserKnob {22 selectnone l "Select None" T "import nuke\n\nknobs = \['difference','plate','difference_b','difference_a','gain_plus','gain_minus','noise1','saturation_1','illegal_values','comp']\n\nfor knob in knobs:\n    nuke.thisNode()\[knob].setValue(False)\n" +STARTLINE}
addUserKnob {22 selectall l "Select All" -STARTLINE T "import nuke\n\nknobs = \['difference','plate','difference_b','difference_a','gain_plus','gain_minus','noise1','saturation_1','illegal_values','comp']\n\nfor knob in knobs:\n    nuke.thisNode()\[knob].setValue(True)\n"}
addUserKnob {26 ""}
addUserKnob {4 res l Res M {Full 0.75 0.5 0.25}}
addUserKnob {41 width l INVISIBLE +INVISIBLE T LayerContactSheet_CUSTOM_VIEW.width}
addUserKnob {41 height l INVISIBLE -STARTLINE +INVISIBLE T LayerContactSheet_CUSTOM_VIEW.height}
addUserKnob {41 rows l rows/columns T LayerContactSheet_CUSTOM_VIEW.rows}
addUserKnob {41 columns l "" -STARTLINE T LayerContactSheet_CUSTOM_VIEW.columns}
addUserKnob {41 roworder l "Row Order" T LayerContactSheet_CUSTOM_VIEW.roworder}
addUserKnob {41 colorder l "Column Order" T LayerContactSheet_CUSTOM_VIEW.colorder}
}
BackdropNode {
inputs 0
name BackdropNode12
tile_color 0x2c2c2cff
label "<center><font color=#FFFFFF>Custom View"
note_font "Bitstream Vera Sans Bold"
note_font_size 42
xpos 4634
ypos -956
bdwidth 1073
bdheight 2247
z_order -2411031
}
BackdropNode {
inputs 0
name BackdropNode1
tile_color 0x212121ff
label "I\nL\nL\nE\nG\nA\nL\n \nV\nA\nL\nU\nE\nS"
note_font "Bitstream Vera Sans Bold"
note_font_size 42
xpos 394
ypos -944
bdwidth 313
bdheight 1072
}
BackdropNode {
inputs 0
name BackdropNode10
tile_color 0x888888ff
label "QC checks"
note_font_size 42
xpos 5938
ypos -934
bdwidth 1104
bdheight 908
}
BackdropNode {
inputs 0
name BackdropNode11
tile_color 0x212121ff
label "D\nI\nF\nF\nE\nR\nE\nN\nC\nE"
note_font "Bitstream Vera Sans Bold"
note_font_size 42
xpos 4024
ypos -944
bdwidth 313
bdheight 1072
}
BackdropNode {
inputs 0
name BackdropNode2
tile_color 0x212121ff
label "C\nO\nM\nP"
note_font "Bitstream Vera Sans Bold"
note_font_size 42
xpos -46
ypos -944
bdwidth 313
bdheight 1072
}
BackdropNode {
inputs 0
name BackdropNode3
tile_color 0x212121ff
label "S\nA\nT\nU\nR\nA\nT\nI\nO\nN"
note_font "Bitstream Vera Sans Bold"
note_font_size 42
xpos 834
ypos -944
bdwidth 313
bdheight 1072
}
BackdropNode {
inputs 0
name BackdropNode4
tile_color 0x212121ff
label "N\nO\nI\nS\nE"
note_font "Bitstream Vera Sans Bold"
note_font_size 42
xpos 1274
ypos -944
bdwidth 313
bdheight 1072
}
BackdropNode {
inputs 0
name BackdropNode5
tile_color 0x212121ff
label "G\nA\nI\nN\n \n-"
note_font "Bitstream Vera Sans Bold"
note_font_size 42
xpos 1714
ypos -944
bdwidth 313
bdheight 1072
}
BackdropNode {
inputs 0
name BackdropNode6
tile_color 0x212121ff
label "G\nA\nI\nN\n \n+"
note_font "Bitstream Vera Sans Bold"
note_font_size 42
xpos 2154
ypos -944
bdwidth 313
bdheight 1072
}
BackdropNode {
inputs 0
name BackdropNode7
tile_color 0x212121ff
label "D\nI\nF\nF\nE\nR\nE\nN\nC\nE\n \nA"
note_font "Bitstream Vera Sans Bold"
note_font_size 42
xpos 2594
ypos -944
bdwidth 313
bdheight 1072
}
BackdropNode {
inputs 0
name BackdropNode8
tile_color 0x212121ff
label "D\nI\nF\nF\nE\nR\nE\nN\nC\nE\n \nB"
note_font "Bitstream Vera Sans Bold"
note_font_size 42
xpos 3034
ypos -944
bdwidth 313
bdheight 1072
}
BackdropNode {
inputs 0
name BackdropNode9
tile_color 0x212121ff
label "P\nL\nA\nT\nE"
note_font "Bitstream Vera Sans Bold"
note_font_size 42
xpos 3584
ypos -944
bdwidth 313
bdheight 1072
}
StickyNote {
inputs 0
name StickyNote2
label "Compare CG elements added to the plate to the things they replaced to. \n\nMake sure the focus on the cg elements makes sense.\n\nDoes the rack focus on the CG match the plate exactly, scrub through slowly, back and forth, looking for differences in the animation curve for the focus."
xpos 5880
ypos -610
}
StickyNote {
inputs 0
name StickyNote3
label "Check edges of keys -  If they're too smooth they won't look natural, if they're too noisy, they will draw attention to themselves.\n\nCompare edges to the original scan to make sure it retains as much hair and fine detail as it possibly can.\n\nCheck all roto, make sure it's not too sharp, not too defocused, \n\nCheck no background colour is coming through.\n\nLook for matte lines that are apparent where they aren't supposed to be, especially on parts of the frame where comp or CG hasn't been done.  The Noise view is helpful for this."
xpos 5925
ypos -516
}
StickyNote {
inputs 0
name StickyNote1
label "IMPORTANT TO NOTE!!!!\n\nGrain should only EVER be checked with the QC Tool set to full resolution and with your viewer set to 1:1 ratio!!  Any viewer sampling with alter the results and mask details the noise view is meant to highlight.\n\nSpill suppression many times will increase the apparent grain of a keyed element.\n\nCheck all your edges and keyed elements for this artefact\n\nLook for doubled up grain where the patterns move differently than one another.\n\nLook for static grain on DMP, backgrounds, clean-up patches, and elsewhere."
xpos 5944
ypos -745
}
StickyNote {
inputs 0
name StickyNote4
label "Verify that tracked in elements do not wiggle or drift from nearby features in the scan.\n\nDon't assume the matchmove camera is working, Verify that it is"
xpos 6046
ypos -333
}
StickyNote {
inputs 0
name StickyNote5
label "Make sure the frame range matches the delivery range.  Turn on the 'Frame Ranges' in Overlays to verify against what's in the shot database (ftrack / Shotgun)\n\nMake sure the frame size matches the show spec for client delivery.  Turn on 'dataWindow' in Overlays and watch the four values to make sure they are correct and do not change throughout the sequence of frames as you play it back.\n\nLook for stretching pixels or gaps between the last pixel and the edge of the frame.\n\nLook for all the pixels to be there, no missing scanlines, no dropped pixels, no dropped frames, etc.  This can only be done using Full resolution and a 1:1 viewer aspect ratio!  Do not resample!!\n\nCan you see lightwrap that is leaking in from the edges of the frame?\n\nIn Nuke (or RV/Cezanne), set up a wipe between the scan and the comp, wipe between the two, do you see any shifting of pixels that shouldn't be there, and grade changes that shouldn't be there.\n\nIf there is added camera shake to a plate, make sure you can't see the edges of the plate coming inside show crop.\n\nRetime artefacts - Please check these frame by frame. \n\nLook for unnaturally sharp edges.\n\nWatch in loop n speed up."
xpos 5890
ypos -245
}
StickyNote {
inputs 0
name StickyNote6
label "Negative blacks - Check for black values that are below zero, even black values close to zero are likely too low for approval.  Check that these values aren't caused by the viewer LUT by testing the plate input to both QC Tool inputs.\n\nCheck despilled elements against their original scans to make sure despilling hasn't effected the element too much (particularly skin tones)\n\nMake sure neutral grades aren't broken by any grading done in the comp compare the final comp colour space to the original scan. Make sure that the comp 'Write node' has the same settings as your 'Read node'. \n\nSwitch colour spaces while watching the shot, Log, sRGB, rec709, this will ensure the added elements will react the same as the original scan."
xpos 5897
ypos -863
}
Input {
inputs 0
name comp
label Comp
xpos 2050
ypos -1719
}
Dot {
name Dot50
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2084
ypos -1566
}
Dot {
name Dot29
xpos 2084
ypos -1446
}
set N2860f200 [stack 0]
Dot {
name Dot31
xpos 1754
ypos -1446
}
set N2860eb00 [stack 0]
Crop {
box {{width/2 x1048 1024} {height/2 x1048 576} {width x1048 2048} {height x1048 1046}}
reformat true
crop false
name top_right
xpos 1830
ypos -1329
}
push $N2860eb00
Crop {
box {{0 x1048 44.69870472} {height/2 x1048 13.37067938} {width/2 x1048 1027.301295} {height x1048 576}}
reformat true
crop false
name top_left
xpos 1940
ypos -1329
}
push $N2860eb00
Crop {
box {{width} 0 {width/2 x1048 1021.500593} {height/2 x1048 574.2026013}}
reformat true
crop false
name bottom_right
xpos 1610
ypos -1329
}
push $N2860eb00
Crop {
box {0 0 {width/2 x1026 2048} {height/2}}
reformat true
crop false
name bottom_left
xpos 1500
ypos -1329
}
push $N2860f200
Switch {
inputs 5
which {{Quarter_View.QuarterView}}
name Switch2
label "\[value which]"
xpos 2050
ypos -1167
}
set N2860c800 [stack 0]
Dot {
name Dot2
xpos 2084
ypos -846
}
set N2860c100 [stack 0]
Dot {
name Dot19
xpos 1974
ypos -846
}
set N285db900 [stack 0]
Dot {
name Dot16
xpos 1534
ypos -846
}
set N285db200 [stack 0]
Dot {
name Dot18
xpos 1094
ypos -846
}
set N285dab00 [stack 0]
Dot {
name Dot3
xpos 654
ypos -846
}
set N285da400 [stack 0]
Dot {
name Dot7
xpos 214
ypos -846
}
Text2 {
font_size_toolbar 50
font_width_toolbar 100
font_height_toolbar 100
message "\[metadata exr/displayWindow] display\n\[metadata exr/dataWindow] dataWin"
old_message {{48 44 48 44 52 52 52 55 44 51 48 57 53 32 100 105 115 112 108 97 121 10 48 44 48 44 52 52 52 55 44 51 48 57 53 32 100 97 116 97 87 105 110}
  }
old_expression_markers {{0 12 22 34}
  }
box {{input.format.x} {input.format.y} {"input.width - (input.width / 1.3)"} {"input.height - (input.height / 1.1)"}}
xjustify right
transforms {{0 2}
  }
font_size_values {{13 50 14 50 15 50 16 50 17 50 18 50 19 50 20 50 21 50 22 50 23 50 24 50 25 50 26 50 27 50 28 50 29 50 30 50 31 50 32 50 33 50 34 50 35 50 36 50 37 50 38 50 39 50 40 50 41 50 42 50 13 50 14 50 15 50 16 50 17 50 18 50 19 50 20 50 21 50 35 50 36 50 37 50 38 50 39 50 40 50 41 50 42 50 0 50 1 50 2 50 3 50 4 50 5 50 6 50 7 50 8 50 9 50 10 50 11 50 12 50 0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 11 40 12 40}
  }
cursor_position 70
font {{ DejaVu Sans Mono : Bold : dejavu/DejaVuSansMono-Bold.ttf : 0 }}
global_font_scale {{"Text10.size *.015"}}
font_size 50
scale {1 1}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{641.5 125.5}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 1440 1080 0 0 1 1 0 0 0 0}
  }
enable_shadows true
shadow_opacity 0.8
shadow_angle 298
shadow_distance 10
shadow_softness 2
name dataWindow1
xpos 180
ypos -393
disable {{"dataWinToggle == 0 ? 1 : 0"}}
}
Text {
output {rgba.red rgba.green rgba.blue mask.a}
message COMP
font /usr/share/fonts/dejavu/DejaVuSans-Bold.ttf
size {{textSize}}
xjustify center
yjustify top
Transform 1
box {0 0 {input.width} {"input.height  - (input.height/70)"}}
center {1078 568}
name Text10
xpos 180
ypos -303
disable {{"labelToggle == 0 ? 1 : 0" x1 1}}
}
set N285c7200 [stack 0]
push $N285c7200
Dilate {
channels mask
size 8
name Dilate2
xpos 70
ypos -303
}
Multiply {
inputs 1+1
channels mask
value 0
maskChannelMask mask.a
name Multiply3
xpos 70
ypos -207
}
push $N285c7200
Multiply {
inputs 1+1
value 0
maskChannelMask mask.a
name Multiply4
xpos 180
ypos -207
disable {{"labelToggle == 0 ? 1 : 0"}}
}
Text {
output {rgba.red rgba.green rgba.blue mask.a}
message "\[value \[topnode parent.input0].first] - \[value \[topnode parent.input0].last]"
font /usr/share/fonts/dejavu/DejaVuSans-Bold.ttf
size {{textSize}}
xjustify center
yjustify top
Transform 1
box {0 0 {input.width x1 2048 x9 1920} {input.height/20 x1 nan x9 nan}}
center {1078 568}
name Text6
xpos 180
ypos -135
disable {{"frameRanges == 0 ? 1 : 0"}}
}
set N285a7900 [stack 0]
push $N285a7900
Dilate {
channels mask
size 8
name Dilate7
xpos 70
ypos -135
}
Multiply {
inputs 1+1
channels mask
value 0
maskChannelMask mask.a
name Multiply13
xpos 70
ypos -39
}
push $N285a7900
Multiply {
inputs 1+1
value 0
maskChannelMask mask.a
name Multiply14
xpos 180
ypos -39
disable {{"frameRanges == 0 ? 1 : 0"}}
}
Dot {
name Dot44
xpos 214
ypos 522
}
set N285a4100 [stack 0]
push $N285da400
Expression {
expr0 "isnan(r) || isinf(r) || isnan(g) || isinf(g) || isnan(b) || isinf(b) ? 0:r"
expr1 "isnan(r) || isinf(r) || isnan(g) || isinf(g) || isnan(b) || isinf(b) ? 1:g"
expr2 "isnan(r) || isinf(r) || isnan(g) || isinf(g) || isnan(b) || isinf(b) ? 0:b"
channel3 none
name nan_inf
xpos 620
ypos -753
}
Expression {
expr0 "r < minLimit || g < minLimit || b < minLimit ? 0:r"
expr1 "r < minLimit || g < minLimit || b < minLimit ? 1:g"
expr2 "r < minLimit || g < minLimit || b < minLimit ? 1:b"
channel3 none
name negative
xpos 620
ypos -681
addUserKnob {20 User}
addUserKnob {7 minLimit R -1 1}
minLimit {{minVal}}
}
Expression {
expr0 "r > maxLimit || g > maxLimit || b > maxLimit ? 1:r"
expr1 "r > maxLimit || g > maxLimit || b > maxLimit ? 0:g"
expr2 "r > maxLimit || g > maxLimit || b > maxLimit ? 0:b"
channel3 none
name high
xpos 620
ypos -633
addUserKnob {20 User}
addUserKnob {7 maxLimit l "" +STARTLINE R -1 100}
maxLimit {{maxVal}}
}
Text {
output {rgba.red rgba.green rgba.blue mask.a}
message "ILLEGAL VALUES"
font /usr/share/fonts/dejavu/DejaVuSans-Bold.ttf
size {{textSize}}
xjustify center
yjustify top
Transform 1
box {0 0 {input.width} {"input.height  - (input.height/70)"}}
center {1078 568}
name Text9
xpos 620
ypos -303
disable {{"labelToggle == 0 ? 1 : 0"}}
}
set N2877e400 [stack 0]
push $N2877e400
Dilate {
channels mask
size 8
name Dilate10
xpos 510
ypos -303
}
Multiply {
inputs 1+1
channels mask
value 0
maskChannelMask mask.a
name Multiply19
xpos 510
ypos -207
}
push $N2877e400
Multiply {
inputs 1+1
value 0
maskChannelMask mask.a
name Multiply20
xpos 620
ypos -207
disable {{"labelToggle == 0 ? 1 : 0"}}
}
Dot {
name Dot43
xpos 654
ypos 474
}
set N2874eb00 [stack 0]
push $N285dab00
Saturation {
channels all
saturation {{saturation1}}
name Saturation1
xpos 1060
ypos -663
}
Text {
output {rgba.red rgba.green rgba.blue mask.a}
message SATURATION
font /usr/share/fonts/dejavu/DejaVuSans-Bold.ttf
size {{textSize}}
xjustify center
yjustify top
Transform 1
box {0 0 {input.width} {"input.height  - (input.height/70)"}}
center {1078 568}
name Text5
xpos 1060
ypos -303
disable {{"labelToggle == 0 ? 1 : 0"}}
}
set N2874dd00 [stack 0]
push $N2874dd00
Dilate {
channels mask
size 8
name Dilate1
xpos 950
ypos -303
}
Multiply {
inputs 1+1
channels mask
value 0
maskChannelMask mask.a
name Multiply1
xpos 950
ypos -207
}
push $N2874dd00
Multiply {
inputs 1+1
value 0
maskChannelMask mask.a
name Multiply2
xpos 1060
ypos -207
disable {{"labelToggle == 0 ? 1 : 0"}}
}
Dot {
name Dot42
xpos 1094
ypos 426
}
set N28722400 [stack 0]
push $N285db200
Dot {
name Dot17
xpos 1534
ypos -798
}
set N28721d00 [stack 0]
Dot {
name Dot1
xpos 1424
ypos -798
}
Dot {
name Dot15
xpos 1424
ypos -678
}
push $N28721d00
Blur {
size 3
name Blur1
xpos 1500
ypos -759
}
Merge2 {
inputs 2
operation minus
also_merge all
name Merge1
xpos 1500
ypos -681
}
Grade {
channels all
multiply 100
white_clamp true
name Grade2
xpos 1500
ypos -615
}
Text {
output {rgba.red rgba.green rgba.blue mask.a}
message NOISE
font /usr/share/fonts/dejavu/DejaVuSans-Bold.ttf
size {{textSize}}
xjustify center
yjustify top
Transform 1
box {0 0 {input.width} {"input.height  - (input.height/70)"}}
center {1078 568}
name Text1
xpos 1500
ypos -303
disable {{"labelToggle == 0 ? 1 : 0"}}
}
set N286fc100 [stack 0]
push $N286fc100
Dilate {
channels mask
size 8
name Dilate3
xpos 1390
ypos -303
}
Multiply {
inputs 1+1
channels mask
value 0
maskChannelMask mask.a
name Multiply5
xpos 1390
ypos -207
}
push $N286fc100
Multiply {
inputs 1+1
value 0
maskChannelMask mask.a
name Multiply6
xpos 1500
ypos -207
disable {{"labelToggle == 0 ? 1 : 0"}}
}
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
message "RESOLUTION SHOULD BE SET TO FULL TO CHECK NOISE"
old_message {{82 69 83 79 76 85 84 73 79 78 32 83 72 79 85 76 68 32 66 69 32 83 69 84 32 84 79 32 70 85 76 76 32 84 79 32 67 72 69 67 75 32 78 79 73 83 69}
  }
box {417.5 1082.5 3678.5 1202.5}
xjustify center
transforms {{0 2}
  }
cursor_position 47
font {{ Utopia : Bold : UtopiaBold.pfa : 0 }}
global_font_scale 1.19
center {2048 1152}
cursor_initialised true
initial_cursor_position {{2048 1202.5}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 2048 1152 0 0 1 1 0 0 0 0}
  }
color {1 0 0 1}
enable_background true
background_border_x 9.45
background_border_y 5.55
name warning_text
tile_color 0xff0000ff
xpos 1500
ypos -81
disable true
}
Dot {
name Dot41
xpos 1534
ypos 378
}
set N286ca400 [stack 0]
push $N285db900
Grade {
channels all
white {{"1 / Grade5.white"}}
black_clamp false
name Grade6
xpos 1940
ypos -639
}
Grade {
name Grade1
xpos 1940
ypos -561
}
Text {
output {rgba.red rgba.green rgba.blue mask.a}
message "GAIN -"
font /usr/share/fonts/dejavu/DejaVuSans-Bold.ttf
size {{textSize}}
xjustify center
yjustify top
Transform 1
box {0 0 {input.width} {"input.height  - (input.height/70)"}}
center {1078 568}
name Text2
xpos 1940
ypos -303
disable {{"labelToggle == 0 ? 1 : 0"}}
}
set N286b2b00 [stack 0]
push $N286b2b00
Dilate {
channels mask
size 8
name Dilate4
xpos 1830
ypos -303
}
Multiply {
inputs 1+1
channels mask
value 0
maskChannelMask mask.a
name Multiply7
xpos 1830
ypos -207
}
push $N286b2b00
Multiply {
inputs 1+1
value 0
maskChannelMask mask.a
name Multiply8
xpos 1940
ypos -207
disable {{"labelToggle == 0 ? 1 : 0"}}
}
NoOp {
name NoOp2
xpos 1940
ypos 15
addUserKnob {20 User}
addUserKnob {6 fullResOnly l "" +STARTLINE +STARTLINE}
fullResOnly {{fullResOnly+1 x1001 1}}
}
Dot {
name Dot40
xpos 1974
ypos 330
}
set N2888ab00 [stack 0]
push $N2860c100
Dot {
name Dot20
xpos 2414
ypos -846
}
set N2888a400 [stack 0]
Grade {
channels all
white {{new_gain}}
black_clamp false
name Grade5
xpos 2380
ypos -639
}
Text {
output {rgba.red rgba.green rgba.blue mask.a}
message "GAIN +"
font /usr/share/fonts/dejavu/DejaVuSans-Bold.ttf
size {{textSize}}
xjustify center
yjustify top
Transform 1
box {0 0 {input.width} {"input.height  - (input.height/70)"}}
center {1078 568}
name Text3
xpos 2380
ypos -303
disable {{"labelToggle == 0 ? 1 : 0"}}
}
set N28872400 [stack 0]
push $N28872400
Dilate {
channels mask
size 8
name Dilate5
xpos 2270
ypos -303
}
Multiply {
inputs 1+1
channels mask
value 0
maskChannelMask mask.a
name Multiply9
xpos 2270
ypos -207
}
push $N28872400
Multiply {
inputs 1+1
value 0
maskChannelMask mask.a
name Multiply10
xpos 2380
ypos -207
disable {{"labelToggle == 0 ? 1 : 0"}}
}
Dot {
name Dot39
xpos 2414
ypos 282
}
set N2885ab00 [stack 0]
push $N2888a400
Dot {
name Dot21
xpos 2854
ypos -846
}
set N2885a400 [stack 0]
Dot {
name Dot24
xpos 2854
ypos -726
}
set N28859d00 [stack 0]
Expression {
expr0 (x/width)*size*pixel_aspect
expr1 (y/height)*size
expr2 0
name Expression1
xpos 2820
ypos -657
addUserKnob {20 User}
addUserKnob {3 size}
size 14
}
Expression {
temp_name0 lr
temp_expr0 "abs(fmod(r, size)) > 0.5 ? 1 : 0"
temp_name1 lg
temp_expr1 "abs(fmod(g, size)) > 0.5 ? 1 : 0"
temp_name3 checker
temp_expr3 "lr ^^ lg"
channel0 alpha
expr0 checker
channel1 none
channel2 none
channel3 none
name checker
xpos 2820
ypos -609
addUserKnob {20 User}
addUserKnob {7 size}
size 1
}
push $N28859d00
Dot {
name Dot25
xpos 2744
ypos -726
}
Dot {
name Dot23
xpos 2744
ypos -534
}
Input {
inputs 0
name plate
xpos 3810
ypos -1689
number 1
}
Dot {
name Dot54
xpos 3844
ypos -1446
}
set N28833200 [stack 0]
Dot {
name Dot55
xpos 3514
ypos -1446
}
set N28832b00 [stack 0]
Crop {
box {{width/2 x1048 1024} {height/2 x1048 576} {width x1048 2048} {height x1048 1046}}
reformat true
crop false
name top_right1
xpos 3590
ypos -1329
}
push $N28832b00
Crop {
box {{0 x1048 44.69870472} {height/2 x1048 13.37067938} {width/2 x1048 1027.301295} {height x1048 576}}
reformat true
crop false
name top_left1
xpos 3700
ypos -1329
}
push $N28832b00
Crop {
box {{width} 0 {width/2 x1048 1021.500593} {height/2 x1048 574.2026013}}
reformat true
crop false
name bottom_right1
xpos 3370
ypos -1329
}
push $N28832b00
Crop {
box {0 0 {width/2 x1026 2048} {height/2}}
reformat true
crop false
name bottom_left1
xpos 3260
ypos -1329
}
push $N28833200
Switch {
inputs 5
which {{Quarter_View.QuarterView}}
name Switch5
label "\[value which]"
xpos 3810
ypos -1167
}
Dot {
name Dot27
xpos 3844
ypos -534
}
set N28830100 [stack 0]
Dot {
name Dot26
xpos 3624
ypos -534
}
set N28817900 [stack 0]
Dot {
name Dot6
xpos 3404
ypos -534
}
set N28817200 [stack 0]
Keymix {
inputs 3
bbox A
name Keymix2
xpos 2820
ypos -543
}
Text {
output {rgba.red rgba.green rgba.blue mask.a}
message "DIFFERENCE A"
font /usr/share/fonts/dejavu/DejaVuSans-Bold.ttf
size {{textSize}}
xjustify center
yjustify top
Transform 1
box {0 0 {input.width} {"input.height  - (input.height/70)"}}
center {1078 568}
name Text4
xpos 2820
ypos -303
disable {{"labelToggle == 0 ? 1 : 0"}}
}
set N28816400 [stack 0]
push $N28816400
Dilate {
channels mask
size 8
name Dilate6
xpos 2710
ypos -303
}
Multiply {
inputs 1+1
channels mask
value 0
maskChannelMask mask.a
name Multiply11
xpos 2710
ypos -207
}
push $N28816400
Multiply {
inputs 1+1
value 0
maskChannelMask mask.a
name Multiply12
xpos 2820
ypos -207
disable {{"labelToggle == 0 ? 1 : 0"}}
}
Dot {
name Dot38
xpos 2854
ypos 234
}
set N287eab00 [stack 0]
push $N28817900
push $N2885a400
Dot {
name Dot22
xpos 3294
ypos -846
}
set N287ea400 [stack 0]
Dot {
name Dot4
xpos 3514
ypos -846
}
set N287e9d00 [stack 0]
Difference {
inputs 2
gain 50
name Difference1
xpos 3480
ypos -423
}
push $N287ea400
Expression {
expr0 (x/width)*size*pixel_aspect
expr1 (y/height)*size
expr2 0
name Expression2
xpos 3260
ypos -657
addUserKnob {20 User}
addUserKnob {3 size}
size 66
}
Expression {
temp_name0 lr
temp_expr0 "abs(fmod(r, size)) > 0.5 ? 1 : 0"
temp_name1 lg
temp_expr1 "abs(fmod(g, size)) > 0.5 ? 1 : 0"
temp_name3 checker
temp_expr3 "lr ^^ lg"
channel0 rgb
expr0 checker
channel1 none
channel2 none
channel3 none
name checker1
xpos 3260
ypos -609
addUserKnob {20 User}
addUserKnob {7 size}
size 1
}
push $N28817200
Keymix {
inputs 3
bbox A
name Keymix1
xpos 3260
ypos -423
}
Text {
output {rgba.red rgba.green rgba.blue mask.a}
message "DIFFERENCE B"
font /usr/share/fonts/dejavu/DejaVuSans-Bold.ttf
size {{textSize}}
xjustify center
yjustify top
Transform 1
box {0 0 {input.width} {"input.height  - (input.height/70)"}}
center {1078 568}
name Text7
xpos 3260
ypos -303
disable {{"labelToggle == 0 ? 1 : 0"}}
}
set N287c7900 [stack 0]
push $N287c7900
Dilate {
channels mask
size 8
name Dilate8
xpos 3150
ypos -303
}
Multiply {
inputs 1+1
channels mask
value 0
maskChannelMask mask.a
name Multiply15
xpos 3150
ypos -207
}
push $N287c7900
Multiply {
inputs 1+1
value 0
maskChannelMask mask.a
name Multiply16
xpos 3260
ypos -207
disable {{"labelToggle == 0 ? 1 : 0"}}
}
Dot {
name Dot37
xpos 3294
ypos 186
}
set N287c4100 [stack 0]
push $N28830100
Text {
output {rgba.red rgba.green rgba.blue mask.a}
message PLATE
font /usr/share/fonts/dejavu/DejaVuSans-Bold.ttf
size {{textSize}}
xjustify center
yjustify top
Transform 1
box {0 0 {input.width} {"input.height  - (input.height/70)"}}
center {1078 568}
name Text8
xpos 3810
ypos -303
disable {{"labelToggle == 0 ? 1 : 0"}}
}
set N287a7900 [stack 0]
push $N287a7900
Dilate {
channels mask
size 8
name Dilate9
xpos 3700
ypos -303
}
Multiply {
inputs 1+1
channels mask
value 0
maskChannelMask mask.a
name Multiply17
xpos 3700
ypos -207
}
push $N287a7900
Multiply {
inputs 1+1
value 0
maskChannelMask mask.a
name Multiply18
xpos 3810
ypos -207
disable {{"labelToggle == 0 ? 1 : 0"}}
}
Text {
output {rgba.red rgba.green rgba.blue mask.a}
message "\[value \[topnode parent.input0].first] - \[value \[topnode parent.input0].last]"
font /usr/share/fonts/dejavu/DejaVuSans-Bold.ttf
size {{textSize}}
xjustify center
yjustify top
Transform 1
box {0 10 {input.width} {input.height/20}}
center {1078 568}
name Text11
xpos 3810
ypos -87
disable {{"frameRanges == 0 ? 1 : 0"}}
}
set N287a4100 [stack 0]
push $N287a4100
Dilate {
channels mask
size 8
name Dilate11
xpos 3700
ypos -87
}
Multiply {
inputs 1+1
channels mask
value 0
maskChannelMask mask.a
name Multiply21
xpos 3700
ypos 9
}
push $N287a4100
Multiply {
inputs 1+1
value 0
maskChannelMask mask.a
name Multiply22
xpos 3810
ypos 9
disable {{"frameRanges == 0 ? 1 : 0"}}
}
Dot {
name Dot36
xpos 3844
ypos 138
}
set N27ea4800 [stack 0]
push $N287e9d00
Dot {
name Dot34
xpos 4284
ypos -846
}
set N27ea4100 [stack 0]
push $N28830100
Merge2 {
inputs 2
operation difference
name Merge2
xpos 4250
ypos -537
}
Dot {
name Dot47
xpos 4284
ypos -342
}
Text {
output {rgba.red rgba.green rgba.blue mask.a}
message DIFFERENCE
font /usr/share/fonts/dejavu/DejaVuSans-Bold.ttf
size {{textSize}}
xjustify center
yjustify top
Transform 1
box {0 0 {input.width} {"input.height  - (input.height/70)"}}
center {1078 568}
name Text12
xpos 4250
ypos -279
disable {{"labelToggle == 0 ? 1 : 0"}}
}
set N27e7eb00 [stack 0]
push $N27e7eb00
Dilate {
channels mask
size 8
name Dilate12
xpos 4140
ypos -279
}
Multiply {
inputs 1+1
channels mask
value 0
maskChannelMask mask.a
name Multiply23
xpos 4140
ypos -183
}
push $N27e7eb00
Multiply {
inputs 1+1
value 0
maskChannelMask mask.a
name Multiply24
xpos 4250
ypos -183
disable {{"labelToggle == 0 ? 1 : 0"}}
}
Dot {
name Dot45
xpos 4284
ypos 90
}
set N27e53200 [stack 0]
push $N27ea4100
Crop {
box {{input.format.x} {input.format.y} {input.format.r} {input.format.t}}
name Crop_input1
xpos 5130
ypos -849
}
Remove {
name Remove1
xpos 5130
ypos -615
}
add_layer {DIFFERENCE DIFFERENCE.red DIFFERENCE.green DIFFERENCE.blue DIFFERENCE.alpha}
ShuffleCopy {
inputs 2
red red
green green
blue blue
out DIFFERENCE
name ShuffleCopy_DIFFERENCE
xpos 5130
ypos 87
disable {{"difference == 0"}}
}
add_layer {PLATE PLATE.red PLATE.green PLATE.blue PLATE.alpha}
ShuffleCopy {
inputs 2
red red
green green
blue blue
out PLATE
name ShuffleCopy_PLATE
xpos 5130
ypos 135
disable {{"plate == 0"}}
}
add_layer {DIFFERENCE_B DIFFERENCE_B.red DIFFERENCE_B.green DIFFERENCE_B.blue DIFFERENCE_B.alpha}
ShuffleCopy {
inputs 2
red red
green green
blue blue
out DIFFERENCE_B
name ShuffleCopy_DIFFERENCE_B
xpos 5130
ypos 183
disable {{"difference_b == 0"}}
}
add_layer {DIFFERENCE_A DIFFERENCE_A.red DIFFERENCE_A.green DIFFERENCE_A.blue DIFFERENCE_A.alpha}
ShuffleCopy {
inputs 2
red red
green green
blue blue
out DIFFERENCE_A
name ShuffleCopy_DIFFERENCE_A
xpos 5130
ypos 231
disable {{"difference_a == 0"}}
}
add_layer {GAIN_PLUS GAIN_PLUS.red GAIN_PLUS.green GAIN_PLUS.blue GAIN_PLUS.alpha}
ShuffleCopy {
inputs 2
red red
green green
blue blue
out GAIN_PLUS
name ShuffleCopy_GAIN_PLUS
xpos 5130
ypos 279
disable {{"gain_plus == 0"}}
}
add_layer {GAIN_MINUS GAIN_MINUS.red GAIN_MINUS.green GAIN_MINUS.blue GAIN_MINUS.alpha}
ShuffleCopy {
inputs 2
red red
green green
blue blue
out GAIN_MINUS
name ShuffleCopy_GAIN_MINUS
xpos 5130
ypos 327
disable {{"gain_minus == 0"}}
}
add_layer {NOISE NOISE.red NOISE.green NOISE.blue NOISE.alpha}
ShuffleCopy {
inputs 2
red red
green green
blue blue
out NOISE
name ShuffleCopy_NOISE
xpos 5130
ypos 375
disable {{"noise1 == 0"}}
}
add_layer {SATURATION SATURATION.red SATURATION.green SATURATION.blue SATURATION.alpha}
ShuffleCopy {
inputs 2
red red
green green
blue blue
out SATURATION
name ShuffleCopy_SATURATION
xpos 5130
ypos 423
disable {{"saturation_1 == 0"}}
}
add_layer {ILLEGAL_VALUES ILLEGAL_VALUES.red ILLEGAL_VALUES.green ILLEGAL_VALUES.blue ILLEGAL_VALUES.alpha}
ShuffleCopy {
inputs 2
red red
green green
blue blue
out ILLEGAL_VALUES
name ShuffleCopy_ILLEGAL_VALUES
xpos 5130
ypos 471
disable {{"illegal_values == 0"}}
}
add_layer {COMP COMP.red COMP.green COMP.blue COMP.alpha}
ShuffleCopy {
inputs 2
red red
green green
blue blue
out COMP
name ShuffleCopy_COMP
xpos 5130
ypos 519
disable {{"comp == 0"}}
}
LayerContactSheet {
width {{"input.width * \[value this.columns]"}}
height {{"input.height * \[value this.rows]"}}
autodims false
name LayerContactSheet_CUSTOM_VIEW
xpos 5130
ypos 639
}
Dot {
name Dot30
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 5164
ypos 762
}
set N27e24f00 [stack 0]
Dot {
name Dot51
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 5274
ypos 762
}
set N27e24800 [stack 0]
Dot {
name Dot52
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 5384
ypos 762
}
set N27e24100 [stack 0]
Dot {
name Dot53
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 5494
ypos 762
}
Reformat {
type scale
scale 0.25
name Reformat6
label "\[value scale]"
xpos 5460
ypos 873
}
push $N27e24100
Reformat {
type scale
scale 0.5
name Reformat5
label "\[value scale]"
xpos 5350
ypos 873
}
push $N27e24800
Reformat {
type scale
scale 0.75
name Reformat1
label "\[value scale]"
xpos 5240
ypos 873
}
push $N27e24f00
Switch {
inputs 4
which {{res}}
name Switch4
label "\[value which]"
xpos 5130
ypos 1017
}
Dot {
name Dot46
xpos 5164
ypos 2658
}
push $N27e53200
Dot {
name Dot49
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 4284
ypos 786
}
set N27df0f00 [stack 0]
push $N286ca400
Dot {
name Dot10
xpos 1534
ypos 786
}
set N27df0800 [stack 0]
push $N28722400
Dot {
name Dot9
xpos 1094
ypos 786
}
set N27df0100 [stack 0]
push $N2874eb00
Dot {
name Dot8
xpos 654
ypos 786
}
set N27dcb900 [stack 0]
push $N2885ab00
Dot {
name Dot28
xpos 2414
ypos 786
}
set N27dcb200 [stack 0]
push $N285a4100
Dot {
name Dot5
xpos 214
ypos 786
}
set N27dcab00 [stack 0]
push $N2888ab00
Dot {
name Dot11
xpos 1974
ypos 786
}
set N27dca400 [stack 0]
push $N287c4100
Dot {
name Dot13
xpos 3294
ypos 786
}
set N27dc9d00 [stack 0]
push $N27ea4800
Dot {
name Dot12
xpos 3844
ypos 786
}
set N27dc9600 [stack 0]
push $N287eab00
Dot {
name Dot14
xpos 2854
ypos 786
}
set N27dc8f00 [stack 0]
ContactSheet {
inputs 10
width {{"input.width * \[value this.columns]"}}
height {{"input.height * \[value this.rows]"}}
columns 3
roworder TopBottom
startframe 1
endframe 1
name ContactSheet1
xpos 4250
ypos 1431
}
push $N27df0f00
push $N27df0800
push $N27df0100
push $N27dcb900
push $N27dca400
push $N27dcb200
push $N27dc9d00
push $N27dc8f00
push $N27dc9600
push $N27dcab00
Switch {
inputs 11
which {{QCMenu1.QCView}}
name Switch1
label "\[value which]"
xpos 1280
ypos 1425
}
Dot {
name Dot48
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 1314
ypos 1554
}
set N27baf900 [stack 0]
Dot {
name Dot35
xpos 544
ypos 1554
}
set N27baf200 [stack 0]
Crop {
box {{width/2} 0 {width} {height/2}}
name Crop4
xpos 730
ypos 1623
}
Mirror2 {
flip true
flop true
name Mirror2_4
xpos 730
ypos 1647
}
Transform {
translate {{width/2} {-height/2}}
center {1024 778}
name Transform4
xpos 730
ypos 1671
}
push $N27baf200
Crop {
box {0 0 {width/2} {height/2}}
name Crop3
xpos 620
ypos 1623
}
Mirror2 {
flip true
flop true
name Mirror2_3
xpos 620
ypos 1647
}
Transform {
translate {{-width/2} {-height/2}}
center {1600 900}
name Transform5
xpos 620
ypos 1671
}
push 0
push $N27baf200
Crop {
box {0 {height/2} {width/2} {height}}
name Crop1
xpos 290
ypos 1623
}
Mirror2 {
flip true
flop true
name Mirror2_1
xpos 290
ypos 1647
}
Transform {
translate {{-width/2} {height/2}}
center {1024 778}
name Transform2
xpos 290
ypos 1671
}
push $N27baf200
Crop {
box {{width/2} {height/2} {width} {height}}
name Crop2
xpos 400
ypos 1623
}
Mirror2 {
flip true
flop true
name Mirror2_2
xpos 400
ypos 1647
}
Transform {
translate {{width/2} {height/2}}
center {1024 778}
name Transform1
xpos 400
ypos 1671
}
Merge2 {
inputs 4+1
name Merge8
xpos 510
ypos 1815
}
push $N27baf900
Switch {
inputs 2
which {{Flip}}
name flipQuad
label "\[value which]"
xpos 1280
ypos 1809
}
Dot {
name Dot32
xpos 1314
ypos 2298
}
set N27b7c800 [stack 0]
Dot {
name Dot33
xpos 1094
ypos 2298
}
set N27b7c100 [stack 0]
Reformat {
type scale
scale 0.25
name Reformat4
xpos 1170
ypos 2463
}
push $N27b7c100
Reformat {
type scale
scale 0.5
name Reformat3
xpos 1060
ypos 2463
}
push $N27b7c100
Reformat {
type scale
scale 0.75
name Reformat2
xpos 950
ypos 2463
}
push $N27b7c800
Switch {
inputs 4
which {{Reso.Resolution}}
name Switch3
label "\[value which]"
xpos 1280
ypos 2529
}
set N27b4a400 [stack 0]
Switch {
inputs 2
which {{en_cus_view}}
name Switch_CUS_VIEW
label "\[value which]"
xpos 1280
ypos 2649
}
Output {
name Output1
xpos 1280
ypos 3423
}
StickyNote {
inputs 0
name StickyNote7
label "#TODO make Text box dynamic"
note_font_size 21
xpos -372
ypos -157
}
push $N27b4a400
NoOp {
name Reso
knobChanged validation()
xpos 1500
ypos 2535
addUserKnob {20 User}
addUserKnob {4 Resolution M {Full 0.75 0.5 0.25 "" "" "" "" "" "" ""}}
}
push $N2860c800
NoOp {
name Quarter_View
xpos 1830
ypos -1161
addUserKnob {20 User}
addUserKnob {4 QuarterView l "Quarter View" M {"Full Screen" "Bottom Left" "Bottom Right" "Top Left" "Top Right" ""}}
}
NoOp {
inputs 0
name QCMenu1
knobChanged validation()
xpos 950
ypos 1431
addUserKnob {20 QC t "\n"}
addUserKnob {22 script T "print 'test inside'" +STARTLINE}
addUserKnob {4 QCView l "QC View" M {Comp Plate "Difference A" "Difference B" "Gain +" "Gain -" "Illegal Values" Saturation Noise Difference "All Views" "" "" "" ""}}
QCView "All Views"
}
end_group
Dot {
name Dot129
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 12025
ypos 28120
}
StickyNote {
inputs 0
name StickyNote57
label "<<Make sure set to \"In: ACEScg  Out: Neutral_grade\""
selected true
xpos 8582
ypos 11856
}
push $cut_paste_input
Grade {
name Grade8
selected true
xpos 6790
ypos 10106
}
push $N32be5600
RotoPaint {
cliptype none
replace true
curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x450e0000 x44c5c000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Rectangle4 512 bezier
     {{cc
       {f 8192}
       {px x4481c000
        {0 xc362aaa8}
        {xc622d000 x44d20000}
        {x43200000 0}
        {xc3200000 0}
        {xc61b5000 x44d20000}
        {0 xc362aaa8}
        {0 x4362aaa8}
        {xc61b5000 x447a0000}
        {xc3200000 0}
        {x43200000 0}
        {xc622d000 x447a0000}
        {0 x4362aaa8}}}
      {cc
       {f 8192}
       {p
        {{{x4481c000 0}}
      {{x4481c000 xc362aaa8}}}
        {{{x4481c000 0}}
      {{x4481c000 0}}}
        {{{x4481c000 x43200000}}
      {{x4481c000 0}}}
        {{{x4481c000 xc3200000}}
      {{x4481c000 0}}}
        {{{x4481c000 0}}
      {{x4481c000 0}}}
        {{{x4481c000 0}}
      {{x4481c000 xc362aaa8}}}
        {{{x4481c000 0}}
      {{x4481c000 x4362aaa8}}}
        {{{x4481c000 0}}
      {{x4481c000 0}}}
        {{{x4481c000 xc3200000}}
      {{x4481c000 0}}}
        {{{x4481c000 x43200000}}
      {{x4481c000 0}}}
        {{{x4481c000 0}}
      {{x4481c000 0}}}
        {{{x4481c000 0}}
      {{x4481c000 x4362aaa8}}}}}}
     {tx x4481c000 xc61f1000 x44a78000}
     {a osw x41200000 osf 0 str 1 spx x450e0000 spy x44c5c000 sb 1 ltn x4481c000 ltm x4481c000 tt x41000000}}
    {curvegroup Rectangle3 512 bezier
     {{cc
       {f 8192}
       {px x4481c000
        {0 xc3995554}
        {xc5728000 x44af0000}
        {x435c0000 0}
        {xc35c0000 0}
        {xc5494000 x44af0000}
        {0 xc3995554}
        {0 x43995554}
        {xc5494000 x43f00000}
        {xc35c0000 0}
        {x435c0000 0}
        {xc5728000 x43f00000}
        {0 x43995554}}}
      {cc
       {f 8192}
       {p
        {{{x4481c000 0}}
      {{x4481c000 xc3995554}}}
        {{{x4481c000 0}}
      {{x4481c000 0}}}
        {{{x4481c000 x435c0000}}
      {{x4481c000 0}}}
        {{{x4481c000 xc35c0000}}
      {{x4481c000 0}}}
        {{{x4481c000 0}}
      {{x4481c000 0}}}
        {{{x4481c000 0}}
      {{x4481c000 xc3995554}}}
        {{{x4481c000 0}}
      {{x4481c000 x43995554}}}
        {{{x4481c000 0}}
      {{x4481c000 0}}}
        {{{x4481c000 xc35c0000}}
      {{x4481c000 0}}}
        {{{x4481c000 x435c0000}}
      {{x4481c000 0}}}
        {{{x4481c000 0}}
      {{x4481c000 0}}}
        {{{x4481c000 0}}
      {{x4481c000 x43995554}}}}}}
     {tx x4481c000 xc55de000 x446b0000}
     {a osw x41200000 osf 0 str 1 spx x450e0000 spy x44c5c000 sb 1 ltn x4481c000 ltm x4481c000 tt x41000000}}
    {curvegroup Rectangle2 512 bezier
     {{cc
       {f 8192}
       {px x4481c000
        {0 xc3555550}
        {xc5674000 x457f0000}
        {x432d5550 0}
        {xc32d5550 0}
        {xc546c000 x457f0000}
        {0 xc3555550}
        {0 x43555550}
        {xc546c000 x45570000}
        {xc32d5550 0}
        {x432d5550 0}
        {xc5674000 x45570000}
        {0 x43555550}}}
      {cc
       {f 8192}
       {p
        {{{x4481c000 0}}
      {{x4481c000 xc3555550}}}
        {{{x4481c000 0}}
      {{x4481c000 0}}}
        {{{x4481c000 x432d5550}}
      {{x4481c000 0}}}
        {{{x4481c000 xc32d5550}}
      {{x4481c000 0}}}
        {{{x4481c000 0}}
      {{x4481c000 0}}}
        {{{x4481c000 0}}
      {{x4481c000 xc3555550}}}
        {{{x4481c000 0}}
      {{x4481c000 x43555550}}}
        {{{x4481c000 0}}
      {{x4481c000 0}}}
        {{{x4481c000 xc32d5550}}
      {{x4481c000 0}}}
        {{{x4481c000 x432d5550}}
      {{x4481c000 0}}}
        {{{x4481c000 0}}
      {{x4481c000 0}}}
        {{{x4481c000 0}}
      {{x4481c000 x43555550}}}}}}
     {tx x4481c000 xc5570000 x456b0000}
     {a osw x41200000 osf 0 str 1 spx x450e0000 spy x44c5c000 sb 1 ltn x4481c000 ltm x4481c000 tt x41000000}}
    {curvegroup Rectangle1 512 bezier
     {{cc
       {f 8192}
       {px x4481c000
        {xc216cc00 xc35f8270}
        {xc621f1b6 x4566f83b}
        {x444f8000 xc30c0000}
        {xc312aac0 0}
        {xc61b11b6 x4566f83b}
        {0 xc362aab0}
        {xc3375200 xc3054f50}
        {xc61b11b6 x453c783b}
        {x41fffe00 xc22fffc0}
        {x43dc0000 xc2c80000}
        {xc621f1b6 x453c783b}
        {x4248ee00 x435d07d0}}}
      {cc
       {f 8192}
       {px x4481c000
        {xc216cc00 xc35f8270}
        {0 0}
        {x444f8000 xc30c0000}
        {xc312aac0 0}
        {0 0}
        {0 xc362aab0}
        {xc3375200 xc3054f50}
        {0 0}
        {x41fffe00 xc22fffc0}
        {x43dc0000 xc2c80000}
        {0 0}
        {x4248ee00 x435d07d0}}}}
     {tx x4481c000 xc64ad000 x45494000}
     {a osw x41200000 osf 0 str 1 spx x450e0000 spy x44c5c000 sb 1 ltn x4481c000 ltm x4481c000 tt x41000000}}}}}}
toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 tt 8 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush opc 0.1 str 1 ssx 1 ssy 1 sf 1 sb 1 tt 17 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
toolbar_brush_hardness 0.200000003
toolbar_source_transform_scale {1 1}
toolbar_source_transform_center {2272 1582}
colorOverlay {0 0 0 0}
lifetime_type "all frames"
lifetime_start 1038
lifetime_end 1038
motionblur_shutter_offset_type centred
source_black_outside true
name RotoPaint2
selected true
xpos 6689
ypos 9619
}
CornerPin2D {
to1 {{curve x1001 3564 3605.79 3648.43 3686.85 3713.08 3739.42 3768.91 3796.86 3816.7 3830.86 3840.57 3849.39 3856.5 3862.14 3871.5 3887.12 3909.62 3933.17 3955.33 3978.24 4007.33 4039.62 4071.65 4099.75 4130.42 4161.71 4194.49 4232.65 4273.16 4317.02 4359.16 4392.44 4419.13 4442.25 4456.83 4460.68 4454.05 4450.33 4445.79 4434.22 4421.21 4405.05 4380.95 4355.01 4327.14 4295.97 4259.27 4218 4176.46 4141.6 4107.21 4070.64 4028.27 3980.73 3940.72 3907.95 3874.49 3840.81 3805.16 3772.54 3747.4 3732.13 3725.31 3721.35 3714.27 3711.11 3718.07 3728.08 3738.01 3751.31 3771.97 3793.35 3813.72 3832.51 3849.33 3859.9 3866.71 3873.5 3877.22 3881.9 3890.23 3894.19 3893.93 3890.89 3892.19 3893.36 3890.01 3883.41 3880.16 3875.51 3865.79 3852.32 3858.27 3866.39 3863.24 3847.05 3857.9 3850.17 3828.52 3851.65 3831.12 3810.67 3794.33 3779.15 3761.36 3751.24 3745.1 3742.01 3733.14 3721.2 3711.63 3706.32 3702.12 3698.35 3695.12 3686.8 3679.47 3668.27 3661.43 3556.81 3633.44 3613.81 3593.42 3575.07 3559.62 3545.31 3533.46 3518.67 3502.96 3487.28 3469.55 3447.08 3454.49 3436.82 3414.2 3395.32 3388.26 3380.91 3369.9 3315.97 3347.87 3338.79 3329.85 3321.16 3317.58 3316.19 3311.42 3307.59 3303.63 3298.78 3294.23 3291.28 3287.4 3282.02 3281.3 3270.1 3273.34 3270.1 3269.19 3263.93 3254.22} {curve x1001 993 996.319 1003.07 1000.35 986.272 976.953 975.515 976.766 978.63 984.534 999.346 1020.1 1038.05 1057.27 1078.21 1092.15 1093.88 1085.51 1070.76 1060.59 1054.44 1044.87 1030.55 1018.56 1018.17 1024.3 1034.11 1041.93 1039.6 1031.19 1026.23 1027.78 1028.65 1031.25 1037.41 1043.48 1050.58 1057.95 1062.15 1060.21 1053.23 1041.3 1029.46 1016.25 1001.31 991.041 984.528 979.907 979.801 982.441 985.472 991.636 996.534 999.04 999.944 997.577 993.497 991.884 993.986 997.632 998.91 1000.89 1005.98 1011 1012.11 1010.91 1011.31 1013.89 1015.47 1017.23 1019.7 1017.96 1012.14 1005.98 1002.98 1002.52 1003.67 1008.44 1014.49 1020.22 1023.71 1025.88 1028.87 1031.73 1037.67 1045.74 1051.52 1052.8 1052.55 1052.08 1050.24 1047.81 1043.41 1041.69 1041.22 1035.59 1023.91 1012.55 1004.68 997.89 991.926 986.363 982.95 979.713 973.457 967.9 964.735 963.527 964.358 964.268 962.65 960.645 960.74 960.277 958.953 958.374 957.637 956.263 955.498 968.495 963.029 968.566 973.22 972.752 969.948 968.388 967.501 970.401 972.907 974.048 972.738 969.798 968.841 969.995 968.76 967.063 967.621 970.164 971.613 958.731 969.246 968.823 967.128 963.173 960.408 958.71 959.015 961.84 965.084 969.434 975.179 985.155 991.125 993.257 995.265 985.829 991.242 985.83 983.705 980.762 975.818}}
to2 {{curve x1001 4662 4708.73 4755.51 4797.78 4827.56 4857.74 4890.09 4920.44 4941.9 4957.17 4967.49 4976.31 4983.01 4988.02 4996.8 5012.94 5037.5 5063.39 5087.96 5113.85 5146.24 5182.46 5218.22 5249.99 5284.63 5320.82 5357.78 5400.44 5446.07 5496 5543.39 5580.26 5609.68 5635.89 5651.75 5655.45 5647.9 5643.2 5637.47 5624.57 5608.93 5590.4 5562.9 5533.98 5502.22 5466.65 5425.55 5379.02 5331.61 5291.67 5253.77 5213.19 5166.81 5114.57 5069.33 5033.33 4996.49 4959.46 4920 4884.04 4856.72 4839.83 4832.28 4827.83 4820.03 4816.77 4824.65 4836.38 4847.45 4862.73 4885.99 4910.31 4933.64 4955.13 4974.94 4987.25 4995.03 5003.8 5008 5013.1 5023.06 5027.38 5027.01 5023.68 5025.15 5026.45 5022.82 5015.38 5011.51 5005.8 4994.77 4984.95 4954.08 4914.44 4876.48 4830.51 4758.35 4707.96 4681.03 4647.34 4621.26 4595.93 4577.94 4564.24 4545.79 4531.96 4524.07 4518.5 4510.1 4498.34 4489.4 4485.08 4482.64 4478.78 4474.03 4463.95 4457.68 4450.91 4446.12 4335.35 4409.26 4389.54 4369.01 4349.22 4332.62 4315.23 4299.3 4283.44 4267.18 4251.41 4233.83 4210.74 4219.24 4199.48 4174.58 4154.29 4147.14 4139.32 4127.75 4069.71 4103.71 4094.51 4085.09 4075.55 4071.57 4069.76 4064.73 4060.52 4056.25 4051.08 4045.97 4042.65 4038.55 4032.68 4031.84 4020.05 4023.48 4020.05 4019.16 4013.52 4003.17} {curve x1001 993 998.574 1006.17 1002.17 987.826 980.217 983.563 990.133 996.033 1004.94 1023.34 1050.78 1076.87 1103.5 1130.1 1147.31 1148.12 1137.67 1118.82 1103.63 1092.72 1079.16 1060.96 1046.46 1043.35 1047.64 1056.73 1064.43 1061.43 1051.17 1045.91 1050.3 1053 1057.86 1064.36 1070.16 1075.89 1083.16 1087.95 1087.6 1082.81 1072.83 1061.8 1049.33 1034.69 1023.12 1016.14 1011.43 1011.55 1013.86 1017.52 1024.21 1029.04 1031.43 1032.8 1030.93 1026.74 1025.05 1027.52 1031.26 1032.74 1036.4 1043.77 1050.5 1052.88 1051.67 1051.44 1053.16 1054.02 1054.92 1056.48 1054.21 1047.31 1039.97 1035.12 1032.72 1032.16 1035.16 1040.9 1046.5 1049.54 1051.41 1053.49 1055.83 1061.15 1069.22 1074.28 1075.33 1074.37 1073.97 1072.31 1070.15 1066.53 1065.86 1065.54 1060.88 1051.2 1039.87 1031.55 1025.71 1020.31 1016.32 1013.9 1010.79 1004.35 998.765 995.721 995.854 997.153 996.985 995.179 993.809 994.399 995.037 994.386 993.711 992.578 990.285 988.871 1001.36 996.295 1001.78 1006.42 1006.03 1003.21 1002.04 1001.55 1004.72 1007.37 1008.43 1006.95 1005.33 1004.24 1006.02 1005.42 1004.06 1005.2 1008.72 1010.42 994.879 1006.88 1005.99 1004 999.794 996.771 994.864 995.09 997.933 1001.66 1006.62 1013.22 1023.61 1029.81 1032.18 1033.84 1022.61 1028.53 1022.61 1019.76 1016.13 1010.56}}
to3 {{curve x1001 4662 4706.97 4752.83 4795.15 4824.4 4853.55 4883.35 4911.15 4930.77 4944.56 4953.37 4959.67 4963.33 4965.56 4972 4986.63 5010.81 5036.88 5062.15 5089.27 5122.54 5159.53 5196.11 5228.48 5263.61 5300.4 5337.38 5379.38 5424.41 5474.26 5521.76 5557.77 5586.1 5611.88 5627.79 5631.83 5625.13 5620.49 5614.62 5601.48 5584.96 5565.99 5538.72 5509.92 5478.49 5443.45 5403.13 5356.74 5309.5 5269.58 5231.97 5191.78 5146.05 5094.27 5048.8 5012.94 4976.35 4939.61 4900.23 4864.36 4837 4819.3 4810.94 4806.17 4798.19 4794.59 4802.48 4814.43 4825.69 4841.01 4864.4 4888.58 4912.27 4933.81 4954.08 4967.14 4975.09 4984.83 4989.15 4994.12 5004.37 5008.95 5008.98 5005.8 5007.34 5009.32 5005.79 4998.58 4994.81 4989.38 4978.3 4963.82 4920.42 4868.4 4832.75 4807.18 4746.19 4698.66 4672.56 4621.09 4596.1 4572.58 4553.1 4537.53 4518.12 4504.25 4497 4490.03 4480.78 4469.23 4460.71 4455.75 4451.78 4447.8 4443.4 4433.71 4426.46 4417.2 4410.91 4300.03 4341.87 4321.72 4300.16 4280.66 4264.6 4248.36 4233.08 4217.14 4200.72 4184.79 4167.05 4143.04 4151.19 4131.68 4107.22 4086.53 4078.82 4070.51 4059.22 4002.59 4035.92 4026.79 4017.62 4008.1 4004.1 4002.75 3997.76 3993.65 3989.31 3984.02 3978.75 3975.71 3971.77 3966.01 3965.3 3954.19 3957.61 3954.19 3953.81 3948.77 3938.85} {curve x1001 1370 1375.53 1382.89 1379 1364.39 1355.76 1358.54 1364.7 1370.17 1378.43 1395.85 1422.48 1447.6 1472.99 1498.22 1515.17 1515.35 1505.33 1486.82 1471.54 1460.91 1447.74 1429.94 1415.53 1412.51 1417.33 1426.75 1435.18 1433.14 1423.72 1419.51 1424.74 1428.28 1433.36 1439.83 1445.54 1450.53 1457.55 1462.02 1461.35 1456.17 1445.84 1433.85 1421.2 1405.69 1393.06 1385.05 1379.19 1378.18 1379.76 1382.44 1388.23 1392.35 1394.03 1394.77 1392.58 1387.7 1385.61 1387.26 1390.44 1391.63 1394.86 1401.99 1408.65 1410.95 1409.91 1409.72 1411.76 1413.02 1414.22 1416.32 1414.87 1408.63 1401.81 1397.4 1395.37 1394.98 1398.18 1403.98 1409.83 1413.25 1415.15 1417.32 1419.75 1425.09 1433.12 1438.43 1439.74 1439.05 1438.92 1437.38 1435.31 1431.92 1431.12 1430.64 1425.47 1415.49 1403.62 1394.77 1389.04 1383.24 1378.76 1376.05 1373.03 1366.54 1360.86 1357.67 1357.88 1359.14 1359.1 1357.36 1355.97 1356.48 1357.18 1356.57 1355.79 1354.75 1352.56 1351.16 1362.5 1358.73 1363.89 1368.46 1368.03 1365.05 1363.65 1362.88 1365.96 1368.49 1369.48 1367.97 1365.97 1364.97 1366.49 1365.68 1363.97 1364.99 1368.36 1369.99 1354.41 1366.36 1365.45 1363.49 1359.39 1356.33 1354.42 1354.5 1357.19 1360.75 1365.57 1371.9 1382.26 1388.48 1390.85 1392.54 1381.41 1387.34 1381.41 1378.65 1375.17 1369.64}}
to4 {{curve x1001 3564 3604.04 3645.75 3684.22 3709.93 3735.23 3762.17 3787.56 3805.57 3818.24 3826.46 3832.75 3836.82 3839.68 3846.69 3860.8 3882.93 3906.66 3929.51 3953.67 3983.64 4016.7 4049.53 4078.24 4109.39 4141.29 4174.09 4211.59 4251.5 4295.28 4337.53 4369.95 4395.56 4418.24 4432.87 4437.06 4431.27 4427.62 4422.93 4411.14 4397.23 4380.65 4356.77 4330.95 4303.41 4272.78 4236.86 4195.72 4154.35 4119.52 4085.41 4049.23 4007.51 3960.43 3920.18 3887.56 3854.36 3820.96 3785.38 3752.86 3727.69 3711.6 3703.98 3699.69 3692.43 3688.93 3695.9 3706.13 3716.25 3729.58 3750.38 3771.61 3792.35 3811.2 3828.47 3839.79 3846.77 3854.52 3858.36 3862.92 3871.54 3875.76 3875.9 3873.01 3874.38 3876.24 3872.98 3866.61 3863.46 3859.09 3849.32 3831.19 3824.61 3820.35 3819.5 3823.72 3845.74 3840.87 3820.05 3825.4 3805.96 3787.32 3769.48 3752.43 3733.69 3723.53 3718.03 3713.53 3703.81 3692.09 3682.95 3676.98 3671.26 3667.37 3664.49 3656.57 3648.25 3634.55 3626.22 3521.49 3566.06 3545.99 3524.58 3506.5 3491.6 3478.44 3467.24 3452.36 3436.5 3420.66 3402.77 3379.37 3386.45 3369.03 3346.83 3327.57 3319.94 3312.1 3301.37 3248.84 3280.09 3271.07 3262.38 3253.71 3250.11 3249.18 3244.45 3240.73 3236.69 3231.72 3227.01 3224.34 3220.63 3215.35 3214.76 3204.24 3207.47 3204.24 3203.83 3199.18 3189.91} {curve x1001 1370 1373.27 1379.79 1377.19 1362.83 1352.49 1350.49 1351.33 1352.77 1358.02 1371.86 1391.8 1408.79 1426.76 1446.33 1460.01 1461.11 1453.17 1438.76 1428.5 1422.63 1413.44 1399.53 1387.62 1387.33 1393.99 1404.14 1412.68 1411.31 1403.74 1399.82 1402.22 1403.93 1406.76 1412.88 1418.87 1425.21 1432.35 1436.22 1433.96 1426.59 1414.31 1401.51 1388.12 1372.3 1360.98 1353.44 1347.67 1346.43 1348.34 1350.39 1355.65 1359.84 1361.64 1361.92 1359.23 1354.47 1352.45 1353.73 1356.81 1357.81 1359.35 1364.21 1369.15 1370.18 1369.14 1369.59 1372.49 1374.47 1376.53 1379.53 1378.62 1373.46 1367.82 1365.26 1365.17 1366.5 1371.46 1377.57 1383.54 1387.43 1389.62 1392.69 1395.65 1401.61 1409.64 1415.66 1417.2 1417.23 1417.04 1415.31 1412.97 1408.79 1406.95 1406.32 1400.18 1388.2 1376.29 1367.9 1361.22 1354.87 1348.81 1345.1 1341.95 1335.65 1329.99 1326.69 1325.55 1326.34 1326.38 1324.83 1322.81 1322.82 1322.42 1321.13 1320.45 1319.81 1318.54 1317.79 1329.63 1325.46 1330.67 1335.26 1334.75 1331.79 1329.99 1328.83 1331.64 1334.03 1335.1 1333.76 1330.44 1329.57 1330.46 1329.02 1326.97 1327.41 1329.8 1331.19 1318.26 1328.73 1328.28 1326.62 1322.77 1319.97 1318.26 1318.42 1321.1 1324.17 1328.39 1333.86 1343.8 1349.8 1351.93 1353.97 1344.63 1350.05 1344.63 1342.6 1339.8 1334.89}}
invert false
motionblur 0.1
from1 {0 0}
from2 {{width} 0}
from3 {{width} {height}}
from4 {0 {height}}
name CornerPin2D_Layer_13
selected true
xpos 6694
ypos 9660
}
Tracker4 {
tracks { { 1 31 4 } 
{ { 5 1 20 enable e 1 } 
{ 3 1 75 name name 1 } 
{ 2 1 58 track_x track_x 1 } 
{ 2 1 58 track_y track_y 1 } 
{ 2 1 63 offset_x offset_x 1 } 
{ 2 1 63 offset_y offset_y 1 } 
{ 4 1 27 T T 1 } 
{ 4 1 27 R R 1 } 
{ 4 1 27 S S 1 } 
{ 2 0 45 error error 1 } 
{ 1 1 0 error_min error_min 1 } 
{ 1 1 0 error_max error_max 1 } 
{ 1 1 0 pattern_x pattern_x 1 } 
{ 1 1 0 pattern_y pattern_y 1 } 
{ 1 1 0 pattern_r pattern_r 1 } 
{ 1 1 0 pattern_t pattern_t 1 } 
{ 1 1 0 search_x search_x 1 } 
{ 1 1 0 search_y search_y 1 } 
{ 1 1 0 search_r search_r 1 } 
{ 1 1 0 search_t search_t 1 } 
{ 2 1 0 key_track key_track 1 } 
{ 2 1 0 key_search_x key_search_x 1 } 
{ 2 1 0 key_search_y key_search_y 1 } 
{ 2 1 0 key_search_r key_search_r 1 } 
{ 2 1 0 key_search_t key_search_t 1 } 
{ 2 1 0 key_track_x key_track_x 1 } 
{ 2 1 0 key_track_y key_track_y 1 } 
{ 2 1 0 key_track_r key_track_r 1 } 
{ 2 1 0 key_track_t key_track_t 1 } 
{ 2 1 0 key_centre_offset_x key_centre_offset_x 1 } 
{ 2 1 0 key_centre_offset_y key_centre_offset_y 1 } 
} 
{ 
 { {curve K x1038 1} "track 1" {curve x1001 1131.785767 1149.477905 1170.396362 1195.953247 1218.704224 1238.844849 1256.348633 1272.446533 1285.185425 1295.980835 1303.695435 1309.810425 1315.941162 1323.640137 1333.792969 1346.790161 1362.217651 1379.542358 1398.711304 1419.182129 1440.777344 1462.903442 1485.743164 1508.140381 1530.456177 1553.677246 1578.505859 1605.171265 1633.437134 1661.410645 1687.353149 1710.671753 1729.772461 1743.479614 1751.955322 1756.397339 1757.34436 1753.991821 1748.762207 1741.70166 1731.529785 1718.123657 1703.142944 1685.148193 1664.146484 1640.948486 1615.85791 1589.974487 1563.272217 1536.405884 1508.296631 1478.972534 1448.666626 1418.533325 1388.904541 1360.937012 1334.595459 1308.990112 1284.765625 1263.587524 1246.63269 1234.23291 1225.560913 1220.466431 1218.4646 1218.870117 1221.558594 1227.444824 1236.61145 1247.493164 1259.892456 1273.33252 1286.075562 1297.590332 1306.993042 1314.229126 1319.455566 1324.107178 1327.709595 1331.33252 1334.164429 1336.053345 1337.414062 1338.083496 1337.469971 1336.045776 1334.591431 1332.402588 1327.13623 1321.723267 1334.387573 1367.174805 1414.501099 1486.128662 1594.485596 1698.13501 1786.628662 1883.380005 1955.375 1989.642334 2008.152832 2018.027954 2002.894409 1990.92395 1980.633179 1973.372314 1967.651123 1962.28772 1955.100098 1946.322876 1936.094482 1927.932861 1922.070679 1917.116577 1910.983643 1902.453003 1887.11084 1860.810425 1842.974976 1823.580811 1804.265747 1789.355957 1783.261719 1768.894409 1758.133667 1748.646362 1739.019043 1728.286743 1714.339355 1698.466431 1685.642822 1672.814941 1659.789673 1648.09021 1637.869995 1626.000977 1612.92395 1598.272583 1590.428955 1582.012817 1573.398926 1567.840942 1566.962402 1561.948364 1558.00415 1554.949707 1552.345337 1549.224243 1545.723022 1542.617676 1539.327881 1536.138794 1533.329712 1529.730957 1526.914307 1524.359131 1522.216553 1519.597168 1517.10376 1514.248657 1511.933105} {curve x1001 1377.194092 1377.458862 1374.813599 1369.156128 1361.175903 1350.345093 1338.78186 1330.24585 1325.951294 1324.656006 1325.205078 1327.562012 1331.196167 1334.874878 1338.045044 1340.619873 1341.834961 1342.131348 1341.924561 1341.181274 1339.897949 1339.308594 1339.167358 1340.696533 1344.858765 1351.585815 1358.336914 1363.384888 1365.439209 1364.401123 1361.717773 1359.054199 1358.359253 1359.702148 1363.672607 1369.363037 1375.295654 1378.416504 1377.321045 1371.116577 1360.76123 1347.075928 1332.125366 1318.385742 1306.685303 1296.939331 1290.250854 1286.933472 1285.396484 1285.967285 1288.281006 1290.914795 1292.809204 1293.557983 1292.625488 1290.712769 1288.768066 1287.590088 1287.212402 1287.26416 1287.558594 1287.748657 1287.084106 1286.415283 1286.660034 1287.78479 1289.530273 1292.514282 1296.32959 1299.562866 1301.21582 1301.740479 1301.958374 1302.186401 1303.78894 1307.734375 1313.403442 1319.695435 1326.104126 1331.851685 1336.869263 1341.532959 1346.495483 1352.228027 1358.621216 1364.345581 1369.39502 1372.758423 1374.026367 1373.225586 1371.012939 1367.855835 1364.471313 1359.419189 1352.229736 1343.837036 1334.755981 1324.27478 1314.242554 1305.339355 1297.758423 1290.720459 1284.288208 1278.559814 1273.715576 1269.341187 1265.779419 1263.437866 1261.647583 1260.227661 1259.001465 1257.149658 1254.830322 1252.901978 1251.562988 1250.72522 1251.232056 1253.930786 1255.987061 1259.158569 1262.7854 1265.408447 1265.694214 1266.120239 1265.151245 1264.04248 1263.597046 1263.920654 1264.222046 1263.707642 1262.689697 1261.086304 1258.62561 1256.332275 1254.869629 1253.528564 1252.194824 1250.738647 1250.86499 1251.23645 1251.162231 1250.658447 1250.569946 1249.120728 1247.77356 1247.277466 1247.828857 1249.363159 1251.996216 1256.197632 1260.783325 1265.304077 1269.381592 1271.873169 1273.136719 1272.789062 1272.008667 1270.691895 1269.489014 1267.772949 1266.774292} {curve K x1038 0} {curve K x1038 0} 1 1 1 {curve x1001 0.0007435068255 0.0007582737016 0.001438089297 0.001563279773 0.001685517607 0.001382804243 0.00139878958 0.0006945964415 0.0005174715188 0.0004073646269 0.0003872547823 0.0003816013923 0.0003452176461 0.0003916614514 0.000389222696 0.0003940547176 0.0003224416578 0.000471041014 0.0005631026579 0.0006267598365 0.0007207104354 0.0007836395525 0.000724270998 0.0005754761514 0.0006024853792 0.000482475938 0.0003825723252 0.0002966968168 0.0004112301394 0.0003319628886 0.0003285048588 0.0004651029594 0.0004654742952 0.0003874017857 0.0003560711921 0.2003284842 0.2001886517 0.2003097236 0.200251013 0.2002371252 0.0002617185528 0.000281145738 0.0001266792533 0.0001407933742 0.0001782862382 0.0001990715973 0.0002269865945 0.0002695052535 0.000296724058 0.0003173996811 0.0003865191247 0.0003805839224 0.0003803031868 0.0003664352698 0.0003395362 0.0002905599831 0.0002917942766 0.0002866162395 0.0002676216536 0.0002475881192 0.0002180616139 0.0001983612747 0.0001814887364 0.0001919373317 0.0001755703561 0.0001667376055 0.0001435565355 0.0001354056149 0.0001358118025 0.0001529465517 0.0001589596795 0.0001746835769 0.0001665648451 0.0001526392734 0.0001299584255 0.000116088042 9.323829727e-05 8.793258894e-05 8.783436351e-05 9.436751134e-05 9.878688434e-05 0.000105578074 0.0001092965249 0.0001043061202 0.0001169139432 0.00012587315 0.000150591266 0.000162424054 0.0002385255066 0.0002919046092 0.0003640559153 0.000398084172 0.0004065673274 0.0009153773426 0.002594813472 0.002861323068 0.002841379261 0.003358028596 0.002796214772 0.001069655525 0.0007397184381 0.000718855008 0.0002090186754 0.0002140404977 0.0002285593364 0.0002374755568 0.0002408645814 0.0002450556494 0.00024872215 0.0002479390241 0.0002549290948 0.0002680011967 0.0002725746017 0.0002662146871 0.0002469389583 0.0002492904896 0.2001957893 0.200345993 0.2004565299 0.2004306465 0.2003841698 0.0003957263252 0.0002007634321 5.144865281e-05 6.002877126e-05 5.755104576e-05 5.059415344e-05 6.227812992e-05 8.417460776e-05 0.0001069880964 0.0001029763444 0.0001159000967 0.000109783381 9.4354873e-05 7.045022357e-05 7.595148782e-05 0.0002319602063 0.0002933659125 0.000320273859 0.0003144592338 0.0003121472837 0.0001493927848 7.848631503e-05 5.309420885e-05 5.469833923e-05 5.341066935e-05 4.684488158e-05 5.192024764e-05 4.794972847e-05 4.311269731e-05 4.7786496e-05 4.858568718e-05 6.177940668e-05 6.76194104e-05 6.634020247e-05 6.662566011e-05 7.30675456e-05 5.608259016e-05 5.313161455e-05 6.340417167e-05 6.562502676e-05} 0 0.0607342 -100 -92 100 92 -176 -60 176 60 {curve} {curve x1038 1480} {curve x1038 1232} {curve x1038 2030} {curve x1038 1534} {curve x1038 1656} {curve x1038 1292} {curve x1038 1854} {curve x1038 1474} {curve x1038 99} {curve x1038 91}  } 
 { {curve K x1038 1} "track 2" {curve x1001 1142.826538 1160.713013 1181.846802 1207.900269 1231.235962 1252.210327 1270.909302 1288.392944 1302.439209 1314.538086 1323.657227 1331.282715 1339.015259 1348.233276 1359.55542 1373.255127 1388.984497 1406.134521 1424.898071 1444.85022 1465.825684 1487.36792 1509.72644 1531.694824 1553.746948 1576.937988 1601.767456 1628.467285 1656.854004 1685.036621 1711.229004 1734.825684 1754.212524 1768.076782 1776.492798 1780.794067 1781.572388 1778.155029 1773.037231 1766.22937 1756.265503 1743.009277 1728.059692 1709.954712 1688.778931 1665.361206 1640.058594 1613.986084 1587.129639 1560.03833 1531.706543 1502.189697 1471.720215 1441.46106 1411.745605 1383.755981 1357.307251 1331.629761 1307.327148 1286.217773 1269.400513 1257.279053 1248.873535 1244.082764 1242.251099 1242.726929 1245.399536 1251.252441 1260.322266 1271.11853 1283.418945 1296.807739 1309.416992 1320.747559 1329.933594 1336.886353 1341.809937 1346.254517 1349.695923 1353.130859 1355.854126 1357.615234 1358.763184 1359.160278 1358.407471 1356.850098 1355.289307 1352.984253 1347.788574 1343.299927 1358.406494 1394.672241 1444.697266 1515.428223 1622.72522 1722.726562 1806.508789 1900.139526 1972.491211 2006.289307 2025.707153 2036.68457 2021.924683 2010.287964 2000.389282 1993.432373 1987.939331 1982.772949 1975.786987 1967.363403 1957.419922 1949.415405 1943.691772 1938.928467 1933.07605 1924.925781 1911.17041 1886.943604 1874.361572 1860.109131 1845.801758 1834.694824 1831.836182 1817.377808 1806.393188 1796.597778 1786.730713 1775.900635 1762.083618 1746.3927 1733.784058 1721.073364 1708.079712 1696.377686 1686.19519 1674.345459 1661.463989 1646.84314 1638.891602 1630.294678 1621.457764 1615.551392 1614.542236 1609.398804 1605.341797 1602.204224 1599.510376 1596.340332 1592.817139 1589.653442 1586.322876 1583.082397 1580.193359 1576.515015 1573.640869 1571.006958 1568.730713 1565.924683 1563.233765 1560.191772 1557.678589} {curve x1001 1151.585693 1151.828857 1149.202881 1143.825317 1136.080811 1125.506958 1114.321899 1106.217651 1102.197632 1101.323364 1102.358643 1105.295288 1109.511475 1113.760742 1117.45459 1120.360962 1121.723755 1122.07666 1121.820068 1120.948608 1119.547852 1118.851318 1118.574829 1119.914307 1123.923706 1130.463501 1136.879883 1141.525024 1143.135376 1141.543945 1138.265869 1135.116455 1134.052124 1135.166748 1139.115479 1144.915771 1151.057007 1154.361206 1153.527222 1147.557739 1137.491577 1124.109985 1109.496948 1096.113892 1084.802246 1075.540039 1069.325317 1066.548462 1065.564087 1066.68811 1069.467896 1072.610596 1074.972656 1076.104248 1075.541504 1073.934814 1072.326416 1071.479248 1071.438599 1071.785889 1072.375122 1072.731323 1072.180786 1071.566284 1071.825195 1072.896484 1074.565918 1077.432495 1081.047363 1083.967529 1085.281616 1085.450806 1085.282593 1085.198608 1086.614258 1090.39209 1095.953491 1102.149048 1108.439209 1114.038818 1118.976318 1123.551514 1128.502563 1134.245483 1140.588745 1146.207153 1151.111328 1154.277832 1155.334229 1154.365601 1151.96814 1148.694946 1145.30249 1140.299194 1132.913208 1124.625 1115.538086 1105.062988 1095.084351 1086.523926 1079.035645 1072.189819 1065.871704 1060.180298 1055.388916 1051.060913 1047.510864 1045.155884 1043.354858 1041.869263 1040.622559 1038.768311 1036.462402 1034.540039 1033.212891 1032.32959 1032.692993 1035.387939 1037.397949 1040.579956 1044.235718 1046.999878 1047.299072 1047.80896 1046.925537 1045.909912 1045.55835 1045.954102 1046.373657 1045.927368 1044.95752 1043.439087 1041.121826 1038.906982 1037.590088 1036.415894 1035.222046 1033.847046 1034.000122 1034.351318 1034.259888 1033.679443 1033.509888 1032.045288 1030.70459 1030.233398 1030.877075 1032.522461 1035.320312 1039.658203 1044.329224 1048.897583 1053.028564 1055.487183 1056.727905 1056.338745 1055.513672 1054.154297 1052.911133 1051.151245 1050.1521} {curve K x1038 0} {curve K x1038 0} 1 1 1 {curve x1001 0.0006153511349 0.0006380920531 0.001345502445 0.001435803482 0.001583493198 0.001294400077 0.001319157309 0.0006727637956 0.0006094507989 0.0005237764562 0.0005061885458 0.0004252505023 0.0004418060416 0.0004117114295 0.0003776537487 0.000357930403 0.0003686984128 0.0003098883608 0.0003528570523 0.0003567579261 0.0003600958444 0.0004484103702 0.0004900673521 0.0004372886324 0.0004796738504 0.0004653866345 0.0003462169261 0.0002451003529 0.0003080347087 0.0002806218108 0.0002535217209 0.0003999524633 0.0004264641611 0.0003795691882 0.0003528365341 0.2003316581 0.2001933455 0.2002822906 0.2002514899 0.2002509534 0.000307430164 0.0003379122354 0.0002676414151 0.00027236811 0.0003444674949 0.0004401622573 0.0005061377306 0.0006097583682 0.000706550316 0.0007313504466 0.0006382198189 0.0006282665418 0.0006095238496 0.0006491761887 0.00054061017 0.000503524614 0.0004317787825 0.0003840979189 0.0002883480629 0.0003452424135 0.0004669526534 0.0005208243965 0.0005150893703 0.0005379783106 0.0005550066708 0.0004639637191 0.000411673187 0.0003478742728 0.0002863754926 0.000224378804 0.0002300513152 0.0002512476931 0.0002527936886 0.000233992454 0.0003402440052 0.0003918214352 0.0004133194452 0.000440189353 0.0004543035757 0.0004102936655 0.0003673971805 0.0004142483522 0.0004910342977 0.0006000107969 0.0005761274369 0.0005656333524 0.0005023604608 0.0004080622166 0.00135665061 0.002435900969 0.003461280605 0.003583612153 0.006009425037 0.01652662642 0.02300151251 0.0285237506 0.03664508089 0.04474534467 0.03327091038 0.02576175518 0.01920778118 0.01092115231 0.0005744664813 0.0004516417684 0.000357951445 0.0003474632686 0.000399413344 0.000220654314 0.0002186210331 0.000242030248 0.0002259529574 0.0001789309317 0.0001588746964 0.0001686818287 0.0003604356025 0.0003541015903 0.007001349237 0.008168520406 0.0111793112 0.01098876074 0.01098911557 0.004324269015 0.003181976732 0.0003279965895 0.0003584002843 0.000375924632 0.0003934454871 0.0003547822707 0.0002959994017 0.0003980681067 0.0004613230703 0.0004585051793 0.0004648562463 0.0005060769618 0.0003445364709 0.0002621455933 0.002387357643 0.003055024892 0.003396711079 0.003385352902 0.003378220368 0.001243842999 0.0005884232232 9.628778935e-05 0.0001150534881 0.0001315919799 0.0001367127552 0.0001207618916 0.0001682917937 0.0001895550522 0.0001828524692 0.0002085546002 0.0002070834744 0.0001707501069 0.0001595329377 0.0001970946032 0.0001902372023 0.0001789793168 0.0002168162318 0.0002518935362 0.0002656396537} 0 0.0581082 -128 -84 128 84 -228 -84 228 84 {curve} {curve x1038 1424} {curve x1038 992} {curve x1038 2134} {curve x1038 1326} {curve x1038 1652} {curve x1038 1076} {curve x1038 1906} {curve x1038 1242} {curve x1038 127} {curve x1038 83}  } 
 { {curve K x1038 1} "track 3" {curve x1001 2772.443115 2793.940674 2819.81958 2850.430908 2878.397461 2903.103516 2924.303467 2943.20752 2958.771729 2970.678955 2978.878906 2984.778564 2990.321533 2997.543945 3007.951416 3022.04834 3039.680908 3060.261963 3083.492432 3108.599121 3135.157227 3162.73291 3191.301758 3219.852539 3248.406982 3278.062256 3309.787109 3343.715576 3379.227783 3414.200439 3446.766113 3475.750488 3499.158936 3515.613525 3525.511963 3530.325928 3530.331543 3525.684082 3518.241455 3508.519531 3494.966553 3477.705811 3457.781494 3434.64209 3408.007812 3378.313965 3346.241699 3313.042236 3279.213867 3245.273926 3210.771729 3174.988037 3138.439697 3102.207764 3066.74292 3033.052002 3001.313477 2970.761475 2941.877197 2916.527832 2896.236328 2881.516357 2871.254395 2865.087402 2862.974121 2863.891846 2867.647705 2875.387939 2887.215332 2901.331787 2917.266602 2934.606934 2951.903564 2967.257324 2980.007568 2990.285645 2997.893311 3003.885742 3009.318115 3014.170898 3017.745117 3020.262939 3022.03833 3022.666504 3021.887207 3020.174316 3018.335449 3015.307861 3009.474609 3001.717285 2999.662109 3004.023682 3014.21875 3036.025635 3075.614014 3113.395264 3144.958984 3178.621826 3199.303223 3201.945801 3198.225586 3191.051758 3173.618896 3158.9375 3146.570068 3136.81543 3128.591797 3121.296631 3113.469482 3104.932129 3095.974365 3088.636963 3083.054443 3077.780029 3071.589355 3063.678223 3050.252686 3023.535156 3004.027344 2982.339844 2959.563721 2939.666016 2930.961182 2914.556152 2900.793213 2888.232422 2875.808594 2862.753174 2847.491211 2831.12793 2818.182129 2804.649658 2790.270996 2776.880127 2765.044922 2751.269287 2736.933594 2720.798828 2712.174316 2703.012939 2693.633545 2687.096191 2685.981201 2680.25 2675.560059 2671.831787 2668.713135 2665.108887 2661.000244 2657.294922 2653.479004 2649.733154 2646.418213 2642.470215 2639.368652 2636.543701 2634.285645 2631.456055 2628.669189 2625.530518 2622.920654} {curve x1001 1445.967773 1446.494873 1444.125 1439.569824 1433.587646 1426.030884 1419.355103 1416.554565 1418.429688 1423.906738 1432.13269 1443.091431 1456.019775 1468.209229 1477.61731 1483.233887 1484.16748 1481.120728 1475.779419 1468.96106 1461.44397 1454.912964 1449.817871 1447.203003 1448.255737 1452.822998 1458.122314 1461.830444 1463.158569 1462.412476 1460.586304 1459.632812 1461.096924 1464.266113 1468.828247 1474.592651 1480.207031 1483.547729 1483.561401 1479.274414 1470.989624 1459.436523 1445.89624 1432.513306 1420.554688 1410.296143 1402.869263 1398.871704 1397.218262 1397.907715 1400.329834 1403.063843 1405.281982 1406.269531 1405.42688 1403.615845 1401.886597 1400.789795 1400.578369 1401.396484 1403.149048 1405.175415 1406.606201 1407.80835 1409.192627 1410.582153 1411.912231 1413.964966 1416.673706 1418.803589 1419.294922 1418.480225 1417.043945 1415.348511 1414.681396 1416.223022 1419.842896 1424.573364 1429.797119 1434.746704 1439.159668 1443.129395 1447.330566 1452.375854 1458.010376 1463.129761 1467.507935 1470.432373 1471.330811 1470.493652 1468.545288 1466.087769 1463.4021 1459.344849 1453.219238 1445.759766 1437.146484 1427.386841 1418.049194 1410.058838 1403.495483 1397.729126 1392.175781 1386.973022 1382.479248 1378.528809 1375.434204 1373.574463 1372.348267 1371.403442 1370.605591 1369.425415 1367.954224 1366.776367 1365.894409 1365.01355 1364.877441 1366.763062 1368.27356 1371.022949 1374.491455 1377.258667 1377.731934 1378.271484 1377.514038 1376.726807 1376.606812 1377.180176 1377.724487 1377.634888 1376.922852 1375.789307 1374.05835 1372.440552 1371.64624 1371.234253 1370.539673 1369.007446 1369.285034 1369.412842 1368.79834 1367.758179 1367.565308 1365.69751 1364.031006 1363.348022 1363.956177 1365.81665 1369.091187 1374.05249 1379.38208 1384.529907 1388.874878 1390.967163 1391.864868 1390.860596 1389.194946 1386.998901 1385.147705 1382.685425 1381.175049} {curve K x1038 0} {curve K x1038 0} 1 1 1 {curve x1001 0.0005932106869 0.0005620319862 0.0007072353619 0.0007801973843 0.0008026226424 0.0005186120397 0.0006263329415 0.0005561470171 0.000582793029 0.0006289901794 0.000583973364 0.0005232475814 0.0006830390776 0.0006941286265 0.0006697118515 0.0007589251618 0.0007994291955 0.0006088402588 0.0005023565609 0.0005632421235 0.0006460078293 0.0006000656285 0.0006719860248 0.0006981902407 0.0006969760871 0.0004422501661 0.0004749015206 0.0004228830221 0.0004301705339 0.0003739131207 0.000421546807 0.0004245871969 0.0003656007175 0.0003212190641 0.000267114141 0.2001947016 0.2001773417 0.2002408206 0.200404942 0.2004196346 0.0005078071845 0.0005368268467 0.0005472542252 0.0004281429865 0.0005674126442 0.0005329808919 0.0005961160641 0.0005052119377 0.0004508398997 0.0002936605597 0.0003424508322 0.0002507822355 0.0003772253986 0.0005386265111 0.0005335840397 0.0004579465603 0.0004268564226 0.0004260528367 0.0003487469221 0.0004349183291 0.0004475902242 0.0004397260491 0.0003188175324 0.0002504206495 0.0001600837713 0.000136990755 0.0001410083059 0.0002656959987 0.0002599850704 0.0002723486105 0.000287884759 0.0002824996482 0.0001558446529 0.0001707076881 0.0002035931539 0.0002691080153 0.00033904679 0.0003581192868 0.0003595936578 0.00040554523 0.0003955214343 0.0004323102185 0.0005389518919 0.0006371302297 0.0005987239419 0.0005974232336 0.0005603191094 0.0004567657888 0.0006962395273 0.0006868832279 0.0007449800614 0.0009734059568 0.001236562734 0.004260896705 0.009417145513 0.00996870175 0.009752776474 0.01211575978 0.008742860518 0.003569605993 0.002956703538 0.002961750608 0.0003082941403 0.0003636190668 0.00047596285 0.0004741576267 0.0004191615735 0.0004638411046 0.0004409081012 0.0003704527044 0.0004168810556 0.0005091875792 0.0005632656976 0.0005875327624 0.0005808980204 0.0005499267136 0.008199503645 0.01247917302 0.01326076873 0.01323930733 0.01317486167 0.005385554396 0.001021686359 0.000251850026 0.0002336151665 0.0002334910096 0.0002562318987 0.0002529904013 0.0003106206423 0.000436830509 0.0004827305092 0.0004843844217 0.0004781460739 0.000497961475 0.0003413607192 0.0002888583695 0.0031443513 0.004107046407 0.004620235879 0.004617886618 0.004606235772 0.001726522227 0.0007806161302 0.0001085779586 0.000128501968 0.0001401836198 0.0001545910345 0.0001383674389 0.0002142521116 0.0002497998357 0.0002563945309 0.0002922609565 0.0003210791911 0.0002629412338 0.0002367721172 0.0002628069196 0.0002418292279 0.0002000970126 0.000230696096 0.0002639157174 0.0002792674641} 0 0.0390081 -116 -84 116 84 -216 -72 216 72 {curve} {curve x1038 3196} {curve x1038 1332} {curve x1038 3858} {curve x1038 1642} {curve x1038 3412} {curve x1038 1404} {curve x1038 3642} {curve x1038 1570} {curve x1038 115} {curve x1038 83}  } 
 { {curve K x1038 1} "track 4" {curve x1001 2720.572266 2758.482422 2797.182617 2829.415527 2851.861572 2876.778809 2902.488525 2926.312256 2943.057129 2954.685059 2963.170166 2970.81958 2976.864258 2982.933594 2993.209229 3009.647217 3031.098877 3052.580322 3072.97583 3095.171143 3122.8396 3152.600342 3180.986572 3206.539551 3234.365723 3262.268799 3292.937012 3327.995117 3365.044434 3404.231934 3440.824707 3469.358887 3492.746338 3511.843994 3523.120605 3524.401611 3518.805664 3516 3510.921631 3499.50293 3488.040771 3471.993164 3449.833984 3426.031006 3400.807129 3371.9375 3337.703125 3300.414795 3264.663818 3233.887939 3202.164551 3167.542236 3126.952881 3084.667969 3050.219727 3020.219482 2989.375 2957.855225 2925.571777 2896.744629 2875.516113 2863.231689 2857.845459 2853.603271 2847.409912 2846.44751 2853.865479 2862.831299 2872.352539 2885.905273 2905.109619 2923.759277 2941.746582 2958.314941 2971.130615 2980.026367 2985.617432 2990.663818 2994.176758 2999.293457 3005.898193 3008.284912 3007.636719 3005.62085 3007.05249 3007.536621 3003.343018 2997.99585 2995.357422 2990.681396 2978.188477 2971.447266 3007.1875 3045.166016 3064.696777 3093.980713 3139.878906 3152.353516 3153.38208 3199.314453 3178.796631 3162.925781 3147.059326 3129.700928 3114.432373 3108.242432 3104.724854 3101.594971 3090.963867 3079.285889 3070.237549 3064.090332 3058.621582 3055.529785 3052.631348 3045.345947 3035.067383 3021.787354 2993.127197 2947.177002 2999.53125 2977.504395 2957.755615 2941.439453 2927.760498 2917.301514 2907.607178 2893.073486 2877.684082 2861.563965 2841.285889 2827.394775 2830.026855 2811.054688 2790.333984 2775.250488 2768.827881 2762.080566 2738.555176 2709.147705 2731.684082 2721.80249 2713.348877 2706.492676 2704.170166 2702.495117 2697.987549 2694.501465 2690.490723 2685.811523 2682.155029 2679.368164 2675.108154 2671.430664 2668.487549 2661.186523 2663.037842 2660.196533 2658.772705 2652.761963 2645.912109} {curve x1001 1106.439209 1109.82959 1114.015869 1109.414307 1095.326416 1085.457764 1081.147827 1078.345947 1077.90625 1083.353882 1096.349121 1110.870972 1122.374023 1136.281616 1151.722534 1160.820312 1160.983765 1152.33667 1141.785278 1136.773804 1133.87085 1126.161133 1114.18811 1108.591553 1110.527588 1119.771362 1130.297363 1135.474731 1132.544556 1125.909302 1122.973511 1122.466553 1122.316895 1124.439453 1130.614868 1137.290283 1145.290771 1152 1153.931519 1148.970337 1138.939575 1125.368652 1112.42627 1098.007446 1083.811401 1075.201782 1069.046875 1065.354004 1065.392456 1068.28186 1071.224731 1076.84729 1081.009277 1082.833374 1082.56543 1078.987427 1075.204468 1074.337402 1076.633789 1079.65979 1080.269897 1081.499878 1085.051514 1087.912964 1087.505615 1086.745239 1088.301147 1091.584595 1093.768311 1096.737915 1098.874023 1096.90564 1091.674316 1087.281616 1086.885254 1088.10083 1091.807983 1098.171265 1104.454712 1109.909058 1113.376709 1115.979248 1119.662842 1123.571899 1130.656128 1138.596069 1143.802856 1144.546265 1144.8302 1144.077271 1141.962036 1138.672485 1134.032593 1132.167236 1130.796753 1122.12207 1106.832153 1096.271484 1088.936035 1081.666748 1074.969727 1068.606201 1064.73938 1060.806274 1054.631958 1049.590576 1046.405273 1045.125977 1045.538086 1045.336182 1043.316162 1041.544434 1041.03418 1039.444824 1037.88623 1037.499512 1037.033447 1036.443848 1038.96167 1041.401489 1038.032593 1044.146729 1047.30957 1046.120605 1043.338257 1041.530151 1041.094971 1044.01062 1046.155884 1046.825928 1044.609619 1041.091919 1040.773193 1040.996704 1038.716309 1037.340332 1037.766235 1039.552979 1037.817627 1031.286011 1038.897705 1038.516479 1036.317383 1032.714233 1030.363525 1029.363525 1030.255371 1033.189331 1036.252441 1040.29126 1046.432129 1055.627563 1060.394287 1062.362793 1062.025146 1056.863037 1059.952393 1055.279907 1053.782227 1050.921021 1047.572754} {curve K x1038 0} {curve K x1038 0} 1 1 1 {curve x1001 0.0003243880642 0.0005874863421 0.002965333698 6.823275002ee-05 0.0001704929845 0.000124873002 8.757693881e-05 0.0001454582527 0.0001188018785 0.0001434404985 0.0001294529899 0.000145710499 0.0001333352587 0.0001171275583 0.0001403667657 0.0001426159124 0.0001599913926 0.00013320532 0.0002221028612 0.0002204723838 0.0007401800624 0.0004139507668 0.0001592914034 0.006132655167 0.08179230314 0.005506859644 0.009403913387 0.03254222929 0.0003653789554 0.0002166374868 0.0002788273243 0.0004611133186 0.0002316872814 0.0008420656219 0.0002248760094 8.445401172e-05 0.0002022974927 0.0001612264132 3.158581644e-05 7.394007385e-05 0.0001094953156 0.0001229116389 9.693859495e-05 0.0001029347142 0.0007360904369 0.0002001605086 1 0.04734947387 0.001466398297 5.59129071e-05 2.295208623e-05 9.178336248e-05 8.582361374e-05 2.282938958e-05 4.972046599e-05 8.760579065e-05 1.956829021e-05 8.005495767e-05 0.00011597764 0.0001428169715 3.820861893e-05 5.227662938e-05 4.93365209e-05 0.000102643388 5.539208917e-05 2.346537502e-05 0.001171387651 0.0004769808249 0.0003503067346 4.4275178e-05 5.490785352e-05 4.147669852e-05 2.712373235e-05 8.137626005e-05 8.509696428e-05 7.014630399e-05 7.934593507e-05 1.840837248e-05 5.474676547e-05 3.083652774e-05 3.3570501e-05 1.223535087e-05 5.982899439e-05 5.3851914e-05 5.740445725e-05 3.458446595e-05 6.126334524e-05 7.487729211e-05 4.993550998e-05} 0 0.0817923 -144 -72 144 72 -49 -49 49 49 {curve} {curve x1038 3324} {curve x1038 1032} {curve x1038 3708} {curve x1038 1272} {curve x1038 3372} {curve x1038 1080} {curve x1038 3658} {curve x1038 1222} {curve x1038 143} {curve x1038 71}  } 
} 
}

cornerPinOptions "CornerPin2D (use transform ref frame)"
Auto-Tracking 1
predict_track true
warp a
grab_behaviour "every frame"
grab_interval 1
grab_error_above 1
transform match-move
translate {{curve x1001 0 23.74658203 50.40429688 79.01794434 103.1428223 125.8273926 146.6054688 165.6828613 180.4562988 192.0637207 200.4433594 207.2658691 213.6286621 221.1809082 231.7202148 246.0283203 263.5883789 282.7226562 303.1123047 325.0437012 349.2429199 374.4941406 400.0324707 424.6496582 449.8371582 475.8295898 503.8425293 534.4304199 566.7336426 599.3127441 629.6362305 655.744873 677.0654297 692.8464355 702.3630371 706.0727539 705.1064453 701.5507812 695.8337402 687.0812988 675.7937012 660.8010254 642.7976074 622.0371094 598.5280762 572.2331543 543.0583496 512.4475098 481.6628418 451.9946289 421.3278809 389.0161133 354.5378418 319.8105469 287.4963379 257.5842285 228.7409668 200.4020996 172.9782715 148.8625488 130.0393066 117.157959 108.9765625 103.9030762 100.8679199 101.0771484 105.2106934 112.3220215 122.2185059 134.5551758 149.5148926 165.2194824 180.3786621 194.0705566 205.109375 213.4499512 219.2871094 224.3208008 228.3181152 232.5749512 236.5085449 238.6472168 239.5561523 239.4758301 239.2973633 238.244873 235.9829102 232.765625 228.0322266 222.4484863 225.7541504 242.4226074 278.2441406 328.7800293 397.4733887 465.1523438 527.5869141 586.7167969 628.230957 657.3908691 660.8134766 660.2653809 644.4672852 630.5556641 618.5993652 611.0585938 605.3198242 600.0810547 591.9230957 582.5690918 573.0246582 565.6120605 559.9526367 555.4318848 550.1630859 542.1938477 528.9934082 506.3620605 486.7158203 461.3947754 460.3835449 443.3981934 434.0466309 418.6599121 406.3632812 395.7875977 385.3845215 373.0964355 358.4924316 342.4807129 327.8166504 314.5761719 305.1350098 291.1936035 277.9541016 264.8095703 253.1303711 240.0917969 228.1057129 214.2099609 213.1364746 206.1657715 203.3017578 197.6154785 193.8620605 190.9631348 187.7321777 184.3867188 180.6008301 176.9372559 173.4143066 170.173584 166.8554688 163.1296387 160.1958008 156.3671875 155.1606445 152.3867188 150.0378418 146.276123 142.7041016} {curve x1001 0 1.106445312 0.2426757812 -4.805175781 -13.75390625 -23.46142578 -31.89489746 -37.45556641 -39.17541504 -36.98657227 -31.28527832 -23.5916748 -15.52124023 -7.015014648 0.9132080078 5.962158203 6.880859375 4.119628906 0.03063964844 -3.330444336 -6.606445312 -10.48815918 -14.85961914 -16.1953125 -13.40527344 -6.635742188 0.6125488281 5.257080078 5.772827148 3.270019531 0.5892333984 -1.229125977 -1.340332031 0.5969238281 5.261108398 11.24389648 17.66601562 21.78479004 21.78869629 16.43310547 6.748901367 -6.298828125 -20.3104248 -34.04162598 -46.33325195 -55.80224609 -62.42358398 -65.86975098 -66.90380859 -65.58544922 -62.97070312 -59.4375 -56.77832031 -55.60534668 -56.25683594 -58.48400879 -60.75024414 -61.74755859 -61.33081055 -60.27001953 -59.45849609 -58.5078125 -57.56591797 -56.87097168 -56.50073242 -55.79455566 -54.21923828 -51.42260742 -48.34179688 -45.52868652 -44.13000488 -44.65234375 -46.30688477 -47.79284668 -47.30419922 -44.68408203 -40.04467773 -34.14929199 -28.09777832 -22.66003418 -18.20117188 -14.24829102 -9.798828125 -4.69128418 1.672485352 7.773071289 12.65759277 15.20703125 16.08374023 15.24389648 13.07543945 10.03112793 6.505493164 2.510986328 -3.006835938 -11.21069336 -21.72851562 -32.04760742 -41.21862793 -49.39941406 -56.48181152 -62.98535156 -68.52783203 -73.66674805 -78.74267578 -83.16625977 -86.51416016 -88.47314453 -89.57446289 -90.58740234 -91.91015625 -93.57470703 -95.22631836 -96.88085938 -98.1574707 -98.90466309 -98.83764648 -97.16516113 -95.14160156 -92.25585938 -90.41040039 -86.84326172 -85.78796387 -85.71630859 -87.06433105 -88.2442627 -88.58227539 -87.53027344 -86.6776123 -86.77270508 -88.00170898 -89.94494629 -91.65185547 -93.12756348 -94.59106445 -95.66687012 -96.3659668 -97.01000977 -97.3046875 -98.72497559 -97.01708984 -97.64343262 -98.30603027 -100.4022217 -102.0784912 -102.7409668 -102.0672607 -100.0737305 -97.1315918 -92.7467041 -87.56494141 -81.70690918 -77.37670898 -75.12402344 -74.35791016 -76.08374023 -76.12915039 -78.51538086 -79.96411133 -82.16394043 -83.87817383}}
rotate {{curve x1001 0 0.1135591413 0.2736003456 0.3101935109 0.2216501129 0.2912085729 0.5046238183 0.7082041602 0.8781868922 1.099418161 1.430564657 1.777051543 2.06256769 2.368687503 2.670904632 2.830796533 2.813124318 2.605113264 2.33435395 2.146927184 2.010691664 1.794061208 1.513854391 1.316582737 1.222341678 1.217740429 1.248963685 1.23175805 1.146903806 1.080218494 1.106781311 1.170293909 1.216588688 1.267433228 1.313739899 1.317496277 1.325258383 1.387651462 1.457604443 1.503065576 1.547483628 1.587425988 1.635810526 1.629157406 1.589619076 1.60035098 1.590082712 1.5600808 1.576332307 1.623084172 1.642356254 1.694361424 1.724311425 1.729183783 1.745500032 1.732930766 1.710043381 1.714182855 1.751171844 1.804167861 1.832017314 1.889786698 2.011904229 2.110502553 2.108331917 2.076505548 2.076267369 2.067629896 2.013776616 1.988898256 1.986459955 1.926222869 1.809955416 1.704361678 1.631187959 1.53963256 1.464699154 1.435748133 1.407141156 1.390083327 1.363923546 1.318678388 1.276735795 1.226438892 1.2319773 1.265870636 1.252229813 1.198823878 1.190529157 1.207706042 1.205756848 1.220786412 1.339480857 1.517897366 1.666535104 1.730869183 1.738630177 1.763816109 1.850936896 2.126659374 2.153348403 2.202237431 2.293648688 2.344693526 2.316033067 2.330907442 2.376348178 2.435244058 2.492668934 2.523435265 2.513612479 2.535381303 2.598810292 2.635146841 2.654954307 2.668103354 2.64735637 2.612570727 2.604630026 2.512181145 2.663967895 2.767995931 2.820531152 2.788724964 2.756456217 2.760425835 2.783259351 2.849523421 2.900383201 2.9406733 2.892364779 2.857506784 2.991133511 3.050158703 3.015625373 3.034842557 3.123838801 3.236794224 3.142427815 2.894841755 3.188174917 3.168534749 3.08990734 3.025076064 3.003230208 2.995084627 2.998319696 3.039267503 3.063889182 3.073658844 3.129958652 3.262798644 3.282681506 3.262436931 3.216145269 3.067530073 3.155179675 3.052314606 3.034803892 2.978279187 2.891950838}}
scale {{curve x1001 1 1.006867043 1.013196893 1.016572956 1.018375925 1.021084503 1.024174387 1.026951311 1.028803314 1.02907499 1.028884083 1.028791308 1.028369012 1.027402602 1.027057474 1.028141978 1.030538066 1.032953202 1.034759206 1.036594047 1.039733397 1.043768775 1.04755356 1.050579891 1.054111302 1.05720989 1.060783114 1.065416788 1.070433255 1.076184412 1.081410914 1.084635773 1.087274891 1.089772687 1.090993776 1.090147764 1.087815858 1.087437548 1.086694502 1.084560287 1.083194964 1.081312941 1.077633444 1.074403589 1.071566404 1.067847985 1.062952206 1.057317369 1.052379386 1.04899571 1.045994033 1.042342231 1.037306019 1.031803753 1.028570377 1.026301193 1.023435422 1.02016022 1.016224069 1.012548654 1.010291499 1.009608187 1.00996857 1.009773773 1.008549185 1.008387131 1.01011008 1.011527829 1.012478575 1.014234324 1.017283237 1.020081544 1.023235742 1.026073793 1.028124486 1.029605041 1.030488885 1.030969833 1.031478529 1.032322452 1.033749122 1.034188317 1.033790857 1.033103893 1.033621284 1.033995698 1.033045536 1.031994731 1.032621574 1.031857945 1.019165766 0.9977818598 0.9823406889 0.9573932623 0.910119752 0.86923669 0.8412030973 0.7982387476 0.7617440858 0.7556328662 0.7372258451 0.7243109775 0.7231866758 0.7206274923 0.7185685466 0.7181163246 0.7179478958 0.7179296248 0.7165762991 0.7156703742 0.7164151747 0.7172654516 0.7173813699 0.7178213488 0.7187248063 0.7191317484 0.7207410297 0.723998374 0.7187034171 0.7088301721 0.7281452722 0.7232023579 0.7171804578 0.7161471736 0.7146046542 0.7135868907 0.7128545447 0.7108869366 0.7099149478 0.709599823 0.7073583335 0.7069821698 0.7112557695 0.7084303935 0.7048813118 0.7034391213 0.7049676641 0.7067045725 0.7018757663 0.695895683 0.7045142921 0.7029523641 0.7007638717 0.7001495946 0.7004978151 0.7007620457 0.7000352967 0.6997222943 0.6994224014 0.6988700367 0.6985768623 0.6982785944 0.6976899672 0.6975857278 0.697559318 0.6963502611 0.6971929358 0.6972726566 0.6975257116 0.6965486588 0.6952687935}}
center {{curve x1001 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982 1941.906982} {curve x1001 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631 1270.296631}}
shutteroffset centred
selected_tracks 3
name Tracker2
label "Ref frame: \[value reference_frame]"
selected true
xpos 6694
ypos 9709
}
StickyNote {
inputs 0
name StickyNote2
label "<< dirt / wipers / windowHoldout"
selected true
xpos 7731
ypos 12528
}
StickyNote {
inputs 0
name StickyNote13
label "<<  grade corners of windows for sun direction"
selected true
xpos 7809
ypos 12845
}
StickyNote {
inputs 0
name StickyNote8
label "<< crop to restrict windows used"
selected true
xpos 7846
ypos 12691
}
StickyNote {
inputs 0
name StickyNote14
label "<< adjust dirt holdout more dirt on bottom of windows"
selected true
xpos 7805
ypos 12992
}
StickyNote {
inputs 0
name StickyNote45
label "<< sharpen if required"
selected true
xpos 7682
ypos 14448
}
Group {
inputs 0
name Reformat_OverscanMASTER
note_font_size 31
selected true
xpos 1085
ypos -19995
addUserKnob {20 User l Reformat_Overscan}
addUserKnob {41 format l "output format" T ReformatMASTER.format}
addUserKnob {41 overscanPercent T ReformatOverscanMASTER.overscanPercent}
addUserKnob {20 info}
addUserKnob {26 version l ver: T "v1 rafal 10/02/2020"}
}
BackdropNode {
inputs 0
name Backdrop_Adjust4
tile_color 0xaaaaaaff
label "<center><font color=\[value note_color]>\[value note]"
note_font "Bitstream Vera Sans Bold"
note_font_size 42
xpos -987
ypos -496
bdwidth 280
bdheight 332
z_order -92960
addUserKnob {20 User}
addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "## Cover selected nodes' area\nbd_this = nuke.thisNode()\nz_List = \[]\nif nuke.selectedNodes():\n\n    if nuke.selectedNodes('BackdropNode'):\n        sel_bd = nuke.selectedNodes('BackdropNode')\n        for s in sel_bd:\n            z_List.append(s\['z_order'].value())\n        else:\n            pass\n\n    if not z_List:\n        z_List.append(1)\n    z_Min = min(z_List)\n\n\n    nodes = nuke.selectedNodes()\n\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in nodes])\n    bdY = min(\[node.ypos() for node in nodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in nodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in nodes]) - bdY\n\n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-100, -200, 100, 100)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    # Applying the values\n    bd_this\[\"xpos\"].setValue(bdX)\n    bd_this\[\"bdwidth\"].setValue(bdW)\n    bd_this\[\"ypos\"].setValue(bdY)\n    bd_this\[\"bdheight\"].setValue(bdH)\n    #bd_this\['z_order'].setValue(z_Min - 1)\n\n    # GBK BD size method\n    n = nuke.thisNode()\n    k = nuke.thisKnob()\n    if k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n        w = n\[\"bdwidth\"].getValue()\n        h = n\[\"bdheight\"].getValue()\n        n\[\"z_order\"].setValue(w * h * -1)\nelse:\n    nuke.message('<font color=orange><b>\\n\\nSelect some nodes first!\\n\\n')\n" +STARTLINE}
addUserKnob {26 label_1 l <b>Label}
addUserKnob {43 note l Note}
note "Flat plate res"
addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
note_color Black
addUserKnob {26 font_size l "Note size"}
addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {22 size_min_10 l "<font style=\"background-color:#3e4f5a\"><font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
addUserKnob {26 tasks l <b>Tasks}
addUserKnob {22 plate l "<font color=white>Plate" T "# plate\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PLATE')\nbd\['note_font_size'].setValue(102)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 denoise l "<font color=white>Denoise" -STARTLINE T "# denoise\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('DENOISE')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 reference l "<font color=white>Reference" -STARTLINE T "# reference\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('REF')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 precomp l "<font color=white>Precomp" T "# precomp\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('PRECOMP')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')" +STARTLINE}
addUserKnob {22 versions l "<font color=white>Versions" -STARTLINE T "# versions\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('VERSIONS')\nbd\['note_font_size'].setValue(82)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 Foreground l "<font color=white>Foreground" T "# fg\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('FG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 background l "<font color=white>Background" -STARTLINE T "# background\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(3149642751)\nbd\['note'].setValue('BG')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')"}
addUserKnob {22 threed l "<font color=white>3D" T "# 3d\n\nbd = nuke.thisNode()\nbd\['tile_color'].setValue(2576980479)\nbd\['note'].setValue('3D')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Black')\n" +STARTLINE}
addUserKnob {22 camera l "<font color=white>Camera" -STARTLINE T "# camera\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2137407487)\nbd\['note'].setValue('CAMERA')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 track l "<font color=white>Track" -STARTLINE T "# track\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1916764159)\nbd\['note'].setValue('TRACK')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 dmp l "<font color=white>DMP" -STARTLINE T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2002354175)\nbd\['note'].setValue('DMP')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')"}
addUserKnob {22 matte l "<font color=white>Matte" T "# matte\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(2134861567)\nbd\['note'].setValue('MATTE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Fuchsia')" +STARTLINE}
addUserKnob {22 grade l "<font color=white>Grade" -STARTLINE T "# grade\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1062830079)\nbd\['note'].setValue('GRADE')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')\n"}
addUserKnob {22 lens_effect l "<font color=white>Lens Effect" -STARTLINE T "# lens effect\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065320447)\nbd\['note'].setValue('LENS\\nEFFECT')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Silver')"}
addUserKnob {22 grain l "<font color=white>Grain" T "# grain\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1717987071)\nbd\['note'].setValue('GRAIN')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Aqua')" +STARTLINE}
addUserKnob {22 key l "<font color=white>Key" -STARTLINE T "# key\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1065310719)\nbd\['note'].setValue('KEY')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Lime')"}
addUserKnob {22 roto l "<font color=white>Roto" -STARTLINE T "# roto\n\nbd = nuke.thisNode()\n\nbd\['tile_color'].setValue(1920942079)\nbd\['note'].setValue('ROTO')\nbd\['note_font_size'].setValue(72)\nbd\['note_color'].setValue('Yellow')"}
addUserKnob {26 node_color l "<b>Node Color"}
addUserKnob {22 red l "<font color=#805959><big>█" T "nuke.thisNode()\['tile_color'].setValue(2136562175)" +STARTLINE}
addUserKnob {22 pink l "<font color=#7f5970><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2136568063)"}
addUserKnob {22 purple l "<font color=#77597f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2002354175)"}
addUserKnob {22 blue l "<font color=#58687f><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1483243519)"}
addUserKnob {22 cyan l "<font color=#597f7f><big>█" T "nuke.thisNode()\['tile_color'].setValue(1501528063)" +STARTLINE}
addUserKnob {22 green l "<font color=#597f68><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1501522175)"}
addUserKnob {22 olive l "<font color=#777f59><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2004834815)"}
addUserKnob {22 brown l "<font color=#7f7059><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2138069503)"}
addUserKnob {22 grey_1 l "<font color=#DDDDDD><big>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
addUserKnob {22 grey_2 l "<font color=#AAAAAA><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
addUserKnob {22 grey_3 l "<font color=#777777><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
addUserKnob {22 grey_4 l "<font color=#333333><big>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
addUserKnob {20 re_size l "Re Size" n 1}
re_size 0
addUserKnob {26 y l Height}
addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {26 x l Width}
addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)" +STARTLINE}
addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))\n\n# GBK BD size method\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"bdheight\" or k.name() == \"bdwidth\":\n    w = n\[\"bdwidth\"].getValue()\n    h = n\[\"bdheight\"].getValue()\n    n\[\"z_order\"].setValue(w * h * -1)"}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.3 version</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
Input {
inputs 0
name Input1
xpos -884
ypos -382
}
Reformat {
format "4544 3164 0 0 4544 3164 1 Flat Plate Resolution"
pbb true
name ReformatMASTER
xpos -884
ypos -342
}
Reformat {
type scale
scale {{overscanPercent==0?1:1-(1/overscanPercent)}}
resize none
pbb true
name ReformatOverscanMASTER
xpos -884
ypos -288
addUserKnob {20 User l percent}
addUserKnob {7 overscanPercent R 0 80}
}
Crop {
box {{-ceil(((input.height*((1-ReformatOverscanMASTER.scale)))*0.5))} {-ceil(((input.width*((1-ReformatOverscanMASTER.scale)))*0.5))} {ceil(input.width+((input.width*(1-ReformatOverscanMASTER.scale))*0.5))} {ceil(input.height+((input.height*(1-ReformatOverscanMASTER.scale))*0.5))}}
name CropOverscanMASTER
xpos -884
ypos -244
addUserKnob {20 User}
}
Output {
name Output1
xpos -884
ypos -144
}
end_group
push $N31d1f900
Dot {
name Dot408
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 8589
ypos 1070
}
Dot {
name Dot411
label "denoised\nplate"
selected true
xpos 8589
ypos 1256
}
Dot {
name Dot2
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 8589
ypos 2118
}
push $N31dba400
Crop {
box {1204 2228 1258 2385}
reformat true
crop false
name Crop2
selected true
xpos 11335
ypos 19280
}
CurveTool {
ROI {0 0 54 157}
autocropdata {13 39 40 117}
intensitydata {{curve x1001 0.162754006 0.1617585162 0.1609080455 0.1602855862 0.1598727739 0.1592535392 0.1574601741 0.1450137284 0.1452006475 0.1459568483 0.1459894351 0.145304412 0.1444451201 0.1432264712 0.1422660136 0.1411183439 0.1394816127 0.1378160628 0.1365144468 0.1351929332 0.1344454247 0.1339927718 0.1340167141 0.1343682526 0.1339027769 0.1332797945 0.1326354768 0.132632837 0.1328752798 0.1328856124 0.1325525331 0.1322481589 0.1579839606 0.1315356579 0.1313579298 0.1310966131 0.1310993169 0.1308974024 0.1308840222 0.130780456 0.130843323 0.1308402168 0.1309713102 0.1381235187 0.1700061919 0.182361334 0.1855627346 0.1869571805 0.1875675751 0.1876686495 0.1877566839 0.1877387262 0.1879431473 0.1879601997 0.1879650746 0.1886567694 0.1915273389 0.1946311888 0.1961187029 0.1968194552 0.1971398757 0.1972534863 0.1972864828 0.1971695436 0.1970738081 0.1972809948 0.197878826 0.2009278959} {curve x1001 0.1688216065 0.1676327959 0.1665988898 0.1659454561 0.1655477982 0.1650653568 0.1631857923 0.1496238065 0.1499853798 0.1506725148 0.1506283328 0.1499815359 0.1490941527 0.1478013783 0.1467010769 0.1455136425 0.1436595866 0.1420235175 0.1408298984 0.1396603964 0.1389294639 0.1384112678 0.1384974816 0.1388788217 0.1384013744 0.1377149608 0.1371596031 0.1373562715 0.1378971753 0.1380524863 0.1377097108 0.1372887273 0.1511656756 0.1364253703 0.1362516018 0.1360640561 0.1360990319 0.135877644 0.1359166917 0.1358122526 0.1357984928 0.1357409919 0.1358320146 0.14443192 0.1766273922 0.189676814 0.1929194044 0.1942295583 0.1947196944 0.1948952325 0.1950226236 0.1951054918 0.1952171357 0.1951372231 0.1951612456 0.1958595334 0.199085643 0.2022203028 0.2037040284 0.2044259238 0.2047463642 0.2050117325 0.2049950282 0.2049602588 0.2048985002 0.2050644372 0.2055500859 0.2080849082} {curve x1001 0.1382388355 0.1372543719 0.1363203329 0.1359213717 0.1355258104 0.1350237635 0.1331739623 0.1207848317 0.1214157272 0.1223460098 0.1225075022 0.1220363346 0.1214117092 0.1201977102 0.1193873659 0.1184558334 0.1170214474 0.1156154644 0.1144505973 0.1132799326 0.1125975185 0.1122040304 0.1122666912 0.1125824223 0.1121110577 0.1116059297 0.1110492497 0.1109718143 0.1110072101 0.1110282008 0.1107714791 0.110362291 0.1096452556 0.10986444 0.1097807075 0.1096446885 0.1095882603 0.1093057144 0.1094121067 0.1093382191 0.1092308122 0.109238812 0.1092971588 0.1173926842 0.1444298663 0.1558745384 0.1588563232 0.1598974438 0.160431877 0.1606236647 0.1608223634 0.1608988132 0.1610737825 0.1611376442 0.1611333802 0.1614973221 0.1643003015 0.167164652 0.1684037498 0.1689041335 0.1690978459 0.1690815833 0.1690274621 0.1691421362 0.1692494901 0.1697196766 0.1699938791 0.1718294787} {curve x1001 0.162754006}}
name CurveTool2
selected true
xpos 11335
ypos 19306
}
push $N33755600
Dot {
name Dot372
tile_color 0xd8b700ff
label "\n From: 3d Camera"
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11440
ypos -1422
hide_input true
}
NoOp {
name camera_sensor2
tile_color 0x14a14aff
label renderCamera_alembic9
selected true
xpos 11557
ypos -1386
addUserKnob {20 User}
addUserKnob {4 pickCamera M {"Alexa MiniLF" "Alexa 65 open gate" "Use camera input" "" ""}}
pickCamera "Use camera input"
addUserKnob {7 haperture R 0 100}
haperture {{"pickCamera==0?54.1275:pickCamera==1?36.6931:\[value \[topnode].haperture]"}}
addUserKnob {7 vaperture R 0 50}
vaperture {{"pickCamera==0?25.58:pickCamera==1?25.54:\[value \[topnode].vaperture]"}}
}
push $N31b87900
Dot {
name Dot375
tile_color 0xd8b700ff
label "\n From: Orig pl01"
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11442
ypos -1326
hide_input true
}
NoOp {
name Camera_Metadata2
tile_color 0xffff00ff
label renderCamera_alembic
note_font "Bitstream Vera Sans"
selected true
xpos 11550
ypos -1267
addUserKnob {20 User}
addUserKnob {7 focalLength l "Focal lens Length (mm)"}
focalLength {{"\[expr \{\[string range   \[metadata exr/FocalLength] 0 \[expr \{\[string length  \[metadata exr/FocalLength] ]-3\}] ]\}]"}}
addUserKnob {7 fStop l "Aperture / fStop" R 0 22}
fStop {{"\[metadata exr/LensIris]"}}
addUserKnob {7 aspectRatio}
aspectRatio {{"\[metadata exr/ActiveImageHeight] / \[metadata exr/ActiveImageWidth] "}}
addUserKnob {7 focalDistance l "focalDistance (meters)" R 0 1000}
focalDistance {{"\[expr \{\[string range  \[metadata exr/FocusDistance] 0 \[expr \{\[string length \[metadata exr/FocusDistance] ]-6\}] ]*0.0254\}]"}}
}
push $N35f04100
push $N34f08f00
Merge2 {
inputs 2
name Merge2
selected true
xpos 11365
ypos -14865
}
Read {
inputs 0
file_type exr
file /coppi/proj/thrg/ftrack/assets/assetb/img/thrg_assetb_comp_v001_clientContact_raw/thrg_assetb_comp_clientContact_raw_v001.1001.exr
localizationPolicy on
format "3000 1850 0 0 3000 1850 1 "
origset true
name Read18
selected true
xpos 14173
ypos 30412
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
}
Read {
inputs 0
file_type exr
file /coppi/proj/thrg/ftrack/assets/assetb/img/thrg_assetb_comp_v003_four_raw/thrg_assetb_comp_four_raw_v003.1001.exr
localizationPolicy on
format "3840 2160 0 0 3840 2160 1 UHD_4K"
origset true
name Read16
selected true
xpos 13889
ypos 30412
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
}
Read {
inputs 0
file_type exr
file /coppi/proj/thrg/ftrack/assets/assetb/img/thrg_assetb_comp_v002_six_raw/thrg_assetb_comp_six_raw_v002.1001.exr
localizationPolicy on
format "3840 2160 0 0 3840 2160 1 UHD_4K"
origset true
name Read17
selected true
xpos 14027
ypos 30415
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
}
push $N3448f200
Dot {
name Dot391
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11483
ypos -10497
}
push $N344eab00
ChannelMerge {
inputs 2
operation in
B clouds.alpha
name ChannelMerge17
selected true
xpos 11534
ypos -10513
}
push $N342ddd00
Group {
inputs 2
name DI_Shuffle10
tile_color 0xa43f88ff
gl_color 0x1d1d1dff
label "\[value layer]\n\[value matteName]"
selected true
xpos 11653
ypos -10513
disable true
addUserKnob {20 User l DI_Shuffle}
addUserKnob {41 layer l "new layer " T master.layer}
addUserKnob {1 matteName l " matte name:" -STARTLINE}
matteName clouds
addUserKnob {41 DIChannelSource l "  from" T master.DIChannelSource}
addUserKnob {41 useRGBalpha l "  use RGB.alpha" -STARTLINE T master.useRGBalpha}
addUserKnob {26 txt l holdout}
addUserKnob {41 holdout l "holdout 1  |" T Copy1.holdout}
addUserKnob {41 holdout_1 l "holdout 2 |" -STARTLINE T Copy7.holdout}
addUserKnob {41 holdout_2 l "holdout 3  |" -STARTLINE T Copy8.holdout}
addUserKnob {41 holdout_3 l "holdout 4" -STARTLINE T Copy9.holdout}
addUserKnob {26 txt_1 l "matte from" T ""}
addUserKnob {41 selectHoldout l "" -STARTLINE T master.selectAlpha}
addUserKnob {41 from0 l " channel" -STARTLINE T Copy25.from0}
addUserKnob {26 txt_2 l " " T "The heldout input (A||B) is opposite of  'matte from' input ."}
addUserKnob {20 info}
addUserKnob {26 ver l ver: T 0.3}
addUserKnob {26 source l source: T "Rafs Kan. 13th Nov. 2019"}
addUserKnob {26 edit l edit: T " rafsKan 2019-19-11: add C&D\nrafsKan 2022/02/07: bug fixes"}
addUserKnob {7 UID_DI_Shuffle l UID +INVISIBLE}
UID_DI_Shuffle 1
}
Input {
inputs 0
name A
xpos 2714
ypos -356
number 1
}
Dot {
name Dot13
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2748
ypos -162
}
AddChannels {
channels DiMatte_1
name AddChannels5
xpos 2714
ypos -144
disable {{"!(\[numvalue master.layer]==0||\[numvalue master.layer]==1|\[numvalue master.layer]==2||\[numvalue master.layer]==3||\[numvalue master.layer]==16)"}}
}
AddChannels {
channels DiMatte_2
name AddChannels6
xpos 2714
ypos -106
disable {{"!(\[numvalue master.layer]==4||\[numvalue master.layer]==5|\[numvalue master.layer]==6||\[numvalue master.layer]==7||\[numvalue master.layer]==17)"}}
}
AddChannels {
channels DIMatte_3
name AddChannels7
xpos 2714
ypos -72
disable {{"!(\[numvalue master.layer]==8||\[numvalue master.layer]==9|\[numvalue master.layer]==10||\[numvalue master.layer]==11||\[numvalue master.layer]==18)"}}
}
AddChannels {
channels DIMatte_3
name AddChannels8
xpos 2714
ypos -36
disable {{"!(\[numvalue master.layer]==12||\[numvalue master.layer]==13|\[numvalue master.layer]==14||\[numvalue master.layer]==15||\[numvalue master.layer]==19)"}}
}
Dot {
name Dot3
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2748
ypos 2
}
set N27604800 [stack 0]
Input {
inputs 0
name B
xpos 3336
ypos -398
}
NoOp {
name master
label "\[value layer]\n\[numvalue master.layer]"
xpos 3336
ypos -319
addUserKnob {20 User}
addUserKnob {4 layer M {DiMatte_1.red DiMatte_1.green DiMatte_1.blue DiMatte_1.alpha DiMatte_2.red DiMatte_2.green DiMatte_2.blue DiMatte_2.alpha DiMatte_3.red DiMatte_3.green DiMatte_3.blue DiMatte_3.alpha DiMatte_4.red DiMatte_4.green DiMatte_4.blue DiMatte_4.alpha "none (holdout only)" "" "" "" "" "" "" "" "" "" ""}}
layer DiMatte_1.blue
addUserKnob {6 useRGBalpha l "use RGB.alpha" -STARTLINE}
useRGBalpha true
addUserKnob {4 selectAlpha l "select alphaHoldout" M {"B input" "A input" ""}}
selectAlpha "A input"
addUserKnob {4 DIChannelSource l "DI ChannelSource" M {"A input" "B input" "Use constant" "" ""}}
}
AddChannels {
channels DiMatte_1
name AddChannels1
xpos 3907
ypos -156
disable {{"!(\[numvalue master.layer]==0||\[numvalue master.layer]==1|\[numvalue master.layer]==2||\[numvalue master.layer]==3||\[numvalue master.layer]==16)"}}
}
AddChannels {
channels DiMatte_2
name AddChannels2
xpos 3907
ypos -118
disable {{"!(\[numvalue master.layer]==4||\[numvalue master.layer]==5|\[numvalue master.layer]==6||\[numvalue master.layer]==7||\[numvalue master.layer]==17)"}}
}
AddChannels {
channels DIMatte_3
name AddChannels3
xpos 3907
ypos -84
disable {{"!(\[numvalue master.layer]==8||\[numvalue master.layer]==9|\[numvalue master.layer]==10||\[numvalue master.layer]==11||\[numvalue master.layer]==18)"}}
}
AddChannels {
channels DIMatte_D
name AddChannels4
xpos 3907
ypos -48
disable {{"!(\[numvalue master.layer]==12||\[numvalue master.layer]==13|\[numvalue master.layer]==14||\[numvalue master.layer]==15||\[numvalue master.layer]==19)"}}
}
Dot {
name Dot4
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3946
ypos 44
}
set N275cf900 [stack 0]
Switch {
inputs 2
which {{master.DIChannelSource==1?0:1}}
name Switch1
label DIChannelSource
xpos 2842
ypos 690
}
Shuffle {
red white
green white
blue white
alpha white
name Shuffle1
label "\[value in]"
xpos 3529
ypos 1496
disable {{master.DIChannelSource==2?0:1}}
}
Dot {
name Dot33
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3563
ypos 1599
}
set N275ce400 [stack 0]
Dot {
name Dot34
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3563
ypos 1858
}
set N275cdd00 [stack 0]
Dot {
name Dot35
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3563
ypos 2179
}
set N275cd600 [stack 0]
Dot {
name Dot36
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3563
ypos 2442
}
set N275ccf00 [stack 0]
Dot {
name Dot37
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3558
ypos 2735
}
set N275cc800 [stack 0]
Dot {
name Dot10
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3555
ypos 2814
}
set N275cc100 [stack 0]
Dot {
name Dot31
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3555
ypos 2907
}
set N275bb900 [stack 0]
Dot {
name Dot32
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3550
ypos 2993
}
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DIMatte_D
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DIMatte_D.alpha 0 3 rgba.alpha 0 0 DIMatte_D.red 0 0 rgba.alpha 0 0 DIMatte_D.green 0 1 rgba.alpha 0 0 DIMatte_D.blue 0 2"
name Shuffle29
label "\[value in1]"
xpos 3605
ypos 2983
disable {{!useRGBalpha}}
}
push $N275bb900
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DIMatte_3
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DIMatte_C.alpha 0 3 rgba.alpha 0 0 DIMatte_3.red 0 0 rgba.alpha 0 0 DIMatte_3.green 0 1 rgba.alpha 0 0 DIMatte_3.blue 0 2"
name Shuffle28
label "\[value in1]"
xpos 3608
ypos 2896
disable {{!useRGBalpha}}
}
push $N275cc100
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DiMatte_2
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DiMatte_2.alpha 0 3 rgba.alpha 0 0 DiMatte_2.red 0 0 rgba.alpha 0 0 DiMatte_2.green 0 1 rgba.alpha 0 0 DiMatte_2.blue 0 2"
name Shuffle27
label "\[value in1]"
xpos 3611
ypos 2808
disable {{!useRGBalpha}}
}
push $N275cc800
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DiMatte_1
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DiMatte_1.alpha 0 3 rgba.alpha 0 0 DiMatte_1.red 0 0 rgba.alpha 0 0 DiMatte_1.green 0 1 rgba.alpha 0 0 DiMatte_1.blue 0 2"
name Shuffle26
label "\[value in1]"
xpos 3620
ypos 2728
disable {{!useRGBalpha}}
}
push $N275ccf00
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DIMatte_D
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DIMatte_D.alpha 0 3 rgba.alpha 0 0 DIMatte_D.red 0 0 rgba.alpha 0 0 DIMatte_D.green 0 1 rgba.alpha 0 0 DIMatte_D.blue 0 2"
name Shuffle25
label "\[value in1]"
xpos 3615
ypos 2432
disable {{!useRGBalpha}}
}
Dot {
name Dot27
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3747
ypos 2438
}
set N275b8800 [stack 0]
Dot {
name Dot28
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3743
ypos 2511
}
set N275b8100 [stack 0]
Dot {
name Dot29
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3743
ypos 2578
}
set N2778b900 [stack 0]
Dot {
name Dot30
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3740
ypos 2641
}
push $N2778b900
push $N275b8100
push $N275b8800
push $N275cd600
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DIMatte_3
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DIMatte_C.alpha 0 3 rgba.alpha 0 0 DIMatte_3.red 0 0 rgba.alpha 0 0 DIMatte_3.green 0 1 rgba.alpha 0 0 DIMatte_3.blue 0 2"
name Shuffle24
label "\[value in1]"
xpos 3618
ypos 2170
disable {{!useRGBalpha}}
}
Dot {
name Dot23
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3749
ypos 2179
}
set N2778a400 [stack 0]
Dot {
name Dot24
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3749
ypos 2240
}
set N27789d00 [stack 0]
Dot {
name Dot25
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3749
ypos 2309
}
set N27789600 [stack 0]
Dot {
name Dot26
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3749
ypos 2374
}
push $N27789600
push $N27789d00
push $N2778a400
push $N275cdd00
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DiMatte_2
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DiMatte_2.alpha 0 3 rgba.alpha 0 0 DiMatte_2.red 0 0 rgba.alpha 0 0 DiMatte_2.green 0 1 rgba.alpha 0 0 DiMatte_2.blue 0 2"
name Shuffle23
label "\[value in1]"
xpos 3627
ypos 1850
disable {{!useRGBalpha}}
}
Dot {
name Dot19
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3759
ypos 1858
}
set N27788100 [stack 0]
Dot {
name Dot20
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3759
ypos 1931
}
set N27767900 [stack 0]
Dot {
name Dot21
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3759
ypos 1998
}
set N27767200 [stack 0]
Dot {
name Dot22
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3756
ypos 2061
}
push $N27767200
push $N27767900
push $N27788100
push $N275ce400
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DiMatte_1
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DiMatte_1.alpha 0 3 rgba.alpha 0 0 DiMatte_1.red 0 0 rgba.alpha 0 0 DiMatte_1.green 0 1 rgba.alpha 0 0 DiMatte_1.blue 0 2"
name Shuffle22
label "\[value in1]"
xpos 3630
ypos 1589
disable {{!useRGBalpha}}
}
Dot {
name Dot15
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3760
ypos 1599
}
set N27765d00 [stack 0]
Dot {
name Dot16
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3760
ypos 1660
}
set N27765600 [stack 0]
Dot {
name Dot17
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3760
ypos 1729
}
set N27764f00 [stack 0]
Dot {
name Dot18
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3760
ypos 1794
}
push $N27764f00
push $N27765600
push $N27765d00
push $N275cf900
push $N27604800
Dot {
name Dot38
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2492
ypos 2
}
Switch {
inputs 2
which {{master.selectAlpha==1?0:1}}
name Switch3
label "hold out"
xpos 2422
ypos 600
}
set N27753900 [stack 0]
push $N27753900
Copy {
inputs 2
to0 rgba.alpha
name Copy25
xpos 2422
ypos 660
}
Clamp {
name Clamp1
xpos 2422
ypos 724
}
Dot {
name Dot12
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2610
ypos 905
}
push $N27604800
push $N275cf900
Switch {
inputs 2
which {{master.selectAlpha==1?0:1}}
name Switch2
label "hold out"
xpos 2612
ypos 674
}
Dot {
name Dot7
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2646
ypos 862
}
Multiply {
inputs 1+1
value 0
name Multiply1
xpos 2612
ypos 952
}
Dot {
name Dot1
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3697
ypos 955
}
set N27732400 [stack 0]
Dot {
name Dot2
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3697
ypos 1053
}
set N27731d00 [stack 0]
Dot {
name Dot5
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3699
ypos 1155
}
set N27731600 [stack 0]
Dot {
name Dot6
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3699
ypos 1277
}
push $N27731600
push $N27731d00
push $N27732400
push $N275cf900
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels DiMatte_1
name Copy1
label "hold out"
xpos 3912
ypos 933
disable {{!holdout}}
addUserKnob {20 User}
addUserKnob {6 holdout +STARTLINE}
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels DiMatte_2
name Copy7
label "hold out"
xpos 3912
ypos 1031
disable {{!holdout}}
addUserKnob {20 User}
addUserKnob {6 holdout +STARTLINE}
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels DIMatte_3
name Copy8
label "hold out"
xpos 3912
ypos 1133
disable {{!holdout}}
addUserKnob {20 User}
addUserKnob {6 holdout +STARTLINE}
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels DIMatte_D
name Copy9
label "hold out"
xpos 3914
ypos 1255
disable {{!holdout}}
addUserKnob {20 User}
addUserKnob {6 holdout +STARTLINE}
}
Dot {
name Dot14
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3948
ypos 1492
}
Copy {
inputs 2
from0 DiMatte_1.red
to0 DiMatte_1.red
name Copy5
xpos 3914
ypos 1589
disable {{"!(\[numvalue master.layer]==0)"}}
}
Copy {
inputs 2
from0 DiMatte_1.green
to0 DiMatte_1.green
name Copy10
xpos 3914
ypos 1650
disable {{"!(\[numvalue master.layer]==1)"}}
}
Copy {
inputs 2
from0 DiMatte_1.blue
to0 DiMatte_1.blue
name Copy11
xpos 3914
ypos 1719
disable {{"!(\[numvalue master.layer]==2)"}}
}
Copy {
inputs 2
from0 DiMatte_1.alpha
to0 DiMatte_1.alpha
name Copy12
xpos 3914
ypos 1784
disable {{"!(\[numvalue master.layer]==3)"}}
}
Copy {
inputs 2
from0 DiMatte_2.red
to0 DiMatte_2.red
name Copy13
xpos 3914
ypos 1848
disable {{"!(\[numvalue master.layer]==4)"}}
}
Copy {
inputs 2
from0 DiMatte_2.green
to0 DiMatte_2.green
name Copy14
xpos 3914
ypos 1921
disable {{"!(\[numvalue master.layer]==5)"}}
}
Copy {
inputs 2
from0 DiMatte_2.blue
to0 DiMatte_2.blue
name Copy15
xpos 3914
ypos 1988
disable {{"!(\[numvalue master.layer]==6)"}}
}
Copy {
inputs 2
from0 DiMatte_2.alpha
to0 DiMatte_2.alpha
name Copy16
xpos 3911
ypos 2051
disable {{"!(\[numvalue master.layer]==7)"}}
}
Copy {
inputs 2
from0 DIMatte_3.red
to0 DIMatte_3.red
name Copy3
xpos 3911
ypos 2169
disable {{"!(\[numvalue master.layer]==8)"}}
}
Copy {
inputs 2
from0 DIMatte_3.green
to0 DIMatte_3.green
name Copy17
xpos 3911
ypos 2230
disable {{"!(\[numvalue master.layer]==9)"}}
}
Copy {
inputs 2
from0 DIMatte_3.blue
to0 DIMatte_3.blue
name Copy18
xpos 3911
ypos 2299
disable {{"!(\[numvalue master.layer]==10)"}}
}
Copy {
inputs 2
from0 DIMatte_C.alpha
to0 DIMatte_C.alpha
name Copy19
xpos 3911
ypos 2364
disable {{"!(\[numvalue master.layer]==11)"}}
}
Copy {
inputs 2
from0 DIMatte_D.red
to0 DIMatte_D.red
name Copy20
xpos 3911
ypos 2428
disable {{"!(\[numvalue master.layer]==12)"}}
}
Copy {
inputs 2
from0 DIMatte_D.green
to0 DIMatte_D.green
name Copy21
xpos 3911
ypos 2501
disable {{"!(\[numvalue master.layer]==13)"}}
}
Copy {
inputs 2
from0 DIMatte_D.blue
to0 DIMatte_D.blue
name Copy22
xpos 3911
ypos 2568
disable {{"!(\[numvalue master.layer]==14)"}}
}
Copy {
inputs 2
from0 DIMatte_D.alpha
to0 DIMatte_D.alpha
name Copy23
xpos 3908
ypos 2631
disable {{"!(\[numvalue master.layer]==15)"}}
}
set N27487900 [stack 0]
Copy {
inputs 2
channels DiMatte_1
name Copy2
xpos 3782
ypos 2726
disable {{"!(\[numvalue master.layer]==16)"}}
}
Copy {
inputs 2
channels DIMatte_3
name Copy4
xpos 3782
ypos 2802
disable {{"!(\[numvalue master.layer]==17)"}}
}
Copy {
inputs 2
channels DiMatte_2
name Copy6
xpos 3782
ypos 2895
disable {{"!(\[numvalue master.layer]==18)"}}
}
Copy {
inputs 2
channels DIMatte_D
name Copy24
xpos 3782
ypos 2981
disable {{"!(\[numvalue master.layer]==19)"}}
}
push $N27487900
Output {
name Output1
xpos 3908
ypos 3145
}
end_group
push $N336dab00
Dot {
name Dot38
tile_color 0x949494ff
label matte2
note_font_size 42
note_font_color 0xffffffff
selected true
xpos -607
ypos 10804
}
Dot {
name Dot27
tile_color 0x949494ff
label matte2
note_font_size 42
note_font_color 0xffffffff
selected true
xpos -618
ypos 17818
}
Read {
inputs 0
file_type exr
file /coppi/proj/thrg/ftrack/assets/s01e01/015-0250/img/thrg_s01e01_015-0250_oceanBTY_v003_beauty_acescg/thrg_s01e01_015-0250_oceanBTY_beauty_acescg_v003.%04d.exr
format "2272 1582 0 0 2272 1582 1 "
first 1001
last 1161
origfirst 1001
origlast 1161
origset true
name oceanBTY_beauty_acescg2
tile_color 0x14a14aff
selected true
xpos 9787
ypos -18518
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname beauty_acescg
addUserKnob {20 ftrack}
addUserKnob {1 componentId}
componentId c55beb20-7093-4395-ba92-95835f328b79
addUserKnob {1 componentName}
componentName beauty_acescg
addUserKnob {1 assetVersionId}
assetVersionId 8531726a-c7ea-4d76-98e0-75fe1dfdafc8
addUserKnob {1 assetVersion}
assetVersion 3
addUserKnob {1 assetName}
assetName oceanBTY
addUserKnob {1 assetType}
assetType img
addUserKnob {4 versionType l "Version Type" M {latest stable pinned}}
}
push $N2fccdd00
Shuffle2 {
fromInput1 {{0} B}
in1 zDepth
fromInput2 {{0} B}
mappings "4 zDepth.combo 0 2 rgba.red 0 0 zDepth.combo 0 2 rgba.green 0 1 zDepth.combo 0 2 rgba.blue 0 2 zDepth.combo 0 2 rgba.alpha 0 3"
name Shuffle15
label "\[value in1]"
selected true
xpos 11935
ypos -1429
}
Grade {
white 0.002
name Grade23
label view
selected true
xpos 11935
ypos -1391
}
Read {
inputs 0
file_type exr
file /coppi/proj/thrg/ftrack/assets/s01e01/015-0250/img/thrg_s01e01_015-0250_clientversion0_v001_main_lin_ap0/thrg_s01e01_015-0250_clientversion0_main_lin_ap0_v001.%04d.exr
format "4448 3096 0 0 4448 3096 1 Project Resolution_2"
first 1001
last 1161
origfirst 1001
origlast 1161
origset true
name clientversion0_main_lin_ap3
tile_color 0x14a14aff
selected true
xpos 12494
ypos 30329
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname main_lin_ap0
addUserKnob {20 ftrack}
addUserKnob {1 componentId}
componentId 57daba3c-6bf2-4df3-8fae-1c1ab16b42e1
addUserKnob {1 componentName}
componentName main_lin_ap0
addUserKnob {1 assetVersionId}
assetVersionId 85fc4966-efa9-4396-ae05-0e6a62d04242
addUserKnob {1 assetVersion}
assetVersion 1
addUserKnob {1 assetName}
assetName clientversion0
addUserKnob {1 assetType}
assetType img
addUserKnob {4 versionType l "Version Type" M {latest stable pinned}}
}
Read {
inputs 0
file_type png
file /mnt/home/rafal.kaniewski/Downloads/015-0250_Frame_1111.png
localizationPolicy on
format "1625 913 0 0 1625 913 1 "
origset true
raw true
name Read15
selected true
xpos 14344
ypos 30420
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
}
push $N31c5b900
Dot {
name Dot399
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 9796
ypos -6028
}
push $N30887900
Group {
inputs 2
name DI_Shuffle14
tile_color 0xa43f88ff
gl_color 0x1d1d1dff
label "\[value layer]\n\[value matteName]"
selected true
xpos 9555
ypos -6044
disable true
addUserKnob {20 User l DI_Shuffle}
addUserKnob {41 layer l "new layer " T master.layer}
addUserKnob {1 matteName l " matte name:" -STARTLINE}
matteName CgFlareStack
addUserKnob {41 DIChannelSource l "  from" T master.DIChannelSource}
addUserKnob {41 useRGBalpha l "  use RGB.alpha" -STARTLINE T master.useRGBalpha}
addUserKnob {26 txt l holdout}
addUserKnob {41 holdout l "holdout 1  |" T Copy1.holdout}
addUserKnob {41 holdout_1 l "holdout 2 |" -STARTLINE T Copy7.holdout}
addUserKnob {41 holdout_2 l "holdout 3  |" -STARTLINE T Copy8.holdout}
addUserKnob {41 holdout_3 l "holdout 4" -STARTLINE T Copy9.holdout}
addUserKnob {26 txt_1 l "matte from" T ""}
addUserKnob {41 selectHoldout l "" -STARTLINE T master.selectAlpha}
addUserKnob {41 from0 l " channel" -STARTLINE T Copy25.from0}
addUserKnob {26 txt_2 l " " T "The heldout input (A||B) is opposite of  'matte from' input ."}
addUserKnob {20 info}
addUserKnob {26 ver l ver: T 0.3}
addUserKnob {26 source l source: T "Rafs Kan. 13th Nov. 2019"}
addUserKnob {26 edit l edit: T " rafsKan 2019-19-11: add C&D\nrafsKan 2022/02/07: bug fixes"}
addUserKnob {7 UID_DI_Shuffle l UID +INVISIBLE}
UID_DI_Shuffle 1
}
Input {
inputs 0
name A
xpos 2714
ypos -356
number 1
}
Dot {
name Dot13
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2748
ypos -162
}
AddChannels {
channels DiMatte_1
name AddChannels5
xpos 2714
ypos -144
disable {{"!(\[numvalue master.layer]==0||\[numvalue master.layer]==1|\[numvalue master.layer]==2||\[numvalue master.layer]==3||\[numvalue master.layer]==16)"}}
}
AddChannels {
channels DiMatte_2
name AddChannels6
xpos 2714
ypos -106
disable {{"!(\[numvalue master.layer]==4||\[numvalue master.layer]==5|\[numvalue master.layer]==6||\[numvalue master.layer]==7||\[numvalue master.layer]==17)"}}
}
AddChannels {
channels DIMatte_3
name AddChannels7
xpos 2714
ypos -72
disable {{"!(\[numvalue master.layer]==8||\[numvalue master.layer]==9|\[numvalue master.layer]==10||\[numvalue master.layer]==11||\[numvalue master.layer]==18)"}}
}
AddChannels {
channels DIMatte_3
name AddChannels8
xpos 2714
ypos -36
disable {{"!(\[numvalue master.layer]==12||\[numvalue master.layer]==13|\[numvalue master.layer]==14||\[numvalue master.layer]==15||\[numvalue master.layer]==19)"}}
}
Dot {
name Dot3
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2748
ypos 2
}
set N30824100 [stack 0]
Input {
inputs 0
name B
xpos 3336
ypos -398
}
NoOp {
name master
label "\[value layer]\n\[numvalue master.layer]"
xpos 3336
ypos -319
addUserKnob {20 User}
addUserKnob {4 layer M {DiMatte_1.red DiMatte_1.green DiMatte_1.blue DiMatte_1.alpha DiMatte_2.red DiMatte_2.green DiMatte_2.blue DiMatte_2.alpha DiMatte_3.red DiMatte_3.green DiMatte_3.blue DiMatte_3.alpha DiMatte_4.red DiMatte_4.green DiMatte_4.blue DiMatte_4.alpha "none (holdout only)" "" "" "" "" "" "" "" "" "" ""}}
layer DiMatte_2.green
addUserKnob {6 useRGBalpha l "use RGB.alpha" -STARTLINE}
useRGBalpha true
addUserKnob {4 selectAlpha l "select alphaHoldout" M {"B input" "A input" ""}}
selectAlpha "A input"
addUserKnob {4 DIChannelSource l "DI ChannelSource" M {"A input" "B input" "Use constant" "" ""}}
}
AddChannels {
channels DiMatte_1
name AddChannels1
xpos 3907
ypos -156
disable {{"!(\[numvalue master.layer]==0||\[numvalue master.layer]==1|\[numvalue master.layer]==2||\[numvalue master.layer]==3||\[numvalue master.layer]==16)"}}
}
AddChannels {
channels DiMatte_2
name AddChannels2
xpos 3907
ypos -118
disable {{"!(\[numvalue master.layer]==4||\[numvalue master.layer]==5|\[numvalue master.layer]==6||\[numvalue master.layer]==7||\[numvalue master.layer]==17)"}}
}
AddChannels {
channels DIMatte_3
name AddChannels3
xpos 3907
ypos -84
disable {{"!(\[numvalue master.layer]==8||\[numvalue master.layer]==9|\[numvalue master.layer]==10||\[numvalue master.layer]==11||\[numvalue master.layer]==18)"}}
}
AddChannels {
channels DIMatte_D
name AddChannels4
xpos 3907
ypos -48
disable {{"!(\[numvalue master.layer]==12||\[numvalue master.layer]==13|\[numvalue master.layer]==14||\[numvalue master.layer]==15||\[numvalue master.layer]==19)"}}
}
Dot {
name Dot4
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3946
ypos 44
}
set N307f7200 [stack 0]
Switch {
inputs 2
which {{master.DIChannelSource==1?0:1}}
name Switch1
label DIChannelSource
xpos 2842
ypos 690
}
Shuffle {
red white
green white
blue white
alpha white
name Shuffle1
label "\[value in]"
xpos 3529
ypos 1496
disable {{master.DIChannelSource==2?0:1}}
}
Dot {
name Dot33
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3563
ypos 1599
}
set N307f5d00 [stack 0]
Dot {
name Dot34
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3563
ypos 1858
}
set N307f5600 [stack 0]
Dot {
name Dot35
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3563
ypos 2179
}
set N307f4f00 [stack 0]
Dot {
name Dot36
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3563
ypos 2442
}
set N307f4800 [stack 0]
Dot {
name Dot37
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3558
ypos 2735
}
set N307f4100 [stack 0]
Dot {
name Dot10
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3555
ypos 2814
}
set N307e3900 [stack 0]
Dot {
name Dot31
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3555
ypos 2907
}
set N307e3200 [stack 0]
Dot {
name Dot32
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3550
ypos 2993
}
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DIMatte_D
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DIMatte_D.alpha 0 3 rgba.alpha 0 0 DIMatte_D.red 0 0 rgba.alpha 0 0 DIMatte_D.green 0 1 rgba.alpha 0 0 DIMatte_D.blue 0 2"
name Shuffle29
label "\[value in1]"
xpos 3605
ypos 2983
disable {{!useRGBalpha}}
}
push $N307e3200
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DIMatte_3
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DIMatte_C.alpha 0 3 rgba.alpha 0 0 DIMatte_3.red 0 0 rgba.alpha 0 0 DIMatte_3.green 0 1 rgba.alpha 0 0 DIMatte_3.blue 0 2"
name Shuffle28
label "\[value in1]"
xpos 3608
ypos 2896
disable {{!useRGBalpha}}
}
push $N307e3900
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DiMatte_2
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DiMatte_2.alpha 0 3 rgba.alpha 0 0 DiMatte_2.red 0 0 rgba.alpha 0 0 DiMatte_2.green 0 1 rgba.alpha 0 0 DiMatte_2.blue 0 2"
name Shuffle27
label "\[value in1]"
xpos 3611
ypos 2808
disable {{!useRGBalpha}}
}
push $N307f4100
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DiMatte_1
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DiMatte_1.alpha 0 3 rgba.alpha 0 0 DiMatte_1.red 0 0 rgba.alpha 0 0 DiMatte_1.green 0 1 rgba.alpha 0 0 DiMatte_1.blue 0 2"
name Shuffle26
label "\[value in1]"
xpos 3620
ypos 2728
disable {{!useRGBalpha}}
}
push $N307f4800
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DIMatte_D
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DIMatte_D.alpha 0 3 rgba.alpha 0 0 DIMatte_D.red 0 0 rgba.alpha 0 0 DIMatte_D.green 0 1 rgba.alpha 0 0 DIMatte_D.blue 0 2"
name Shuffle25
label "\[value in1]"
xpos 3615
ypos 2432
disable {{!useRGBalpha}}
}
Dot {
name Dot27
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3747
ypos 2438
}
set N307e0100 [stack 0]
Dot {
name Dot28
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3743
ypos 2511
}
set N305b3900 [stack 0]
Dot {
name Dot29
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3743
ypos 2578
}
set N305b3200 [stack 0]
Dot {
name Dot30
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3740
ypos 2641
}
push $N305b3200
push $N305b3900
push $N307e0100
push $N307f4f00
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DIMatte_3
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DIMatte_C.alpha 0 3 rgba.alpha 0 0 DIMatte_3.red 0 0 rgba.alpha 0 0 DIMatte_3.green 0 1 rgba.alpha 0 0 DIMatte_3.blue 0 2"
name Shuffle24
label "\[value in1]"
xpos 3618
ypos 2170
disable {{!useRGBalpha}}
}
Dot {
name Dot23
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3749
ypos 2179
}
set N305b1d00 [stack 0]
Dot {
name Dot24
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3749
ypos 2240
}
set N305b1600 [stack 0]
Dot {
name Dot25
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3749
ypos 2309
}
set N305b0f00 [stack 0]
Dot {
name Dot26
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3749
ypos 2374
}
push $N305b0f00
push $N305b1600
push $N305b1d00
push $N307f5600
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DiMatte_2
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DiMatte_2.alpha 0 3 rgba.alpha 0 0 DiMatte_2.red 0 0 rgba.alpha 0 0 DiMatte_2.green 0 1 rgba.alpha 0 0 DiMatte_2.blue 0 2"
name Shuffle23
label "\[value in1]"
xpos 3627
ypos 1850
disable {{!useRGBalpha}}
}
Dot {
name Dot19
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3759
ypos 1858
}
set N3058f900 [stack 0]
Dot {
name Dot20
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3759
ypos 1931
}
set N3058f200 [stack 0]
Dot {
name Dot21
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3759
ypos 1998
}
set N3058eb00 [stack 0]
Dot {
name Dot22
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3756
ypos 2061
}
push $N3058eb00
push $N3058f200
push $N3058f900
push $N307f5d00
Shuffle2 {
fromInput1 {{0} B}
in1 alpha
out1 DiMatte_1
fromInput2 {{0} B}
mappings "4 rgba.alpha 0 0 DiMatte_1.alpha 0 3 rgba.alpha 0 0 DiMatte_1.red 0 0 rgba.alpha 0 0 DiMatte_1.green 0 1 rgba.alpha 0 0 DiMatte_1.blue 0 2"
name Shuffle22
label "\[value in1]"
xpos 3630
ypos 1589
disable {{!useRGBalpha}}
}
Dot {
name Dot15
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3760
ypos 1599
}
set N3058d600 [stack 0]
Dot {
name Dot16
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3760
ypos 1660
}
set N3058cf00 [stack 0]
Dot {
name Dot17
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3760
ypos 1729
}
set N3058c800 [stack 0]
Dot {
name Dot18
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3760
ypos 1794
}
push $N3058c800
push $N3058cf00
push $N3058d600
push $N307f7200
push $N30824100
Dot {
name Dot38
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2492
ypos 2
}
Switch {
inputs 2
which {{master.selectAlpha==1?0:1}}
name Switch3
label "hold out"
xpos 2422
ypos 600
}
set N3057b200 [stack 0]
push $N3057b200
Copy {
inputs 2
to0 rgba.alpha
name Copy25
xpos 2422
ypos 660
}
Clamp {
name Clamp1
xpos 2422
ypos 724
}
Dot {
name Dot12
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2610
ypos 905
}
push $N30824100
push $N307f7200
Switch {
inputs 2
which {{master.selectAlpha==1?0:1}}
name Switch2
label "hold out"
xpos 2612
ypos 674
}
Dot {
name Dot7
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 2646
ypos 862
}
Multiply {
inputs 1+1
value 0
name Multiply1
xpos 2612
ypos 952
}
Dot {
name Dot1
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3697
ypos 955
}
set N30555d00 [stack 0]
Dot {
name Dot2
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3697
ypos 1053
}
set N30555600 [stack 0]
Dot {
name Dot5
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3699
ypos 1155
}
set N30554f00 [stack 0]
Dot {
name Dot6
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3699
ypos 1277
}
push $N30554f00
push $N30555600
push $N30555d00
push $N307f7200
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels DiMatte_1
name Copy1
label "hold out"
xpos 3912
ypos 933
disable {{!holdout}}
addUserKnob {20 User}
addUserKnob {6 holdout +STARTLINE}
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels DiMatte_2
name Copy7
label "hold out"
xpos 3912
ypos 1031
disable {{!holdout}}
addUserKnob {20 User}
addUserKnob {6 holdout +STARTLINE}
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels DIMatte_3
name Copy8
label "hold out"
xpos 3912
ypos 1133
disable {{!holdout}}
addUserKnob {20 User}
addUserKnob {6 holdout +STARTLINE}
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels DIMatte_D
name Copy9
label "hold out"
xpos 3914
ypos 1255
disable {{!holdout}}
addUserKnob {20 User}
addUserKnob {6 holdout +STARTLINE}
}
Dot {
name Dot14
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 3948
ypos 1492
}
Copy {
inputs 2
from0 DiMatte_1.red
to0 DiMatte_1.red
name Copy5
xpos 3914
ypos 1589
disable {{"!(\[numvalue master.layer]==0)"}}
}
Copy {
inputs 2
from0 DiMatte_1.green
to0 DiMatte_1.green
name Copy10
xpos 3914
ypos 1650
disable {{"!(\[numvalue master.layer]==1)"}}
}
Copy {
inputs 2
from0 DiMatte_1.blue
to0 DiMatte_1.blue
name Copy11
xpos 3914
ypos 1719
disable {{"!(\[numvalue master.layer]==2)"}}
}
Copy {
inputs 2
from0 DiMatte_1.alpha
to0 DiMatte_1.alpha
name Copy12
xpos 3914
ypos 1784
disable {{"!(\[numvalue master.layer]==3)"}}
}
Copy {
inputs 2
from0 DiMatte_2.red
to0 DiMatte_2.red
name Copy13
xpos 3914
ypos 1848
disable {{"!(\[numvalue master.layer]==4)"}}
}
Copy {
inputs 2
from0 DiMatte_2.green
to0 DiMatte_2.green
name Copy14
xpos 3914
ypos 1921
disable {{"!(\[numvalue master.layer]==5)"}}
}
Copy {
inputs 2
from0 DiMatte_2.blue
to0 DiMatte_2.blue
name Copy15
xpos 3914
ypos 1988
disable {{"!(\[numvalue master.layer]==6)"}}
}
Copy {
inputs 2
from0 DiMatte_2.alpha
to0 DiMatte_2.alpha
name Copy16
xpos 3911
ypos 2051
disable {{"!(\[numvalue master.layer]==7)"}}
}
Copy {
inputs 2
from0 DIMatte_3.red
to0 DIMatte_3.red
name Copy3
xpos 3911
ypos 2169
disable {{"!(\[numvalue master.layer]==8)"}}
}
Copy {
inputs 2
from0 DIMatte_3.green
to0 DIMatte_3.green
name Copy17
xpos 3911
ypos 2230
disable {{"!(\[numvalue master.layer]==9)"}}
}
Copy {
inputs 2
from0 DIMatte_3.blue
to0 DIMatte_3.blue
name Copy18
xpos 3911
ypos 2299
disable {{"!(\[numvalue master.layer]==10)"}}
}
Copy {
inputs 2
from0 DIMatte_C.alpha
to0 DIMatte_C.alpha
name Copy19
xpos 3911
ypos 2364
disable {{"!(\[numvalue master.layer]==11)"}}
}
Copy {
inputs 2
from0 DIMatte_D.red
to0 DIMatte_D.red
name Copy20
xpos 3911
ypos 2428
disable {{"!(\[numvalue master.layer]==12)"}}
}
Copy {
inputs 2
from0 DIMatte_D.green
to0 DIMatte_D.green
name Copy21
xpos 3911
ypos 2501
disable {{"!(\[numvalue master.layer]==13)"}}
}
Copy {
inputs 2
from0 DIMatte_D.blue
to0 DIMatte_D.blue
name Copy22
xpos 3911
ypos 2568
disable {{"!(\[numvalue master.layer]==14)"}}
}
Copy {
inputs 2
from0 DIMatte_D.alpha
to0 DIMatte_D.alpha
name Copy23
xpos 3908
ypos 2631
disable {{"!(\[numvalue master.layer]==15)"}}
}
set N302b3200 [stack 0]
Copy {
inputs 2
channels DiMatte_1
name Copy2
xpos 3782
ypos 2726
disable {{"!(\[numvalue master.layer]==16)"}}
}
Copy {
inputs 2
channels DIMatte_3
name Copy4
xpos 3782
ypos 2802
disable {{"!(\[numvalue master.layer]==17)"}}
}
Copy {
inputs 2
channels DiMatte_2
name Copy6
xpos 3782
ypos 2895
disable {{"!(\[numvalue master.layer]==18)"}}
}
Copy {
inputs 2
channels DIMatte_D
name Copy24
xpos 3782
ypos 2981
disable {{"!(\[numvalue master.layer]==19)"}}
}
push $N302b3200
Output {
name Output1
xpos 3908
ypos 3145
}
end_group
StickyNote {
inputs 0
name StickyNote10
label "/\\\\\\ /\\\\ linked >>"
selected true
xpos 11611
ypos -1299
}
push $N28675600
Dot {
name Dot88
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
selected true
xpos 11775
ypos 28380
}
Group {
name DI_master1
selected true
xpos 11741
ypos 28577
disable true
addUserKnob {20 User l DI_master}
addUserKnob {7 UID_DI_Shuffle l UID +INVISIBLE}
UID_DI_Shuffle 1
addUserKnob {22 TurnDIMattesOn l "   TurnDIMattesOn   " T "nuke.thisGroup().end()\nimport nuke\nnuke.root()\nns = nuke.allNodes()\nfor n in ns:\n    try:\n        v = bool(n\[\"UID_DI_Shuffle\"].value())\n        n\[\"disable\"].setValue(not v)\n    except:\n        pass" +STARTLINE}
addUserKnob {22 TurnDIMattesOff l "  TurnDIMattesOff  " T "nuke.thisGroup().end()\nns = nuke.allNodes()\nfor n in ns:\n    try:\n        v = bool(n\[\"UID_DI_Shuffle\"].value())\n        n\[\"disable\"].setValue(v)\n    except:\n        pass" +STARTLINE}
addUserKnob {20 info}
addUserKnob {26 ver l ver: T " v1.0. RafsKan 18/02/2022"}
}
Input {
inputs 0
name Input1
xpos -943
ypos -300
}
Dot {
name Dot204
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -909
ypos -260
}
set N27c06b00 [stack 0]
Dot {
name Dot119
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -633
ypos -235
}
set N27c06400 [stack 0]
Dot {
name Dot113
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -108
ypos -235
}
set N27c05d00 [stack 0]
Dot {
name Dot155
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 226
ypos -235
}
set N27c05600 [stack 0]
Dot {
name Dot203
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos 867
ypos -235
}
set N27c04f00 [stack 0]
Shuffle {
in DIMatte_3
red alpha
green alpha
blue alpha
alpha red
out rgb
name Shuffle22
label "\[value in]"
xpos 1010
ypos -183
}
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
message DIMatte_4.alpha
old_message {{68 73 77 97 116 116 101 95 52 46 97 108 112 104 97}
  }
box {{Text1.box.x} {Text1.box.y} {Text1.box.r} {Text1.box.t}}
yjustify bottom
transforms {{0 2}
  }
cursor_position 9
global_font_scale 3
center {2272 1582}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{2272 0}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 2272 1582 0 0 1 1 0 0 0 0}
  }
name Text16
xpos 1015
ypos -132
}
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
box {0 0 {input.width} {input.height}}
xjustify right
yjustify bottom
transforms {{0 2}
  }
global_font_scale 3
center {2272 1582}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{2272 0}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 2272 1582 0 0 1 1 0 0 0 0}
  }
enable_shadows true
name DiMatte_4_a
xpos 1021
ypos -92
}
push $N27c04f00
Shuffle {
in DIMatte_3
red black
green blue
blue black
alpha red
out rgb
name Shuffle18
label "\[value in]"
xpos 894
ypos -183
}
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
message DIMatte_4.blue
old_message {{68 73 77 97 116 116 101 95 52 46 98 108 117 101}
  }
box {{Text1.box.x} {Text1.box.y} {Text1.box.r} {Text1.box.t}}
yjustify bottom
transforms {{0 2}
  }
cursor_position 9
global_font_scale 3
center {2272 1582}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{2272 0}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 2272 1582 0 0 1 1 0 0 0 0}
  }
enable_shadows true
name Text15
xpos 894
ypos -126
}
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
box {0 0 {input.width} {input.height}}
xjustify right
yjustify bottom
transforms {{0 2}
  }
global_font_scale 3
center {2272 1582}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{2272 0}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 2272 1582 0 0 1 1 0 0 0 0}
  }
enable_shadows true
name DiMatte_4_b
xpos 894
ypos -85
}
push $N27c04f00
Shuffle {
in DIMatte_3
red black
blue black
alpha red
out rgb
name Shuffle17
label "\[value in]"
xpos 778
ypos -179
}
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
message DIMatte_4.green
old_message {{68 73 77 97 116 116 101 95 52 46 103 114 101 101 110}
  }
box {{Text1.box.x} {Text1.box.y} {Text1.box.r} {Text1.box.t}}
yjustify bottom
transforms {{0 2}
  }
cursor_position 9
global_font_scale 3
center {2272 1582}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{2272 0}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 2272 1582 0 0 1 1 0 0 0 0}
  }
enable_shadows true
name Text14
xpos 778
ypos -127
}
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
box {0 0 {input.width} {input.height}}
xjustify right
yjustify bottom
transforms {{0 2}
  }
global_font_scale 3
center {2272 1582}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{2272 0}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 2272 1582 0 0 1 1 0 0 0 0}
  }
enable_shadows true
name DiMatte_4_g
xpos 778
ypos -95
}
push $N27c04f00
Shuffle {
in DIMatte_4
green black
blue black
alpha red
out rgb
name Shuffle16
label "\[value in]"
xpos 665
ypos -179
}
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
message DIMatte_4.red
old_message {{68 73 77 97 116 116 101 95 52 46 114 101 100}
  }
box {0 0 {input.width} {input.height}}
yjustify bottom
transforms {{0 2}
  }
cursor_position 9
global_font_scale 3
center {2272 1582}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{2272 0}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 2272 1582 0 0 1 1 0 0 0 0}
  }
enable_shadows true
name Text13
xpos 665
ypos -131
}
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
box {0 0 {input.width} {input.height}}
xjustify right
yjustify bottom
transforms {{0 2}
  }
global_font_scale 3
center {2272 1582}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{2272 0}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 2272 1582 0 0 1 1 0 0 0 0}
  }
enable_shadows true
name DiMatte_4_r
xpos 648
ypos -92
}
push $N27c05600
Shuffle {
in DIMatte_3
red alpha
green alpha
blue alpha
alpha red
out rgb
name Shuffle21
label "\[value in]"
xpos 452
ypos -187
}
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
message DIMatte_3.alpha
old_message {{68 73 77 97 116 116 101 95 51 46 97 108 112 104 97}
  }
box {{Text1.box.x} {Text1.box.y} {Text1.box.r} {Text1.box.t}}
yjustify bottom
transforms {{0 2}
  }
cursor_position 13
global_font_scale 3
center {2272 1582}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{2272 0}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 2272 1582 0 0 1 1 0 0 0 0}
  }
name Text12
xpos 452
ypos -126
}
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
box {0 0 {input.width} {input.height}}
xjustify right
yjustify bottom
transforms {{0 2}
  }
global_font_scale 3
center {2272 1582}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{2272 0}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 2272 1582 0 0 1 1 0 0 0 0}
  }
enable_shadows true
name DiMatte_3_a
xpos 452
ypos -92
}
push $N27c05600
Shuffle {
in DIMatte_3
red black
green blue
blue black
alpha red
out rgb
name Shuffle15
label "\[value in]"
xpos 357
ypos -183
}
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
message DIMatte_3.blue
old_message {{68 73 77 97 116 116 101 95 51 46 98 108 117 101}
  }
box {{Text1.box.x} {Text1.box.y} {Text1.box.r} {Text1.box.t}}
yjustify bottom
transforms {{0 2}
  }
cursor_position 9
global_font_scale 3
center {2272 1582}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{2272 0}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 2272 1582 0 0 1 1 0 0 0 0}
  }
enable_shadows true
name Text11
xpos 347
ypos -124
}
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
box {0 0 {input.width} {input.height}}
xjustify right
yjustify bottom
transforms {{0 2}
  }
global_font_scale 3
center {2272 1582}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{2272 0}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 2272 1582 0 0 1 1 0 0 0 0}
  }
enable_shadows true
name DiMatte_3_b
xpos 347
ypos -93
}
push $N27c05600
Shuffle {
in DIMatte_3
red black
blue black
alpha red
out rgb
name Shuffle14
label "\[value in]"
xpos 241
ypos -179
}
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
message DIMatte_3.green
old_message {{68 73 77 97 116 116 101 95 51 46 103 114 101 101 110}
  }
box {{Text1.box.x} {Text1.box.y} {Text1.box.r} {Text1.box.t}}
yjustify bottom
transforms {{0 2}
  }
cursor_position 9
global_font_scale 3
center {2272 1582}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{2272 0}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 2272 1582 0 0 1 1 0 0 0 0}
  }
enable_shadows true
name Text10
xpos 241
ypos -121
}
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
box {0 0 {input.width} {input.height}}
xjustify right
yjustify bottom
transforms {{0 2}
  }
global_font_scale 3
center {2272 1582}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{2272 0}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 2272 1582 0 0 1 1 0 0 0 0}
  }
enable_shadows true
name DiMatte_3_g
xpos 241
ypos -89
}
push $N27c05600
Shuffle {
in DIMatte_3
green black
blue black
alpha red
out rgb
name Shuffle13
label "\[value in]"
xpos 128
ypos -179
}
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
message DIMatte_3.red
old_message {{68 73 77 97 116 116 101 95 51 46 114 101 100}
  }
box {0 0 {input.width} {input.height}}
yjustify bottom
transforms {{0 2}
  }
cursor_position 9
global_font_scale 3
center {2272 1582}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{2272 0}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 2272 1582 0 0 1 1 0 0 0 0}
  }
enable_shadows true
name Text9
xpos 128
ypos -125
}
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
box {0 0 {input.width} {input.height}}
xjustify right
yjustify bottom
transforms {{0 2}
  }
global_font_scale 3
center {2272 1582}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{2272 0}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 2272 1582 0 0 1 1 0 0 0 0}
  }
enable_shadows true
name DiMatte_3_r
xpos 128
ypos -89
}
push $N27c05d00
Shuffle {
in DiMatte_2
red alpha
green alpha
blue alpha
alpha red
out rgb
name Shuffle20
label "\[value in]"
xpos 12
ypos -176
}
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
message DIMatte_2.alpha
old_message {{68 73 77 97 116 116 101 95 50 46 97 108 112 104 97}
  }
box {{Text1.box.x} {Text1.box.y} {Text1.box.r} {Text1.box.t}}
yjustify bottom
transforms {{0 2}
  }
cursor_position 9
global_font_scale 3
center {2272 1582}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{2272 0}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 2272 1582 0 0 1 1 0 0 0 0}
  }
name Text8
xpos 12
ypos -126
}
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
message water
old_message {{119 97 116 101 114}
  }
box {0 0 {input.width} {input.height}}
xjustify right
yjustify bottom
transforms {{0 2}
  }
cursor_position 5
global_font_scale 3
center {2272 1582}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{2272 0}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 2272 1582 0 0 1 1 0 0 0 0}
  }
enable_shadows true
name DiMatte_2_a
xpos 12
ypos -100
}
push $N27c05d00
Shuffle {
in DiMatte_2
red black
green blue
blue black
alpha red
out rgb
name Shuffle12
label "\[value in]"
xpos -96
ypos -179
}
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
message DIMatte_2.blue
old_message {{68 73 77 97 116 116 101 95 50 46 98 108 117 101}
  }
box {{Text1.box.x} {Text1.box.y} {Text1.box.r} {Text1.box.t}}
yjustify bottom
transforms {{0 2}
  }
cursor_position 9
global_font_scale 3
center {2272 1582}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{2272 0}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 2272 1582 0 0 1 1 0 0 0 0}
  }
background_opacity 0.5
enable_shadows true
name Text7
xpos -96
ypos -125
}
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
message window
old_message {{119 105 110 100 111 119}
  }
box {0 0 {input.width} {input.height}}
xjustify right
yjustify bottom
transforms {{0 2}
  }
cursor_position 6
global_font_scale 3
center {2272 1582}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{2272 0}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 2272 1582 0 0 1 1 0 0 0 0}
  }
enable_shadows true
name DiMatte_2_b
xpos -96
ypos -99
}
push $N27c05d00
Shuffle {
in DiMatte_2
red black
blue black
alpha red
out rgb
name Shuffle10
label "\[value in]"
xpos -194
ypos -179
}
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
message DIMatte_2.green
old_message {{68 73 77 97 116 116 101 95 50 46 103 114 101 101 110}
  }
box {{Text1.box.x} {Text1.box.y} {Text1.box.r} {Text1.box.t}}
yjustify bottom
transforms {{0 2}
  }
cursor_position 9
global_font_scale 3
center {2272 1582}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{2272 0}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 2272 1582 0 0 1 1 0 0 0 0}
  }
enable_shadows true
name Text6
xpos -194
ypos -123
}
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
message flareStack
old_message {{102 108 97 114 101 83 116 97 99 107}
  }
box {0 0 {input.width} {input.height}}
xjustify right
yjustify bottom
transforms {{0 2}
  }
cursor_position 10
global_font_scale 3
center {2272 1582}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{2272 0}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 2272 1582 0 0 1 1 0 0 0 0}
  }
enable_shadows true
name DiMatte_2_g
xpos -194
ypos -100
}
push $N27c05d00
Shuffle {
in DiMatte_2
green black
blue black
alpha red
out rgb
name Shuffle7
label "\[value in]"
xpos -307
ypos -179
}
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
message DIMatte_2.red
old_message {{68 73 77 97 116 116 101 95 50 46 114 101 100}
  }
box {0 0 {input.width} {input.height}}
yjustify bottom
transforms {{0 2}
  }
cursor_position 9
global_font_scale 3
center {2272 1582}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{2272 0}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 2272 1582 0 0 1 1 0 0 0 0}
  }
enable_shadows true
name Text5
xpos -307
ypos -126
}
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
message cg_modules
old_message {{99 103 95 109 111 100 117 108 101 115}
  }
box {0 0 {input.width} {input.height}}
xjustify right
yjustify bottom
transforms {{0 2}
  }
cursor_position 10
global_font_scale 3
center {2272 1582}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{2272 0}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 2272 1582 0 0 1 1 0 0 0 0}
  }
enable_shadows true
name DiMatte_2_r
xpos -307
ypos -100
}
push $N27c06400
Shuffle {
in DiMatte_1
red alpha
green alpha
blue alpha
alpha red
out rgb
name Shuffle19
label "\[value in]"
xpos -447
ypos -174
}
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
message DIMatte_1.alpha
old_message {{68 73 77 97 116 116 101 95 49 46 97 108 112 104 97}
  }
box {{Text1.box.x} {Text1.box.y} {Text1.box.r} {Text1.box.t}}
yjustify bottom
transforms {{0 2}
  }
cursor_position 15
global_font_scale 3
center {2272 1582}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{2272 0}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 2272 1582 0 0 1 1 0 0 0 0}
  }
name Text4
xpos -447
ypos -136
}
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
message water
old_message {{119 97 116 101 114}
  }
box {0 0 {input.width} {input.height}}
xjustify right
yjustify bottom
transforms {{0 2}
  }
cursor_position 5
global_font_scale 3
center {2272 1582}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{2272 0}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 2272 1582 0 0 1 1 0 0 0 0}
  }
enable_shadows true
name DiMatte_1_a
xpos -447
ypos -102
}
push $N27c06400
Shuffle {
in DiMatte_1
red black
green blue
blue black
alpha red
out rgb
name Shuffle9
label "\[value in]"
xpos -557
ypos -171
}
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
message DIMatte_1.blue
old_message {{68 73 77 97 116 116 101 95 49 46 98 108 117 101}
  }
box {{Text1.box.x} {Text1.box.y} {Text1.box.r} {Text1.box.t}}
yjustify bottom
transforms {{0 2}
  }
cursor_position 14
global_font_scale 3
center {2272 1582}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{2272 0}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 2272 1582 0 0 1 1 0 0 0 0}
  }
enable_shadows true
name Text3
xpos -557
ypos -133
}
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
message clouds
old_message {{99 108 111 117 100 115}
  }
box {0 0 {input.width} {input.height}}
xjustify right
yjustify bottom
transforms {{0 2}
  }
cursor_position 6
global_font_scale 3
center {2272 1582}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{2272 0}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 2272 1582 0 0 1 1 0 0 0 0}
  }
enable_shadows true
name DiMatte_1_b
xpos -557
ypos -99
}
push $N27c06400
Shuffle {
in DiMatte_1
red black
blue black
alpha red
out rgb
name Shuffle8
label "\[value in]"
xpos -667
ypos -174
}
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
message DIMatte_1.green
old_message {{68 73 77 97 116 116 101 95 49 46 103 114 101 101 110}
  }
box {{Text1.box.x} {Text1.box.y} {Text1.box.r} {Text1.box.t}}
yjustify bottom
transforms {{0 2}
  }
cursor_position 15
global_font_scale 3
center {2272 1582}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{2272 0}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 2272 1582 0 0 1 1 0 0 0 0}
  }
enable_shadows true
name Text2
xpos -667
ypos -136
}
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
message sky
old_message {{115 107 121}
  }
box {0 0 {input.width} {input.height}}
xjustify right
yjustify bottom
transforms {{0 2}
  }
cursor_position 3
global_font_scale 3
center {2272 1582}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{2272 0}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 2272 1582 0 0 1 1 0 0 0 0}
  }
enable_shadows true
name DiMatte_1_g
xpos -667
ypos -102
}
push $N27c06400
Shuffle {
in DiMatte_1
green black
blue black
alpha red
out rgb
name Shuffle2
label "\[value in]"
xpos -780
ypos -174
}
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
message DIMatte_1.red
old_message {{68 73 77 97 116 116 101 95 49 46 114 101 100}
  }
box {0 0 {input.width} {input.height}}
yjustify bottom
transforms {{0 2}
  }
cursor_position 13
global_font_scale 3
center {2272 1582}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{2272 0}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 2272 1582 0 0 1 1 0 0 0 0}
  }
enable_shadows true
name Text1
xpos -780
ypos -136
}
Text2 {
font_size_toolbar 100
font_width_toolbar 100
font_height_toolbar 100
message water
old_message {{119 97 116 101 114}
  }
box {0 0 {input.width} {input.height}}
xjustify right
yjustify bottom
transforms {{0 2}
  }
cursor_position 5
global_font_scale 3
center {2272 1582}
cursor_initialised true
autofit_bbox false
initial_cursor_position {{2272 0}
  }
group_animations {{0} imported: 0 selected: items: "root transform/"}
animation_layers {{1 11 2272 1582 0 0 1 1 0 0 0 0}
  }
enable_shadows true
name DiMatte_1_r
xpos -780
ypos -102
}
ContactSheet {
inputs 16
width {{input.width}}
height {{input.height}}
rows 4
gap 4
center true
roworder TopBottom
name ContactSheet1
xpos 173
ypos 91
}
Grade {
black 0.4
white_clamp true
maskChannelInput rgba.alpha
invert_mask true
name Grade10
xpos 173
ypos 146
}
add_layer {DIMatte_CS DIMatte_CS.red DIMatte_CS.green DIMatte_CS.blue DIMatte_CS.alpha}
AddChannels {
channels DIMatte_CS
name AddChannels1
xpos 173
ypos 184
}
Shuffle2 {
fromInput1 {{0} B}
out1 DIMatte_CS
fromInput2 {{0} B}
mappings "4 rgba.red 0 0 DIMatte_CS.red 0 0 rgba.green 0 1 DIMatte_CS.green 0 1 rgba.blue 0 2 DIMatte_CS.blue 0 2 rgba.alpha 0 3 DIMatte_CS.alpha 0 3"
name Shuffle1
label "\[value in1]"
xpos 173
ypos 222
}
push $N27c06b00
Dot {
name Dot209
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos -909
ypos 232
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels DIMatte_CS
name Copy1
xpos 173
ypos 271
}
Output {
name Output1
xpos 173
ypos 392
}
end_group
Group {
name UnlimitedRemove10
tile_color 0x9e3a61ff
selected true
xpos 11742
ypos 28880
lock_connections true
addUserKnob {20 user l UnlimitedRemove}
addUserKnob {20 info l Info n 1}
info 0
addUserKnob {26 text_info l "" +STARTLINE T "<font color=#e1f2a2>UnlimitedRemove v1.2</font> | author: Guillermo Algora\n<br>\nThe functionality of the native Remove node with the possibility of unlimited channel slots.\n<br>"}
addUserKnob {20 endGroup n -1}
addUserKnob {4 operation t "Remove: the named channels are deleted\nKeep: all but the named channels are deleted" M {remove keep "" "" "" "" "" "" "" "" "" ""}}
operation keep
addUserKnob {26 description l "" -STARTLINE T "                   Channel slots:"}
addUserKnob {22 add l "Add (+4)" t "Add four additional channel slots" -STARTLINE T "def add_remove_node(switch_node):\n\n    last_remove_node = switch_node.input(0)\n\n    nukescripts.clear_selection_recursive()\n    last_remove_node.setSelected(True)\n    new_remove_node = nuke.createNode(\"Remove\", inpanel=False)\n    nukescripts.clear_selection_recursive()\n\n    new_remove_node\['operation'].setValue(\"remove\")\n    for knob_name in (\"channels\", \"channels2\", \"channels3\", \"channels4\"):\n        new_remove_node\[knob_name].setValue(\"none\")\n\n    new_remove_node\['xpos'].setExpression('\{\}'.format(last_remove_node\['xpos'].value()))\n    new_remove_node\['ypos'].setExpression('\{\}'.format(last_remove_node\['ypos'].value()+50))\n\n    return new_remove_node\n\ndef add_keep_node(switch_node, new_remove_node):\n\n    last_keep_node = switch_node.input(1)\n\n    nukescripts.clear_selection_recursive()\n    last_keep_node.setSelected(True)\n    new_keep_node = nuke.createNode(\"Remove\", inpanel=False)\n\n    new_keep_node\['operation'].setValue(\"keep\")\n    for knob_name in (\"channels\", \"channels2\", \"channels3\", \"channels4\"):\n        new_keep_node\[knob_name].setValue(\"none\")\n\n    new_keep_node\['xpos'].setExpression('\{\}'.format(last_keep_node\['xpos'].value()-100))\n    new_keep_node\['ypos'].setExpression('\{\}'.format(last_keep_node\['ypos'].value()+50))\n\n    new_keep_node.setSelected(True)\n    copy_node = nuke.createNode(\"Copy\", inpanel=False)\n    nukescripts.clear_selection_recursive()\n\n    for knob_name in (\"from0\", \"from1\", \"from2\", \"from3\"):\n        copy_node\[knob_name].setValue(\"none\")\n    for knob_name in (\"to0\", \"to1\", \"to2\", \"to3\"):\n        copy_node\[knob_name].setValue(\"none\")\n   \n    copy_node\['channels'].setValue(\"all\")\n    copy_node\['metainput'].setValue(\"All\")\n    copy_node\['rangeinput'].setValue(\"All\")\n    copy_node\['bbox'].setValue(\"union\")\n     \n    copy_node\['xpos'].setExpression('\{\}'.format(new_keep_node\['xpos'].value()+100))\n    copy_node\['ypos'].setExpression('\{\}'.format(new_keep_node\['ypos'].value()))\n\n    copy_node.setInput(0, last_keep_node)\n    new_keep_node.setInput(0, nuke.toNode(\"Dot1\"))\n\n    for knob_name in (\"channels\", \"channels2\", \"channels3\", \"channels4\"):\n        new_keep_node\[knob_name].setExpression(new_remove_node.name() + '.\{\}'.format(knob_name))\n\ndef add_channels(this_node, new_remove_node):\n\n    highest = \[]\n    for knob in this_node.allKnobs():\n        if \"channel\" in knob.name():\n            number = knob.name().split(\"channels\")\[1]\n            if number.isdigit():\n                highest.append(int(number))\n    highest = max(highest)\n\n    for knob_name in (\"channels\", \"channels2\", \"channels3\", \"channels4\"):\n        highest += 1\n        knob = nuke.Link_Knob(\"channels\" + '\{\}'.format(highest))\n        knob.setLink(new_remove_node.name() +'.\{\}'.format(knob_name))\n        this_node.addKnob(knob)\n\nundo = nuke.Undo()\nundo.disable()\n\ntry:\n    this_node = nuke.thisNode()\n\n    group = this_node\n    group.begin()\n\n    switch_node = nuke.toNode(\"Switch1\")\n    switch_node\['xpos'].setExpression('\{\}'.format(switch_node\['xpos'].value()))\n    switch_node\['ypos'].setExpression('\{\}'.format(switch_node\['ypos'].value()+50))\n\n    output_node = nuke.toNode(\"Output1\")\n    output_node\['xpos'].setExpression('\{\}'.format(output_node\['xpos'].value()))\n    output_node\['ypos'].setExpression('\{\}'.format(output_node\['ypos'].value()+50))\n\n    new_remove_node = add_remove_node(switch_node)\n    add_keep_node(switch_node, new_remove_node)\n\n    group.end()\n\n    add_channels(this_node, new_remove_node)\n\nfinally:\n    undo.enable()"}
addUserKnob {22 remove l "Remove (last 4)" t "Remove the last four additional channel slots" -STARTLINE T "def get_highest(this_node):\n\n    highest = \[]\n    for knob in this_node.allKnobs():\n        if \"channel\" in knob.name():\n            number = knob.name().split(\"channels\")\[1]\n            if number.isdigit():\n                highest.append(int(number))\n    highest = max(highest) + 1\n    return highest\n\ndef remove_channels(this_node, highest):\n\n        for i in range (0,4):\n            highest -= 1\n            this_node.removeKnob(this_node.knobs()\[(\"channels\" + '\{\}'.format(highest))])\n\ndef remove_nodes(switch_node):\n    copy_node = switch_node.input(1)\n    keep_node = copy_node.input(1)\n    remove_node = switch_node.input(0)\n\n    nuke.delete(copy_node)\n    nuke.delete(keep_node)\n    nuke.delete(remove_node)\n\nundo = nuke.Undo()\nundo.disable()\n\ntry:\n    this_node = nuke.thisNode()\n    highest = get_highest(this_node)\n\n    if highest > 5:\n        \n        remove_channels(this_node, highest)\n\n        group = this_node\n        group.begin()\n\n        switch_node = nuke.toNode(\"Switch1\")\n        switch_node\['xpos'].setExpression('\{\}'.format(switch_node\['xpos'].value()))\n        switch_node\['ypos'].setExpression('\{\}'.format(switch_node\['ypos'].value()-50))\n\n        output_node = nuke.toNode(\"Output1\")\n        output_node\['xpos'].setExpression('\{\}'.format(output_node\['xpos'].value()))\n        output_node\['ypos'].setExpression('\{\}'.format(output_node\['ypos'].value()-50))\n\n        remove_nodes(switch_node)\n\n        group.end()\n\nfinally:\n    undo.enable()"}
addUserKnob {41 channels T Remove1.channels}
addUserKnob {41 channels2 T Remove1.channels2}
addUserKnob {41 channels3 T Remove1.channels3}
addUserKnob {41 channels4 T Remove1.channels4}
addUserKnob {41 channels5 T Remove3.channels}
addUserKnob {41 channels6 T Remove3.channels2}
addUserKnob {41 channels7 T Remove3.channels3}
addUserKnob {41 channels8 T Remove3.channels4}
}
Input {
inputs 0
name Input
xpos {{0.0 x1001 0}}
ypos {{0.0 x1001 -1}}
}
Dot {
name Dot1
tile_color 0x949494ff
note_font_size 22
note_font_color 0xffffffff
xpos {{34.0 x1001 26}}
ypos {{125.0 x1001 125}}
}
set N274eab00 [stack 0]
Remove {
operation keep
channels {{{Remove3.channels}}}
channels2 {{{Remove3.channels2}}}
channels3 {{{Remove3.channels3}}}
channels4 {{{Remove3.channels4}}}
name Remove4
xpos 89
ypos 165
}
push $N274eab00
Remove {
operation keep
channels {{{Remove1.channels}}}
channels2 {{{Remove1.channels2}}}
channels3 {{{Remove1.channels3}}}
channels4 {{{Remove1.channels4}}}
name Remove2
xpos {{189.0 x1001 188}}
ypos {{115.0 x1001 115}}
}
Copy {
inputs 2
channels all
metainput All
rangeinput All
name Copy1
xpos 189
ypos 165
}
push $N274eab00
Remove {
channels rgb
channels3 DiMatte_1
channels4 DiMatte_2
name Remove1
xpos {{-185.0 x1001 -183}}
ypos {{115.0 x1001 115}}
}
Remove {
channels DIMatte_3
channels2 DIMatte_D
channels3 DIMatte_CS
name Remove3
xpos -185
ypos 165
}
Switch {
inputs 2
which {{UnlimitedRemove10.operation}}
name Switch1
xpos {{0.0 x1001 0}}
ypos {{282.0 x1001 233}}
}
Output {
name Output1
xpos {{0.0 x1001 -7}}
ypos {{392.0 x1001 342}}
}
end_group
Remove {
channels DIMatte_CS
name Remove11
selected true
xpos 11742
ypos 28933
addUserKnob {20 User +INVISIBLE}
addUserKnob {3 UID_DI_Shuffle l UID}
}
Remove {
channels DiMatte_1
channels2 DiMatte_2
channels3 DIMatte_3
channels4 DIMatte_4
name Remove12
selected true
xpos 11742
ypos 28971
addUserKnob {20 User +INVISIBLE}
addUserKnob {3 UID_DI_Shuffle l UID}
}
ModifyMetaData {
metadata {
 {set gbk/scriptname "\[value root.name]"}
 {set exr/task_id "\[getenv FTRACK_TASKID]"}
 {remove exr/chunkCount ""}
 {remove exr/compressionName ""}
}
name ModifyMetaData11
selected true
xpos 11741
ypos 29455
}
Write {
channels all
file /coppi/proj/thrg/shottree/s01e01/015-0250/output2d/plat/comp/thrg_s01e01_015-0250_comp_comp_lin_ap0_v002/thrg_s01e01_015-0250_comp_comp_lin_ap0_v002.%04d.exr
colorspace "ACES - ACES2065-1"
file_type exr
first_part rgba
version 3
beforeRender "from nuketools import beforerenderfunctions;beforerenderfunctions.beforeRender()"
name Write3
selected true
xpos 11741
ypos 29582
addUserKnob {20 ftracktab l ftrack}
addUserKnob {1 fcompname l "Component Name:"}
fcompname comp
addUserKnob {20 fwrite l "GBK Write"}
addUserKnob {1 ffile l File}
ffile /coppi/proj/thrg/shottree/s01e01/015-0250/output2d/plat/comp/thrg_s01e01_015-0250_comp_comp_lin_ap0_v002/thrg_s01e01_015-0250_comp_comp_lin_ap0_v002.%04d.exr
addUserKnob {1 fproxy l Proxy}
addUserKnob {6 fproxycheck l "Set Proxy Path" +STARTLINE}
addUserKnob {26 divider l "" +STARTLINE}
addUserKnob {4 task l Task M {plat 012- 023- 026- 026- 026- 026- 026- 027- 027- 030- 033- 033- 038- 038- 038- 039- 039- 041- 041- 041- 041- 041- 041- 041- 041- 041- 041- 041- 041- 041- 041- 041- 041- 041- 041- 041- 041- 041- 041- 049- source}}
addUserKnob {1 fassetname l "Asset Name Preview:" +DISABLED}
fassetname comp
addUserKnob {1 fassetbasename l "Asset Name:"}
fassetbasename comp
addUserKnob {1 fecompname l "Component Name:"}
fecompname comp
addUserKnob {1 flatestversion l "Latest published version:" +DISABLED}
flatestversion 0
addUserKnob {22 getlatest l Refresh -STARTLINE T "from nuketools import writetab \nwritetab.getLatestPubVersion() \n"}
addUserKnob {6 precomp l Precomp +STARTLINE}
addUserKnob {6 denoised l Denoised(dn) +STARTLINE}
addUserKnob {6 delensed l Delensed(dl) +STARTLINE}
addUserKnob {6 neutralgrade l Neutralgrade(ng) +STARTLINE}
addUserKnob {6 matte l Matte +STARTLINE}
addUserKnob {6 no_frame_number l "No Frame Numbering" +STARTLINE}
addUserKnob {26 divider_1 l "" +STARTLINE}
addUserKnob {3 fversion l Version}
fversion 2
addUserKnob {4 format l Format M {exr dpx png tif jpg tga mov}}
addUserKnob {4 channel l Channel M {rgb rgba all}}
channel all
addUserKnob {4 fcompression l Compression M {none "Zip (1 scanline)" "Zip (16 scanlines)" "PIZ Wavelet (32 scanlines)" RLE B44 B44A DWAA DWAB}}
fcompression "Zip (1 scanline)"
addUserKnob {1 fview l View}
addUserKnob {26 saveSettingsMsg l "" -STARTLINE T "  "}
addUserKnob {26 divider_2 l "" +STARTLINE}
addUserKnob {3 frenderorder l "Render order"}
frenderorder 1
addUserKnob {22 frender l Render -STARTLINE T "from nuketools import writetab \nwritetab.render() \n"}
addUserKnob {3 fframeranges l "Frame range" +DISABLED}
fframeranges 1
addUserKnob {3 fframerangee l "" -STARTLINE +DISABLED}
fframerangee 1
addUserKnob {6 flimitrange l "Limit to range" -STARTLINE}
addUserKnob {26 divider_3 l "" +STARTLINE}
addUserKnob {22 rfromw l "Read from Write" -STARTLINE T "from nuketools import readfromwrite \nreadfromwrite.readFromWrite()"}
addUserKnob {22 rendcurr l "Render current frame" -STARTLINE T "from nuketools import writetab \nwritetab.renderCurrentFrame()"}
addUserKnob {6 fcopyscript l "Don't Copy Nuke Script" +STARTLINE}
addUserKnob {6 fwriteinit l "Is everything added" -STARTLINE +HIDDEN}
fwriteinit true
}
nuke_dispatch {
name nuke_dispatch_OUT
selected true
xpos 11741
ypos 29666
jobtitle comp
framestart 1001
frameend 1161
customframes ""
maxtime 3:00:00
StartAfterTime ""
ThreadCount 0
ServiceKeyExpr ""
depthindex 5
depthrender true
}
push $cut_paste_input
Group {
name ftrackPublish
selected true
xpos 11735
ypos 29815
addUserKnob {20 ftrackpub l "ftrack Publish"}
addUserKnob {52 fheader l "" +STARTLINE T HeaderKnob() +STARTLINE}
addUserKnob {26 fwhite l "  " T "  "}
addUserKnob {1 taskId +HIDDEN}
taskId 17529e8a-47d8-11ec-9dc1-000c29353009
addUserKnob {52 fpubto l "Publish to:" +DISABLED T BrowseShot() +STARTLINE}
addUserKnob {6 fpubtoactive l "Publish to current task" +STARTLINE}
fpubtoactive true
addUserKnob {4 fassetnameexisting l "Existing assets:" M {New lighting_comp enviroment-slap focusWedge_Test clientversion0 horizonTest lookdev layout KeyMatte lighting_slap pmModuleBTY wedge flareStackPyroBTY allBTY oceanBTY matte_mb_l1 comp_light fx layoutOceanBTY layoutModulesBTY pyroInteractiveBTY lighting comp bashPlate paint wedges}}
addUserKnob {1 ftrackassetname l Assetname:}
ftrackassetname comp
addUserKnob {4 ftrackassettype l Assettype: M {"Missmatch inputs"}}
addUserKnob {52 ftable l Components: T TableKnob() +STARTLINE}
addUserKnob {6 fcopy l "Copy files" +STARTLINE}
addUserKnob {6 fmove l "Move files" +STARTLINE}
fmove true
addUserKnob {6 fzero l "Version Zero" t "Set to be Version Zero" +STARTLINE}
addUserKnob {6 freview l "Add to Dailies List" t "Add the item to the dailies playlist available in ftrack" +STARTLINE}
freview true
addUserKnob {6 nolut l "No LUT" t "Write the mov file as RAW with RAW input and output." +STARTLINE}
addUserKnob {6 use_fallback_lut l "Use Fallback LUT" t "Use the fallback lut of 'Output - sRGB' for the generated mov" +STARTLINE}
addUserKnob {6 movie_per_component l "Render Movie For All Components" +STARTLINE}
movie_per_component true
addUserKnob {43 fcomment l Comment:}
fcomment "__notes for daillies__\n\n__todo still__\n\n* none\n\n__done__\n\n* note1"
addUserKnob {22 refreshknob l Refresh T ftrackPublishKnobChanged(forceRefresh=True) +STARTLINE}
addUserKnob {22 pknob l Publish! -STARTLINE +DISABLED T publishAssetKnob()}
}
Input {
inputs 0
name Input1
}
Input {
inputs 0
name Input2
selected true
number 1
}
end_group
